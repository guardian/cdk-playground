// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Deploy stack matches the snapshot 1`] = `
Object {
  "Outputs": Object {
    "LoadBalancerCdkplaygroundDnsName": Object {
      "Description": "DNS entry for LoadBalancerCdkplayground",
      "Value": Object {
        "Fn::GetAtt": Array [
          "LoadBalancerCdkplayground7C6B4D97",
          "DNSName",
        ],
      },
    },
    "lambdacdkplaygroundlambdaapiEndpoint0E1DFC5F": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "lambdacdkplaygroundlambdaapi061BB942",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "lambdacdkplaygroundlambdaapiDeploymentStageprod4C07895E",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AMICdkplayground": Object {
      "Description": "Amazon Machine Image ID for the app cdk-playground. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "HostedZone": Object {
      "Description": "Route53 hosted zone",
      "Type": "String",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "cdkplaygroundPrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "cdkplaygroundPublicSubnets": Object {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupCdkplaygroundASGD6E49F0F": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupCdkplaygroundLaunchConfigFAE27BB8",
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "cdk-playground",
          },
          Object {
            "Key": "gu:cdk:pattern-name",
            "PropagateAtLaunch": true,
            "Value": "GuPlayApp",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "LoggingStreamName",
            },
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "CdkPlayground/AutoScalingGroupCdkplayground",
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "PROD",
          },
          Object {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "cdk-playground.service",
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TargetGroupCdkplayground7A453FC2",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "cdkplaygroundPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupCdkplaygroundInstanceProfileE118C4BB": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCdkplaygroundC280027A",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupCdkplaygroundLaunchConfigFAE27BB8": Object {
      "DependsOn": Array [
        "InstanceRoleCdkplaygroundC280027A",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupCdkplaygroundInstanceProfileE118C4BB",
        },
        "ImageId": Object {
          "Ref": "AMICdkplayground",
        },
        "InstanceType": "t4g.micro",
        "MetadataOptions": Object {
          "HttpTokens": "required",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "GuHttpsEgressSecurityGroupCdkplaygroundAF9827C8",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "WazuhSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
mkdir -p $(dirname '/cdk-playground/cdk-playground.deb')
aws s3 cp 's3://",
                Object {
                  "Ref": "DistributionBucketName",
                },
                "/deploy/PROD/cdk-playground/cdk-playground.deb' '/cdk-playground/cdk-playground.deb'
dpkg -i /cdk-playground/cdk-playground.deb",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CertificateCdkplayground47FCF7D9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DomainName": "cdk-playground.devx.dev-gutools.co.uk",
        "DomainValidationOptions": Array [
          Object {
            "DomainName": "cdk-playground.devx.dev-gutools.co.uk",
            "HostedZoneId": Object {
              "Ref": "HostedZone",
            },
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "CertificateCdkplaygroundlambda82D0BE4D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DomainName": "cdk-playground-lambda.devx.dev-gutools.co.uk",
        "DomainValidationOptions": Array [
          Object {
            "DomainName": "cdk-playground-lambda.devx.dev-gutools.co.uk",
            "HostedZoneId": Object {
              "Ref": "HostedZone",
            },
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground-lambda",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCdkplaygroundC280027A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyCdkplaygroundBFB4D02B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/deploy/PROD/cdk-playground/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyCdkplaygroundBFB4D02B",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCdkplaygroundC280027A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupCdkplaygroundAF9827C8": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupCdkplaygroundfromCdkPlaygroundLoadBalancerCdkplaygroundSecurityGroupE52E5B389000361696B8": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupCdkplaygroundAF9827C8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerCdkplaygroundSecurityGroupAE8BCA05",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCdkplaygroundC280027A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleCdkplaygroundC280027A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerCdkplaygroundA8D9CA6F": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateCdkplayground47FCF7D9",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroupCdkplayground7A453FC2",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancerCdkplayground7C6B4D97",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerCdkplayground7C6B4D97": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerCdkplaygroundSecurityGroupAE8BCA05",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "cdkplaygroundPublicSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerCdkplaygroundSecurityGroupAE8BCA05": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB CdkPlaygroundLoadBalancerCdkplayground0F8432FC",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerCdkplaygroundSecurityGrouptoCdkPlaygroundGuHttpsEgressSecurityGroupCdkplaygroundFCB890AC9000F547AD56": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupCdkplaygroundAF9827C8",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerCdkplaygroundSecurityGroupAE8BCA05",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadCdkplaygroundF78958B9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/deploy/cdk-playground",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/deploy/cdk-playground/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCdkplaygroundC280027A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMRunCommandPolicy244E1613": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCdkplaygroundC280027A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupCdkplayground7A453FC2": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "WazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "lambda8B5974B5": Object {
      "DependsOn": Array [
        "lambdaServiceRoleDefaultPolicyBF6FA5E7",
        "lambdaServiceRole494E4CA6",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/PROD/cdk-playground-lambda/cdk-playground-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "cdk-playground-lambda",
            "STACK": "deploy",
            "STAGE": "PROD",
          },
        },
        "Handler": "handler.main",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdaServiceRole494E4CA6",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground-lambda",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdaServiceRole494E4CA6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground-lambda",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdaServiceRoleDefaultPolicyBF6FA5E7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/deploy/cdk-playground-lambda",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/deploy/cdk-playground-lambda/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdaServiceRoleDefaultPolicyBF6FA5E7",
        "Roles": Array [
          Object {
            "Ref": "lambdaServiceRole494E4CA6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdacdkplaygroundlambdaapi061BB942": Object {
      "Properties": Object {
        "Description": "cdk-playground-lambda",
        "Name": "deploy-PROD-cdk-playground-lambda-api",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground-lambda",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "lambdacdkplaygroundlambdaapiANY46D7365E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "lambda8B5974B5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "lambdacdkplaygroundlambdaapi061BB942",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "lambdacdkplaygroundlambdaapi061BB942",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "lambdacdkplaygroundlambdaapiANYApiPermissionCdkPlaygroundlambdacdkplaygroundlambdaapiF2456CACANYCB19A7C3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambda8B5974B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "lambdacdkplaygroundlambdaapi061BB942",
              },
              "/",
              Object {
                "Ref": "lambdacdkplaygroundlambdaapiDeploymentStageprod4C07895E",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "lambdacdkplaygroundlambdaapiANYApiPermissionTestCdkPlaygroundlambdacdkplaygroundlambdaapiF2456CACANY3C082094": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambda8B5974B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "lambdacdkplaygroundlambdaapi061BB942",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "lambdacdkplaygroundlambdaapiAccount6891AB06": Object {
      "DependsOn": Array [
        "lambdacdkplaygroundlambdaapi061BB942",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "lambdacdkplaygroundlambdaapiCloudWatchRole4B1F446E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "lambdacdkplaygroundlambdaapiCloudWatchRole4B1F446E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground-lambda",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdacdkplaygroundlambdaapiDeployment157471B2c30e85805ef0740aef0e8b7c64c09bf6": Object {
      "DependsOn": Array [
        "lambdacdkplaygroundlambdaapiproxyANYDB984CB2",
        "lambdacdkplaygroundlambdaapiproxyFA4DE6D2",
        "lambdacdkplaygroundlambdaapiANY46D7365E",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "lambdacdkplaygroundlambdaapi061BB942",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "lambdacdkplaygroundlambdaapiDeploymentStageprod4C07895E": Object {
      "DependsOn": Array [
        "lambdacdkplaygroundlambdaapiAccount6891AB06",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "lambdacdkplaygroundlambdaapiDeployment157471B2c30e85805ef0740aef0e8b7c64c09bf6",
        },
        "RestApiId": Object {
          "Ref": "lambdacdkplaygroundlambdaapi061BB942",
        },
        "StageName": "prod",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground-lambda",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "lambdacdkplaygroundlambdaapidomainD1A8D46F": Object {
      "Properties": Object {
        "DomainName": "cdk-playground-lambda.devx.dev-gutools.co.uk",
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "RegionalCertificateArn": Object {
          "Ref": "CertificateCdkplaygroundlambda82D0BE4D",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cdk-playground-lambda",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-playground",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "lambdacdkplaygroundlambdaapidomainMapCdkPlaygroundlambdacdkplaygroundlambdaapiF2456CACD98B11F8": Object {
      "Properties": Object {
        "DomainName": Object {
          "Ref": "lambdacdkplaygroundlambdaapidomainD1A8D46F",
        },
        "RestApiId": Object {
          "Ref": "lambdacdkplaygroundlambdaapi061BB942",
        },
        "Stage": Object {
          "Ref": "lambdacdkplaygroundlambdaapiDeploymentStageprod4C07895E",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "lambdacdkplaygroundlambdaapiproxyANYApiPermissionCdkPlaygroundlambdacdkplaygroundlambdaapiF2456CACANYproxy2AA0C051": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambda8B5974B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "lambdacdkplaygroundlambdaapi061BB942",
              },
              "/",
              Object {
                "Ref": "lambdacdkplaygroundlambdaapiDeploymentStageprod4C07895E",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "lambdacdkplaygroundlambdaapiproxyANYApiPermissionTestCdkPlaygroundlambdacdkplaygroundlambdaapiF2456CACANYproxy5773F0A4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "lambda8B5974B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "lambdacdkplaygroundlambdaapi061BB942",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "lambdacdkplaygroundlambdaapiproxyANYDB984CB2": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "lambda8B5974B5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "lambdacdkplaygroundlambdaapiproxyFA4DE6D2",
        },
        "RestApiId": Object {
          "Ref": "lambdacdkplaygroundlambdaapi061BB942",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "lambdacdkplaygroundlambdaapiproxyFA4DE6D2": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "lambdacdkplaygroundlambdaapi061BB942",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "lambdacdkplaygroundlambdaapi061BB942",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
  },
}
`;
