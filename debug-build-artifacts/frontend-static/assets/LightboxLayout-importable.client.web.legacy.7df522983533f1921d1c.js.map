{"version":3,"file":"LightboxLayout-importable.client.web.legacy.7df522983533f1921d1c.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/LightboxCaption.tsx","webpack://@guardian/dotcom-rendering/./src/components/LightboxLoader.tsx","webpack://@guardian/dotcom-rendering/./src/components/LightboxImages.tsx","webpack://@guardian/dotcom-rendering/./src/components/LightboxJavascript.tsx","webpack://@guardian/dotcom-rendering/./src/components/LightboxLayout.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/getZIndex.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { space, palette as srcPalette, textSans14, } from '@guardian/source/foundations';\nimport { palette } from '../palette';\nexport const LightboxCaption = ({ captionText, credit, displayCredit, }) => {\n    return (_jsxs(\"figcaption\", { css: css `\n\t\t\t\t${textSans14};\n\t\t\t\tline-height: 135%;\n\t\t\t\toverflow-wrap: break-all;\n\t\t\t\tpadding-top: ${space[2]}px;\n\t\t\t\tpadding-bottom: ${space[2]}px;\n\t\t\t\tborder-top: 3px solid ${palette('--lightbox-divider')};\n\t\t\t`, children: [!!captionText && (_jsx(\"span\", { css: [\n                    css `\n\t\t\t\t\t\t\tcolor: ${srcPalette.neutral[97]};\n\t\t\t\t\t\t\ta {\n\t\t\t\t\t\t\t\tcolor: inherit;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstrong {\n\t\t\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t`,\n                ], dangerouslySetInnerHTML: {\n                    __html: captionText || '',\n                } }, \"caption\")), !!credit && displayCredit && (_jsx(\"div\", { css: css `\n\t\t\t\t\t\tcolor: ${srcPalette.neutral[60]};\n\t\t\t\t\t`, children: credit }))] }));\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css, keyframes } from '@emotion/react';\nimport { palette } from '@guardian/source/foundations';\nconst flash = keyframes `\n\t0% {\n\t\tbackground-color: ${palette.neutral[46]};\n\t\tbox-shadow: 26px 0 ${palette.neutral[46]}, -26px 0 ${palette.neutral[100]};\n\t}\n\t50% {\n\t\tbackground-color: ${palette.neutral[100]};\n\t\tbox-shadow: 26px 0 ${palette.neutral[46]}, -26px 0 ${palette.neutral[46]};\n\t}\n\t100% {\n\t\tbackground-color: ${palette.neutral[46]};\n\t\tbox-shadow: 26px 0 ${palette.neutral[100]}, -26px 0 ${palette.neutral[46]};\n\t}\n`;\n/**\n * Three pulsing pamplemouse pips\n *\n * This component is designed to look like the pamplemouse loader in frontend.\n * @see https://github.com/guardian/frontend/blob/main/static/src/stylesheets/module/_loader.scss\n *\n * Pamplemouse? Pretty sure it was only called this to ensure the classnames were unique\n */\nexport const LightboxLoader = () => {\n    return (_jsx(\"div\", { css: css `\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\tbackground-color: ${palette.neutral[10]};\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t`, children: _jsx(\"span\", { css: css `\n\t\t\t\t\twidth: 12px;\n\t\t\t\t\theight: 12px;\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\tbackground-color: ${palette.neutral[100]};\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t26px 0 ${palette.neutral[100]},\n\t\t\t\t\t\t-26px 0 ${palette.neutral[100]};\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tanimation: ${flash} 0.5s ease-out infinite alternate;\n\t\t\t\t\t@media (prefers-reduced-motion) {\n\t\t\t\t\t\tanimation: none;\n\t\t\t\t\t}\n\t\t\t\t` }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { isUndefined, log, timeAgo } from '@guardian/libs';\nimport { from, headlineLight24, palette, space, textSans14, until, visuallyHidden, } from '@guardian/source/foundations';\nimport { Hide, Link } from '@guardian/source/react-components';\nimport { StarRating } from '@guardian/source-development-kitchen/react-components';\nimport { useEffect, useState } from 'react';\nimport { LightboxCaption } from './LightboxCaption';\nimport { LightboxLoader } from './LightboxLoader';\nimport { Picture } from './Picture';\nconst liStyles = css `\n\twidth: 100%;\n\tflex-shrink: 0;\n\tscroll-snap-align: start;\n`;\nconst imageStyles = (orientation) => {\n    const baseImgStyles = css `\n\t\tobject-fit: contain;\n\t\tobject-position: top;\n\t\t${until.tablet} {\n\t\t\tobject-position: center;\n\t\t}\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\t${from.tablet} {\n\t\t\tmargin-top: 1vh;\n\t\t}\n\t`;\n    switch (orientation) {\n        case 'portrait': {\n            return css `\n\t\t\t\timg {\n\t\t\t\t\t${baseImgStyles}\n\t\t\t\t\twidth: auto;\n\t\t\t\t\tmax-width: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\theight: 98vh;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`;\n        }\n        case 'landscape':\n        default: {\n            return css `\n\t\t\t\timg {\n\t\t\t\t\t${baseImgStyles}\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: auto;\n\t\t\t\t\tmax-height: 100vh;\n\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\tmax-height: 98vh;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`;\n        }\n    }\n};\nconst pictureStyles = css `\n\tpicture {\n\t\t${until.tablet} {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t}\n\t\tflex-grow: 1;\n\t\t${from.tablet} {\n\t\t\tmargin-right: ${space[5]}px;\n\t\t}\n\t}\n`;\nconst asideStyles = css `\n\t${until.tablet} {\n\t\twidth: 100%;\n\t\tmargin-top: ${space[3]}px;\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t}\n\t${from.tablet} {\n\t\tmin-width: 300px;\n\t\tmax-width: 300px;\n\t}\n\t${until.tablet} {\n\t\tborder-top: 1px solid ${palette.neutral[20]};\n\t}\n\t${from.tablet} {\n\t\tborder-left: 1px solid ${palette.neutral[20]};\n\t}\n\tbackground-color: ${palette.neutral[7]};\n\n\tpadding: ${space[3]}px;\n\n\t${from.tablet} {\n\t\tpadding-left: ${space[5]}px;\n\t\tpadding-right: ${space[5]}px;\n\t}\n`;\nconst figureStyles = css `\n\tdisplay: flex;\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tjustify-content: space-between;\n\n\tflex-direction: column;\n\n\t${from.tablet} {\n\t\tflex-direction: row;\n\t}\n`;\nconst Selection = ({ countOfImages, initialPosition = 1, }) => {\n    return (_jsxs(\"span\", { css: css `\n\t\t\t\tdisplay: block;\n\t\t\t\t${from.tablet} {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tpadding-top: 2.25rem;\n\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t}\n\t\t\t\t${textSans14};\n\t\t\t\tcolor: ${palette.neutral[86]};\n\t\t\t\t${until.tablet} {\n\t\t\t\t\tmargin-bottom: ${space[2]}px;\n\t\t\t\t}\n\t\t\t`, \"aria-hidden\": \"true\", \"data-testid\": \"lightbox-selected\", children: [_jsx(\"span\", { className: \"selected\", children: initialPosition }), _jsx(\"span\", { css: css `\n\t\t\t\t\tmargin-left: 1px;\n\t\t\t\t\tmargin-right: 1px;\n\t\t\t\t`, children: \"/\" }), _jsx(\"span\", { css: css `\n\t\t\t\t\tcolor: ${palette.neutral[97]};\n\t\t\t\t`, children: countOfImages })] }));\n};\nexport const LightboxImages = ({ format, images }) => {\n    const [loaded, setLoaded] = useState(new Set());\n    useEffect(() => {\n        log('dotcom', '💡 images loaded:', loaded);\n    }, [loaded]);\n    return (_jsx(_Fragment, { children: images.map((image, index) => {\n            const orientation = image.width > image.height ? 'landscape' : 'portrait';\n            const onLoad = () => setLoaded((set) => {\n                const previousSize = set.size;\n                set.add(image.position);\n                const newSize = set.size;\n                return previousSize !== newSize ? new Set(set) : set;\n            });\n            return (_jsx(\"li\", { \"data-index\": image.position, \"data-element-id\": image.elementId, css: [\n                    liStyles,\n                    imageStyles(orientation),\n                    pictureStyles,\n                ], children: _jsxs(\"figure\", { css: figureStyles, children: [!loaded.has(image.position) && _jsx(LightboxLoader, {}), _jsx(Picture\n                        // Using the role of immersive here indicates the intentions for lightbox\n                        // images but it's moot because the `isLightbox` prop overrides the decision\n                        // around what size sources to use\n                        , { \n                            // Using the role of immersive here indicates the intentions for lightbox\n                            // images but it's moot because the `isLightbox` prop overrides the decision\n                            // around what size sources to use\n                            role: \"immersive\", alt: image.alt ?? '', \n                            // Height and width are only used here so the browser has a ratio to work with\n                            // when laying out the page. The actual size of the image is based on the\n                            // viewport\n                            height: image.height, width: image.width, master: image.masterUrl, format: format, isLightbox: true, orientation: orientation, onLoad: onLoad, loading: \"lazy\" }), _jsxs(\"aside\", { css: asideStyles, children: [!!image.title && (_jsx(\"h2\", { css: css `\n\t\t\t\t\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\t\t\t\t\t${headlineLight24}\n\t\t\t\t\t\t\t\t\t\t\tcolor: ${palette.neutral[100]};\n\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t\t\t\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: ${space[2]}px;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t`, children: image.title })), typeof image.starRating === 'number' && (_jsx(\"div\", { css: css `\n\t\t\t\t\t\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\t\t\t\t\t\tbackground-color: ${palette\n                                        .brandAlt[400]};\n\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: ${space[2]}px;\n\t\t\t\t\t\t\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tfigcaption {\n\t\t\t\t\t\t\t\t\t\t\t\theight: 0;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t`, children: _jsx(StarRating, { size: \"medium\", rating: image.starRating }) })), _jsx(Hide, { from: \"tablet\", children: _jsx(Selection, { countOfImages: images.length, initialPosition: image.position }) }), _jsx(LightboxCaption, { captionText: image.caption, credit: image.credit, displayCredit: image.displayCredit }), !!image.blockId &&\n                                    !isUndefined(image.firstPublished) && (_jsx(Link, { href: `?page=with:block-${image.blockId}#block-${image.blockId}`, priority: \"secondary\", cssOverrides: css `\n\t\t\t\t\t\t\t\t\t\t\t\t${textSans14};\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: ${palette.neutral[60]};\n\t\t\t\t\t\t\t\t\t\t\t\t:hover {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: ${palette\n                                        .neutral[86]};\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t`, children: _jsxs(\"time\", { dateTime: new Date(image.firstPublished).toISOString(), title: \"View original post\", children: [_jsxs(\"span\", { css: css `\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t\t\t\t\t\t`, children: [\"Original post published\", ' '] }), timeAgo(image.firstPublished)] }) }))] })] }) }, `${image.masterUrl}-${index}`));\n        }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { isUndefined, log, storage } from '@guardian/libs';\nimport { from, space } from '@guardian/source/foundations';\nimport libDebounce from 'lodash.debounce';\nimport { useEffect, useState } from 'react';\nimport screenfull from 'screenfull';\nimport { LightboxImages } from './LightboxImages';\n/**\n * Translate the pixel (scrollLeft) document value into a numeric\n * position value\n */\nconst getPosition = (lightbox, imageList) => {\n    const scrollPosition = imageList.scrollLeft;\n    const liWidth = lightbox.querySelector('li')?.clientWidth;\n    if (scrollPosition === 0 && liWidth === 0)\n        return;\n    if (isUndefined(liWidth))\n        return;\n    if (Number.isNaN(liWidth) || Number.isNaN(scrollPosition))\n        return;\n    if (scrollPosition === 0)\n        return 1;\n    return Math.round(scrollPosition / liWidth) + 1;\n};\n/**\n * **getTabbableElements**\n *\n * Returns a list of all the html elements on the *active* page that can be tabbed to\n *\n * Any elements that are off screen, such as caption links for images that are not\n * currently showing, are ignored\n */\nconst getTabbableElements = (lightbox, imageList) => {\n    function getElements(parent) {\n        return Array.from(parent.querySelectorAll('button:not([disabled]), a:not([disabled]), input:not([disabled]), select:not([disabled])'));\n    }\n    const currentPosition = getPosition(lightbox, imageList);\n    if (currentPosition == null)\n        return [];\n    const currentPage = lightbox.querySelector(`li[data-index=\"${currentPosition}\"]`);\n    const nav = lightbox.querySelector('nav');\n    const elementsFromCaption = currentPage ? getElements(currentPage) : [];\n    const elementsFromNav = nav ? getElements(nav) : [];\n    if (lightbox.classList.contains('hide-info')) {\n        // The caption is hidden\n        return elementsFromNav;\n    }\n    else {\n        return [...elementsFromCaption, ...elementsFromNav];\n    }\n};\n/** Reject a Promise after a delay  */\nconst timeout = (promise, delay = 1200) => Promise.race([\n    promise,\n    new Promise((_, reject) => {\n        const timer = setTimeout(() => {\n            reject();\n            clearTimeout(timer);\n        }, delay);\n    }),\n]);\n/** will try to request fullscreen, but not wait more than 120ms */\nconst requestFullscreen = async (lightbox) => {\n    if (screenfull.isEnabled) {\n        return timeout(screenfull.request(lightbox));\n    }\n};\nconst exitFullscreen = async () => {\n    if (screenfull.isEnabled && screenfull.isFullscreen) {\n        return timeout(screenfull.exit());\n    }\n};\nconst restoreFocus = (previouslyFocused) => {\n    if (!(previouslyFocused instanceof HTMLElement))\n        return;\n    previouslyFocused.focus();\n};\n/**\n * Each time a new image is selected, this function is called so we can update\n * the state of the page/lightbox to reflect the new image\n */\nconst onSelect = (positionIndicator, position, length, closeButton) => {\n    positionIndicator.innerHTML = position.toString();\n    // Update the url based on the fact we've selected (navigated\n    // to) a new image\n    window.history.replaceState({}, '', `#img-${position}`);\n    // Ensure the close button is always visible on the last slide on mobile\n    closeButton.classList.toggle('reveal', position === length);\n};\n/**\n * Images are 'selected' simply by being scrolled to. You can even select an image\n * by swiping left and right. Because of this, scrollTo is how we navigate the lightbox\n */\nconst scrollTo = (position, lightbox, imageList) => {\n    // liWidth is the actual dom width in pixels of the containing li element for each image\n    const liWidth = lightbox.querySelector('li')?.clientWidth;\n    if (isUndefined(liWidth))\n        return;\n    switch (position) {\n        case 0:\n        case 1: {\n            imageList.scrollLeft = 0;\n            break;\n        }\n        default: {\n            imageList.scrollLeft = (position - 1) * liWidth;\n        }\n    }\n};\nconst getPreviousPosition = (position, length) => position <= 1\n    ? // Cycle around to the end\n        length\n    : position - 1;\nconst getNextPosition = (position, length) => position >= length\n    ? // Cycle back to the start\n        1\n    : position + 1;\nconst eagerLoad = (images, position) => {\n    const image = images[position - 1];\n    if (image)\n        image.loading = 'eager';\n};\n/**\n * We eager load adjacent images by adding the loading=eager attribute\n * to their img tag\n */\nconst loadAdjacentImages = (images, currentPosition) => {\n    const { length } = images;\n    const previousImage = getPreviousPosition(currentPosition, length);\n    const nextImage = getNextPosition(currentPosition, length);\n    eagerLoad(images, previousImage);\n    eagerLoad(images, nextImage);\n};\nconst pulseButton = (button) => {\n    button.classList.add('active');\n    const timer = setTimeout(() => {\n        button.classList.remove('active');\n        clearTimeout(timer);\n    }, 75);\n};\nconst goBack = (lightbox, images, previousButton, imageList) => {\n    const { length } = images;\n    pulseButton(previousButton);\n    const positionNow = getPosition(lightbox, imageList);\n    if (positionNow != null) {\n        const newPosition = getPreviousPosition(positionNow, length);\n        scrollTo(newPosition, lightbox, imageList);\n    }\n};\nconst goForward = (lightbox, images, nextButton, imageList) => {\n    const { length } = images;\n    pulseButton(nextButton);\n    const positionNow = getPosition(lightbox, imageList);\n    if (positionNow != null) {\n        const newPosition = getNextPosition(positionNow, length);\n        scrollTo(newPosition, lightbox, imageList);\n    }\n};\nlet previouslyFocused;\nconst open = async (lightbox, imageList, position, handleKeydown) => {\n    log('dotcom', '💡 Opening lightbox.');\n    // Remember where we were so we can restore focus\n    if (document.activeElement)\n        previouslyFocused = document.activeElement;\n    // Try to open the lightbox in fullscreen mode. This may fail\n    await requestFullscreen(lightbox).catch(() => {\n        // fullscreen request failed\n    });\n    // We use this class to prevent the main page from scrolling in the background while lightbox is open\n    document.documentElement.classList.add('lightbox-open');\n    // Show lightbox\n    lightbox.removeAttribute('hidden');\n    // Now we have the index of the image that was clicked, show it\n    // in the lightbox\n    scrollTo(position, lightbox, imageList);\n    // We only want this listener active while the lightbox is open\n    window.addEventListener('keydown', handleKeydown);\n};\nconst closeLightbox = (lightbox, handleKeydown) => {\n    // Re-enable scrolling\n    document.documentElement.classList.remove('lightbox-open');\n    // Hide lightbox\n    lightbox.setAttribute('hidden', 'true');\n    // Stop listening for keyboard shortcuts\n    window.removeEventListener('keydown', handleKeydown);\n};\nconst close = async (lightbox, handleKeydown) => {\n    log('dotcom', '💡 Closing lightbox.');\n    await exitFullscreen().catch(() => {\n        // fullscreen request failed\n    });\n    closeLightbox(lightbox, handleKeydown);\n    history.back();\n    previouslyFocused && restoreFocus(previouslyFocused);\n};\nconst toggleInfo = (lightbox, button, force) => {\n    const action = force ?? (lightbox.classList.contains('hide-info') ? 'show' : 'hide');\n    button.classList.toggle('active', action === 'show');\n    lightbox.classList.toggle('hide-info', action === 'hide');\n    storage.local.set('gu.prefs.lightbox-info', action);\n};\n/**\n * 💡 Lightbox\n *\n * `initialiseLightbox` contains the core javascript used to control the DCR lightbox.\n *\n * The lightbox works by keeping state in the url. When the url has an image hash in the form\n * `img-12` then the lightbox will open. As soon as it no longer has an img- hash, the lightbox\n * will close. This reactivity is achieved using event listeners.\n *\n * Like this, opening the lightbox is as simple as navigating to a url with a hash. To close\n * the lightbox you use history.back()\n *\n * Each image in the article that has a lightboxable image is overlayed with a transparent <a>\n * tag on the server. This <a> tag points to the hash value for the image, e.g. `href=\"#img-2\"`.\n * Like this, when a reader clicks on an image it fires the <a> tag, mutates the url, and\n * triggers hydration for lightbox (we hydrate on 'hash') causing lightbox to open\n *\n */\nconst initialiseLightbox = (lightbox) => {\n    log('dotcom', '💡 Initialising lightbox');\n    // --------------------------------------------------------------------------------\n    // SELECTORS\n    //\n    // We start by defining some variables that reference parts of the dom. These page\n    // parts are either on the document or in the lightbox element itself\n    // --------------------------------------------------------------------------------\n    // Lightbox selectors\n    const nextButton = lightbox.querySelector('button.next');\n    const previousButton = lightbox.querySelector('button.previous');\n    const infoButton = lightbox.querySelector('button.info');\n    const closeButton = lightbox.querySelector('button.close');\n    /**\n     * imageList is the horizontal list of all images. We use it to scroll left and right\n     * effectively navigating the lightbox\n     */\n    const imageList = lightbox.querySelector('ul');\n    const pictures = lightbox.querySelectorAll('li picture');\n    const images = Array.from(lightbox.querySelectorAll('li img'));\n    const captionLinks = lightbox.querySelectorAll('li aside a');\n    if (!imageList)\n        return;\n    if (!closeButton)\n        return;\n    if (!previousButton)\n        return;\n    if (!nextButton)\n        return;\n    if (!infoButton)\n        return;\n    // --------------------------------------------------------------------------------\n    // FUNCTIONS\n    // --------------------------------------------------------------------------------\n    const handleKeydown = (event) => {\n        if (event.ctrlKey || event.metaKey || event.altKey)\n            return;\n        switch (event.code) {\n            case 'Tab': {\n                event.preventDefault();\n                const tabbableElements = getTabbableElements(lightbox, imageList);\n                const activeElement = tabbableElements.find((element) => element === document.activeElement);\n                const firstTabbableElement = tabbableElements[0];\n                const lastTabbableElement = tabbableElements[tabbableElements.length - 1];\n                if (!activeElement) {\n                    // Start at the start\n                    firstTabbableElement?.focus();\n                }\n                else {\n                    const currentPosition = tabbableElements.indexOf(activeElement);\n                    const firstElementHasFocus = currentPosition === 0;\n                    const lastElementHasFocus = currentPosition === tabbableElements.length - 1;\n                    if (event.shiftKey) {\n                        if (firstElementHasFocus) {\n                            lastTabbableElement?.focus();\n                        }\n                        else {\n                            tabbableElements[currentPosition - 1]?.focus();\n                        }\n                    }\n                    else {\n                        if (lastElementHasFocus) {\n                            firstTabbableElement?.focus();\n                        }\n                        else {\n                            tabbableElements[currentPosition + 1]?.focus();\n                        }\n                    }\n                }\n                break;\n            }\n            case 'ArrowLeft':\n                return goBack(lightbox, images, previousButton, imageList);\n            case 'ArrowRight':\n                return goForward(lightbox, images, nextButton, imageList);\n            case 'KeyI':\n                return toggleInfo(lightbox, infoButton);\n            case 'ArrowUp':\n                return toggleInfo(lightbox, infoButton, 'show');\n            case 'ArrowDown':\n                return toggleInfo(lightbox, infoButton, 'hide');\n            case 'KeyQ':\n            case 'Escape':\n                return void close(lightbox, handleKeydown);\n        }\n    };\n    // --------------------------------------------------------------------------------\n    // EVENT LISTENERS\n    // --------------------------------------------------------------------------------\n    for (const picture of pictures) {\n        // Clicking on the image toggles the caption\n        picture.addEventListener('mousedown', (event) => {\n            toggleInfo(lightbox, infoButton);\n            // We want to maintain focus so halt all further actions\n            event.preventDefault();\n            event.stopPropagation();\n        });\n    }\n    imageList.addEventListener('scroll', libDebounce(() => {\n        const currentPosition = getPosition(lightbox, imageList);\n        if (isUndefined(currentPosition))\n            return;\n        const positionIndicator = lightbox.querySelector('nav .selected'); // Eg. 2/4, as in image 2 of 4\n        if (!positionIndicator)\n            return;\n        onSelect(positionIndicator, currentPosition, images.length, closeButton);\n        loadAdjacentImages(images, currentPosition);\n    }, 150, { leading: true }));\n    closeButton.addEventListener('click', () => {\n        void close(lightbox, handleKeydown);\n    });\n    previousButton.addEventListener('click', () => {\n        goBack(lightbox, images, previousButton, imageList);\n    });\n    nextButton.addEventListener('click', () => {\n        goForward(lightbox, images, nextButton, imageList);\n    });\n    infoButton.addEventListener('click', () => {\n        toggleInfo(lightbox, infoButton);\n    });\n    for (const link of captionLinks) {\n        link.addEventListener('click', (event) => {\n            // This prevents the event listener from this element's LI parent\n            // from firing. That LI event listener would have tried to hide the\n            // caption but the reader clicked a link inside the caption so they\n            // want to navigate, not hide stuff, and if we did hide it it would\n            // cause a weird flash\n            event.stopPropagation();\n        });\n    }\n    /**\n     * We listen for the fullscreenchange event here so that we can fire our\n     * close function in response to the reader closing fullscreen mode. Like\n     * this there's no need to press escape twice to exit the lightbox\n     */\n    if (screenfull.isEnabled) {\n        screenfull.on('change', () => {\n            if (screenfull.isFullscreen) {\n                log('dotcom', `💡 entered fullscreen mode.`);\n            }\n            else {\n                log('dotcom', `💡 leaving fullscreen mode.`);\n                if (!lightbox.hasAttribute('hidden')) {\n                    // If lightbox is still showing then the escape key was probably pressed\n                    // which closes fullscreen mode but not the lightbox, so let's close it\n                    closeLightbox(lightbox, handleKeydown);\n                    history.back();\n                    previouslyFocused && restoreFocus(previouslyFocused);\n                }\n            }\n        });\n    }\n    /**\n     * popstate is fired when a user goes back or forward, either using buttons\n     * or the keyboard or via history.back() or history.forward()\n     *\n     * We use the url as the source of truth so we open and close the lightbox\n     * here depending on if we have an img hash or not.\n     */\n    window.addEventListener('popstate', () => {\n        const hash = window.location.hash;\n        if (hash.startsWith('#img-') && !lightbox.hasAttribute('open')) {\n            const position = parseInt(hash.substring(5), 10);\n            void open(lightbox, imageList, position, handleKeydown);\n        }\n        else {\n            // There's no img hash so close the lightbox\n            void exitFullscreen();\n            closeLightbox(lightbox, handleKeydown);\n            previouslyFocused && restoreFocus(previouslyFocused);\n        }\n    });\n    // --------------------------------------------------------------------------------\n    // STARTUP\n    // This code is run once when the lightbox first opens\n    // --------------------------------------------------------------------------------\n    // Check the user's preferences to decide if we show the caption or not\n    const info = storage.local.get('gu.prefs.lightbox-info');\n    if (info === 'hide')\n        toggleInfo(lightbox, infoButton, 'hide');\n    // Open the lightbox at the position given in the url hash\n    const { hash } = window.location;\n    if (hash.startsWith('#img-')) {\n        const position = parseInt(hash.substring(5), 10);\n        void open(lightbox, imageList, position, handleKeydown);\n    }\n    // Mark the lightbox as ready so that we don't try to re-initialise it later\n    lightbox.setAttribute('data-island-status', 'rendered');\n};\nconst useElementById = (id) => {\n    const [element, setElement] = useState();\n    useEffect(() => {\n        setElement(window.document.getElementById(id) ?? undefined);\n    }, [id]);\n    return element;\n};\nconst ulStyles = css `\n\tdisplay: grid;\n\tgrid-auto-flow: column;\n\tgrid-auto-columns: 100%;\n\theight: 100%;\n\twidth: 100%;\n\tscroll-snap-type: x mandatory;\n\toverflow-x: scroll;\n\toverflow-y: hidden;\n\tscroll-behavior: auto;\n\toverscroll-behavior: contain;\n\t${from.tablet} {\n\t\tmargin-left: ${space[5]}px;\n\t}\n\t/**\n\t* Hide scrollbars\n\t* See: https://stackoverflow.com/a/38994837\n\t*\n\t* Removing the scrollbars here is okay because we offer multiple other methods for\n\t* navigation which are obvious and accessible to readers\n\t*/\n\t::-webkit-scrollbar {\n\t\tdisplay: none; /* Safari and Chrome */\n\t}\n\tscrollbar-width: none; /* Firefox */\n`;\nexport const LightboxJavascript = ({ format, images, }) => {\n    /**\n     * Hydration has been requested so the first step is to render the list of images and put them into\n     * the DOM\n     *\n     * LightboxLayout provides a marker for where these images should go `ul#lightbox-images`. We look for\n     * this and then use createPortal to insert LightboxImages into this location.\n     *\n     * Why do we do this here, and not on the server?\n     * Because the size of the html generated by LightboxImages is very large (because the Picture element\n     * is so verbose) and we don't want every page view to have to download it, only those that are opening\n     * lightbox\n     */\n    const lightbox = useElementById('gu-lightbox');\n    const [initialised, setInitialised] = useState(false);\n    useEffect(() => {\n        if (!lightbox)\n            return;\n        if (initialised) {\n            log('dotcom', '💡 Lightbox already initialised, skipping');\n            return;\n        }\n        initialiseLightbox(lightbox);\n        setInitialised(true);\n    }, [initialised, lightbox]);\n    if (!lightbox)\n        return null;\n    log('dotcom', '💡 Generating HTML for lightbox images...');\n    return (_jsxs(\"ul\", { css: ulStyles, \"aria-label\": \"All images\", children: [_jsx(LightboxImages, { format: format, images: images }), \";\"] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { css, Global } from '@emotion/react';\nimport { from, palette, space, textSans14, until, visuallyHidden, } from '@guardian/source/foundations';\nimport { Hide, SvgArrowLeftStraight, SvgArrowRightStraight, SvgCross, } from '@guardian/source/react-components';\nimport { getZIndex } from '../lib/getZIndex';\nimport { LightboxJavascript } from './LightboxJavascript';\nconst lightboxStyles = css `\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: ${palette.neutral[10]};\n\n\t&.hide-info {\n\t\t/* Always hide the info aside when the hide-info class exists on the lightbox element */\n\t\taside {\n\t\t\tdisplay: none;\n\t\t}\n\t\t${until.tablet} {\n\t\t\t/* Also hide the nav controls when on mobile */\n\t\t\tnav {\n\t\t\t\tvisibility: hidden;\n\t\t\t}\n\t\t}\n\t}\n\n\tbutton.active {\n\t\tbackground-color: ${palette.neutral[46]};\n\t}\n\n\tbutton.reveal {\n\t\tvisibility: visible;\n\t}\n`;\nconst containerStyles = css `\n\tdisplay: flex;\n\theight: 100%;\n\tflex-direction: row;\n\t${until.tablet} {\n\t\tflex-direction: column;\n\t}\n`;\nconst navStyles = css `\n\tdisplay: flex;\n\tflex-direction: column;\n\t${until.tablet} {\n\t\tflex-direction: row;\n\t\tposition: absolute;\n\t\tz-index: 1;\n\t\twidth: 100%;\n\t}\n\t${from.tablet} {\n\t\tpadding-top: ${space[1]}px;\n\t\tpadding-left: ${space[4]}px;\n\t\tpadding-right: ${space[4]}px;\n\t\theight: 100vh;\n\t}\n\tcolor: white;\n\t${until.tablet} {\n\t\tborder-bottom: 1px solid ${palette.neutral[20]};\n\t}\n\t${from.tablet} {\n\t\tborder-left: 1px solid ${palette.neutral[20]};\n\t}\n\tbackground-color: ${palette.neutral[7]};\n`;\nconst buttonStyles = css `\n\tsvg {\n\t\tfill: ${palette.neutral[100]};\n\t\tmargin-top: 3px;\n\t}\n\tmargin-top: ${space[2]}px;\n\tmargin-bottom: ${space[2]}px;\n\t${until.tablet} {\n\t\tmargin-left: ${space[2]}px;\n\t}\n\tborder-radius: 50%;\n\theight: 44px;\n\twidth: 44px;\n\tborder: none;\n\tcursor: pointer;\n\ttransition: background-color 0.2s;\n\tbackground-color: ${palette.neutral[20]};\n\t:hover {\n\t\tbackground-color: ${palette.neutral[46]};\n\t}\n`;\nconst closeButtonStyles = css `\n\t${until.tablet} {\n\t\tposition: absolute;\n\t\tright: ${space[2]}px;\n\t}\n\tsvg {\n\t\theight: 24px;\n\t\twidth: 24px;\n\t}\n`;\nconst arrowButtonStyles = css `\n\tsvg {\n\t\theight: 24px;\n\t\twidth: 24px;\n\t}\n\t${from.tablet} {\n\t\tsvg {\n\t\t\theight: 32px;\n\t\t\twidth: 32px;\n\t\t}\n\t}\n`;\nconst infoButtonStyles = css `\n\tsvg {\n\t\theight: 24px;\n\t\twidth: 24px;\n\t}\n`;\nconst SvgInfo = () => (_jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"9\", height: \"24\", viewBox: \"0 0 9 24\", children: _jsx(\"path\", { fill: palette.neutral[100], d: \"M.3 22L3.9 9.1H1.3l.4-1.4 5.6-.9.3.3-4.4 14.8H6L5.6 23c-.9.4-2.8.9-4.1.9-1.1 0-1.7-.5-1.2-1.9zM5.5 2C5.5.9 6.4.1 7.3.1c1 0 1.6.7 1.6 1.5 0 1.1-.9 1.9-1.8 1.9-1 .1-1.6-.6-1.6-1.5z\" }) }));\nconst Selection = ({ countOfImages, initialPosition = 1, }) => {\n    return (_jsxs(\"span\", { css: css `\n\t\t\t\tdisplay: block;\n\t\t\t\t${from.tablet} {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tpadding-top: 2.25rem;\n\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t}\n\t\t\t\t${textSans14};\n\t\t\t\tcolor: ${palette.neutral[86]};\n\t\t\t\t${until.tablet} {\n\t\t\t\t\tmargin-bottom: ${space[2]}px;\n\t\t\t\t}\n\t\t\t`, \"aria-hidden\": \"true\", \"data-testid\": \"lightbox-selected\", children: [_jsx(\"span\", { className: \"selected\", children: initialPosition }), _jsx(\"span\", { css: css `\n\t\t\t\t\tmargin-left: 1px;\n\t\t\t\t\tmargin-right: 1px;\n\t\t\t\t`, children: \"/\" }), _jsx(\"span\", { css: css `\n\t\t\t\t\tcolor: ${palette.neutral[97]};\n\t\t\t\t`, children: countOfImages })] }));\n};\nexport const LightboxLayout = ({ format, images }) => {\n    return (_jsxs(_Fragment, { children: [_jsx(Global, { styles: css `\n\t\t\t\t\thtml.lightbox-open {\n\t\t\t\t\t\t#gu-lightbox {\n\t\t\t\t\t\t\tposition: fixed;\n\t\t\t\t\t\t\tz-index: ${getZIndex('lightbox')};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody {\n\t\t\t\t\t\t\t/* This ensures the menu and sidebars on iPhones have the same background as lightbox */\n\t\t\t\t\t\t\tbackground-color: ${palette.neutral[10]};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t` }), _jsx(\"div\", { css: lightboxStyles, id: \"gu-lightbox\", \"aria-modal\": \"true\", role: \"dialog\", hidden: true, children: _jsxs(\"div\", { css: containerStyles, children: [_jsx(LightboxJavascript, { format: format, images: images }), _jsxs(\"nav\", { css: navStyles, children: [_jsxs(\"button\", { type: \"button\", css: [buttonStyles, closeButtonStyles], className: \"close\", title: \"Close [ESC or Q]\", children: [_jsx(SvgCross, { isAnnouncedByScreenReader: false }), _jsx(\"span\", { css: css `\n\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t`, children: \"Close dialogue\" })] }), _jsx(Hide, { until: \"tablet\", children: _jsx(Selection, { countOfImages: images.length }) }), _jsxs(\"button\", { type: \"button\", css: [\n                                        buttonStyles,\n                                        arrowButtonStyles,\n                                        css `\n\t\t\t\t\t\t\t\t\torder: 1;\n\t\t\t\t\t\t\t\t\t${until.tablet} {\n\t\t\t\t\t\t\t\t\t\torder: 2;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`,\n                                    ], className: \"next\", title: \"Next image [\\u2192]\", children: [_jsx(SvgArrowRightStraight, { isAnnouncedByScreenReader: false }), _jsx(\"span\", { css: css `\n\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t`, children: \"Next image\" })] }), _jsxs(\"button\", { type: \"button\", css: [\n                                        buttonStyles,\n                                        arrowButtonStyles,\n                                        css `\n\t\t\t\t\t\t\t\t\torder: 2;\n\t\t\t\t\t\t\t\t\t${until.tablet} {\n\t\t\t\t\t\t\t\t\t\torder: 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`,\n                                    ], className: \"previous\", title: \"Previous image [\\u2190]\", children: [_jsx(SvgArrowLeftStraight, { isAnnouncedByScreenReader: false }), _jsx(\"span\", { css: css `\n\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t`, children: \"Previous image\" })] }), _jsxs(\"button\", { type: \"button\", css: [\n                                        buttonStyles,\n                                        infoButtonStyles,\n                                        css `\n\t\t\t\t\t\t\t\t\torder: 3;\n\t\t\t\t\t\t\t\t`,\n                                    ], className: \"info\", title: \"Toggle caption [i]\", children: [_jsx(SvgInfo, {}), _jsx(\"span\", { css: css `\n\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t`, children: \"Toggle caption\" })] })] })] }) })] }));\n};\n","/**\n * How do I get a z-index for my new item?\n *\n * Decide a meaningful name for your item and then insert it\n * in the indices array below. The higher up your item visually,\n * then the higher it will be in the z-index stack,\n * 'higher' means _earlier_ in the array.\n *\n * Eg. stickyAdWrapper will be given a higher z-index than bodyArea\n *\n * Once inserted in the array, use getZIndex() to return the css\n *\n * Eg.\n *\n * import { getZIndex } from './getZIndex';\n *\n * const myCss = css`\n *    color: blue;\n *    z-index: ${getZIndex('TheGuardian')};\n * `;\n *\n * As new items are added, all z-indexes are adjusted\n */\nconst indices = [\n    // Modals will go here at the top\n    'lightbox',\n    'youTubeFullscreen',\n    // Sticky video and button need to be above everything\n    'sticky-video-button',\n    'sticky-video',\n    'banner',\n    'dropdown',\n    'burger',\n    'mastheadVeggieBurgerExpandedMobile',\n    'expanded-veggie-menu-wrapper',\n    'expanded-veggie-menu',\n    //header wrapper needs to be in line with veggie menus to ensure it stands above various banners\n    'fullPageInteractiveHeaderWrapper',\n    // Mobile sticky appears below banners\n    'mobileSticky',\n    // Headers with sticky ads\n    'stickyAdWrapperLabsHeader',\n    'stickyAdWrapper',\n    'stickyAdWrapperNav',\n    // My Account dropdown in masthead - needs to be below stickyAdWrapper\n    'mastheadMyAccountDropdown',\n    // Edition selector in masthead - needs to be below stickyAdWrapper\n    'mastheadEditionDropdown',\n    // Edition selector in nav - needs to be below stickyAdWrapper\n    'editionDropdown',\n    // The content displayed by the Details component\n    'summaryDetails',\n    // Liveblog toast\n    'toast',\n    // Onwards Carousel (Related content etc)\n    'onwardsCarousel',\n    // Search link should be above The Guardian svg\n    'myAccountDropdown',\n    'searchHeaderLink',\n    'TheGuardian',\n    // The edition switcher banner needs to be below the Edition selector\n    // and the myAccount dropdown in the nav\n    'editionSwitcherBanner',\n    // Overlay for expandable marketing card (currently US only)\n    'expandableMarketingCardOverlay',\n    // Sticky table of contents element\n    'tableOfContents',\n    // Article headline (should be above main media)\n    'articleHeadline',\n    'immersiveBlackBox',\n    // Body\n    'bodyArea',\n    'rightColumnArea',\n    // Main media\n    'mainMedia',\n    // Nested links in cards should sit above the main card link\n    // See: https://www.sarasoueidan.com/blog/nested-links/\n    'card-nested-link',\n    'card-link',\n];\nexport const getZIndex = (name) => {\n    const index = indices.indexOf(name);\n    if (index === -1)\n        return -1; // indexOf returns -1 if there is no match\n    return indices.length - index; // reverse the indices: last item gets 1\n};\n","/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour) => `var(${colour})`;\n// ----- Exports ----- //\nexport { palette };\n"],"names":["LightboxCaption","_ref","captionText","credit","displayCredit","_jsxs","css","textSans14","space","palette","children","_jsx","srcPalette","neutral","dangerouslySetInnerHTML","__html","flash","keyframes","_templateObject","_taggedTemplateLiteral","LightboxLoader","liStyles","name","styles","imageStyles","orientation","baseImgStyles","until","tablet","from","pictureStyles","asideStyles","figureStyles","Selection","_ref2","countOfImages","_ref2$initialPosition","initialPosition","className","LightboxImages","_ref3","format","images","_useState","useState","Set","_useState2","_slicedToArray","loaded","setLoaded","useEffect","log","_Fragment","map","image","index","_image$alt","width","height","position","elementId","has","Picture","role","alt","master","masterUrl","isLightbox","onLoad","set","previousSize","size","add","loading","title","headlineLight24","starRating","brandAlt","StarRating","rating","Hide","length","caption","blockId","isUndefined","firstPublished","Link","href","concat","priority","cssOverrides","dateTime","Date","toISOString","visuallyHidden","timeAgo","previouslyFocused","getPosition","lightbox","imageList","_lightbox$querySelect","scrollPosition","scrollLeft","liWidth","querySelector","clientWidth","Number","isNaN","Math","round","timeout","promise","delay","arguments","undefined","Promise","race","_","reject","timer","setTimeout","clearTimeout","requestFullscreen","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","screenfull","isEnabled","abrupt","request","stop","_x","apply","exitFullscreen","_callee2","_context2","isFullscreen","exit","restoreFocus","HTMLElement","focus","scrollTo","_lightbox$querySelect2","getPreviousPosition","getNextPosition","eagerLoad","pulseButton","button","classList","remove","goBack","previousButton","positionNow","newPosition","goForward","nextButton","open","_callee3","handleKeydown","_context3","document","activeElement","catch","documentElement","removeAttribute","window","addEventListener","_x2","_x3","_x4","_x5","closeLightbox","setAttribute","removeEventListener","close","_ref4","_callee4","_context4","history","back","_x6","_x7","toggleInfo","force","action","contains","toggle","storage","local","ulStyles","LightboxJavascript","_ref5","id","element","setElement","_window$document$getE","getElementById","_useState3","_useState4","initialised","setInitialised","infoButton","closeButton","pictures","querySelectorAll","Array","captionLinks","_step","event","ctrlKey","metaKey","altKey","code","preventDefault","tabbableElements","getElements","parent","currentPosition","currentPage","nav","elementsFromCaption","elementsFromNav","_toConsumableArray","getTabbableElements","find","firstTabbableElement","lastTabbableElement","_tabbableElements","_tabbableElements2","indexOf","firstElementHasFocus","lastElementHasFocus","shiftKey","_iterator","_createForOfIteratorHelper","s","n","done","value","stopPropagation","err","e","f","libDebounce","positionIndicator","innerHTML","toString","replaceState","onSelect","previousImage","nextImage","loadAdjacentImages","leading","_step2","_iterator2","on","hasAttribute","hash","location","startsWith","parseInt","substring","get","initialiseLightbox","lightboxStyles","containerStyles","navStyles","buttonStyles","closeButtonStyles","arrowButtonStyles","infoButtonStyles","SvgInfo","xmlns","viewBox","fill","d","_ref3$initialPosition","LightboxLayout","Global","getZIndex","hidden","type","SvgCross","isAnnouncedByScreenReader","SvgArrowRightStraight","SvgArrowLeftStraight","indices","colour"],"sourceRoot":""}