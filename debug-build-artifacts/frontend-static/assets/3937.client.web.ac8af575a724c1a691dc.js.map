{"version":3,"file":"3937.client.web.ac8af575a724c1a691dc.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/Dropdown.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/linkNotificationCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/getZIndex.ts","webpack://@guardian/dotcom-rendering/./src/lib/useIsInView.ts","webpack://@guardian/dotcom-rendering/./src/lib/useOnce.ts"],"sourcesContent":["import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { isUndefined, type OphanComponent } from '@guardian/libs';\nimport {\n\tfrom,\n\tpalette,\n\tpalette as sourcePalette,\n\ttextSans12,\n\ttextSans14,\n\ttextSans15,\n\ttextSans17,\n\tuntil,\n\tvisuallyHidden,\n} from '@guardian/source/foundations';\nimport { useEffect, useMemo, useState } from 'react';\nimport { submitComponentEvent } from '../client/ophan/ophan';\nimport { getZIndex } from '../lib/getZIndex';\nimport { linkNotificationCount } from '../lib/linkNotificationCount';\nimport type { Notification } from '../lib/notification';\nimport { useIsInView } from '../lib/useIsInView';\nimport { useOnce } from '../lib/useOnce';\nimport { useConfig } from './ConfigContext';\n\nconst NOTIFICATION_COMPONENT_TYPE = 'RETENTION_HEADER';\nexport interface DropdownLinkType {\n\tid: string;\n\turl: string;\n\ttitle: string;\n\tshortTitle?: string;\n\tisActive?: boolean;\n\tdataLinkName: string;\n\tnotifications?: Notification[];\n}\n\ninterface Props {\n\tid: string;\n\tlabel: string;\n\tlinks: DropdownLinkType[];\n\tdataLinkName: string;\n\tcssOverrides?: SerializedStyles;\n\tchildren?: React.ReactNode;\n}\n\nconst ulStyles = css`\n\tz-index: ${getZIndex('dropdown')};\n\tlist-style: none;\n\t/* https://developer.mozilla.org/en-US/docs/Web/CSS/list-style#accessibility_concerns */\n\t/* Needs double escape char: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#es2018_revision_of_illegal_escape_sequences */\n\tli::before {\n\t\tcontent: '\\\\200B'; /* Zero width space */\n\t\tdisplay: block;\n\t\theight: 0;\n\t\twidth: 0;\n\t}\n\tbackground-color: white;\n\tpadding: 6px 0;\n\tbox-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n\n\t${until.tablet} {\n\t\tposition: fixed;\n\t\tborder-radius: 0;\n\t\ttop: 32px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: auto;\n\t\tmax-height: calc(100% - 50px);\n\t\toverflow: auto;\n\t}\n\n\t${from.tablet} {\n\t\tposition: absolute;\n\t\ttop: 100%;\n\t\twidth: 200px;\n\t\tborder-radius: 3px;\n\t}\n`;\n\nconst liStyles = css`\n\tposition: relative;\n`;\n\nconst displayBlock = css`\n\tdisplay: block;\n`;\n\nconst displayNone = css`\n\tdisplay: none;\n`;\n\nconst linkStyles = css`\n\t${textSans15};\n\tcolor: ${sourcePalette.neutral[7]};\n\ttransition: color 80ms ease-out;\n\tmargin: -1px 0 0 0;\n\ttext-decoration: none;\n\tdisplay: flex;\n\talign-items: flex-start;\n\tjustify-content: space-between;\n\tpadding: 10px 18px 15px 30px;\n\n\t:hover {\n\t\tbackground-color: ${sourcePalette.neutral[93]};\n\t\ttext-decoration: none;\n\t}\n\n\t:focus {\n\t\ttext-decoration: underline;\n\t}\n\n\t:before {\n\t\tcontent: '';\n\t\tborder-top: 1px solid ${sourcePalette.neutral[86]};\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0px;\n\t\tleft: 30px;\n\t\tright: 0px;\n\t}\n`;\n\nconst linkActive = css`\n\tfont-weight: bold;\n\n\t:after {\n\t\tcontent: '';\n\t\tborder: 2px solid ${sourcePalette.news[400]};\n\t\tborder-top: 0px;\n\t\tborder-right: 0px;\n\t\tposition: absolute;\n\t\ttop: 19px;\n\t\tleft: 12px;\n\t\twidth: 10px;\n\t\theight: 4px;\n\t\ttransform: rotate(-45deg);\n\t}\n`;\n\nconst linkFirst = css`\n\t:before {\n\t\tcontent: none;\n\t}\n`;\n\nconst buttonStyles = css`\n\t${textSans17};\n\tdisplay: block;\n\tcursor: pointer;\n\tbackground: none;\n\tborder: none;\n\t/* Design System: The buttons should be components that handle their own layout using primitives  */\n\tline-height: 1.2;\n\tcolor: ${sourcePalette.neutral[100]};\n\ttransition: color 80ms ease-out;\n\tpadding: 0px 10px 6px 5px;\n\tmargin: 1px 0 0;\n\ttext-decoration: none;\n\tposition: relative;\n\n\t:hover {\n\t\tcolor: ${sourcePalette.brandAlt[400]};\n\n\t\t:after {\n\t\t\ttransform: translateY(0) rotate(45deg);\n\t\t}\n\t}\n\n\t:after {\n\t\tcontent: '';\n\t\tdisplay: inline-block;\n\t\twidth: 5px;\n\t\theight: 5px;\n\t\ttransform: translateY(-2px) rotate(45deg);\n\t\tborder: 1px solid currentColor;\n\t\tborder-left: transparent;\n\t\tborder-top: transparent;\n\t\tmargin-left: 5px;\n\t\tvertical-align: middle;\n\t\ttransition: transform 250ms ease-out;\n\t}\n`;\n\nconst buttonExpanded = css`\n\t:hover:after {\n\t\ttransform: translateY(-1px) rotate(-135deg);\n\t}\n\t:after {\n\t\ttransform: translateY(1px) rotate(-135deg);\n\t}\n`;\n\nconst notificationColor = palette.error[400];\n\nconst notificationBadgeStyles = css`\n\tbackground-color: ${notificationColor};\n\tcolor: ${palette.neutral[100]};\n\ttext-align: center;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\t${textSans14};\n\tline-height: 1;\n\tflex-shrink: 0;\n`;\n\nconst dropdownButtonNotificationBadgeStyles = css`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tmargin-left: -10px;\n\tmargin-top: -3px;\n`;\n\nconst notificationTextStyles = css`\n\t${textSans12};\n`;\n\nconst buildOphanComponentWithNotifications = (\n\tlink: DropdownLinkType,\n): OphanComponent | undefined => {\n\t// Only track if it has notifications\n\tif (link.notifications && link.notifications.length > 0) {\n\t\treturn {\n\t\t\tcomponentType: NOTIFICATION_COMPONENT_TYPE,\n\t\t\tid: link.id,\n\t\t\tlabels: link.notifications.map(\n\t\t\t\t(notification) => notification.ophanLabel,\n\t\t\t),\n\t\t};\n\t}\n\treturn undefined;\n};\n\nconst addTrackingToUrl = (\n\turl: string,\n\tophanComponent: OphanComponent,\n): string => {\n\t// Use the acquisitionData query param to send tracking to the destination\n\tconst acquisitionData = encodeURIComponent(\n\t\tJSON.stringify({\n\t\t\tsource: 'GUARDIAN_WEB',\n\t\t\tcomponentId: ophanComponent.id,\n\t\t\tcomponentType: ophanComponent.componentType,\n\t\t\tcampaignCode: ophanComponent.id,\n\t\t\treferrerPageviewId: window.guardian.config.ophan.pageViewId,\n\t\t\treferrerUrl: window.location.origin + window.location.pathname,\n\t\t\tlabels: ophanComponent.labels,\n\t\t}),\n\t);\n\tconst prefix = url.includes('?') ? '&' : '?';\n\treturn `${url}${prefix}acquisitionData=${acquisitionData}`;\n};\n\nconst NotificationBadge = ({ diameter }: { diameter: number }) => {\n\treturn (\n\t\t<div\n\t\t\tcss={notificationBadgeStyles}\n\t\t\tstyle={{\n\t\t\t\twidth: `${diameter}px`,\n\t\t\t\theight: `${diameter}px`,\n\t\t\t\tborderRadius: `${diameter}px`,\n\t\t\t}}\n\t\t>\n\t\t\t<span>!</span>\n\t\t</div>\n\t);\n};\n\ntype NotificationMessageProps = {\n\tnotification: Notification;\n};\nconst NotificationMessage = ({ notification }: NotificationMessageProps) => {\n\tconst { message } = notification;\n\n\treturn <div css={notificationTextStyles}>{message}</div>;\n};\n\ntype DropdownLinkProps = {\n\tlink: DropdownLinkType;\n\tindex: number;\n};\nconst DropdownLink = ({ link, index }: DropdownLinkProps) => {\n\tconst ophanComponent = useMemo(\n\t\t() => buildOphanComponentWithNotifications(link),\n\t\t[link],\n\t);\n\n\tconst { renderingTarget } = useConfig();\n\n\tconst [hasBeenSeen, setNode] = useIsInView({\n\t\tdebounce: true,\n\t});\n\tconst [hasSentViewEvent, setHasSentViewEvent] = useState<boolean>(false);\n\n\t// The following hooks, which send INSERT and VIEW events to Ophan,\n\t// intentionally only run when the link has notifications (which is why\n\t// link.notifications is part of the dependency array for both). In future\n\t// if we ever have notifications arriving from different sources at\n\t// different times, we'll need to revisit this logic (currently they only\n\t// come from Braze).\n\tuseEffect(() => {\n\t\tif (\n\t\t\thasBeenSeen &&\n\t\t\tophanComponent &&\n\t\t\tlink.notifications &&\n\t\t\tlink.notifications.length > 0 &&\n\t\t\t!hasSentViewEvent\n\t\t) {\n\t\t\tsetHasSentViewEvent(true);\n\n\t\t\t// For each notification for this link, log the impression back to\n\t\t\t// Braze separately\n\t\t\tfor (const notification of link.notifications) {\n\t\t\t\tnotification.logImpression?.();\n\t\t\t}\n\n\t\t\tvoid submitComponentEvent(\n\t\t\t\t{\n\t\t\t\t\tcomponent: ophanComponent,\n\t\t\t\t\taction: 'VIEW',\n\t\t\t\t},\n\t\t\t\trenderingTarget,\n\t\t\t);\n\t\t}\n\t}, [\n\t\thasBeenSeen,\n\t\tophanComponent,\n\t\tlink.notifications,\n\t\thasSentViewEvent,\n\t\tlink.id,\n\t\trenderingTarget,\n\t]);\n\n\tuseOnce(() => {\n\t\tif (ophanComponent) {\n\t\t\tvoid submitComponentEvent(\n\t\t\t\t{\n\t\t\t\t\tcomponent: ophanComponent,\n\t\t\t\t\taction: 'INSERT',\n\t\t\t\t},\n\t\t\t\trenderingTarget,\n\t\t\t);\n\t\t}\n\t}, [ophanComponent]);\n\n\tconst url = ophanComponent\n\t\t? addTrackingToUrl(link.url, ophanComponent)\n\t\t: link.url;\n\n\tconst hasNotifications =\n\t\t!isUndefined(link.notifications) && link.notifications.length > 0;\n\n\treturn (\n\t\t<li css={liStyles} key={link.title} ref={setNode}>\n\t\t\t<a\n\t\t\t\thref={url}\n\t\t\t\tcss={[\n\t\t\t\t\tlinkStyles,\n\t\t\t\t\t!!link.isActive && linkActive,\n\t\t\t\t\tindex === 0 && linkFirst,\n\t\t\t\t]}\n\t\t\t\tdata-link-name={link.dataLinkName}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (ophanComponent) {\n\t\t\t\t\t\tvoid submitComponentEvent(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcomponent: ophanComponent,\n\t\t\t\t\t\t\t\taction: 'CLICK',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trenderingTarget,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t{link.title}\n\t\t\t\t\t{link.notifications?.map((notification) => (\n\t\t\t\t\t\t<NotificationMessage\n\t\t\t\t\t\t\tnotification={notification}\n\t\t\t\t\t\t\tkey={notification.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{hasNotifications && <NotificationBadge diameter={22} />}\n\t\t\t</a>\n\t\t</li>\n\t);\n};\n\nexport const Dropdown = ({\n\tid,\n\tlabel,\n\tlinks,\n\tdataLinkName,\n\tcssOverrides,\n\tchildren,\n}: Props) => {\n\tconst [isExpanded, setIsExpanded] = useState(false);\n\tconst [noJS, setNoJS] = useState(true);\n\tconst [buttonRef, setButtonRef] = useState<HTMLButtonElement | null>(null);\n\n\tuseEffect(() => {\n\t\t// If hook runs we know client-side JS is enabled\n\t\tsetNoJS(false);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst dismissOnEsc = (event: KeyboardEvent) => {\n\t\t\tif (isExpanded && event.code === 'Escape') {\n\t\t\t\tsetIsExpanded(false);\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener('keydown', dismissOnEsc, false);\n\n\t\t// Remove listener on unmount\n\t\treturn () => document.removeEventListener('keydown', dismissOnEsc);\n\t}, [isExpanded]);\n\n\tuseEffect(() => {\n\t\tif (!isExpanded || !buttonRef) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dismissOnClickAway = (event: MouseEvent) => {\n\t\t\t// If the source of the click is the button, do nothing as the\n\t\t\t// button's click handler will have already toggled the isExpanded\n\t\t\t// state\n\t\t\tif (buttonRef === event.target) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\tsetIsExpanded(false);\n\t\t};\n\n\t\tdocument.addEventListener('click', dismissOnClickAway, false);\n\n\t\t// Remove listener on unmount\n\t\treturn () => document.removeEventListener('click', dismissOnClickAway);\n\t}, [isExpanded, buttonRef]);\n\n\tconst handleToggle = () => {\n\t\tsetIsExpanded(!isExpanded);\n\t};\n\n\t// needs to be unique to allow multiple dropdowns on same page\n\tconst dropdownID = `dropbox-id-${id}`;\n\tconst checkboxID = `checkbox-id-${id}`;\n\n\tconst notificationCount = linkNotificationCount(links);\n\n\treturn (\n\t\t<>\n\t\t\t{noJS ? (\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${`#${checkboxID}`} {\n\t\t\t\t\t\t\t/* Never show the input */\n\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t${`#${dropdownID}`} {\n\t\t\t\t\t\t\t/* Hide caption by default */\n\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* stylelint-disable-next-line selector-type-no-unknown */\n\t\t\t\t\t\t${`#${checkboxID}`}:checked + ${`#${dropdownID}`} {\n\t\t\t\t\t\t\t/* Show the caption if the input is checked */\n\t\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor={checkboxID}\n\t\t\t\t\t\tcss={[buttonStyles, cssOverrides]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid={checkboxID}\n\t\t\t\t\t\taria-checked=\"false\"\n\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t/>\n\t\t\t\t\t<ul id={dropdownID} css={[ulStyles, cssOverrides]}>\n\t\t\t\t\t\t{links.map((l, index) => (\n\t\t\t\t\t\t\t<li key={l.title}>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref={l.url}\n\t\t\t\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\t\t\t\tlinkStyles,\n\t\t\t\t\t\t\t\t\t\t!!l.isActive && linkActive,\n\t\t\t\t\t\t\t\t\t\tindex === 0 && linkFirst,\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tdata-link-name={l.dataLinkName}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{l.title}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={handleToggle}\n\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\tbuttonStyles,\n\t\t\t\t\t\t\tcssOverrides,\n\t\t\t\t\t\t\tisExpanded && buttonExpanded,\n\t\t\t\t\t\t]}\n\t\t\t\t\t\taria-expanded={isExpanded ? 'true' : 'false'}\n\t\t\t\t\t\tdata-link-name={dataLinkName}\n\t\t\t\t\t\tdata-testid=\"dropdown-button\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tref={setButtonRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t\t{notificationCount > 0 && (\n\t\t\t\t\t\t\t<div css={dropdownButtonNotificationBadgeStyles}>\n\t\t\t\t\t\t\t\t<NotificationBadge diameter={18} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div css={isExpanded ? displayBlock : displayNone}>\n\t\t\t\t\t\t{/* eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- Children types are awkward but this should work */}\n\t\t\t\t\t\t{children ? (\n\t\t\t\t\t\t\t<>{children}</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\t\tcss={[ulStyles, cssOverrides]}\n\t\t\t\t\t\t\t\tdata-testid=\"dropdown-options\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{links.map((link, index) => (\n\t\t\t\t\t\t\t\t\t<DropdownLink\n\t\t\t\t\t\t\t\t\t\tkey={link.id}\n\t\t\t\t\t\t\t\t\t\tlink={link}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import type { DropdownLinkType } from '../components/Dropdown.importable';\n\nexport const linkNotificationCount = (links: DropdownLinkType[]): number => {\n\treturn links.reduce((runningCount, link) => {\n\t\tconst thisLinkNotificationCount = link.notifications?.length ?? 0;\n\t\treturn runningCount + thisLinkNotificationCount;\n\t}, 0);\n};\n","/**\n * How do I get a z-index for my new item?\n *\n * Decide a meaningful name for your item and then insert it\n * in the indices array below. The higher up your item visually,\n * then the higher it will be in the z-index stack,\n * 'higher' means _earlier_ in the array.\n *\n * Eg. stickyAdWrapper will be given a higher z-index than bodyArea\n *\n * Once inserted in the array, use getZIndex() to return the css\n *\n * Eg.\n *\n * import { getZIndex } from './getZIndex';\n *\n * const myCss = css`\n *    color: blue;\n *    z-index: ${getZIndex('TheGuardian')};\n * `;\n *\n * As new items are added, all z-indexes are adjusted\n */\nconst indices = [\n\t// Modals will go here at the top\n\t'lightbox',\n\t'youTubeFullscreen',\n\n\t// Sticky video and button need to be above everything\n\t'sticky-video-button',\n\t'sticky-video',\n\t'banner',\n\t'dropdown',\n\t'burger',\n\t'mastheadVeggieBurgerExpandedMobile',\n\t'expanded-veggie-menu-wrapper',\n\t'expanded-veggie-menu',\n\n\t//header wrapper needs to be in line with veggie menus to ensure it stands above various banners\n\t'fullPageInteractiveHeaderWrapper',\n\n\t// Mobile sticky appears below banners\n\t'mobileSticky',\n\n\t// Headers with sticky ads\n\t'stickyAdWrapperLabsHeader',\n\t'stickyAdWrapper',\n\t'stickyAdWrapperNav',\n\n\t// My Account dropdown in masthead - needs to be below stickyAdWrapper\n\t'mastheadMyAccountDropdown',\n\n\t// Edition selector in masthead - needs to be below stickyAdWrapper\n\t'mastheadEditionDropdown',\n\n\t// Edition selector in nav - needs to be below stickyAdWrapper\n\t'editionDropdown',\n\n\t// The content displayed by the Details component\n\t'summaryDetails',\n\n\t// Liveblog toast\n\t'toast',\n\n\t// Onwards Carousel (Related content etc)\n\t'onwardsCarousel',\n\n\t// Search link should be above The Guardian svg\n\t'myAccountDropdown',\n\t'searchHeaderLink',\n\t'TheGuardian',\n\n\t// The edition switcher banner needs to be below the Edition selector\n\t// and the myAccount dropdown in the nav\n\t'editionSwitcherBanner',\n\n\t// Overlay for expandable marketing card (currently US only)\n\t'expandableMarketingCardOverlay',\n\n\t// Sticky table of contents element\n\t'tableOfContents',\n\n\t// Article headline (should be above main media)\n\t'articleHeadline',\n\t'immersiveBlackBox',\n\n\t// Body\n\t'bodyArea',\n\t'rightColumnArea',\n\n\t// Main media\n\t'mainMedia',\n\n\t// Nested links in cards should sit above the main card link\n\t// See: https://www.sarasoueidan.com/blog/nested-links/\n\t'card-nested-link',\n\t'card-link',\n] as const;\n\n// Implementation code - you don't need to change this to get a new index\nexport type ZIndex = (typeof indices)[number];\n\nexport const getZIndex = (name: ZIndex): number => {\n\tconst index = indices.indexOf(name);\n\tif (index === -1) return -1; // indexOf returns -1 if there is no match\n\treturn indices.length - index; // reverse the indices: last item gets 1\n};\n","import libDebounce from 'lodash.debounce';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\n/**\n * This file was copied into the source development kitchen from the following repository:\n * https://github.com/guardian/csnx/blob/main/libs/%40guardian/source-development-kitchen/src/react-components/ticker/useIsInView.ts\n *\n * Note: This version of the file uses `lodash.debounce`, whereas the original version does not.\n * As a result, we now have two versions of the `useIsInView` hook—one with `lodash.debounce` and one without.\n *\n * A discussion is needed to determine the best approach for consolidating these two versions into a single file.\n * Consider whether the use of `lodash.debounce` is necessary, and if so, integrate it into the consolidated version.\n */\n\ntype Options = {\n\t/**\n\t * Defaults to `undefined` (falsy),\n\t * which trigger a change the instantaneously.\n\t *\n\t * If `true`, debounce triggers by 200ms.\n\t * Enabling debouncing ensures the target element intersects\n\t * for at least 200ms before the callback is executed\n\t */\n\tdebounce?: true;\n\t/**\n\t * Defaults to `undefined` (falsy),\n\t * which only trigger on the first intersection.\n\t *\n\t * If `true`, trigger the hook on all intersections.\n\t */\n\trepeat?: true;\n\t/** Set the initial HTML Element, if known. */\n\tnode?: HTMLElement;\n};\n\n/**\n * Custom hook around the `IntersectionObserver`.\n *\n * @returns a tuple containing `[isInView, setNode]`\n */\nconst useIsInView = (\n\toptions: IntersectionObserverInit & Options,\n): [boolean, React.Dispatch<React.SetStateAction<HTMLElement | null>>] => {\n\tconst [isInView, setIsInView] = useState<boolean>(false);\n\tconst [node, setNode] = useState<HTMLElement | null>(options.node ?? null);\n\n\tconst observer = useRef<IntersectionObserver | null>(null);\n\n\tconst intersectionObserverCallback =\n\t\tuseCallback<IntersectionObserverCallback>(\n\t\t\t([entry]) => {\n\t\t\t\tif (!entry) return;\n\n\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\tsetIsInView(true);\n\t\t\t\t} else if (options.repeat) {\n\t\t\t\t\tsetIsInView(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[options.repeat],\n\t\t);\n\n\tconst intersectionCallback = options.debounce\n\t\t? libDebounce(intersectionObserverCallback, 200)\n\t\t: intersectionObserverCallback;\n\n\tuseEffect(() => {\n\t\toptions.node && setNode(options.node);\n\t}, [options.node]);\n\n\tuseEffect(() => {\n\t\tif (!node) return;\n\t\t// Check for browser support https://caniuse.com/intersectionobserver\n\t\tif (!('IntersectionObserver' in window)) return;\n\n\t\tobserver.current = new window.IntersectionObserver(\n\t\t\tintersectionCallback,\n\t\t\toptions,\n\t\t);\n\n\t\tobserver.current.observe(node);\n\n\t\treturn () => observer.current?.disconnect();\n\t}, [node, options, intersectionCallback]);\n\n\tuseEffect(() => {\n\t\tif (!options.repeat && isInView) observer.current?.disconnect();\n\t}, [isInView, options.repeat]);\n\n\treturn [isInView, setNode];\n};\n\nexport { useIsInView };\n","import { isUndefined } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport type { NonEmptyArray } from './tuple';\n\n/**\n * Ensures that the given task is only run once and only after all items in waitFor are defined\n * @param {Function} task - The task to execute once\n * @param {Array} waitFor - An array of variables that must be defined before the task is executed\n * */\nexport const useOnce = (\n\ttask: () => void,\n\twaitFor: NonEmptyArray<unknown>,\n): void => {\n\tconst [alreadyRun, setAlreadyRun] = useState(false);\n\tconst isReady = waitFor.every((dep) => !isUndefined(dep));\n\tuseEffect(() => {\n\t\tif (!alreadyRun && isReady) {\n\t\t\ttask();\n\t\t\tsetAlreadyRun(true);\n\t\t}\n\t}, [alreadyRun, isReady, task]);\n};\n"],"names":["ulStyles","css","getZIndex","until","tablet","from","liStyles","displayBlock","displayNone","linkStyles","textSans15","sourcePalette","neutral","linkActive","news","linkFirst","buttonStyles","textSans17","brandAlt","buttonExpanded","notificationColor","palette","error","notificationBadgeStyles","textSans14","dropdownButtonNotificationBadgeStyles","notificationTextStyles","textSans12","NotificationBadge","diameter","div","style","width","height","borderRadius","span","NotificationMessage","notification","message","DropdownLink","link","index","ophanComponent","useMemo","notifications","length","componentType","id","labels","map","ophanLabel","buildOphanComponentWithNotifications","renderingTarget","useConfig","hasBeenSeen","setNode","useIsInView","debounce","hasSentViewEvent","setHasSentViewEvent","useState","useEffect","logImpression","submitComponentEvent","component","action","useOnce","url","acquisitionData","encodeURIComponent","JSON","stringify","source","componentId","campaignCode","referrerPageviewId","window","guardian","config","ophan","pageViewId","referrerUrl","location","origin","pathname","prefix","includes","addTrackingToUrl","hasNotifications","isUndefined","li","ref","a","href","isActive","data-link-name","dataLinkName","onClick","title","Dropdown","label","links","cssOverrides","children","isExpanded","setIsExpanded","noJS","setNoJS","buttonRef","setButtonRef","dismissOnEsc","event","code","document","addEventListener","removeEventListener","dismissOnClickAway","target","stopPropagation","dropdownID","checkboxID","notificationCount","reduce","runningCount","linkNotificationCount","visuallyHidden","htmlFor","input","type","aria-checked","tabIndex","ul","l","button","aria-expanded","data-testid","indices","name","indexOf","options","isInView","setIsInView","node","observer","useRef","intersectionObserverCallback","useCallback","entry","isIntersecting","repeat","intersectionCallback","libDebounce","current","IntersectionObserver","observe","disconnect","task","waitFor","alreadyRun","setAlreadyRun","isReady","every","dep"],"sourceRoot":""}