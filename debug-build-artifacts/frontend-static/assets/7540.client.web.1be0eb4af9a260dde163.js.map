{"version":3,"file":"7540.client.web.1be0eb4af9a260dde163.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/Picture.tsx","webpack://@guardian/dotcom-rendering/./src/lib/articleFormat.ts","webpack://@guardian/dotcom-rendering/./src/lib/image.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport { breakpoints } from '@guardian/source/foundations';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport {\n\tArticleDesign,\n\tArticleDisplay,\n\ttype ArticleFormat,\n} from '../lib/articleFormat';\nimport { generateImageURL } from '../lib/image';\nimport type { RoleType } from '../types/content';\nimport type { Loading } from './CardPicture';\n\n/**\n * Working on this file? Checkout out 027-pictures.md & 029-signing-image-urls.md for background information & context\n **/\n\nexport type Orientation = 'portrait' | 'landscape';\n\ntype PictureRoleType =\n\t| RoleType\n\t// Custom image role types that are used but do not come from CAPI / FE\n\t| 'podcastCover';\n\ntype Props = {\n\trole: PictureRoleType;\n\tformat: ArticleFormat;\n\tmaster: string;\n\talt: string;\n\theight: number;\n\twidth: number;\n\tloading: Loading;\n\tisMainMedia?: boolean;\n\tisLightbox?: boolean;\n\torientation?: Orientation;\n\tonLoad?: () => void;\n\taspectRatio?: string;\n};\n\nexport type ImageWidthType = { breakpoint: number; width: number };\n\n/**\n * All business logic for image sizing is contained in this one function. This\n * is the source of truth.\n *\n * Based on image role, if it's main media or not, if we're in a lightbox or not\n * and the format of the article it is in, this function decides the width the\n * image should have at different breakpoints.\n *\n * Previously, this logic was set [in this Frontend file](https://github.com/guardian/frontend/blob/oliver/immersives-for-all/common/app/layout/ContentWidths.scala)\n *\n * Order is not important because the resulting array is sorted by breakpoint\n * prior to use.\n *\n */\nconst decideImageWidths = ({\n\trole,\n\tisMainMedia,\n\tformat,\n\tisLightbox,\n\torientation,\n}: {\n\trole: PictureRoleType;\n\tisMainMedia?: boolean;\n\tformat: ArticleFormat;\n\tisLightbox: boolean;\n\torientation: Orientation;\n}): [ImageWidthType, ...ImageWidthType[]] => {\n\tif (isLightbox) {\n\t\tswitch (orientation) {\n\t\t\tcase 'portrait':\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 480 },\n\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 480 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 480 },\n\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 660 },\n\t\t\t\t\t{ breakpoint: breakpoints.desktop, width: 740 },\n\t\t\t\t\t{ breakpoint: breakpoints.leftCol, width: 980 },\n\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 1140 },\n\t\t\t\t];\n\n\t\t\tcase 'landscape':\n\t\t\tdefault:\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 480 },\n\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 660 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 740 },\n\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 980 },\n\t\t\t\t\t{ breakpoint: breakpoints.desktop, width: 1140 },\n\t\t\t\t\t{ breakpoint: breakpoints.leftCol, width: 1300 },\n\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 1900 },\n\t\t\t\t];\n\t\t}\n\t}\n\tif (format.design === ArticleDesign.Picture) {\n\t\t// the order is important here. Picture content type images come through as main media, so needs to appear\n\t\t// above `isMainMedia`, so the images do not appear low quality.\n\t\treturn [\n\t\t\t{ breakpoint: breakpoints.mobile, width: 480 },\n\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 660 },\n\t\t\t{ breakpoint: breakpoints.phablet, width: 740 },\n\t\t\t{ breakpoint: breakpoints.tablet, width: 980 },\n\t\t\t{ breakpoint: breakpoints.desktop, width: 1140 },\n\t\t\t{ breakpoint: breakpoints.leftCol, width: 1300 },\n\t\t\t{ breakpoint: breakpoints.wide, width: 1900 },\n\t\t];\n\t}\n\tif (isMainMedia) {\n\t\tswitch (format.display) {\n\t\t\tcase ArticleDisplay.Immersive: {\n\t\t\t\t// If display is Immersive then main media should *always*\n\t\t\t\t// use these larger image sources\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 480 },\n\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 660 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 740 },\n\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 980 },\n\t\t\t\t\t{ breakpoint: breakpoints.desktop, width: 1140 },\n\t\t\t\t\t{ breakpoint: breakpoints.leftCol, width: 1300 },\n\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 1900 },\n\t\t\t\t];\n\t\t\t}\n\t\t\tcase ArticleDisplay.Showcase:\n\t\t\tcase ArticleDisplay.NumberedList: {\n\t\t\t\tif (format.design === ArticleDesign.Feature) {\n\t\t\t\t\t// The main image on feature articles gets larger sources when showcase\n\t\t\t\t\t// e.g.: http://www.theguardian.com/politics/2015/may/02/nicola-sturgeon-im-the-boss-now\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 465 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 645 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 725 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 965 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.desktop, width: 1125 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.leftCol, width: 1140 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 1300 },\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 465 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 645 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 660 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 700 }, // desktop is also 700px\n\t\t\t\t\t\t{ breakpoint: breakpoints.leftCol, width: 940 },\n\t\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 1020 },\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 465 },\n\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 645 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 620 },\n\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 700 },\n\t\t\t\t\t{ breakpoint: breakpoints.desktop, width: 620 },\n\t\t\t\t];\n\t\t}\n\t} else if (\n\t\tformat.design === ArticleDesign.LiveBlog ||\n\t\tformat.design === ArticleDesign.DeadBlog\n\t) {\n\t\tswitch (role) {\n\t\t\tcase 'thumbnail':\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 120 }, // mobileLandscape and tablet are also 120px\n\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 140 }, // desktop, leftCol and wide are also 140px\n\t\t\t\t];\n\t\t\tcase 'showcase':\n\t\t\tcase 'immersive':\n\t\t\tcase 'supporting':\n\t\t\tcase 'halfWidth':\n\t\t\t\treturn [{ breakpoint: breakpoints.mobile, width: 445 }];\n\t\t\tcase 'podcastCover':\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 140 },\n\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 219 },\n\t\t\t\t];\n\t\t\tcase 'inline':\n\t\t\tdefault:\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 465 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 700 },\n\t\t\t\t];\n\t\t}\n\t} else {\n\t\tswitch (role) {\n\t\t\tcase 'showcase':\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 445 },\n\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 605 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 620 }, // tablet is also 620px\n\t\t\t\t\t{ breakpoint: breakpoints.desktop, width: 640 },\n\t\t\t\t\t{ breakpoint: breakpoints.leftCol, width: 800 },\n\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 880 },\n\t\t\t\t];\n\t\t\tcase 'supporting':\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 445 },\n\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 605 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 620 }, // tablet is also 620px\n\t\t\t\t\t{ breakpoint: breakpoints.desktop, width: 300 }, // leftCol is also 300px\n\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 380 },\n\t\t\t\t];\n\t\t\tcase 'thumbnail':\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 120 }, // mobileLandscape and tablet are also 120px\n\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 140 }, // desktop, leftCol and wide are also 140px\n\t\t\t\t];\n\t\t\tcase 'immersive':\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 465 },\n\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 645 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 725 },\n\t\t\t\t\t{ breakpoint: breakpoints.tablet, width: 965 },\n\t\t\t\t\t{ breakpoint: breakpoints.desktop, width: 1125 },\n\t\t\t\t\t{ breakpoint: breakpoints.leftCol, width: 1140 },\n\t\t\t\t\t{ breakpoint: breakpoints.wide, width: 1300 },\n\t\t\t\t];\n\t\t\tcase 'halfWidth':\n\t\t\t\treturn [{ breakpoint: breakpoints.mobile, width: 445 }];\n\t\t\tcase 'inline':\n\t\t\tdefault:\n\t\t\t\treturn [\n\t\t\t\t\t{ breakpoint: breakpoints.mobile, width: 445 },\n\t\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 605 },\n\t\t\t\t\t{ breakpoint: breakpoints.phablet, width: 620 },\n\t\t\t\t];\n\t\t}\n\t}\n};\n\nconst descendingByBreakpoint = (a: ImageWidthType, b: ImageWidthType) => {\n\t// We need to list the largest images first as browsers read top down and stop\n\t// as soon as they hit a matching media query\n\treturn b.breakpoint - a.breakpoint;\n};\n\n/**\n * Used on `picture` and `img` to prevent them having a line-height,\n * as these are `inline` by default and only inline elements can have\n * line-height.\n *\n * We use flex for lightbox images because this ensures space is\n * reserved for the image as it loads\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#styling_with_css\n */\nconst block = css`\n\tdisplay: block;\n`;\nconst flex = css`\n\tdisplay: flex;\n`;\n\ntype ImageSource = {\n\tbreakpoint: number;\n\twidth: number;\n\thiResUrl: string;\n\tlowResUrl: string;\n};\n\n/**\n * Generate image sources for an image.\n *\n * @param mainImage source image URL\n * @param imageWidths list of image widths\n * @param aspectRatio - Aspect ratio that the image should be cropped to (e.g., 5:4). Optional.\n */\nexport const generateSources = (\n\tmainImage: string,\n\timageWidths: readonly [ImageWidthType, ...ImageWidthType[]],\n\taspectRatio?: string,\n): ImageSource[] =>\n\timageWidths\n\t\t.slice()\n\t\t.sort(descendingByBreakpoint)\n\t\t.map(({ width: imageWidth, breakpoint }) => {\n\t\t\treturn {\n\t\t\t\tbreakpoint,\n\t\t\t\twidth: imageWidth,\n\t\t\t\thiResUrl: generateImageURL({\n\t\t\t\t\tmainImage,\n\t\t\t\t\timageWidth,\n\t\t\t\t\tresolution: 'high',\n\t\t\t\t\taspectRatio,\n\t\t\t\t}),\n\t\t\t\tlowResUrl: generateImageURL({\n\t\t\t\t\tmainImage,\n\t\t\t\t\timageWidth,\n\t\t\t\t\tresolution: 'low',\n\t\t\t\t\taspectRatio,\n\t\t\t\t}),\n\t\t\t};\n\t\t});\n\n/**\n * The assumption here is readers on devices that do not support srcset\n * are likely to be on poor network connections so we're going\n * to fallback to the smallest image.\n *\n * Sources are ordered in `descendingByBreakpoint` order,\n * so the last one is the smallest.\n */\nexport const getFallbackSource = (sources: ImageSource[]): ImageSource => {\n\tconst [fallback] = sources.slice(-1);\n\tif (!fallback) throw new Error('No fallback images found');\n\treturn fallback;\n};\n\nexport const Sources = ({ sources }: { sources: ImageSource[] }) => {\n\treturn (\n\t\t<>\n\t\t\t{sources.map((source) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment key={source.breakpoint}>\n\t\t\t\t\t\t{/* High resolution (HDPI) sources*/}\n\t\t\t\t\t\t<source\n\t\t\t\t\t\t\tsrcSet={source.hiResUrl}\n\t\t\t\t\t\t\tmedia={`(min-width: ${source.breakpoint}px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: ${source.breakpoint}px) and (min-resolution: 120dpi)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* Low resolution (MDPI) source*/}\n\t\t\t\t\t\t<source\n\t\t\t\t\t\t\tsrcSet={source.lowResUrl}\n\t\t\t\t\t\t\tmedia={`(min-width: ${source.breakpoint}px)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n};\n\nexport const Picture = ({\n\trole,\n\tformat,\n\tmaster,\n\talt,\n\theight,\n\twidth,\n\tisMainMedia = false,\n\tloading,\n\tisLightbox = false,\n\torientation = 'landscape',\n\tonLoad,\n\taspectRatio,\n}: Props) => {\n\tconst [loaded, setLoaded] = useState(false);\n\tconst ref = useCallback((node: HTMLImageElement | null) => {\n\t\tif (!node) return;\n\t\tif (node.complete) {\n\t\t\tsetLoaded(true);\n\t\t} else {\n\t\t\tnode.addEventListener('load', () => setLoaded(true));\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (loaded && onLoad) onLoad();\n\t}, [loaded, onLoad]);\n\n\tconst sources = generateSources(\n\t\tmaster,\n\t\tdecideImageWidths({\n\t\t\trole,\n\t\t\tformat,\n\t\t\tisMainMedia,\n\t\t\tisLightbox,\n\t\t\torientation,\n\t\t}),\n\t\taspectRatio,\n\t);\n\n\t/** portrait if higher than 1 or landscape if lower than 1 */\n\tconst ratio = height / width;\n\n\t/**\n\t * Immersive MainMedia elements fill the height of the viewport, meaning on mobile\n\t * devices even though the viewport width is small, we'll need a larger image to\n\t * maintain quality. To solve this problem we're using the viewport height (vh) to\n\t * calculate width on portrait devices.\n\n\t * If either of these media queries match then the browser will choose an image from the\n\t * list of sources in srcset based on the viewport list. If the media query doesn't match\n\t * it continues checking using the standard sources underneath\n\t */\n\tconst sizes =\n\t\tratio >= 1\n\t\t\t? // portrait or square\n\t\t\t  '100vw'\n\t\t\t: // landscape\n\t\t\t  `${Math.round(100 / ratio)}vh`;\n\n\tconst fallbackSource = getFallbackSource(sources);\n\n\treturn (\n\t\t<picture css={isLightbox ? flex : block}>\n\t\t\t{/* Immersive Main Media images get additional sources specifically for when in portrait orientation */}\n\t\t\t{format.display === ArticleDisplay.Immersive && isMainMedia && (\n\t\t\t\t<>\n\t\t\t\t\t{/* High resolution (HDPI) portrait sources*/}\n\t\t\t\t\t<source\n\t\t\t\t\t\tmedia=\"(orientation: portrait) and (-webkit-min-device-pixel-ratio: 1.25), (orientation: portrait) and (min-resolution: 120dpi)\"\n\t\t\t\t\t\tsizes={sizes}\n\t\t\t\t\t\tsrcSet={sources\n\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t(source) =>\n\t\t\t\t\t\t\t\t\t`${source.hiResUrl} ${source.width}w`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.join(',')}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* Low resolution (MDPI) portrait sources*/}\n\t\t\t\t\t<source\n\t\t\t\t\t\tmedia=\"(orientation: portrait)\"\n\t\t\t\t\t\tsizes={sizes}\n\t\t\t\t\t\tsrcSet={sources\n\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t(source) =>\n\t\t\t\t\t\t\t\t\t`${source.lowResUrl} ${source.width}w`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.join(',')}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<Sources sources={sources} />\n\t\t\t<img\n\t\t\t\tref={ref}\n\t\t\t\talt={alt}\n\t\t\t\tsrc={fallbackSource.lowResUrl}\n\t\t\t\twidth={fallbackSource.width}\n\t\t\t\theight={fallbackSource.width * ratio}\n\t\t\t\tloading={Picture.disableLazyLoading ? undefined : loading}\n\t\t\t\tcss={isLightbox ? flex : block}\n\t\t\t/>\n\t\t</picture>\n\t);\n};\n\n// We use disableLazyLoading to decide if we want to turn off lazy loading of images site wide. We use this\n// to prevent false negatives on Chromatic snapshots (see /.storybook/config)\nPicture.disableLazyLoading = false;\n","import { isString } from '@guardian/libs';\nimport type { FEDesign, FEDisplay, FEFormat, FETheme } from '../types/frontend';\n\nexport enum ArticleDesign {\n\tStandard,\n\tPicture,\n\tGallery,\n\tAudio,\n\tVideo,\n\tReview,\n\tAnalysis,\n\tExplainer,\n\tComment,\n\tLetter,\n\tFeature,\n\tLiveBlog,\n\tDeadBlog,\n\tRecipe,\n\tMatchReport,\n\tInterview,\n\tEditorial,\n\tQuiz,\n\tInteractive,\n\tPhotoEssay,\n\tObituary,\n\tCorrection,\n\tFullPageInteractive,\n\tNewsletterSignup,\n\tTimeline,\n\tProfile,\n}\n\nexport enum ArticleDisplay {\n\tStandard,\n\tImmersive,\n\tShowcase,\n\tNumberedList,\n}\n\nexport enum Pillar {\n\tNews = 0,\n\tOpinion = 1,\n\tSport = 2,\n\tCulture = 3,\n\tLifestyle = 4,\n}\n\nexport enum ArticleSpecial {\n\tSpecialReport = 5,\n\tLabs = 6,\n\tSpecialReportAlt = 7,\n}\n\nexport type ArticleTheme = Pillar | ArticleSpecial;\n\nexport interface ArticleFormat {\n\ttheme: ArticleTheme;\n\tdesign: ArticleDesign;\n\tdisplay: ArticleDisplay;\n}\n\n/**\n * NOTE: Immersive Opinion pieces are not supported,\n * i.e. when `CommentDesign` and `ImmersiveDisplay` are used jointly.\n */\nexport const decideDesign = ({ design }: Partial<FEFormat>): ArticleDesign => {\n\tswitch (design) {\n\t\tcase 'ArticleDesign':\n\t\t\treturn ArticleDesign.Standard;\n\t\tcase 'PictureDesign':\n\t\t\treturn ArticleDesign.Picture;\n\t\tcase 'GalleryDesign':\n\t\t\treturn ArticleDesign.Gallery;\n\t\tcase 'AudioDesign':\n\t\t\treturn ArticleDesign.Audio;\n\t\tcase 'VideoDesign':\n\t\t\treturn ArticleDesign.Video;\n\t\tcase 'ReviewDesign':\n\t\t\treturn ArticleDesign.Review;\n\t\tcase 'AnalysisDesign':\n\t\t\treturn ArticleDesign.Analysis;\n\t\tcase 'CommentDesign':\n\t\t\treturn ArticleDesign.Comment;\n\t\tcase 'LetterDesign':\n\t\t\treturn ArticleDesign.Letter;\n\t\tcase 'FeatureDesign':\n\t\t\treturn ArticleDesign.Feature;\n\t\tcase 'LiveBlogDesign':\n\t\t\treturn ArticleDesign.LiveBlog;\n\t\tcase 'DeadBlogDesign':\n\t\t\treturn ArticleDesign.DeadBlog;\n\t\tcase 'RecipeDesign':\n\t\t\treturn ArticleDesign.Recipe;\n\t\tcase 'MatchReportDesign':\n\t\t\treturn ArticleDesign.MatchReport;\n\t\tcase 'InterviewDesign':\n\t\t\treturn ArticleDesign.Interview;\n\t\tcase 'EditorialDesign':\n\t\t\treturn ArticleDesign.Editorial;\n\t\tcase 'QuizDesign':\n\t\t\treturn ArticleDesign.Quiz;\n\t\tcase 'InteractiveDesign':\n\t\t\treturn ArticleDesign.Interactive;\n\t\tcase 'PhotoEssayDesign':\n\t\t\treturn ArticleDesign.PhotoEssay;\n\t\tcase 'ObituaryDesign':\n\t\t\treturn ArticleDesign.Obituary;\n\t\tcase 'FullPageInteractiveDesign':\n\t\t\treturn ArticleDesign.FullPageInteractive;\n\t\tcase 'NewsletterSignupDesign':\n\t\t\treturn ArticleDesign.NewsletterSignup;\n\t\tcase 'ExplainerDesign':\n\t\t\treturn ArticleDesign.Explainer;\n\t\tcase 'TimelineDesign':\n\t\t\treturn ArticleDesign.Timeline;\n\t\tcase 'ProfileDesign':\n\t\t\treturn ArticleDesign.Profile;\n\t\tdefault:\n\t\t\treturn ArticleDesign.Standard;\n\t}\n};\n\nconst decideDisplay = ({\n\tdisplay,\n\tdesign,\n}: Partial<FEFormat>): ArticleDisplay => {\n\tswitch (display) {\n\t\tcase 'StandardDisplay':\n\t\t\treturn ArticleDisplay.Standard;\n\t\tcase 'ImmersiveDisplay':\n\t\t\t// Temporary hack until we can handle Immersive Comment pieces\n\t\t\treturn design === 'CommentDesign'\n\t\t\t\t? ArticleDisplay.Standard\n\t\t\t\t: ArticleDisplay.Immersive;\n\t\tcase 'ShowcaseDisplay':\n\t\t\treturn ArticleDisplay.Showcase;\n\t\tcase 'NumberedListDisplay':\n\t\t\treturn ArticleDisplay.NumberedList;\n\t\tdefault:\n\t\t\treturn ArticleDisplay.Standard;\n\t}\n};\n\nexport const decideTheme = ({ theme }: Partial<FEFormat>): ArticleTheme => {\n\tswitch (theme) {\n\t\tcase 'NewsPillar':\n\t\t\treturn Pillar.News;\n\t\tcase 'OpinionPillar':\n\t\t\treturn Pillar.Opinion;\n\t\tcase 'SportPillar':\n\t\t\treturn Pillar.Sport;\n\t\tcase 'CulturePillar':\n\t\t\treturn Pillar.Culture;\n\t\tcase 'LifestylePillar':\n\t\t\treturn Pillar.Lifestyle;\n\t\tcase 'SpecialReportTheme':\n\t\t\treturn ArticleSpecial.SpecialReport;\n\t\tcase 'SpecialReportAltTheme':\n\t\t\treturn ArticleSpecial.SpecialReportAlt;\n\t\tcase 'Labs':\n\t\t\treturn ArticleSpecial.Labs;\n\t\tdefault:\n\t\t\treturn Pillar.News;\n\t}\n};\n\nexport const decideFormat = (format: Partial<FEFormat>): ArticleFormat => ({\n\tdesign: decideDesign(format),\n\tdisplay: decideDisplay(format),\n\ttheme: decideTheme(format),\n});\n\nexport const getThemeNameAsString = (format: ArticleFormat): string => {\n\tconst themeName = Pillar[format.theme] ?? ArticleSpecial[format.theme];\n\tif (!themeName) throw new Error('Unknown theme');\n\treturn themeName;\n};\n\n/**\n * We need a type guard because TypeScript enums are (confusingly)\n * returning both strings and numbers.\n */\nconst isTheme = (theme: string | ArticleTheme): theme is ArticleTheme =>\n\t!isString(theme);\n\nconst isDesign = (design: string | ArticleDesign): design is ArticleDesign =>\n\t!isString(design);\n\nexport const getAllThemes = ({\n\tdisplay,\n\tdesign,\n}: {\n\tdisplay: ArticleDisplay;\n\tdesign: ArticleDesign;\n}): Array<ArticleFormat> =>\n\tObject.values({ ...Pillar, ...ArticleSpecial })\n\t\t.filter(isTheme)\n\t\t.map((theme) => ({\n\t\t\ttheme,\n\t\t\tdisplay,\n\t\t\tdesign,\n\t\t}));\n\nexport const getAllDesigns = ({\n\tdisplay,\n\ttheme,\n}: {\n\tdisplay: ArticleDisplay;\n\ttheme: ArticleTheme;\n}): Array<ArticleFormat> =>\n\tObject.values({ ...ArticleDesign })\n\t\t.filter(isDesign)\n\t\t.map((design) => ({\n\t\t\ttheme,\n\t\t\tdisplay,\n\t\t\tdesign,\n\t\t}));\n\nconst designToFEDesign = (design: ArticleDesign): FEDesign => {\n\tswitch (design) {\n\t\tcase ArticleDesign.Standard:\n\t\t// Correction doesn't exist in `FEFormat`.\n\t\tcase ArticleDesign.Correction:\n\t\t\treturn 'ArticleDesign';\n\t\tcase ArticleDesign.Picture:\n\t\t\treturn 'PictureDesign';\n\t\tcase ArticleDesign.Gallery:\n\t\t\treturn 'GalleryDesign';\n\t\tcase ArticleDesign.Audio:\n\t\t\treturn 'AudioDesign';\n\t\tcase ArticleDesign.Video:\n\t\t\treturn 'VideoDesign';\n\t\tcase ArticleDesign.Review:\n\t\t\treturn 'ReviewDesign';\n\t\tcase ArticleDesign.Analysis:\n\t\t\treturn 'AnalysisDesign';\n\t\tcase ArticleDesign.Explainer:\n\t\t\treturn 'ExplainerDesign';\n\t\tcase ArticleDesign.Comment:\n\t\t\treturn 'CommentDesign';\n\t\tcase ArticleDesign.Letter:\n\t\t\treturn 'LetterDesign';\n\t\tcase ArticleDesign.Feature:\n\t\t\treturn 'FeatureDesign';\n\t\tcase ArticleDesign.LiveBlog:\n\t\t\treturn 'LiveBlogDesign';\n\t\tcase ArticleDesign.DeadBlog:\n\t\t\treturn 'DeadBlogDesign';\n\t\tcase ArticleDesign.Recipe:\n\t\t\treturn 'RecipeDesign';\n\t\tcase ArticleDesign.MatchReport:\n\t\t\treturn 'MatchReportDesign';\n\t\tcase ArticleDesign.Interview:\n\t\t\treturn 'InterviewDesign';\n\t\tcase ArticleDesign.Editorial:\n\t\t\treturn 'EditorialDesign';\n\t\tcase ArticleDesign.Quiz:\n\t\t\treturn 'QuizDesign';\n\t\tcase ArticleDesign.Interactive:\n\t\t\treturn 'InteractiveDesign';\n\t\tcase ArticleDesign.PhotoEssay:\n\t\t\treturn 'PhotoEssayDesign';\n\t\tcase ArticleDesign.Obituary:\n\t\t\treturn 'ObituaryDesign';\n\t\tcase ArticleDesign.FullPageInteractive:\n\t\t\treturn 'FullPageInteractiveDesign';\n\t\tcase ArticleDesign.NewsletterSignup:\n\t\t\treturn 'NewsletterSignupDesign';\n\t\tcase ArticleDesign.Timeline:\n\t\t\treturn 'TimelineDesign';\n\t\tcase ArticleDesign.Profile:\n\t\t\treturn 'ProfileDesign';\n\t}\n};\n\nconst displayToFEDisplay = (display: ArticleDisplay): FEDisplay => {\n\tswitch (display) {\n\t\tcase ArticleDisplay.Standard:\n\t\t\treturn 'StandardDisplay';\n\t\tcase ArticleDisplay.Immersive:\n\t\t\treturn 'ImmersiveDisplay';\n\t\tcase ArticleDisplay.Showcase:\n\t\t\treturn 'ShowcaseDisplay';\n\t\tcase ArticleDisplay.NumberedList:\n\t\t\treturn 'NumberedListDisplay';\n\t}\n};\n\nconst themeToFETheme = (theme: ArticleTheme): FETheme => {\n\tswitch (theme) {\n\t\tcase Pillar.News:\n\t\t\treturn 'NewsPillar';\n\t\tcase Pillar.Opinion:\n\t\t\treturn 'OpinionPillar';\n\t\tcase Pillar.Sport:\n\t\t\treturn 'SportPillar';\n\t\tcase Pillar.Culture:\n\t\t\treturn 'CulturePillar';\n\t\tcase Pillar.Lifestyle:\n\t\t\treturn 'LifestylePillar';\n\t\tcase ArticleSpecial.SpecialReport:\n\t\t\treturn 'SpecialReportTheme';\n\t\tcase ArticleSpecial.Labs:\n\t\t\treturn 'Labs';\n\t\tcase ArticleSpecial.SpecialReportAlt:\n\t\t\treturn 'SpecialReportAltTheme';\n\t}\n};\n\nexport const formatToFEFormat = ({\n\tdesign,\n\tdisplay,\n\ttheme,\n}: ArticleFormat): FEFormat => ({\n\tdesign: designToFEDesign(design),\n\tdisplay: displayToFEDisplay(display),\n\ttheme: themeToFETheme(theme),\n});\n\n/**\n * Creates a string representation of {@linkcode ArticleFormat}. Useful for\n * logging, storybook UI etc.\n *\n * @param format An {@linkcode ArticleFormat}\n * @returns A string representation of `ArticleFormat`\n */\nexport const formatToString = ({\n\tdesign,\n\tdisplay,\n\ttheme,\n}: ArticleFormat): string =>\n\t[\n\t\t`${ArticleDesign[design]} Design`,\n\t\t`${ArticleDisplay[display]} Display`,\n\t\t`and ${Pillar[theme] ?? ArticleSpecial[theme]} Theme`,\n\t].join(', ');\n","import { type Image } from '../types/content';\n\nconst descendingByWidthComparator = (a: Image, b: Image) => {\n\treturn parseInt(b.fields.width, 10) - parseInt(a.fields.width, 10);\n};\n\nexport const getMaster = (images: Image[]): Image | undefined => {\n\treturn images.find((image) => image.fields.isMaster);\n};\n\nexport const getLargest = (images: Image[]): Image | undefined => {\n\treturn images.slice().sort(descendingByWidthComparator)[0];\n};\n\nconst getServiceFromUrl = (url: URL): string => {\n\tconst serviceName = url.hostname.split('.')[0] ?? '';\n\tswitch (serviceName) {\n\t\tcase 'static':\n\t\tcase 'static-secure':\n\t\t\treturn 'static';\n\t\tcase 'uploads':\n\t\t\treturn 'uploads';\n\t\tcase 'media':\n\t\tdefault:\n\t\t\treturn 'media';\n\t}\n};\n\n/**\n * Generates a URL for calling the Fastly Image Optimiser.\n *\n * @see https://developer.fastly.com/reference/io/\n * @see https://github.com/guardian/fastly-image-service/blob/main/fastly-io_guim_co_uk/src/main/resources/varnish/main.vcl\n *\n */\nexport const generateImageURL = ({\n\tmainImage,\n\timageWidth,\n\tresolution,\n\taspectRatio = 'none',\n}: {\n\tmainImage: string;\n\timageWidth: number;\n\tresolution: 'low' | 'high';\n\taspectRatio?: string;\n}): string => {\n\tconst url = new URL(mainImage);\n\n\t// In CODE, we do not generate optimised replacement images\n\tif (url.hostname === 's3-eu-west-1.amazonaws.com') return url.href;\n\n\tconst params = new URLSearchParams({\n\t\twidth: imageWidth.toString(),\n\t\tdpr: String(resolution === 'high' ? 2 : 1),\n\t\ts: 'none',\n\t\tcrop: aspectRatio,\n\t});\n\n\treturn `https://i.guim.co.uk/img/${getServiceFromUrl(url)}${\n\t\turl.pathname\n\t}?${params.toString()}`;\n};\n"],"names":["descendingByBreakpoint","a","b","breakpoint","block","css","flex","generateSources","mainImage","imageWidths","aspectRatio","slice","sort","map","width","imageWidth","hiResUrl","generateImageURL","resolution","lowResUrl","getFallbackSource","sources","fallback","Error","Sources","source","Fragment","srcSet","media","Picture","role","format","master","alt","height","isMainMedia","loading","isLightbox","orientation","onLoad","loaded","setLoaded","useState","ref","useCallback","node","complete","addEventListener","useEffect","breakpoints","mobile","mobileLandscape","phablet","tablet","desktop","leftCol","wide","design","ArticleDesign","display","ArticleDisplay","Immersive","Showcase","NumberedList","Feature","LiveBlog","DeadBlog","decideImageWidths","ratio","sizes","Math","round","fallbackSource","picture","join","img","src","disableLazyLoading","undefined","Pillar","ArticleSpecial","decideDesign","decideDisplay","decideTheme","theme","decideFormat","url","URL","hostname","href","params","URLSearchParams","toString","dpr","String","s","crop","split","getServiceFromUrl","pathname"],"sourceRoot":""}