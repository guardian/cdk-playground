{"version":3,"file":"readerRevenueDevUtils.client.web.legacy.bd9539c3feefeed6bec2.js","mappings":"0WAGaA,EAAgC,4BAChCC,EAA+B,2BAG/BC,EAAsC,qCAGtCC,EAAmB,gBA4DnBC,EAA6B,SAACC,GACvC,IAbMC,EAKAC,EAQAC,EApDwB,SAACH,GAE/B,QADeI,EAAAA,EAAAA,GAAU,CAAEC,KAAMV,KAE7B,IAAK,OACD,OAAO,EACX,IAAK,QACD,OAAO,EACX,QAMI,QAAIK,GACO,UAMvB,CAgCsBM,CAAmBN,GACrC,MAAkB,YAAdG,EACO,UAGAA,IAbLD,EArBwC,WAE9C,IAAMK,GAA8BH,EAAAA,EAAAA,GAAU,CAC1CC,KAAMR,IAEV,GAAKU,EAOL,OAH8BA,EACxBC,SAASD,EAA6B,IACtC,SAC0BE,CACpC,CAQiCC,KACxBC,EAAAA,EAAAA,GAAYT,KANXD,EAOUW,KAAKC,MACGX,EAPjBY,KAAKC,MAAMd,EAFD,QAIA,IAiBrB,EACae,EAAsC,CAAC,EAAG,EAAG,GACpDC,EAAmC,CAAC,EAAG,EAAG,EAAG,GACtCC,EAA8B,WAAH,OAAkE,QAAzDd,EAAAA,EAAAA,GAAU,CAAEC,KA5Ed,4BA4EgE,EAElGc,EAAqC,WAC9C,OAAO,IAAIC,SAAQ,SAACC,IACZjB,EAAAA,EAAAA,GAAU,CAAEC,KAAM,kBAAmBiB,eAAe,KACpDD,GAAQ,IAEZE,EAAAA,EAAAA,KAAgB,SAAAC,GAA4B,IAAzBC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAAOC,EAAGH,EAAHG,IAC7B,GAAIF,QAAAA,EAASE,EACTN,GAAQ,QAEP,GAAIK,EAAO,CACZ,IAAME,EAAsBZ,EAAoCa,OAAM,SAACC,GAAO,OAAKJ,EAAMK,SAASD,EAAQ,IACrGF,GAZmCI,EAAAA,EAAQC,MAAMC,OAzErC,iCAwFjBb,EAAQO,EACZ,CACJ,GACJ,GACJ,EACaO,EAAyB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTxB,IAAqC,KAAD,EAA7C,OAAbqB,EAAaC,EAAAG,KAAAH,EAAAI,OAAA,UACXL,GAAiBtB,KAA6B,wBAAAuB,EAAAK,OAAA,GAAAP,EAAA,KACzD,kBAHqC,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAIzBC,EAA+B,eAAAC,GAAAb,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAa,IAAA,IAAAX,EAAA,OAAAF,IAAAA,MAAA,SAAAc,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EACfxB,IAAqC,KAAD,EAA7C,OAAbqB,EAAaY,EAAAR,KAAAQ,EAAAP,OAAA,UACXL,GAAiBtB,KAA6B,wBAAAkC,EAAAN,OAAA,GAAAK,EAAA,KACzD,kBAH2C,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAK/BK,EAA+B,WACxC,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,WAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAMlC,OALAI,EAAAA,EAAAA,YAAU,WACNzB,IACK0B,KAAKF,GACLG,OAAM,kBAAMH,GAAe,EAAK,GACzC,GAAG,IACID,CACX,EACaK,EAA4B,WAAH,OAAS,IAAI3C,SAAQ,SAACC,IACpDjB,EAAAA,EAAAA,GAAU,CAAEC,KAAM,kBAAmBiB,eAAe,KACpDD,GAAQ,IAEZE,EAAAA,EAAAA,KAAgB,SAAAyC,GAA4B,IAAzBvC,EAAKuC,EAALvC,MAAOC,EAAKsC,EAALtC,MAAOC,EAAGqC,EAAHrC,IAC7B,GAAIF,QAAAA,EAASE,EACTN,GAAQ,QAEP,GAAIK,EAAO,CACZ,IAAME,EAAsBX,EAAiCY,OAAM,SAACC,GAAO,OAAKJ,EAAMK,SAASD,EAAQ,IACvGT,EAAQO,EACZ,CACJ,GACJ,GAAG,EAEUqC,EAAiC,WAAH,QAAWjC,EAAAA,EAAQC,MAAMiC,IAAIpE,EAAkB,EAC7EqE,EAA8B,WAAH,IAAItD,EAAGmC,UAAAoB,OAAA,QAAA3D,IAAAuC,UAAA,GAAAA,UAAA,GAAGpC,KAAKC,MAAK,OAAKmB,EAAAA,EAAQC,MAAMoC,IAAIvE,GAAkB,EAAMe,EAFxF,KAE0G,EAGhHyD,EAAuB,SAACC,GAAoC,IAAtB1D,EAAGmC,UAAAoB,OAAA,QAAA3D,IAAAuC,UAAA,GAAAA,UAAA,GAAGpC,KAAKC,MAC1D,QAAI0D,GACO1D,EAAM,IAAID,KAAK2D,GAAcC,UAHrB,IAMvB,EAEaC,EAAkB,WAC3B,IAAMC,GAAkBtE,EAAAA,EAAAA,GAAU,CAC9BC,KAAM,iBACNiB,eAAe,IAEnB,GAAKoD,EAAL,CAGA,IAAIC,EACJ,IACIA,EAAeC,KAAKC,MAAMC,mBAAmBJ,GACjD,CACA,MAAAK,GAAQ,CACR,OAAOJ,CANP,CAOJ,C,+OC7JMK,EAAuB,CACzBrF,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAaEoF,EAAyB,YACzBC,EAAoB,IA4BpBC,EAAyC,SAACC,EAAqBC,GACjE,GAAIA,EACAC,MAAM,+GADV,CAIA,QAAAC,EAAA,EAAAC,EAAqBR,EAAoBO,EAAAC,EAAApB,OAAAmB,IAAA,CAApC,IAAME,EAAMD,EAAAD,IACbG,EAAAA,EAAAA,GAAa,CAAErF,KAAMoF,GAAU,CA9CRzD,EAAAA,EAAQC,MAAMC,OAAO,0BAgD5CkD,IAzC4BO,EAAAA,EAAAA,GAAU,CAC1CtF,KAAMR,EAAAA,GACN+F,MAAOhF,KAAKC,MAAMgF,aA0ClBC,OAAOC,SAASC,QAPhB,CAQJ,EACMC,EAAgB,WAClBd,EADsCnC,UAAAoB,OAAA,QAAA3D,IAAAuC,UAAA,IAAAA,UAAA,GAAiCA,UAAAoB,OAAA,EAAApB,UAAA,QAAAvC,EAE3E,EACMyF,EAAkB,WAA2D,IAA1Dd,EAAmBpC,UAAAoB,OAAA,QAAA3D,IAAAuC,UAAA,IAAAA,UAAA,GAAUqC,EAAuBrC,UAAAoB,OAAA,EAAApB,UAAA,QAAAvC,EACzE0F,IAvDAnE,EAAAA,EAAQC,MAAMC,OAAO,yCACrBF,EAAAA,EAAQC,MAAMC,OAAO,2CACrBF,EAAAA,EAAQC,MAAMC,OAAO,wCACrBF,EAAAA,EAAQC,MAAMC,OAAO,0BAsDrBiD,EAAuCC,EAAqBC,EAChE,EACMc,EAAY,YACdT,EAAAA,EAAAA,GAAa,CAAErF,KAAM,mBACzB,EACM+F,EAAkB,WAA2D,IAnDlDC,EACvBC,EAkDelB,EAAmBpC,UAAAoB,OAAA,QAAA3D,IAAAuC,UAAA,IAAAA,UAAA,GAAUqC,EAAuBrC,UAAAoB,OAAA,EAAApB,UAAA,QAAAvC,GAlDnE6F,EAAQ9F,SAAoD,QAA5C6F,GAACjG,EAAAA,EAAAA,GAAU,CAAEC,KAAM4E,WAAyB,IAAAoB,EAAAA,EAAI,KAAM,OAEpEC,IAAUpB,GAEVS,EAAAA,EAAAA,GAAU,CAAEtF,KAAM4E,EAAwBW,MAAO,OAGjDD,EAAAA,EAAAA,GAAU,CAAEtF,KAAM4E,EAAwBW,MAAM,GAADW,OAAKD,EAAQ,MA6CpEnB,EAAuCC,EAAqBC,EAChE,EACMmB,EAAsB,WAA2D,IA3CtDC,EACvBH,EA0CmBlB,EAAmBpC,UAAAoB,OAAA,QAAA3D,IAAAuC,UAAA,IAAAA,UAAA,GAAUqC,EAAuBrC,UAAAoB,OAAA,EAAApB,UAAA,QAAAvC,GA1CvE6F,EAAQ9F,SAAoD,QAA5CiG,GAACrG,EAAAA,EAAAA,GAAU,CAAEC,KAAM4E,WAAyB,IAAAwB,EAAAA,EAAI,KAAM,OAE1D,IAAVH,GAEAX,EAAAA,EAAAA,GAAU,CACNtF,KAAM4E,EACNW,MAAOV,EAAkBW,cAI7BF,EAAAA,EAAAA,GAAU,CAAEtF,KAAM4E,EAAwBW,MAAM,GAADW,OAAKD,EAAQ,MAkCpEnB,EAAuCC,EAAqBC,EAChE,EACMqB,EAAoB,WAA2D,IAA1DtB,EAAmBpC,UAAAoB,OAAA,QAAA3D,IAAAuC,UAAA,IAAAA,UAAA,GAAUqC,EAAuBrC,UAAAoB,OAAA,EAAApB,UAAA,QAAAvC,GAC3EkG,EAAAA,EAAAA,KACK9C,MAAK,SAAC+C,GACP,IAAMC,EAAMf,OAAOgB,OAAO,mEAADP,OAAoEK,QAAAA,EAAW,OAAM,MAClG,OAARC,EACAvB,MAAM,8DAEDuB,IACL7E,EAAAA,EAAQC,MAAMoC,IAAI,kBAAmBwC,GACrC1B,EAAuCC,EAAqBC,GAEpE,IACKvB,OAAM,SAACiD,GACRC,QAAQC,MAAM,8BAADV,OAA+BW,OAAOH,IACvD,GACJ,EACMI,EAAmB,SAACC,GAEtB,GAAIC,gBAAiB,CACjB,IACMzB,EADS,IAAIyB,gBAAgBvB,OAAOC,SAASuB,QAC9BpD,IAAI,SAADqC,OAAUa,IAClC,GAAIxB,EACA,OAAOA,CAEf,CACA,OAAO,IACX,C","sources":["webpack://@guardian/dotcom-rendering/./src/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/lib/readerRevenueDevUtils.ts"],"sourcesContent":["import { getCookie, isUndefined, onConsentChange, storage, } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\n// User Attributes API cookies (created on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n// Support Frontend cookie (created when a contribution is made)\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE = 'gu.contributions.contrib-timestamp';\n//  Local storage keys\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_KEY = 'gu.noRRBanner';\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n// Returns true if we should hide support messaging because the user is a supporter.\n// Checks the cookie that is set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nexport const hasSupporterCookie = (isSignedIn) => {\n    const cookie = getCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE });\n    switch (cookie) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            /**\n             * If cookie is not present but user is signed in, we do not want to show any messaging.\n             * This is because of a race condition on the first page view after signing in, where\n             * we may be awaiting the response from the API to find out if they're a supporter.\n             */\n            if (isSignedIn) {\n                return 'Pending';\n            }\n            else {\n                return false;\n            }\n    }\n};\n// looks at the SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (set by support-frontend when making one-off contribution)\n// and returns a Unix epoch int of the date if it exists.\nexport const getLastOneOffContributionTimestamp = () => {\n    // Support cookies - expects Unix epoch\n    const contributionDateFromSupport = getCookie({\n        name: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n    });\n    if (!contributionDateFromSupport) {\n        return undefined;\n    }\n    // Parse dates into common a number\n    const parsedDateFromSupport = contributionDateFromSupport\n        ? parseInt(contributionDateFromSupport, 10)\n        : 0;\n    return parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\nconst dateDiffDays = (from, to) => {\n    const oneDayMs = 1000 * 60 * 60 * 24;\n    const diffMs = to - from;\n    return Math.floor(diffMs / oneDayMs);\n};\nconst AskPauseDays = 90;\nexport const isRecentOneOffContributor = () => {\n    const lastContributionDate = getLastOneOffContributionTimestamp();\n    if (!isUndefined(lastContributionDate)) {\n        const now = Date.now();\n        return dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n    }\n    return false;\n};\nexport const shouldHideSupportMessaging = (isSignedIn) => {\n    const hasCookie = hasSupporterCookie(isSignedIn);\n    if (hasCookie === 'Pending') {\n        return 'Pending';\n    }\n    else {\n        return hasCookie || isRecentOneOffContributor();\n    }\n};\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\nexport const hasArticleCountOptOutCookie = () => getCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\nconst removeWeeklyArticleCountsFromLocalStorage = () => storage.local.remove(WEEKLY_ARTICLE_COUNT_KEY);\nexport const hasCmpConsentForWeeklyArticleCount = () => {\n    return new Promise((resolve) => {\n        if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n            resolve(true);\n        }\n        onConsentChange(({ usnat, tcfv2, aus }) => {\n            if (usnat ?? aus) {\n                resolve(true);\n            }\n            else if (tcfv2) {\n                const hasRequiredConsents = REQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every((consent) => tcfv2.consents[consent]);\n                if (!hasRequiredConsents) {\n                    removeWeeklyArticleCountsFromLocalStorage();\n                }\n                resolve(hasRequiredConsents);\n            }\n        });\n    });\n};\nexport const hasOptedOutOfArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\nexport const hasOptedOutOfWeeklyArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = () => {\n    const [hasOptedOut, setHasOptedOut] = useState('Pending');\n    useEffect(() => {\n        hasOptedOutOfArticleCount()\n            .then(setHasOptedOut)\n            .catch(() => setHasOptedOut(true));\n    }, []);\n    return hasOptedOut;\n};\nexport const hasCmpConsentForBrowserId = () => new Promise((resolve) => {\n    if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n        resolve(true);\n    }\n    onConsentChange(({ usnat, tcfv2, aus }) => {\n        if (usnat ?? aus) {\n            resolve(true);\n        }\n        else if (tcfv2) {\n            const hasRequiredConsents = REQUIRED_CONSENTS_FOR_BROWSER_ID.every((consent) => tcfv2.consents[consent]);\n            resolve(hasRequiredConsents);\n        }\n    });\n});\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = () => !!storage.local.get(NO_RR_BANNER_KEY);\nexport const setLocalNoBannerCachePeriod = (now = Date.now()) => storage.local.set(NO_RR_BANNER_KEY, true, now + twentyMins);\n// Returns true if banner was closed in the last hour\nconst ONE_HOUR_IN_MS = 1000 * 60 * 60;\nexport const recentlyClosedBanner = (lastClosedAt, now = Date.now()) => {\n    if (lastClosedAt) {\n        return now - new Date(lastClosedAt).getTime() < ONE_HOUR_IN_MS;\n    }\n    return false;\n};\nexport const getContributionsServiceUrl = (config) => process.env.SDC_URL ?? config.contributionsServiceUrl;\nexport const getPurchaseInfo = () => {\n    const purchaseInfoRaw = getCookie({\n        name: 'GU_CO_COMPLETE',\n        shouldMemoize: true,\n    });\n    if (!purchaseInfoRaw) {\n        return undefined;\n    }\n    let purchaseInfo;\n    try {\n        purchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n    }\n    catch { } // eslint-disable-line no-empty -- silently handle error\n    return purchaseInfo;\n};\n","import { getCookie, removeCookie, setCookie, storage } from '@guardian/libs';\nimport { HIDE_SUPPORT_MESSAGING_COOKIE, RECURRING_CONTRIBUTOR_COOKIE, SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE, } from './contributions';\nimport { getLocaleCode } from './getCountryCode';\nconst readerRevenueCookies = [\n    HIDE_SUPPORT_MESSAGING_COOKIE,\n    RECURRING_CONTRIBUTOR_COOKIE,\n    SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n];\nconst clearEpicViewLog = () => storage.local.remove('gu.contributions.views');\nconst clearBannerLastClosedAt = () => {\n    storage.local.remove('gu.prefs.engagementBannerLastClosedAt');\n    storage.local.remove('gu.prefs.subscriptionBannerLastClosedAt');\n    storage.local.remove('gu.prefs.abandonedBasketLastClosedAt');\n    storage.local.remove('gu.noRRBannerTimestamp');\n};\nconst fakeOneOffContributor = () => setCookie({\n    name: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n    value: Date.now().toString(),\n});\nconst MULTIVARIATE_ID_COOKIE = 'GU_mvt_id';\nconst MAX_CLIENT_MVT_ID = 1000000;\nconst incrementMvtCookie = () => {\n    const mvtId = parseInt(getCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10', 10);\n    if (mvtId) {\n        if (mvtId === MAX_CLIENT_MVT_ID) {\n            // Wrap back to 1 if it would exceed the max\n            setCookie({ name: MULTIVARIATE_ID_COOKIE, value: '1' });\n        }\n        else {\n            setCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId + 1}` });\n        }\n    }\n};\nconst decrementMvtCookie = () => {\n    const mvtId = parseInt(getCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10', 10);\n    if (mvtId) {\n        if (mvtId === 0) {\n            // Wrap back to max if it would be less than 0\n            setCookie({\n                name: MULTIVARIATE_ID_COOKIE,\n                value: MAX_CLIENT_MVT_ID.toString(),\n            });\n        }\n        else {\n            setCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId - 1}` });\n        }\n    }\n};\nconst clearCommonReaderRevenueStateAndReload = (asExistingSupporter, shouldHideReaderRevenue) => {\n    if (shouldHideReaderRevenue) {\n        alert('This page has \"Prevent membership/contribution appeals\" ticked in Composer. Please try a different page');\n        return;\n    }\n    for (const cookie of readerRevenueCookies)\n        removeCookie({ name: cookie });\n    clearEpicViewLog();\n    if (asExistingSupporter) {\n        fakeOneOffContributor();\n    }\n    window.location.reload();\n};\nconst showMeTheEpic = (asExistingSupporter = false, shouldHideReaderRevenue) => {\n    clearCommonReaderRevenueStateAndReload(asExistingSupporter, shouldHideReaderRevenue);\n};\nconst showMeTheBanner = (asExistingSupporter = false, shouldHideReaderRevenue) => {\n    enableCmp();\n    clearBannerLastClosedAt();\n    clearCommonReaderRevenueStateAndReload(asExistingSupporter, shouldHideReaderRevenue);\n};\nconst enableCmp = () => {\n    removeCookie({ name: 'gu-cmp-disabled' });\n};\nconst showNextVariant = (asExistingSupporter = false, shouldHideReaderRevenue) => {\n    incrementMvtCookie();\n    clearCommonReaderRevenueStateAndReload(asExistingSupporter, shouldHideReaderRevenue);\n};\nconst showPreviousVariant = (asExistingSupporter = false, shouldHideReaderRevenue) => {\n    decrementMvtCookie();\n    clearCommonReaderRevenueStateAndReload(asExistingSupporter, shouldHideReaderRevenue);\n};\nconst changeGeolocation = (asExistingSupporter = false, shouldHideReaderRevenue) => {\n    getLocaleCode()\n        .then((current) => {\n        const geo = window.prompt(`Enter two-letter geolocation code (e.g. GB, US, AU). Current is ${current ?? 'null'}.`);\n        if (geo === 'UK') {\n            alert(`'UK' is not a valid geolocation - please use 'GB' instead!`);\n        }\n        else if (geo) {\n            storage.local.set('gu.geo.override', geo);\n            clearCommonReaderRevenueStateAndReload(asExistingSupporter, shouldHideReaderRevenue);\n        }\n    })\n        .catch((e) => {\n        console.error(`changeGeolocation - error: ${String(e)}`);\n    });\n};\nconst getForcedVariant = (type) => {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unnecessary-condition -- Safety in global,\n    if (URLSearchParams) {\n        const params = new URLSearchParams(window.location.search);\n        const value = params.get(`force-${type}`);\n        if (value) {\n            return value;\n        }\n    }\n    return null;\n};\nexport { changeGeolocation, showMeTheEpic, showMeTheBanner, showNextVariant, showPreviousVariant, getForcedVariant, };\n"],"names":["HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_KEY","shouldHideSupportMessaging","isSignedIn","diffMs","lastContributionDate","hasCookie","getCookie","name","hasSupporterCookie","contributionDateFromSupport","parseInt","undefined","getLastOneOffContributionTimestamp","isUndefined","Date","now","Math","floor","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasArticleCountOptOutCookie","hasCmpConsentForWeeklyArticleCount","Promise","resolve","shouldMemoize","onConsentChange","_ref","usnat","tcfv2","aus","hasRequiredConsents","every","consent","consents","storage","local","remove","hasOptedOutOfArticleCount","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","hasCmpConsent","_context","prev","next","sent","abrupt","stop","apply","arguments","hasOptedOutOfWeeklyArticleCount","_ref3","_callee2","_context2","useHasOptedOutOfArticleCount","_useState","useState","_useState2","_slicedToArray","hasOptedOut","setHasOptedOut","useEffect","then","catch","hasCmpConsentForBrowserId","_ref4","withinLocalNoBannerCachePeriod","get","setLocalNoBannerCachePeriod","length","set","recentlyClosedBanner","lastClosedAt","getTime","getPurchaseInfo","purchaseInfoRaw","purchaseInfo","JSON","parse","decodeURIComponent","_unused","readerRevenueCookies","MULTIVARIATE_ID_COOKIE","MAX_CLIENT_MVT_ID","clearCommonReaderRevenueStateAndReload","asExistingSupporter","shouldHideReaderRevenue","alert","_i","_readerRevenueCookies","cookie","removeCookie","setCookie","value","toString","window","location","reload","showMeTheEpic","showMeTheBanner","enableCmp","showNextVariant","_getCookie","mvtId","concat","showPreviousVariant","_getCookie2","changeGeolocation","getLocaleCode","current","geo","prompt","e","console","error","String","getForcedVariant","type","URLSearchParams","search"],"sourceRoot":""}