{"version":3,"file":"CarouselForNewsletters-importable.client.web.5bf1cc767aadbe2c0766.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/Card/components/LI.tsx","webpack://@guardian/dotcom-rendering/./src/lib/verticalDividerWithBottomOffset.ts","webpack://@guardian/dotcom-rendering/./src/components/CarouselForNewsletters.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/formatAttrString.ts","webpack://@guardian/dotcom-rendering/./src/lib/getZIndex.ts","webpack://@guardian/dotcom-rendering/./src/lib/verticalDivider.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/button/Button.js"],"sourcesContent":["import { css } from '@emotion/react';\nimport { from, space, until } from '@guardian/source/foundations';\nimport { verticalDivider } from '../../../lib/verticalDivider';\nimport { verticalDividerWithBottomOffset } from '../../../lib/verticalDividerWithBottomOffset';\nimport { palette } from '../../../palette';\n\ntype CardPercentageType =\n\t| '25%'\n\t| '33.333%'\n\t| '50%'\n\t| '66.666%'\n\t| '75%'\n\t| '100%';\n\n/**\n * This value needs to match the one set\n * in the `verticalDividerWithBottomOffset`\n */\nconst GAP_SIZE = `${space[3]}px`;\n\nconst liStyles = css`\n\t/* This position relative is needed to contain the vertical divider */\n\tposition: relative;\n\n\tdisplay: flex;\n\trow-gap: ${GAP_SIZE};\n`;\n\nconst sidePaddingStylesMobile = (override?: number) => css`\n\t/* Set spacing on the li element */\n\t${until.tablet} {\n\t\tpadding-left: ${override ?? 10}px;\n\t\tpadding-right: ${override ?? 10}px;\n\t}\n`;\n\nconst sidePaddingStyles = (override?: number) => css`\n\t${from.tablet} {\n\t\tpadding-left: ${override ?? 10}px;\n\t\tpadding-right: ${override ?? 10}px;\n\t}\n`;\n\nconst snapAlignStartStyles = css`\n\t/* Snap start of card */\n\tscroll-snap-align: start;\n`;\n\nconst decideSize = (percentage?: CardPercentageType, stretch?: boolean) => {\n\tlet sizeStyle;\n\tif (percentage) {\n\t\tsizeStyle = css`\n\t\t\tflex-basis: ${percentage};\n\t\t\t${stretch &&\n\t\t\tcss`\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t`;\n\t} else if (stretch) {\n\t\tsizeStyle = css`\n\t\t\tflex-grow: 1;\n\t\t`;\n\t} else {\n\t\tsizeStyle = css`\n\t\t\tflex: 1;\n\t\t`;\n\t}\n\treturn sizeStyle;\n};\n\nconst decideDivider = (\n\toffsetBottomPaddingOnDivider: boolean,\n\tpaddingSize: string,\n\tverticalDividerColour: string,\n) =>\n\toffsetBottomPaddingOnDivider\n\t\t? verticalDividerWithBottomOffset(paddingSize, verticalDividerColour)\n\t\t: verticalDivider(verticalDividerColour);\n\ntype Props = {\n\tchildren: React.ReactNode;\n\t/** Used to give a particular LI more or less weight / space */\n\tpercentage?: CardPercentageType;\n\t/** When true, the card stretches based on content */\n\tstretch?: boolean;\n\t/** If this LI wraps a card in a row this should be true */\n\tshowDivider?: boolean;\n\t/** If this LI directly wraps a card this should be true */\n\tpadSides?: boolean;\n\t/** Overrides the default padding */\n\tpadSidesOverride?: number;\n\t/** Should be true if spacing between cards is desired on mobile devices */\n\tpadSidesOnMobile?: boolean;\n\t/** Overrides the default mobile padding */\n\tpadSidesMobileOverride?: number;\n\t/** True when snapping card when scrolling e.g. in carousel */\n\tsnapAlignStart?: boolean;\n\t/** Prevent the divider from spanning the LI's bottom padding. To be used when you know that the\n\tLI will have bottom padding, but won't have another card in the same container directly below it. */\n\toffsetBottomPaddingOnDivider?: boolean;\n\t/** Overrides the vertical divider colour */\n\tverticalDividerColour?: string;\n};\n\nexport const LI = ({\n\tchildren,\n\tpercentage,\n\tstretch,\n\tshowDivider,\n\tpadSides = false,\n\tpadSidesOverride,\n\tpadSidesOnMobile = false,\n\tpadSidesMobileOverride,\n\tsnapAlignStart = false,\n\toffsetBottomPaddingOnDivider = false,\n\tverticalDividerColour = palette('--section-border'),\n}: Props) => {\n\t// Decide sizing\n\tconst sizeStyles = decideSize(percentage, stretch);\n\n\treturn (\n\t\t<li\n\t\t\tcss={[\n\t\t\t\tliStyles,\n\t\t\t\tsizeStyles,\n\t\t\t\tshowDivider &&\n\t\t\t\t\tdecideDivider(\n\t\t\t\t\t\toffsetBottomPaddingOnDivider,\n\t\t\t\t\t\tGAP_SIZE,\n\t\t\t\t\t\tverticalDividerColour,\n\t\t\t\t\t),\n\t\t\t\tpadSides && sidePaddingStyles(padSidesOverride),\n\t\t\t\tpadSidesOnMobile &&\n\t\t\t\t\tsidePaddingStylesMobile(padSidesMobileOverride),\n\t\t\t\tsnapAlignStart && snapAlignStartStyles,\n\t\t\t]}\n\t\t>\n\t\t\t{children}\n\t\t</li>\n\t);\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { from } from '@guardian/source/foundations';\n\nexport function verticalDividerWithBottomOffset(\n\tbottomPaddingSize: string,\n\tverticalDividerColour: string,\n): SerializedStyles {\n\treturn css`\n\t\t${from.tablet} {\n\t\t\t:before {\n\t\t\t\tcontent: '';\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 1px;\n\t\t\t\t/* 100% is a reasonable fallback for browsers which don't support calc() */\n\t\t\t\theight: 100%;\n\t\t\t\theight: calc(100% + ${bottomPaddingSize});\n\t\t\t\tborder-left: 1px solid ${verticalDividerColour};\n\t\t\t}\n\t\t}\n\t`;\n}\n","import { css } from '@emotion/react';\nimport { isUndefined } from '@guardian/libs';\nimport {\n\tfrom,\n\theadlineBold24,\n\tpalette,\n\tspace,\n\ttext,\n\tuntil,\n} from '@guardian/source/foundations';\nimport libDebounce from 'lodash.debounce';\nimport { useEffect, useRef, useState } from 'react';\nimport { formatAttrString } from '../lib/formatAttrString';\nimport { getZIndex } from '../lib/getZIndex';\nimport type { Newsletter } from '../types/content';\nimport type { LeftColSize } from '../types/layout';\nimport type { OnwardsSource } from '../types/onwards';\nimport { LI } from './Card/components/LI';\nimport { Hide } from './Hide';\nimport { LeftColumn } from './LeftColumn';\nimport { NewsletterCard } from './NewsletterCard';\n\ntype Props = {\n\theading: string;\n\tnewsletters: Newsletter[];\n\tonwardsSource: OnwardsSource;\n\tleftColSize: LeftColSize;\n\tactiveDotColour: string;\n\ttitleHighlightColour: string;\n\tcarouselPosition?: number;\n};\n\n// TO DO - this file was adapted from the Caroursel component and duplicates much of the code\n// the styling and sub components could all be move to a shared file.\n\n// Carousel icons - need replicating from source for centring\n\nconst SvgChevronLeftSingle = () => {\n\treturn (\n\t\t<svg\n\t\t\tviewBox=\"0 0 32 32\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"24\"\n\t\t\theight=\"24\"\n\t\t>\n\t\t\t<path\n\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\tclipRule=\"evenodd\"\n\t\t\t\td=\"M18.4 4L8 14.4V15.45L18.4 25.8499L19.375 24.8999L11.05 14.925L19.375 4.95L18.4 4Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n};\n\nconst SvgChevronRightSingle = () => {\n\treturn (\n\t\t<svg\n\t\t\tviewBox=\"0 0 32 32\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"24\"\n\t\t\theight=\"24\"\n\t\t>\n\t\t\t<path\n\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\tclipRule=\"evenodd\"\n\t\t\t\td=\"M9.975 4L9 4.95L17.325 14.925L9 24.8999L9.975 25.8499L20.375 15.45V14.4L9.975 4Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n};\n\nconst wrapperStyle = (length: number) => css`\n\tdisplay: flex;\n\t/* Remove space-between where there is a single item, so that it is left-aligned */\n\t${length > 1 && 'justify-content: space-between'}\n\toverflow: hidden;\n\t${from.desktop} {\n\t\tpadding-right: 40px;\n\t}\n`;\n\n// For desktop and above, are we at the last card. Is one less than the dots style equivalent\nconst isLastCardShowing = (index: number, totalStories: number) =>\n\tindex >= totalStories - 4;\n\nconst containerMargins = css`\n\tmargin-top: 6px;\n\tmargin-bottom: 24px;\n\n\tmargin-left: 0px;\n\tmargin-right: 0px;\n\n\t${from.tablet} {\n\t\t/* Shrink the container to remove the leading and\n       \t\t\t\t   trailing side margins from the list of cards */\n\t\tmargin-left: -10px;\n\t\tmargin-right: -10px;\n\t}\n\n\t${from.leftCol} {\n\t\tmargin-left: -1px;\n\t\tmargin-right: -10px;\n\t\tmargin-top: 6px;\n\t}\n`;\n\nconst containerStyles = css`\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\toverflow: hidden; /* Needed for scrolling to work */\n`;\n\nconst carouselStyle = css`\n\tmin-height: 227px;\n\tposition: relative; /* must set position for offset(Left) calculations of children to be relative to this box */\n\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: stretch;\n\n\tscroll-snap-type: x mandatory;\n\tscroll-behavior: smooth;\n\toverflow-x: auto; /* Scrollbar is less intrusive visually on non-desktop devices typically */\n\toverflow-y: hidden; /*Fixes small problem with 1px vertical scroll on immersive due to top bar */\n\t${from.tablet} {\n\t\t&::-webkit-scrollbar {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\tscrollbar-width: none;\n\t}\n\n\t${until.tablet} {\n\t\tmargin-left: -10px; /* Align firstcard on mobile devices */\n\t}\n`;\n\nconst dotsStyle = css`\n\tmargin-bottom: ${space[2]}px;\n`;\n\nconst dotStyle = css`\n\tcursor: pointer;\n\tdisplay: inline-block;\n\theight: ${space[3]}px;\n\twidth: ${space[3]}px;\n\tbackground-color: ${palette.neutral[93]};\n\tborder-radius: 100%;\n\tborder: 0 none;\n\tpadding: 0;\n\tmargin-right: ${space[1]}px;\n\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${palette.neutral[86]};\n\t\toutline: none;\n\t}\n`;\n\nconst activeDotStyles = (activeDotColour: string) => css`\n\tbackground-color: ${activeDotColour};\n\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${activeDotColour};\n\t}\n`;\n\nconst adjustNumberOfDotsStyle = (index: number, totalStories: number) => {\n\treturn css`\n\t\t${from.phablet} {\n\t\t\tdisplay: ${index >= totalStories - 1 ? 'none' : 'auto'};\n\t\t}\n\n\t\t${from.tablet} {\n\t\t\tdisplay: ${index >= totalStories - 2 ? 'none' : 'auto'};\n\t\t}\n\n\t\t${from.desktop} {\n\t\t\tdisplay: ${index >= totalStories - 3 ? 'none' : 'auto'};\n\t\t}\n\t`;\n};\n\n// Not used for buttons above carousel\nconst buttonContainerStyle = css`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tposition: absolute;\n\tz-index: ${getZIndex('onwardsCarousel')};\n\theight: 100%;\n\tpadding-bottom: 36px; /* Align buttons centrally with cards */\n\n\t${until.leftCol} {\n\t\tdisplay: none;\n\t}\n`;\nconst prevButtonContainerStyle = (leftColSize: LeftColSize) => {\n\tswitch (leftColSize) {\n\t\tcase 'wide':\n\t\t\treturn css`\n\t\t\t\t${from.leftCol} {\n\t\t\t\t\tleft: 205px;\n\t\t\t\t}\n\t\t\t`;\n\t\tcase 'compact': {\n\t\t\treturn css`\n\t\t\t\t${from.leftCol} {\n\t\t\t\t\tleft: 120px;\n\t\t\t\t}\n\n\t\t\t\t${from.wide} {\n\t\t\t\t\tleft: 205px;\n\t\t\t\t}\n\t\t\t`;\n\t\t}\n\t}\n};\n\nconst nextButtonContainerStyle = css`\n\tright: 10px;\n`;\n\nconst buttonStyle = css`\n\tborder: 0 none;\n\tborder-radius: 100%;\n\theight: 34px;\n\twidth: 34px;\n\tcursor: pointer;\n\tmargin-top: 10px;\n\tpadding: 0;\n\tbackground-color: ${palette.neutral[0]};\n\n\t&:active,\n\t&:hover {\n\t\toutline: none;\n\t\tbackground-color: ${palette.brandAlt[400]};\n\t\tsvg {\n\t\t\tfill: ${palette.neutral[7]};\n\t\t}\n\t}\n\n\t&:focus {\n\t\toutline: none;\n\t}\n\n\tsvg {\n\t\tfill: ${palette.neutral[100]};\n\t\theight: 34px;\n\t}\n`;\n\nconst prevButtonStyle = (index: number) => css`\n\tbackground-color: ${index !== 0 ? palette.neutral[0] : palette.neutral[60]};\n\tcursor: ${index !== 0 ? 'pointer' : 'default'};\n\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${index !== 0\n\t\t\t? palette.brandAlt[400]\n\t\t\t: palette.neutral[60]};\n\n\t\tsvg {\n\t\t\tfill: ${palette.neutral[100]};\n\t\t}\n\t}\n`;\n\nconst nextButtonStyle = (index: number, totalStories: number) => css`\n\tpadding-left: 5px; /* Fix centering of SVG*/\n\tmargin-left: 10px;\n\tbackground-color: ${!isLastCardShowing(index, totalStories)\n\t\t? palette.neutral[0]\n\t\t: palette.neutral[60]};\n\tcursor: ${!isLastCardShowing(index, totalStories) ? 'pointer' : 'default'};\n\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${!isLastCardShowing(index, totalStories)\n\t\t\t? palette.brandAlt[400]\n\t\t\t: palette.neutral[60]};\n\n\t\tsvg {\n\t\t\tfill: ${palette.neutral[100]};\n\t\t}\n\t}\n`;\n\nconst headerRowStyles = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\t${from.tablet} {\n\t\tpadding-right: 10px;\n\t}\n\n\t${from.tablet} {\n\t\tmargin-left: 10px;\n\t}\n`;\n\nconst headerStyles = css`\n\t${headlineBold24};\n\tcolor: ${text.primary};\n\t${headlineBold24};\n\tpadding-bottom: ${space[2]}px;\n\tpadding-top: ${space[1]}px;\n\tmargin-left: 0;\n`;\n\nconst titleStyle = (\n\ttitleHighlightColour: string,\n\tisCuratedContent?: boolean,\n) => css`\n\tcolor: ${isCuratedContent ? titleHighlightColour : text.primary};\n\tdisplay: inline-block;\n\t&::first-letter {\n\t\ttext-transform: capitalize;\n\t}\n`;\n\nconst Title = ({\n\ttitle,\n\ttitleHighlightColour,\n\tisCuratedContent,\n}: {\n\ttitle: string;\n\ttitleHighlightColour: string;\n\tisCuratedContent?: boolean;\n}) => (\n\t<h2 css={headerStyles}>\n\t\t{isCuratedContent ? 'More from ' : ''}\n\t\t<span css={titleStyle(titleHighlightColour, isCuratedContent)}>\n\t\t\t{title}\n\t\t</span>\n\t</h2>\n);\n\ntype HeaderAndNavProps = {\n\theading: string;\n\tnewsletters: Newsletter[];\n\ttitleHighlightColour: string;\n\tactiveDotColour: string;\n\tindex: number;\n\tisCuratedContent?: boolean;\n\tgoToIndex: (newIndex: number) => void;\n};\n\nconst HeaderAndNav = ({\n\theading,\n\tnewsletters,\n\ttitleHighlightColour,\n\tactiveDotColour,\n\tindex,\n\tisCuratedContent,\n\tgoToIndex,\n}: HeaderAndNavProps) => (\n\t<div>\n\t\t<Title\n\t\t\ttitle={heading}\n\t\t\ttitleHighlightColour={titleHighlightColour}\n\t\t\tisCuratedContent={isCuratedContent}\n\t\t/>\n\t\t<div css={dotsStyle}>\n\t\t\t{newsletters.map((_, i) => (\n\t\t\t\t<span\n\t\t\t\t\tonClick={() => goToIndex(i)}\n\t\t\t\t\t// This button is not particularly useful for keyboard users as the stories\n\t\t\t\t\t// are tabb-able themselves so we hide them with aria and make them\n\t\t\t\t\t// not available to keyboard\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\tkey={`dot-${i}`}\n\t\t\t\t\tcss={[\n\t\t\t\t\t\tdotStyle,\n\t\t\t\t\t\ti === index && activeDotStyles(activeDotColour),\n\t\t\t\t\t\tadjustNumberOfDotsStyle(i, newsletters.length),\n\t\t\t\t\t]}\n\t\t\t\t\tdata-link-name={`carousel-small-nav-dot-${i}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t</div>\n);\n\nexport const CarouselForNewsletters = ({\n\theading,\n\tnewsletters,\n\tonwardsSource,\n\tleftColSize,\n\tactiveDotColour,\n\ttitleHighlightColour,\n\tcarouselPosition,\n}: Props) => {\n\tconst carouselRef = useRef<HTMLUListElement>(null);\n\n\tconst [index, setIndex] = useState(0);\n\tconst [maxIndex, setMaxIndex] = useState(0);\n\n\tconst arrowName = 'carousel-small-arrow';\n\n\tconst isCuratedContent = onwardsSource === 'curated-content';\n\n\tconst notPresentation = (el: HTMLElement): boolean =>\n\t\tel.getAttribute('role') !== 'presentation';\n\n\tconst getItems = (): HTMLElement[] => {\n\t\tconst { current } = carouselRef;\n\t\tif (current === null) return [];\n\n\t\treturn Array.from(current.children) as HTMLElement[];\n\t};\n\n\tconst getIndex = (): number => {\n\t\tconst { current } = carouselRef;\n\t\tconst offsets = getItems()\n\t\t\t.filter(notPresentation)\n\t\t\t.map((el) => el.offsetLeft);\n\t\tconst [offset] = offsets;\n\t\tif (current === null || isUndefined(offset)) return 0;\n\n\t\tconst scrolled = current.scrollLeft + offset;\n\t\tconst active = offsets.findIndex((el) => el >= scrolled);\n\n\t\treturn Math.max(0, active);\n\t};\n\n\tconst getSetIndex = () => {\n\t\tsetIndex(getIndex());\n\t};\n\n\tconst goToIndex = (newIndex: number) => {\n\t\tconst { current } = carouselRef;\n\t\tif (current === null) return;\n\n\t\tconst offsets = getItems()\n\t\t\t.filter(notPresentation)\n\t\t\t.map((el) => el.offsetLeft);\n\n\t\tcurrent.scrollTo({ left: offsets[newIndex] });\n\n\t\tgetSetIndex();\n\t};\n\n\tconst prev = () => {\n\t\tconst { current } = carouselRef;\n\t\tconst offsets = getItems()\n\t\t\t.filter(notPresentation)\n\t\t\t.map(({ offsetLeft }) => offsetLeft);\n\t\tconst [offset] = offsets;\n\n\t\tif (current === null || isUndefined(offset)) return;\n\n\t\tconst scrolled = current.scrollLeft + offset;\n\n\t\tconst nextOffset = offsets.reverse().find((o) => o < scrolled);\n\n\t\tif (!isUndefined(nextOffset) && nextOffset !== 0) {\n\t\t\tcurrent.scrollTo({ left: nextOffset });\n\t\t} else {\n\t\t\tcurrent.scrollTo({ left: 0 });\n\t\t}\n\t\tgetSetIndex();\n\t};\n\n\tconst next = () => {\n\t\tconst { current } = carouselRef;\n\t\tconst offsets = getItems()\n\t\t\t.filter(notPresentation)\n\t\t\t.map(({ offsetLeft }) => offsetLeft);\n\t\tconst [offset] = offsets;\n\n\t\tif (current === null || isUndefined(offset)) return;\n\n\t\tconst scrolled = current.scrollLeft + offset;\n\t\tconst nextOffset = offsets.find((currOffset) => currOffset > scrolled);\n\n\t\tif (!isUndefined(nextOffset) && nextOffset !== 0) {\n\t\t\tcurrent.scrollTo({ left: nextOffset });\n\t\t}\n\n\t\tgetSetIndex();\n\t};\n\n\tuseEffect(() => {\n\t\tconst carousel = carouselRef.current;\n\t\tif (carousel) {\n\t\t\tcarousel.addEventListener('scroll', libDebounce(getSetIndex, 100));\n\t\t\treturn carousel.removeEventListener(\n\t\t\t\t'scroll',\n\t\t\t\tlibDebounce(getSetIndex, 100),\n\t\t\t);\n\t\t}\n\t});\n\n\t// No idea if this is the best approach but it prevents issues with libDebounce\n\t// using old data to determine the max index. Instead we say update maxIndex\n\t// when index changes and compare it against the prior maxIndex only.\n\tuseEffect(() => setMaxIndex((m) => Math.max(index, m)), [index]);\n\n\treturn (\n\t\t<div\n\t\t\tcss={wrapperStyle(newsletters.length)}\n\t\t\tdata-link-name={formatAttrString(heading)}\n\t\t>\n\t\t\t<LeftColumn borderType=\"partial\" size={leftColSize}>\n\t\t\t\t<HeaderAndNav\n\t\t\t\t\theading={heading}\n\t\t\t\t\tnewsletters={newsletters}\n\t\t\t\t\tactiveDotColour={activeDotColour}\n\t\t\t\t\ttitleHighlightColour={titleHighlightColour}\n\t\t\t\t\tindex={index}\n\t\t\t\t\tisCuratedContent={isCuratedContent}\n\t\t\t\t\tgoToIndex={goToIndex}\n\t\t\t\t/>\n\t\t\t</LeftColumn>\n\t\t\t<div\n\t\t\t\tcss={[\n\t\t\t\t\tbuttonContainerStyle,\n\t\t\t\t\tprevButtonContainerStyle(leftColSize),\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={prev}\n\t\t\t\t\taria-label=\"Move carousel backwards\"\n\t\t\t\t\tcss={[buttonStyle, prevButtonStyle(index)]}\n\t\t\t\t\tdata-link-name={`${arrowName}-prev`}\n\t\t\t\t>\n\t\t\t\t\t<SvgChevronLeftSingle />\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<div css={[buttonContainerStyle, nextButtonContainerStyle]}>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={next}\n\t\t\t\t\taria-label=\"Move carousel forwards\"\n\t\t\t\t\tcss={[\n\t\t\t\t\t\tbuttonStyle,\n\t\t\t\t\t\tnextButtonStyle(index, newsletters.length),\n\t\t\t\t\t]}\n\t\t\t\t\tdata-link-name={`${arrowName}-next`}\n\t\t\t\t>\n\t\t\t\t\t<SvgChevronRightSingle />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tcss={[containerStyles, containerMargins]}\n\t\t\t\tdata-component={onwardsSource}\n\t\t\t\tdata-link={formatAttrString(heading)}\n\t\t\t>\n\t\t\t\t<Hide when=\"above\" breakpoint=\"leftCol\">\n\t\t\t\t\t<div css={headerRowStyles}>\n\t\t\t\t\t\t<HeaderAndNav\n\t\t\t\t\t\t\theading={heading}\n\t\t\t\t\t\t\tnewsletters={newsletters}\n\t\t\t\t\t\t\ttitleHighlightColour={titleHighlightColour}\n\t\t\t\t\t\t\tactiveDotColour={activeDotColour}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tisCuratedContent={isCuratedContent}\n\t\t\t\t\t\t\tgoToIndex={goToIndex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Hide when=\"below\" breakpoint=\"desktop\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={prev}\n\t\t\t\t\t\t\t\taria-label=\"Move carousel backwards\"\n\t\t\t\t\t\t\t\tcss={[buttonStyle, prevButtonStyle(index)]}\n\t\t\t\t\t\t\t\tdata-link-name={`${arrowName}-prev`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SvgChevronLeftSingle />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={next}\n\t\t\t\t\t\t\t\taria-label=\"Move carousel forwards\"\n\t\t\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\t\t\tbuttonStyle,\n\t\t\t\t\t\t\t\t\tnextButtonStyle(index, newsletters.length),\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tdata-link-name={`${arrowName}-next`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SvgChevronRightSingle />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Hide>\n\t\t\t\t\t</div>\n\t\t\t\t</Hide>\n\n\t\t\t\t<ul\n\t\t\t\t\tcss={carouselStyle}\n\t\t\t\t\tref={carouselRef}\n\t\t\t\t\tdata-component={`carousel-small | maxIndex-${maxIndex}`}\n\t\t\t\t\tdata-heatphan-type=\"carousel\"\n\t\t\t\t>\n\t\t\t\t\t{newsletters.map((newsletter, i) => {\n\t\t\t\t\t\tconst uniqueKey = `${newsletter.identityName}-${i}`;\n\t\t\t\t\t\tconst isFirst = i === 0;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LI\n\t\t\t\t\t\t\t\tkey={uniqueKey}\n\t\t\t\t\t\t\t\tpercentage=\"25%\"\n\t\t\t\t\t\t\t\tshowDivider={!isFirst}\n\t\t\t\t\t\t\t\tpadSides={true}\n\t\t\t\t\t\t\t\tpadSidesOnMobile={true}\n\t\t\t\t\t\t\t\tsnapAlignStart={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t\tmin-width: 220px;\n\t\t\t\t\t\t\t\t\t\tmax-width: 220px;\n\t\t\t\t\t\t\t\t\t\tmin-height: 380px;\n\t\t\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<NewsletterCard\n\t\t\t\t\t\t\t\t\t\tnewsletter={newsletter}\n\t\t\t\t\t\t\t\t\t\tcardPosition={i}\n\t\t\t\t\t\t\t\t\t\tgroupTitle={heading}\n\t\t\t\t\t\t\t\t\t\tcarouselPosition={carouselPosition}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</LI>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","type StrInOutFuncType = (str: string) => string;\n\nconst removeAlphaNumeric: StrInOutFuncType = (str) =>\n\tstr.replace(new RegExp('[^0-9a-z ]', 'gi'), ';'); // We set it to semicolon so we can remove it at the end\nconst lowercase: StrInOutFuncType = (str) => str.toLowerCase();\nconst replaceSpacesWithHyphens: StrInOutFuncType = (str) =>\n\tstr.replace(new RegExp(' ', 'g'), '-'); // Replace the space\nconst removeTempChars: StrInOutFuncType = (str) =>\n\tstr.replace(new RegExp('[;]', 'g'), ''); // Strip out those semicolons\n\nexport const formatAttrString = (input: string): string =>\n\tremoveTempChars(\n\t\treplaceSpacesWithHyphens(lowercase(removeAlphaNumeric(input))),\n\t);\n","/**\n * How do I get a z-index for my new item?\n *\n * Decide a meaningful name for your item and then insert it\n * in the indices array below. The higher up your item visually,\n * then the higher it will be in the z-index stack,\n * 'higher' means _earlier_ in the array.\n *\n * Eg. stickyAdWrapper will be given a higher z-index than bodyArea\n *\n * Once inserted in the array, use getZIndex() to return the css\n *\n * Eg.\n *\n * import { getZIndex } from './getZIndex';\n *\n * const myCss = css`\n *    color: blue;\n *    z-index: ${getZIndex('TheGuardian')};\n * `;\n *\n * As new items are added, all z-indexes are adjusted\n */\nconst indices = [\n\t// Modals will go here at the top\n\t'lightbox',\n\t'youTubeFullscreen',\n\n\t// Sticky video and button need to be above everything\n\t'sticky-video-button',\n\t'sticky-video',\n\t'banner',\n\t'dropdown',\n\t'burger',\n\t'mastheadVeggieBurgerExpandedMobile',\n\t'expanded-veggie-menu-wrapper',\n\t'expanded-veggie-menu',\n\n\t//header wrapper needs to be in line with veggie menus to ensure it stands above various banners\n\t'fullPageInteractiveHeaderWrapper',\n\n\t// Mobile sticky appears below banners\n\t'mobileSticky',\n\n\t// Headers with sticky ads\n\t'stickyAdWrapperLabsHeader',\n\t'stickyAdWrapper',\n\t'stickyAdWrapperNav',\n\n\t// My Account dropdown in masthead - needs to be below stickyAdWrapper\n\t'mastheadMyAccountDropdown',\n\n\t// Edition selector in masthead - needs to be below stickyAdWrapper\n\t'mastheadEditionDropdown',\n\n\t// Edition selector in nav - needs to be below stickyAdWrapper\n\t'editionDropdown',\n\n\t// The content displayed by the Details component\n\t'summaryDetails',\n\n\t// Liveblog toast\n\t'toast',\n\n\t// Onwards Carousel (Related content etc)\n\t'onwardsCarousel',\n\n\t// Search link should be above The Guardian svg\n\t'myAccountDropdown',\n\t'searchHeaderLink',\n\t'TheGuardian',\n\n\t// The edition switcher banner needs to be below the Edition selector\n\t// and the myAccount dropdown in the nav\n\t'editionSwitcherBanner',\n\n\t// Overlay for expandable marketing card (currently US only)\n\t'expandableMarketingCardOverlay',\n\n\t// Sticky table of contents element\n\t'tableOfContents',\n\n\t// Article headline (should be above main media)\n\t'articleHeadline',\n\t'immersiveBlackBox',\n\n\t// Body\n\t'bodyArea',\n\t'rightColumnArea',\n\n\t// Main media\n\t'mainMedia',\n\n\t// Nested links in cards should sit above the main card link\n\t// See: https://www.sarasoueidan.com/blog/nested-links/\n\t'card-nested-link',\n\t'card-link',\n] as const;\n\n// Implementation code - you don't need to change this to get a new index\nexport type ZIndex = (typeof indices)[number];\n\nexport const getZIndex = (name: ZIndex): number => {\n\tconst index = indices.indexOf(name);\n\tif (index === -1) return -1; // indexOf returns -1 if there is no match\n\treturn indices.length - index; // reverse the indices: last item gets 1\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { from } from '@guardian/source/foundations';\n\nexport const verticalDivider = (\n\tverticalDividerColour: string,\n): SerializedStyles => {\n\treturn css`\n\t\t${from.tablet} {\n\t\t\t:before {\n\t\t\t\tcontent: '';\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 1px;\n\t\t\t\theight: 100%;\n\t\t\t\tborder-left: 1px solid ${verticalDividerColour};\n\t\t\t}\n\t\t}\n\t`;\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n","import { jsx } from '@emotion/react/jsx-runtime';\nimport { buttonContents } from './shared.js';\nimport { buttonStyles } from './styles.js';\n\nconst Button = ({\n  priority,\n  size,\n  icon: iconSvg,\n  iconSide,\n  hideLabel,\n  nudgeIcon,\n  type = \"button\",\n  isLoading = false,\n  loadingAnnouncement = \"Loading\",\n  cssOverrides,\n  children,\n  theme,\n  ...props\n}) => /* @__PURE__ */ jsx(\n  \"button\",\n  {\n    css: buttonStyles({\n      size,\n      priority,\n      icon: iconSvg,\n      hideLabel,\n      iconSide,\n      nudgeIcon,\n      cssOverrides,\n      isLoading,\n      theme\n    }),\n    type,\n    \"aria-live\": \"polite\",\n    \"aria-label\": isLoading ? loadingAnnouncement : void 0,\n    ...props,\n    children: buttonContents({\n      hideLabel,\n      iconSvg,\n      isLoading,\n      children\n    })\n  }\n);\n\nexport { Button };\n"],"names":["GAP_SIZE","space","liStyles","css","sidePaddingStylesMobile","override","until","tablet","snapAlignStartStyles","decideDivider","offsetBottomPaddingOnDivider","paddingSize","verticalDividerColour","bottomPaddingSize","from","verticalDividerWithBottomOffset","verticalDivider","LI","children","percentage","stretch","showDivider","padSides","padSidesOverride","padSidesOnMobile","padSidesMobileOverride","snapAlignStart","palette","sizeStyles","sizeStyle","decideSize","li","SvgChevronLeftSingle","svg","viewBox","xmlns","width","height","path","fillRule","clipRule","d","SvgChevronRightSingle","isLastCardShowing","index","totalStories","containerMargins","leftCol","containerStyles","carouselStyle","dotsStyle","dotStyle","neutral","activeDotStyles","activeDotColour","adjustNumberOfDotsStyle","phablet","desktop","buttonContainerStyle","getZIndex","prevButtonContainerStyle","leftColSize","wide","nextButtonContainerStyle","buttonStyle","brandAlt","prevButtonStyle","nextButtonStyle","headerRowStyles","headerStyles","headlineBold24","text","primary","titleStyle","titleHighlightColour","isCuratedContent","Title","title","h2","span","HeaderAndNav","heading","newsletters","goToIndex","div","map","_","i","onClick","aria-hidden","length","data-link-name","CarouselForNewsletters","onwardsSource","carouselPosition","carouselRef","useRef","setIndex","useState","maxIndex","setMaxIndex","arrowName","notPresentation","el","getAttribute","getItems","current","Array","getSetIndex","offsets","filter","offsetLeft","offset","isUndefined","scrolled","scrollLeft","active","findIndex","Math","max","getIndex","newIndex","scrollTo","left","prev","nextOffset","reverse","find","o","next","currOffset","useEffect","carousel","addEventListener","libDebounce","removeEventListener","m","formatAttrString","LeftColumn","borderType","size","button","type","aria-label","data-component","data-link","Hide","when","breakpoint","ul","ref","data-heatphan-type","newsletter","uniqueKey","identityName","isFirst","role","NewsletterCard","cardPosition","groupTitle","input","str","replace","RegExp","removeTempChars","replaceSpacesWithHyphens","toLowerCase","indices","name","indexOf","colour","Button","priority","icon","iconSvg","iconSide","hideLabel","nudgeIcon","isLoading","loadingAnnouncement","cssOverrides","theme","props","jsx","buttonStyles","buttonContents"],"sourceRoot":""}