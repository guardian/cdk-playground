{"version":3,"file":"LiveBlogEpic-importable.client.web.37f0dee5440eb425273f.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/LiveBlogEpic.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useSDC.ts","webpack://@guardian/dotcom-rendering/./src/lib/articleCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/lib/dailyArticleCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAuthStatus.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCountryCode.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport type { OphanComponentEvent } from '@guardian/libs';\nimport { getCookie, isUndefined, log, storage } from '@guardian/libs';\nimport { space } from '@guardian/source/foundations';\nimport { getEpicViewLog } from '@guardian/support-dotcom-components';\nimport type { EpicPayload } from '@guardian/support-dotcom-components/dist/dotcom/types';\nimport React, { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { submitComponentEvent } from '../client/ophan/ophan';\nimport { useArticleCounts } from '../lib/articleCount';\nimport {\n\tshouldHideSupportMessaging,\n\tuseHasOptedOutOfArticleCount,\n} from '../lib/contributions';\nimport { useIsSignedIn } from '../lib/useAuthStatus';\nimport { useCountryCode } from '../lib/useCountryCode';\nimport { useSDCLiveblogEpic } from '../lib/useSDC';\nimport type { TagType } from '../types/tag';\nimport { useConfig } from './ConfigContext';\n\ntype Props = {\n\tsectionId: string;\n\tshouldHideReaderRevenue: boolean;\n\tisPaidContent: boolean;\n\ttags: TagType[];\n\tcontributionsServiceUrl: string;\n\tpageId: string;\n\tkeywordIds: string;\n};\n\nconst useEpic = ({ name }: { name: string }) => {\n\t// Using state here to store the Epic component that gets imported allows\n\t// us to render it with React (instead of inserting it into the dom manually)\n\tconst [Epic, setEpic] =\n\t\tuseState<React.ElementType<{ [key: string]: unknown }>>();\n\n\tuseEffect(() => {\n\t\timport(\n\t\t\t/* webpackChunkName: \"contributions-liveblog-epic\" */ `./marketing/epics/ContributionsLiveblogEpic`\n\t\t)\n\t\t\t.then((epicModule) => {\n\t\t\t\t// @ts-expect-error -- currently the type of the props in the response is too general\n\t\t\t\tsetEpic(() => epicModule.ContributionsLiveblogEpic);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconst msg = `Error importing LiveBlog epic: ${String(err)}`;\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\tnew Error(msg),\n\t\t\t\t\t'liveblog-epic',\n\t\t\t\t);\n\t\t\t});\n\t}, [name]);\n\n\treturn { Epic };\n};\n\nconst useMvtId = (isDev = false): number => {\n\tconst [mvtId, setMvtId] = useState<number>(0);\n\n\tuseEffect(() => {\n\t\tconst cookie = getCookie({ name: 'GU_mvt_id', shouldMemoize: true });\n\n\t\tif (cookie === null) return;\n\n\t\tconst id = Number(cookie) || 0;\n\n\t\tsetMvtId(id);\n\t}, [isDev]);\n\n\treturn mvtId;\n};\n\n/**\n * usePayload\n *\n * takes a series of CAPI values, reads consent, the users country, some cookie\n * values and then constructs a config object with `tracking` and `targeting`\n * properties\n *\n * @returns the payload object required to make the POST request to contributions\n */\nconst usePayload = ({\n\tshouldHideReaderRevenue,\n\tsectionId,\n\tisPaidContent,\n\ttags,\n\tpageId,\n}: {\n\tshouldHideReaderRevenue: boolean;\n\tsectionId: string;\n\tisPaidContent: boolean;\n\ttags: TagType[];\n\tpageId: string;\n\tkeywordIds: string;\n}): EpicPayload | undefined => {\n\tconst articleCounts = useArticleCounts(pageId, tags, 'LiveBlog');\n\tconst hasOptedOutOfArticleCount = useHasOptedOutOfArticleCount();\n\tconst countryCode = useCountryCode('liveblog-epic');\n\tconst mvtId = useMvtId();\n\tconst isSignedIn = useIsSignedIn();\n\n\tif (isSignedIn === 'Pending') return;\n\tconst hideSupportMessagingForUser = shouldHideSupportMessaging(isSignedIn);\n\tif (hideSupportMessagingForUser === 'Pending') return;\n\tif (articleCounts === 'Pending') return;\n\tif (hasOptedOutOfArticleCount === 'Pending') return;\n\tlog('dotcom', 'LiveBlogEpic has consent state');\n\tif (!countryCode) return;\n\tlog('dotcom', 'LiveBlogEpic has countryCode');\n\n\treturn {\n\t\ttracking: {\n\t\t\tophanPageId: window.guardian.config.ophan.pageViewId,\n\t\t\tplatformId: 'GUARDIAN_WEB',\n\t\t\tclientName: 'dcr',\n\t\t\treferrerUrl: window.location.origin + window.location.pathname,\n\t\t},\n\t\ttargeting: {\n\t\t\tcontentType: 'LiveBlog',\n\t\t\tsectionId,\n\t\t\tshouldHideReaderRevenue,\n\t\t\tisMinuteArticle: true,\n\t\t\tisPaidContent,\n\t\t\ttags,\n\t\t\tshowSupportMessaging: !hideSupportMessagingForUser,\n\t\t\tmvtId,\n\t\t\tcountryCode,\n\t\t\tepicViewLog: getEpicViewLog(storage.local),\n\t\t\tweeklyArticleHistory: articleCounts?.weeklyArticleHistory,\n\t\t\thasOptedOutOfArticleCount,\n\t\t\turl: window.location.origin + window.location.pathname,\n\t\t},\n\t};\n};\n\n/**\n * Render\n *\n * Dynamically imports and renders a given module\n *\n * @param props\n * @param props.name tring - The name of the component\n * @param props.props object - The props of the component\n * @returns The resulting react component\n */\nconst Render = ({\n\tname,\n\tprops,\n}: {\n\tname: string;\n\tprops: { [key: string]: unknown };\n}) => {\n\tconst { Epic } = useEpic({ name });\n\n\tif (isUndefined(Epic)) return null;\n\tlog('dotcom', 'LiveBlogEpic has the Epic');\n\n\treturn (\n\t\t<aside\n\t\t\tcss={css`\n\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t`}\n\t\t>\n\t\t\t{}\n\t\t\t<Epic {...props} />\n\t\t</aside>\n\t);\n};\n\n/**\n * Using the payload, make a fetch request to contributions service\n *\n * @param payload - unknown\n * @param contributionsServiceUrl - string\n */\nconst Fetch = ({\n\tpayload,\n\tcontributionsServiceUrl,\n}: {\n\tpayload: EpicPayload;\n\tcontributionsServiceUrl: string;\n}) => {\n\tconst response = useSDCLiveblogEpic(contributionsServiceUrl, payload);\n\tconst { renderingTarget } = useConfig();\n\n\t// If we didn't get a module in response (or we're still waiting) do nothing. If\n\t// no epic should be shown the response is equal to {}, hence the Object.keys\n\tif (!response?.data || Object.keys(response).length === 0) {\n\t\treturn null;\n\t}\n\tlog('dotcom', 'LiveBlogEpic has a module');\n\n\t// Add submitComponentEvent function to props to enable Ophan tracking in the component\n\tconst props = {\n\t\t...response.data.module.props,\n\t\tsubmitComponentEvent: (componentEvent: OphanComponentEvent) =>\n\t\t\tsubmitComponentEvent(componentEvent, renderingTarget),\n\t};\n\n\t// Take any returned module and render it\n\treturn <Render name={response.data.module.name} props={props} />;\n};\n\nfunction insertAfter(referenceNode: HTMLElement, newNode: Element) {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\n}\n\n/**\n * LiveBlogEpic is the support epic which appears in-between blocks in blogs\n *\n * There are three main steps to create this epic:\n *\n * 1. usePayload - Build the payload. The config object we send to contributions\n * 2. Fetch - POST the payload to the contributions endpoint\n * 3. Render - Take the props and name data we got in response to our fetch and dynamically import\n *    and render the Epic component using it\n *\n * ## Why does this need to be an Island?\n *\n * All behaviour is client-side.\n *\n * ---\n *\n * (No visual story exist)\n */\nexport const LiveBlogEpic = ({\n\tsectionId,\n\tshouldHideReaderRevenue,\n\tisPaidContent,\n\ttags,\n\tcontributionsServiceUrl,\n\tpageId,\n\tkeywordIds,\n}: Props) => {\n\tlog('dotcom', 'LiveBlogEpic started');\n\n\t// First construct the payload\n\tconst payload = usePayload({\n\t\tshouldHideReaderRevenue,\n\t\tsectionId,\n\t\tisPaidContent,\n\t\ttags,\n\t\tpageId,\n\t\tkeywordIds,\n\t});\n\tif (!payload) return null;\n\n\t/**\n\t * Here we decide where to insert the epic.\n\t *\n\t * If the url contains a permalink then we\n\t * want to insert it immediately after that block to prevent any CLS issues.\n\t *\n\t * Otherwise, we choose a random position near the top of the blog\n\t */\n\tconst epicPlaceholder = document.createElement('article');\n\tif (window.location.href.includes('#block-')) {\n\t\t// Because we're using a permalink there's a possibility the epic will render in\n\t\t// view. To prevent confusing layout shift we initially hide the message so that\n\t\t// we can reveal (animate in) it once it has been rendered\n\t\tepicPlaceholder.classList.add('pending');\n\t\tconst blockId = window.location.hash.slice(1);\n\t\tconst blockLinkedTo = document.getElementById(blockId);\n\t\tif (blockLinkedTo) {\n\t\t\tinsertAfter(blockLinkedTo, epicPlaceholder);\n\t\t}\n\t\tepicPlaceholder.classList.add('reveal');\n\t\tepicPlaceholder.classList.remove('pending');\n\t} else {\n\t\t// This is a simple page load so we simply insert the epic somewhere near the top\n\t\t// of the blog\n\t\tconst randomPosition = Math.floor(Math.random() * 3) + 1; // 1, 2 or 3\n\t\tconst aBlockNearTheTop =\n\t\t\tdocument.querySelectorAll<HTMLElement>('article.block')[\n\t\t\t\trandomPosition\n\t\t\t];\n\t\tif (aBlockNearTheTop) {\n\t\t\tinsertAfter(aBlockNearTheTop, epicPlaceholder);\n\t\t}\n\t}\n\n\treturn createPortal(\n\t\t<Fetch\n\t\t\tpayload={payload}\n\t\t\tcontributionsServiceUrl={contributionsServiceUrl}\n\t\t/>,\n\t\tepicPlaceholder,\n\t);\n};\n","import type { ModuleDataResponse } from '@guardian/support-dotcom-components';\nimport {\n\tgetBanner,\n\tgetEpic,\n\tgetLiveblogEpic,\n} from '@guardian/support-dotcom-components';\nimport type {\n\tBannerPayload,\n\tEpicPayload,\n} from '@guardian/support-dotcom-components/dist/dotcom/types';\nimport useSWRImmutable from 'swr/immutable';\n\nconst useSDC = <T>(\n\tkey: string,\n\tfetcher: (baseUrl: string, payload: T) => Promise<ModuleDataResponse>,\n): ModuleDataResponse | undefined => {\n\tconst { data, error } = useSWRImmutable(key, fetcher, {\n\t\trevalidateOnFocus: false,\n\t});\n\tif (error) {\n\t\twindow.guardian.modules.sentry.reportError(error, 'rr-epic');\n\t}\n\treturn data;\n};\n\n/**\n * Hooks for making requests to the support-dotcom-components API\n */\ntype UseSDC<T> = (\n\tbaseUrl: string,\n\tpayload: T,\n) => ModuleDataResponse | undefined;\n\nexport const useSDCEpic: UseSDC<EpicPayload> = (baseUrl, payload) =>\n\tuseSDC('epic', () => getEpic(baseUrl, payload));\n\nexport const useSDCLiveblogEpic: UseSDC<EpicPayload> = (baseUrl, payload) =>\n\tuseSDC('liveblog-epic', () => getLiveblogEpic(baseUrl, payload));\n\nexport const useSDCBanner: UseSDC<BannerPayload> = (baseUrl, payload) =>\n\tuseSDC('banner', () => getBanner(baseUrl, payload));\n","import { storage } from '@guardian/libs';\nimport {\n\tgetWeeklyArticleHistory,\n\tincrementWeeklyArticleCount,\n} from '@guardian/support-dotcom-components';\nimport type { WeeklyArticleHistory } from '@guardian/support-dotcom-components/dist/dotcom/types';\nimport { useEffect, useState } from 'react';\nimport { hasOptedOutOfWeeklyArticleCount } from '../lib/contributions';\nimport type { DailyArticleHistory } from '../lib/dailyArticleCount';\nimport {\n\tgetDailyArticleCount,\n\tincrementDailyArticleCount,\n} from '../lib/dailyArticleCount';\nimport type { TagType } from '../types/tag';\n\nexport interface ArticleCounts {\n\tweeklyArticleHistory: WeeklyArticleHistory;\n\tdailyArticleHistory: DailyArticleHistory;\n}\n\nexport const shouldIncrementArticleCount = (contentType: string): boolean => {\n\t// See https://github.com/guardian/frontend/blob/9c8707d894c858dd17de1c7c1499f6b91f5287bc/common/app/model/DotcomContentType.scala#L29\n\treturn [\n\t\t'article',\n\t\t'liveblog',\n\t\t'gallery',\n\t\t'video',\n\t\t'interactive',\n\t\t'audio',\n\t].includes(contentType.toLowerCase());\n};\n\n/**\n * This function is used to get the daily article counts.\n * It will increment the count if the contentType is listed in the shouldIncrementArticleCount function.\n * This will return and increment the dailyArticleCount for unconsented and consented users.\n *\n * @param {string} contentType\n * @return {*}  {(DailyArticleHistory | undefined)}\n */\nexport const getDailyArticleCounts = (\n\tcontentType: string,\n): DailyArticleHistory | undefined => {\n\tif (!window.guardian.dailyArticleCount) {\n\t\tif (shouldIncrementArticleCount(contentType)) {\n\t\t\tincrementDailyArticleCount();\n\t\t}\n\t\twindow.guardian.dailyArticleCount = getDailyArticleCount();\n\t}\n\n\treturn window.guardian.dailyArticleCount;\n};\n\n/**\n * This function is used to get the weekly article counts\n * It will increment the count if the contentType is listed in the shouldIncrementArticleCount function.\n * This will return and increment the weeklyArticleCount for only consented users.\n *\n * @param {string} pageId\n * @param {TagType[]} tags\n * @param {string} contentType\n * @return {*}  {(Promise<WeeklyArticleHistory | undefined>)}\n */\nexport const getWeeklyArticleCounts = async (\n\tpageId: string,\n\ttags: TagType[],\n\tcontentType: string,\n): Promise<WeeklyArticleHistory | undefined> => {\n\tif (await hasOptedOutOfWeeklyArticleCount()) return undefined;\n\n\tif (!window.guardian.weeklyArticleCount) {\n\t\tif (shouldIncrementArticleCount(contentType)) {\n\t\t\t// hasOptedOut needs to be done before we check if articleCount is set in the window\n\t\t\t// This is because a potential race condition where one invocation of getArticleCounts\n\t\t\t// is waiting for hasOptedOut another invocation might receive it and increment the article count.\n\n\t\t\tconst keywordAndToneTagIds: string[] = tags\n\t\t\t\t.filter((tag) =>\n\t\t\t\t\t['tone', 'keyword'].includes(tag.type.toLowerCase()),\n\t\t\t\t)\n\t\t\t\t.map((tag) => tag.id);\n\t\t\tincrementWeeklyArticleCount(\n\t\t\t\tstorage.local,\n\t\t\t\tpageId,\n\t\t\t\tkeywordAndToneTagIds,\n\t\t\t);\n\t\t}\n\t\twindow.guardian.weeklyArticleCount = getWeeklyArticleHistory(\n\t\t\tstorage.local,\n\t\t);\n\t}\n\n\treturn window.guardian.weeklyArticleCount;\n};\n\nexport const getArticleCounts = async (\n\tpageId: string,\n\ttags: TagType[],\n\tcontentType: string,\n): Promise<ArticleCounts | undefined> => {\n\tgetDailyArticleCounts(contentType);\n\tawait getWeeklyArticleCounts(pageId, tags, contentType);\n\n\treturn {\n\t\tdailyArticleHistory: window.guardian.dailyArticleCount ?? [],\n\t\tweeklyArticleHistory: window.guardian.weeklyArticleCount ?? [],\n\t};\n};\n\nexport const useArticleCounts = (\n\tpageId: string,\n\ttags: TagType[],\n\tcontentType: string,\n): ArticleCounts | undefined | 'Pending' => {\n\tconst [articleCounts, setArticleCounts] = useState<\n\t\tArticleCounts | undefined | 'Pending'\n\t>('Pending');\n\n\tuseEffect(() => {\n\t\tgetArticleCounts(pageId, tags, contentType)\n\t\t\t.then(setArticleCounts)\n\t\t\t.catch(() => setArticleCounts(undefined));\n\t}, [contentType, pageId, tags]);\n\n\treturn articleCounts;\n};\n","import {\n\tgetCookie,\n\tisUndefined,\n\tonConsentChange,\n\tstorage,\n} from '@guardian/libs';\nimport type { HeaderPayload } from '@guardian/support-dotcom-components/dist/dotcom/types';\nimport { useEffect, useState } from 'react';\nimport type { ArticleDeprecated } from '../types/article';\nimport type { DCRFrontType } from '../types/front';\nimport type { DCRNewslettersPageType } from '../types/newslettersPage';\nimport type { DCRTagPageType } from '../types/tagPage';\n\n// User Attributes API cookies (created on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n\n// Support Frontend cookie (created when a contribution is made)\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE =\n\t'gu.contributions.contrib-timestamp';\n\n//  Local storage keys\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_KEY = 'gu.noRRBanner';\n\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n\n// Returns true if we should hide support messaging because the user is a supporter.\n// Checks the cookie that is set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nexport const hasSupporterCookie = (\n\tisSignedIn: boolean,\n): boolean | 'Pending' => {\n\tconst cookie = getCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE });\n\tswitch (cookie) {\n\t\tcase 'true':\n\t\t\treturn true;\n\t\tcase 'false':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\t/**\n\t\t\t * If cookie is not present but user is signed in, we do not want to show any messaging.\n\t\t\t * This is because of a race condition on the first page view after signing in, where\n\t\t\t * we may be awaiting the response from the API to find out if they're a supporter.\n\t\t\t */\n\t\t\tif (isSignedIn) {\n\t\t\t\treturn 'Pending';\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t}\n};\n\n// looks at the SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (set by support-frontend when making one-off contribution)\n// and returns a Unix epoch int of the date if it exists.\nexport const getLastOneOffContributionTimestamp = (): number | undefined => {\n\t// Support cookies - expects Unix epoch\n\tconst contributionDateFromSupport = getCookie({\n\t\tname: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\t});\n\n\tif (!contributionDateFromSupport) {\n\t\treturn undefined;\n\t}\n\n\t// Parse dates into common a number\n\tconst parsedDateFromSupport = contributionDateFromSupport\n\t\t? parseInt(contributionDateFromSupport, 10)\n\t\t: 0;\n\n\treturn parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\n\nconst dateDiffDays = (from: number, to: number): number => {\n\tconst oneDayMs = 1000 * 60 * 60 * 24;\n\tconst diffMs = to - from;\n\treturn Math.floor(diffMs / oneDayMs);\n};\n\nconst AskPauseDays = 90;\n\nexport const isRecentOneOffContributor = (): boolean => {\n\tconst lastContributionDate = getLastOneOffContributionTimestamp();\n\tif (!isUndefined(lastContributionDate)) {\n\t\tconst now = Date.now();\n\t\treturn dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n\t}\n\n\treturn false;\n};\n\nexport const shouldHideSupportMessaging = (\n\tisSignedIn: boolean,\n): boolean | 'Pending' => {\n\tconst hasCookie = hasSupporterCookie(isSignedIn);\n\tif (hasCookie === 'Pending') {\n\t\treturn 'Pending';\n\t} else {\n\t\treturn hasCookie || isRecentOneOffContributor();\n\t}\n};\n\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\n\nexport const hasArticleCountOptOutCookie = (): boolean =>\n\tgetCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\n\nconst removeWeeklyArticleCountsFromLocalStorage = () =>\n\tstorage.local.remove(WEEKLY_ARTICLE_COUNT_KEY);\n\nexport const hasCmpConsentForWeeklyArticleCount = (): Promise<boolean> => {\n\treturn new Promise((resolve) => {\n\t\tif (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n\t\t\tresolve(true);\n\t\t}\n\t\tonConsentChange(({ usnat, tcfv2, aus }) => {\n\t\t\tif (usnat ?? aus) {\n\t\t\t\tresolve(true);\n\t\t\t} else if (tcfv2) {\n\t\t\t\tconst hasRequiredConsents =\n\t\t\t\t\tREQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every(\n\t\t\t\t\t\t(consent) => tcfv2.consents[consent],\n\t\t\t\t\t);\n\n\t\t\t\tif (!hasRequiredConsents) {\n\t\t\t\t\tremoveWeeklyArticleCountsFromLocalStorage();\n\t\t\t\t}\n\t\t\t\tresolve(hasRequiredConsents);\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const hasOptedOutOfArticleCount = async (): Promise<boolean> => {\n\tconst hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n\treturn !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n\nexport const hasOptedOutOfWeeklyArticleCount = async (): Promise<boolean> => {\n\tconst hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n\treturn !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = (): boolean | 'Pending' => {\n\tconst [hasOptedOut, setHasOptedOut] = useState<boolean | 'Pending'>(\n\t\t'Pending',\n\t);\n\n\tuseEffect(() => {\n\t\thasOptedOutOfArticleCount()\n\t\t\t.then(setHasOptedOut)\n\t\t\t.catch(() => setHasOptedOut(true));\n\t}, []);\n\n\treturn hasOptedOut;\n};\n\nexport const hasCmpConsentForBrowserId = (): Promise<boolean> =>\n\tnew Promise((resolve) => {\n\t\tif (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n\t\t\tresolve(true);\n\t\t}\n\t\tonConsentChange(({ usnat, tcfv2, aus }) => {\n\t\t\tif (usnat ?? aus) {\n\t\t\t\tresolve(true);\n\t\t\t} else if (tcfv2) {\n\t\t\t\tconst hasRequiredConsents =\n\t\t\t\t\tREQUIRED_CONSENTS_FOR_BROWSER_ID.every(\n\t\t\t\t\t\t(consent) => tcfv2.consents[consent],\n\t\t\t\t\t);\n\t\t\t\tresolve(hasRequiredConsents);\n\t\t\t}\n\t\t});\n\t});\n\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = (): boolean =>\n\t!!storage.local.get(NO_RR_BANNER_KEY);\n\nexport const setLocalNoBannerCachePeriod = (now: number = Date.now()): void =>\n\tstorage.local.set(NO_RR_BANNER_KEY, true, now + twentyMins);\n\n// Returns true if banner was closed in the last hour\nconst ONE_HOUR_IN_MS = 1000 * 60 * 60;\nexport const recentlyClosedBanner = (\n\tlastClosedAt?: string,\n\tnow = Date.now(),\n): boolean => {\n\tif (lastClosedAt) {\n\t\treturn now - new Date(lastClosedAt).getTime() < ONE_HOUR_IN_MS;\n\t}\n\treturn false;\n};\n\nexport const getContributionsServiceUrl = (\n\tconfig:\n\t\t| ArticleDeprecated\n\t\t| DCRFrontType\n\t\t| DCRTagPageType\n\t\t| DCRNewslettersPageType,\n): string => process.env.SDC_URL ?? config.contributionsServiceUrl;\n\ntype PurchaseInfo = HeaderPayload['targeting']['purchaseInfo'];\nexport const getPurchaseInfo = (): PurchaseInfo => {\n\tconst purchaseInfoRaw = getCookie({\n\t\tname: 'GU_CO_COMPLETE',\n\t\tshouldMemoize: true,\n\t});\n\n\tif (!purchaseInfoRaw) {\n\t\treturn undefined;\n\t}\n\n\tlet purchaseInfo: PurchaseInfo;\n\n\ttry {\n\t\tpurchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n\t} catch {} // eslint-disable-line no-empty -- silently handle error\n\n\treturn purchaseInfo;\n};\n","import { isObject, storage } from '@guardian/libs';\n\nexport interface DailyArticle {\n\tday: number;\n\tcount: number;\n}\n\nexport type DailyArticleHistory = Array<DailyArticle>;\n\nexport const DailyArticleCountKey = 'gu.history.dailyArticleCount';\n\nconst isValidHistory = (history: unknown): history is DailyArticleHistory =>\n\tArray.isArray(history) &&\n\thistory.every(\n\t\t(daily) =>\n\t\t\tisObject(daily) &&\n\t\t\t'day' in daily &&\n\t\t\t'count' in daily &&\n\t\t\ttypeof daily.day === 'number' &&\n\t\t\ttypeof daily.count === 'number',\n\t);\n\n// Returns undefined if no daily article count in local storage\nexport const getDailyArticleCount = (): DailyArticleHistory | undefined => {\n\ttry {\n\t\tconst dailyCount = storage.local.get(DailyArticleCountKey);\n\n\t\tif (!isValidHistory(dailyCount)) {\n\t\t\tthrow new Error('Invalid gu.history.dailyArticleCount value');\n\t\t}\n\n\t\treturn dailyCount;\n\t} catch (e) {\n\t\t// error parsing the string, so remove the key\n\t\tstorage.local.remove(DailyArticleCountKey);\n\t\treturn undefined;\n\t}\n};\n\nexport const getToday = (): number => Math.floor(Date.now() / 86_400_000);\n\nexport const incrementDailyArticleCount = (): void => {\n\t// get the daily article count from local storage\n\tconst dailyArticleCount = getDailyArticleCount() ?? [];\n\n\t// calculate days since unix epoch for today date\n\tconst today = getToday();\n\n\t// check if latest day is today and increment if so\n\tif (dailyArticleCount[0]?.day === today) {\n\t\tdailyArticleCount[0].count += 1;\n\t} else {\n\t\t// else set new day\n\t\tdailyArticleCount.unshift({ day: today, count: 1 });\n\n\t\t// remove any days older than 60\n\t\tconst cutOff = today - 60;\n\n\t\tconst firstOldDayIndex = dailyArticleCount.findIndex(\n\t\t\t(dailyCount) => dailyCount.day && dailyCount.day < cutOff,\n\t\t);\n\n\t\tif (firstOldDayIndex > 0) {\n\t\t\tdailyArticleCount.splice(firstOldDayIndex);\n\t\t}\n\t}\n\n\t// set the latest article count\n\tstorage.local.set(DailyArticleCountKey, dailyArticleCount);\n};\n","import { useEffect, useState } from 'react';\nimport type { AuthStatus } from './identity';\nimport {\n\teitherInOktaTestOrElse,\n\tgetSignedInStatusWithCookies,\n\tgetSignedInStatusWithOkta,\n} from './identity';\n\n/**\n * A hook to find out if a user is signed in.\n * Returns `'Pending'` until status is known.\n * Always returns `'Pending'` during server-side rendering.\n * */\nexport const useIsSignedIn = (): boolean | 'Pending' => {\n\tconst authStatus = useAuthStatus();\n\tswitch (authStatus.kind) {\n\t\tcase 'Pending':\n\t\t\treturn 'Pending';\n\t\tcase 'SignedInWithCookies':\n\t\tcase 'SignedInWithOkta':\n\t\t\treturn true;\n\t\tcase 'SignedOutWithCookies':\n\t\tcase 'SignedOutWithOkta':\n\t\t\treturn false;\n\t}\n};\n\nexport const useAuthStatus = (): AuthStatus => {\n\tconst [authStatus, setAuthStatus] = useState<AuthStatus>({\n\t\tkind: 'Pending',\n\t});\n\n\tuseEffect(() => {\n\t\teitherInOktaTestOrElse(\n\t\t\t(oktaAuthState) => {\n\t\t\t\tsetAuthStatus(getSignedInStatusWithOkta(oktaAuthState));\n\t\t\t},\n\t\t\t() => setAuthStatus(getSignedInStatusWithCookies()),\n\t\t).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t}, []);\n\n\treturn authStatus;\n};\n","import { type CountryCode, isNonNullable } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getLocaleCode } from './getCountryCode';\n\nexport const useCountryCode = (feature: string): CountryCode | undefined => {\n\tconst [countryCode, setCountryCode] = useState<CountryCode>();\n\n\tuseEffect(() => {\n\t\tgetLocaleCode()\n\t\t\t.then((cc) => {\n\t\t\t\tif (isNonNullable(cc)) setCountryCode(cc);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconst msg = `Error fetching country code: ${String(e)}`;\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\tnew Error(msg),\n\t\t\t\t\tfeature,\n\t\t\t\t);\n\t\t\t});\n\t}, [feature]);\n\n\treturn countryCode;\n};\n"],"names":["Render","name","props","Epic","setEpic","useState","useEffect","then","epicModule","ContributionsLiveblogEpic","catch","err","msg","String","window","guardian","modules","sentry","reportError","Error","useEpic","isUndefined","log","aside","css","space","Fetch","payload","contributionsServiceUrl","response","baseUrl","key","fetcher","data","error","useSWRImmutable","revalidateOnFocus","useSDC","getLiveblogEpic","useSDCLiveblogEpic","renderingTarget","useConfig","Object","keys","length","module","submitComponentEvent","componentEvent","insertAfter","referenceNode","newNode","parentNode","insertBefore","nextSibling","LiveBlogEpic","sectionId","shouldHideReaderRevenue","isPaidContent","tags","pageId","keywordIds","articleCounts","useArticleCounts","hasOptedOutOfArticleCount","useHasOptedOutOfArticleCount","countryCode","useCountryCode","mvtId","isDev","setMvtId","cookie","getCookie","shouldMemoize","id","Number","useMvtId","isSignedIn","useIsSignedIn","hideSupportMessagingForUser","shouldHideSupportMessaging","tracking","ophanPageId","config","ophan","pageViewId","platformId","clientName","referrerUrl","location","origin","pathname","targeting","contentType","isMinuteArticle","showSupportMessaging","epicViewLog","getEpicViewLog","storage","local","weeklyArticleHistory","url","usePayload","epicPlaceholder","document","createElement","href","includes","classList","add","blockId","hash","slice","blockLinkedTo","getElementById","remove","randomPosition","Math","floor","random","aBlockNearTheTop","querySelectorAll","createPortal","shouldIncrementArticleCount","toLowerCase","getArticleCounts","async","dailyArticleCount","incrementDailyArticleCount","getDailyArticleCount","getDailyArticleCounts","hasOptedOutOfWeeklyArticleCount","weeklyArticleCount","keywordAndToneTagIds","filter","tag","type","map","incrementWeeklyArticleCount","getWeeklyArticleHistory","getWeeklyArticleCounts","dailyArticleHistory","setArticleCounts","undefined","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_KEY","hasCookie","hasSupporterCookie","lastContributionDate","contributionDateFromSupport","parseInt","getLastOneOffContributionTimestamp","from","to","diffMs","Date","now","dateDiffDays","isRecentOneOffContributor","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasArticleCountOptOutCookie","hasCmpConsentForWeeklyArticleCount","Promise","resolve","onConsentChange","usnat","tcfv2","aus","hasRequiredConsents","every","consent","consents","hasOptedOut","setHasOptedOut","hasCmpConsentForBrowserId","withinLocalNoBannerCachePeriod","get","setLocalNoBannerCachePeriod","set","recentlyClosedBanner","lastClosedAt","getTime","getPurchaseInfo","purchaseInfoRaw","purchaseInfo","JSON","parse","decodeURIComponent","DailyArticleCountKey","dailyCount","history","Array","isArray","daily","isObject","day","count","e","getToday","today","unshift","cutOff","firstOldDayIndex","findIndex","splice","useAuthStatus","kind","authStatus","setAuthStatus","eitherInOktaTestOrElse","oktaAuthState","getSignedInStatusWithOkta","getSignedInStatusWithCookies","console","feature","setCountryCode","getLocaleCode","cc","isNonNullable"],"sourceRoot":""}