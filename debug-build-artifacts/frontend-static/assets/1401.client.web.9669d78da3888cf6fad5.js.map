{"version":3,"file":"1401.client.web.9669d78da3888cf6fad5.js","mappings":"oOAMA,MAkCaA,EAAaC,UACrBC,OAAOC,SAASC,KAAKC,WAAW,kBAnCdJ,WACtB,IAEC,MAAOK,KAAcC,GAAQC,SAASC,iBACpC,gEAIF,IAAKH,EAAW,OAChB,GAAIC,EAAKG,OAAS,EAAG,OAErB,MAAMC,GAAOC,EAAAA,EAAAA,GAAQN,GACrB,IAAKK,EAAM,OAGX,MAAME,GAAQC,EAAAA,EAAAA,GAASR,GACjBS,GAASC,EAAAA,EAAAA,KAGfH,EAAMI,UAAW,QAGXC,EAAAA,EAAAA,GAAYP,EAAME,EAAOP,GAAWa,EAAAA,EAAAA,KAAmBJ,EAC9D,CAAE,MAAOK,GAET,GAUuDC,EAAgB,C","sources":["webpack://@guardian/dotcom-rendering/./src/client/discussion.ts"],"sourcesContent":["import { doHydration } from './islands/doHydration';\nimport { getEmotionCache } from './islands/emotion';\nimport { getConfig } from './islands/getConfig';\nimport { getName } from './islands/getName';\nimport { getProps } from './islands/getProps';\n\nconst forceHydration = async (): Promise<void> => {\n\ttry {\n\t\t// Select the Discussion island element\n\t\tconst [guElement, ...rest] = document.querySelectorAll<HTMLElement>(\n\t\t\t`gu-island[name=DiscussionWeb],gu-island[name=DiscussionApps]`,\n\t\t);\n\n\t\t// If no discussion island is found, or if there are multiple discussion islands, then we don't want to force hydration\n\t\tif (!guElement) return;\n\t\tif (rest.length > 0) return;\n\n\t\tconst name = getName(guElement);\n\t\tif (!name) return;\n\n\t\t// Read the props and config from where they have been serialised in the dom using an Island\n\t\tconst props = getProps(guElement);\n\t\tconst config = getConfig();\n\n\t\t// Now that we have the props as an object, tell Discussion we want it to expand itself\n\t\tprops.expanded = true;\n\n\t\t// Force hydration\n\t\tawait doHydration(name, props, guElement, getEmotionCache(), config);\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n};\n\n/**\n * If we have either a #comment-123456 permalink or the #comments link in the url\n * then we want to hydrate and expand the discussion without waiting for the\n * reader to scroll down to it\n *\n */\nexport const discussion = async (): Promise<void> => {\n\tif (window.location.hash.startsWith('#comment')) await forceHydration();\n};\n"],"names":["discussion","async","window","location","hash","startsWith","guElement","rest","document","querySelectorAll","length","name","getName","props","getProps","config","getConfig","expanded","doHydration","getEmotionCache","err","forceHydration"],"sourceRoot":""}