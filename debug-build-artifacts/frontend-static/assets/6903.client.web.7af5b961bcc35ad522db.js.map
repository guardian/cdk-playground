{"version":3,"file":"6903.client.web.7af5b961bcc35ad522db.js","mappings":"0qBAIA,MAAMA,EAAgB,CACpBC,iBAAkBC,EAAAA,EAAQC,QAAQ,IAClCC,YAAaF,EAAAA,EAAQG,MAAM,KAC3BC,eAAgBJ,EAAAA,EAAQG,MAAM,KAC9BE,YAAaL,EAAAA,EAAQM,MAAM,KAC3BC,aAAcP,EAAAA,EAAQG,MAAM,KAC5BK,eAAgB,cAChBC,UAAWT,EAAAA,EAAQC,QAAQ,GAC3BS,eAAgBV,EAAAA,EAAQC,QAAQ,IAChCU,kBAAmBX,EAAAA,EAAQC,QAAQ,KA+C/BW,GA7CqB,KACtBC,EAAAA,GAGeb,EAAAA,EAAQG,MAAM,KAChBH,EAAAA,EAAQC,QAAQ,KACnBD,EAAAA,EAAQC,QAAQ,KAChBD,EAAAA,EAAQM,MAAM,KACbN,EAAAA,EAAQC,QAAQ,KAEnBD,EAAAA,EAAQC,QAAQ,KACXD,EAAAA,EAAQG,MAAM,KACXH,EAAAA,EAAQG,MAAM,KAEH,KAC3BW,EAAAA,IAEwB,GAC3BC,SAAU,CACRC,OAAQhB,EAAAA,EAAQC,QAAQ,IACxBC,YAAaF,EAAAA,EAAQG,MAAM,KAC3Bc,cAAejB,EAAAA,EAAQG,MAAM,KAC7BE,YAAaL,EAAAA,EAAQM,MAAM,KAC3BY,kBAAmBlB,EAAAA,EAAQG,MAAM,KACjCM,UAAWT,EAAAA,EAAQC,QAAQ,GAC3BkB,oBAAqBnB,EAAAA,EAAQC,QAAQ,IACrCU,kBAAmBX,EAAAA,EAAQC,QAAQ,MAElCmB,EAAAA,GACAC,EAAAA,IAEsB,GACzBN,SAAU,CACRC,OAAQhB,EAAAA,EAAQG,MAAM,KACtBD,YAAaF,EAAAA,EAAQC,QAAQ,KAC7BgB,cAAejB,EAAAA,EAAQC,QAAQ,KAC/BI,YAAaL,EAAAA,EAAQM,MAAM,KAC3BY,kBAAmBlB,EAAAA,EAAQC,QAAQ,KACnCQ,UAAWT,EAAAA,EAAQC,QAAQ,KAC3BkB,oBAAqBnB,EAAAA,EAAQG,MAAM,KACnCQ,kBAAmBX,EAAAA,EAAQG,MAAM,OAEhCmB,EAAAA,GACAC,EAAAA,IAE2BC,IAC9B,MAAMC,EAAmB,CAAC,EAa1B,OAZID,aAAAA,EAAAA,EAAeN,qBACjBO,EAAiBlB,aAAeiB,EAAcN,oBAE5CM,aAAAA,EAAAA,EAAeP,iBACjBQ,EAAiBrB,eAAiBoB,EAAcP,gBAE9CO,aAAAA,EAAAA,EAAeR,UACjBS,EAAiB1B,iBAAmByB,EAAcR,SAEhDQ,aAAAA,EAAAA,EAAeL,uBACjBM,EAAiBf,eAAiBc,EAAcL,qBAE3C,KAAKM,EAAqBD,EAAAA,G,gcCpEnC,MAAME,EAAY,I,IAAA,GAChBC,EACAC,MAAOC,EAAY,QACnBC,EAAO,WACPC,EAAU,eACVC,EAAc,MACd1B,EAAK,cACL2B,EAAa,aACbC,EAAY,MACZC,GAED,EADIC,E,kXAAAA,CAAAA,EAAAA,CATHT,KACAC,QACAE,UACAC,aACAC,iBACA1B,QACA2B,gBACAC,eACAC,UAGA,MAAME,GAAYC,EAAAA,EAAAA,SACZC,EAAaZ,QAAAA,EAAMU,EAYnBG,EAAehB,IAAkBiB,EAAAA,EAAAA,GACrC3C,EACAqC,EACAX,EACAZ,GAEI8B,EAAkB,I,IAAA,SAAEC,GAAU,EAClC,OAAuBC,EAAAA,EAAAA,KACrB,MACA,CACEC,IAAMrB,IAAkBsB,EAAAA,EAAAA,IAAeN,EAAYhB,EAAcT,WACjE4B,YACF,EAGEI,EAAa,I,IAAA,SAAEJ,GAAU,EAC7B,OAAuBC,EAAAA,EAAAA,KACrB,MACA,CACEC,IAAMrB,IAAkBwB,EAAAA,EAAAA,IAAUR,EAAYhB,EAAcT,WAC5D4B,YACF,EAGJ,OAAuBM,EAAAA,EAAAA,MACrB,MACA,CACEJ,IAAMrB,IAAkB0B,EAAAA,EAAAA,IAAkBV,EAAYhB,EAAcT,UAAWT,GAC/EqC,SAAU,EACQC,EAAAA,EAAAA,KACd,QACA,GACEjB,GAAIY,EACJY,KAAM,WACNN,IAAMrB,GAAkB,EACtBT,EAAAA,EAAAA,IAASyB,EAAYhB,EAAcT,UAAWT,GAC9CA,GAAQ8C,EAAAA,EAAAA,IAAcZ,EAAYhB,EAAcT,WAAa,GAC7DmB,GAEF,iBAAkB5B,EAClB+C,IA7CgBC,IACpBA,IACFA,EAAGrB,gBAAkBA,EACvB,EA2CQD,eAAgBA,QAAAA,OAAkB,EAClCF,QAAoB,MAAXA,EApDF,MAAXA,EACKA,IAEAE,OAiDwC,GACtCI,KAGSQ,EAAAA,EAAAA,KACd,OACA,CACEC,IAAMrB,IAAkB+B,EAAAA,EAAAA,IAAKf,EAAYhB,EAAcT,cAG3C6B,EAAAA,EAAAA,KAAI,QAAS,CAAEY,QAASjB,EAAYM,IAAKjB,EAAAA,GAAOe,SAAUZ,GAA6BkB,EAAAA,EAAAA,MAAK,MAAO,CAAEN,SAAU,EAC7GC,EAAAA,EAAAA,KAAIG,EAAW,CAAEJ,SAAUd,KAC3Be,EAAAA,EAAAA,KAAIF,EAAgB,CAAEC,SAAUZ,QAC3Ba,EAAAA,EAAAA,KAAIG,EAAW,CAAEJ,SAAUd,QAEtD,C,gOCjFJ,MAAM4B,EAAiB,I,IAAA,GACrB9B,EAAE,KACF+B,EAAI,MACJ9B,EAAK,UACL+B,EAAS,SACTC,GAAW,EAAK,WAChB7B,EAAU,MACVzB,EAAK,aACL4B,EAAY,SACZS,EAAQ,MACRR,GAED,EADIC,E,kXAAAA,CAAAA,EAAAA,CAVHT,KACA+B,OACA9B,QACA+B,YACAC,WACA7B,aACAzB,QACA4B,eACAS,WACAR,UAGA,MAAME,GAAYC,EAAAA,EAAAA,SACZuB,EAAUlC,QAAAA,EAAMU,EAChByB,EAASlC,GAAwBgB,EAAAA,EAAAA,KACrCmB,EAAAA,EACA,CACEC,KAAMpC,EACNG,aACA4B,YACAC,WACAzB,UAEA,GACE8B,EAA2B,iBAAV3D,GAAqCsC,EAAAA,EAAAA,KAAIsB,EAAAA,EAAa,CAAE/B,QAAOR,IAAIwC,EAAAA,EAAAA,GAAcN,GAAUlB,SAAUrC,IAAW,GACvI,OAAuB2C,EAAAA,EAAAA,MAAK,Y,wUAAY,EAAEJ,IAAK,CAACuB,EAAAA,GAAUlC,GAAeP,GAAIkC,GAAYzB,G,WAAAA,CAAOO,SAAU,CACxGmB,EACAG,EACAI,EAAAA,SAASC,IAAI3B,GAAW4B,IACfC,EAAAA,EAAAA,cACLD,EACAE,OAAOC,OACLpE,EAAQ,CACNA,OAAO,EACP,oBAAoB6D,EAAAA,EAAAA,GAAcN,IAChC,CAAC,EACL,CACEH,e,snICpCZ,MAAMU,GAAWvB,EAAAA,EAAAA,KAAGA,IACjB8B,EAAAA,EAAOP,UAKJlB,EAAoB,SAAC0B,G,IAAWtE,EAAQ,UAARA,OAAAA,QAAAA,IAAAA,UAAAA,IAAAA,UAAAA,G,OAAkBuC,EAAAA,EAAAA,KAAGA,KAQ9CgC,EAAAA,GAAOC,YAAcD,EAAAA,GAAOE,aAAe,EAKnC,aAAmC,OAA3CzE,EAAqBsE,EAAUvE,YAA6BuE,EAAU1E,aAiBhE0E,EAAU1E,Y,EAIvB0B,GAAQiB,EAAAA,EAAAA,KAAGA,KAGX9B,EAAW,SAAC6D,G,IAAWtE,EAAQ,UAARA,OAAAA,QAAAA,IAAAA,UAAAA,IAAAA,UAAAA,G,OAAkBuC,EAAAA,EAAAA,KAAGA,IAKxCmC,EAAAA,GAAMD,YACLF,EAAAA,GAAOE,YACLE,EAAAA,EAAM,GAGJL,EAAUpE,eAGC0E,EAAAA,EAAYC,MAE5BP,EAAU7E,iBAGhBqF,EAAAA,EAGUC,EAAAA,EAGO,aAAmC,OAA3C/E,EAAqBsE,EAAUvE,YAA6BuE,EAAUxE,gBAW7EkF,EAAAA,IACOV,EAAUjE,kB,EAUjBqC,EAAa4B,IAAc/B,EAAAA,EAAAA,KAAGA,IACjC0C,EAAAA,IACOX,EAAUnE,WAQdqC,EAAkB8B,IAAc/B,EAAAA,EAAAA,KAAGA,IACtC2C,EAAAA,IACOZ,EAAUlE,gBAEd6C,EAAQqB,IAAc/B,EAAAA,EAAAA,KAAGA,IAsBR+B,EAAUrE,aACZ2E,EAAAA,EAAYC,OAuB3B/B,EAAiBwB,IAAc/B,EAAAA,EAAAA,KAAGA,IACnB+B,EAAUvE,YAITuE,EAAU1E,Y","sources":["webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/checkbox/theme.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/checkbox/Checkbox.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/checkbox/CheckboxGroup.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/checkbox/styles.js"],"sourcesContent":["import { labelThemeDefault, labelThemeBrand, themeLabel, themeLabelBrand } from '../label/theme.js';\nimport { userFeedbackThemeDefault, userFeedbackThemeBrand } from '../user-feedback/theme.js';\nimport { palette } from '../../foundations/__generated__/palette.js';\n\nconst themeCheckbox = {\n  borderUnselected: palette.neutral[46],\n  borderHover: palette.brand[500],\n  borderSelected: palette.brand[500],\n  borderError: palette.error[400],\n  fillSelected: palette.brand[500],\n  fillUnselected: \"transparent\",\n  textLabel: palette.neutral[7],\n  textSupporting: palette.neutral[46],\n  textIndeterminate: palette.neutral[46]\n};\nconst themeCheckboxGroup = {\n  ...themeLabel\n};\nconst themeCheckboxBrand = {\n  borderUnselected: palette.brand[800],\n  borderSelected: palette.neutral[100],\n  borderHover: palette.neutral[100],\n  borderError: palette.error[500],\n  fillSelected: palette.neutral[100],\n  fillUnselected: \"transparent\",\n  textLabel: palette.neutral[100],\n  textSupporting: palette.brand[800],\n  textIndeterminate: palette.brand[800]\n};\nconst themeCheckboxGroupBrand = {\n  ...themeLabelBrand\n};\nconst checkboxThemeDefault = {\n  checkbox: {\n    border: palette.neutral[46],\n    borderHover: palette.brand[500],\n    borderChecked: palette.brand[500],\n    borderError: palette.error[400],\n    backgroundChecked: palette.brand[500],\n    textLabel: palette.neutral[7],\n    textLabelSupporting: palette.neutral[46],\n    textIndeterminate: palette.neutral[46]\n  },\n  ...userFeedbackThemeDefault,\n  ...labelThemeDefault\n};\nconst checkboxThemeBrand = {\n  checkbox: {\n    border: palette.brand[800],\n    borderHover: palette.neutral[100],\n    borderChecked: palette.neutral[100],\n    borderError: palette.error[500],\n    backgroundChecked: palette.neutral[100],\n    textLabel: palette.neutral[100],\n    textLabelSupporting: palette.brand[800],\n    textIndeterminate: palette.brand[800]\n  },\n  ...userFeedbackThemeBrand,\n  ...labelThemeBrand\n};\nconst transformProviderTheme = (providerTheme) => {\n  const transformedTheme = {};\n  if (providerTheme?.backgroundChecked) {\n    transformedTheme.fillSelected = providerTheme.backgroundChecked;\n  }\n  if (providerTheme?.borderChecked) {\n    transformedTheme.borderSelected = providerTheme.borderChecked;\n  }\n  if (providerTheme?.border) {\n    transformedTheme.borderUnselected = providerTheme.border;\n  }\n  if (providerTheme?.textLabelSupporting) {\n    transformedTheme.textSupporting = providerTheme.textLabelSupporting;\n  }\n  return { ...transformedTheme, ...providerTheme };\n};\n\nexport { checkboxThemeBrand, checkboxThemeDefault, themeCheckbox, themeCheckboxBrand, themeCheckboxGroup, themeCheckboxGroupBrand, transformProviderTheme };\n","import { jsxs, jsx } from '@emotion/react/jsx-runtime';\nimport { useId } from 'react';\nimport { mergeThemes } from '../utils/themes.js';\nimport { checkboxContainer, checkbox, errorCheckbox, tick, label, supportingText, labelText } from './styles.js';\nimport { transformProviderTheme, themeCheckbox } from './theme.js';\n\nconst Checkbox = ({\n  id,\n  label: labelContent,\n  checked,\n  supporting,\n  defaultChecked,\n  error,\n  indeterminate,\n  cssOverrides,\n  theme,\n  ...props\n}) => {\n  const defaultId = useId();\n  const checkboxId = id ?? defaultId;\n  const isChecked = () => {\n    if (checked != null) {\n      return checked;\n    }\n    return !!defaultChecked;\n  };\n  const setIndeterminate = (el) => {\n    if (el) {\n      el.indeterminate = !!indeterminate;\n    }\n  };\n  const mergedTheme = (providerTheme) => mergeThemes(\n    themeCheckbox,\n    theme,\n    providerTheme,\n    transformProviderTheme\n  );\n  const SupportingText = ({ children }) => {\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        css: (providerTheme) => supportingText(mergedTheme(providerTheme.checkbox)),\n        children\n      }\n    );\n  };\n  const LabelText = ({ children }) => {\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        css: (providerTheme) => labelText(mergedTheme(providerTheme.checkbox)),\n        children\n      }\n    );\n  };\n  return /* @__PURE__ */ jsxs(\n    \"div\",\n    {\n      css: (providerTheme) => checkboxContainer(mergedTheme(providerTheme.checkbox), error),\n      children: [\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            id: checkboxId,\n            type: \"checkbox\",\n            css: (providerTheme) => [\n              checkbox(mergedTheme(providerTheme.checkbox), error),\n              error ? errorCheckbox(mergedTheme(providerTheme.checkbox)) : \"\",\n              cssOverrides\n            ],\n            \"aria-invalid\": !!error,\n            ref: setIndeterminate,\n            defaultChecked: defaultChecked ?? void 0,\n            checked: checked != null ? isChecked() : void 0,\n            ...props\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          \"span\",\n          {\n            css: (providerTheme) => tick(mergedTheme(providerTheme.checkbox))\n          }\n        ),\n        /* @__PURE__ */ jsx(\"label\", { htmlFor: checkboxId, css: label, children: supporting ? /* @__PURE__ */ jsxs(\"div\", { children: [\n          /* @__PURE__ */ jsx(LabelText, { children: labelContent }),\n          /* @__PURE__ */ jsx(SupportingText, { children: supporting })\n        ] }) : /* @__PURE__ */ jsx(LabelText, { children: labelContent }) })\n      ]\n    }\n  );\n};\n\nexport { Checkbox };\n","import { jsxs, jsx } from '@emotion/react/jsx-runtime';\nimport { useId, Children, cloneElement } from 'react';\nimport { Legend } from '../label/Legend.js';\nimport { InlineError } from '../user-feedback/InlineError.js';\nimport { fieldset } from './styles.js';\nimport { descriptionId } from '../../foundations/accessibility/description-id.js';\n\nconst CheckboxGroup = ({\n  id,\n  name,\n  label,\n  hideLabel,\n  optional = false,\n  supporting,\n  error,\n  cssOverrides,\n  children,\n  theme,\n  ...props\n}) => {\n  const defaultId = useId();\n  const groupId = id ?? defaultId;\n  const legend = label ? /* @__PURE__ */ jsx(\n    Legend,\n    {\n      text: label,\n      supporting,\n      hideLabel,\n      optional,\n      theme\n    }\n  ) : \"\";\n  const message = typeof error === \"string\" ? /* @__PURE__ */ jsx(InlineError, { theme, id: descriptionId(groupId), children: error }) : \"\";\n  return /* @__PURE__ */ jsxs(\"fieldset\", { css: [fieldset, cssOverrides], id: groupId, ...props, children: [\n    legend,\n    message,\n    Children.map(children, (child) => {\n      return cloneElement(\n        child,\n        Object.assign(\n          error ? {\n            error: true,\n            \"aria-describedby\": descriptionId(groupId)\n          } : {},\n          {\n            name\n          }\n        )\n      );\n    })\n  ] });\n};\n\nexport { CheckboxGroup };\n","import { css } from '@emotion/react';\nimport { resets } from '../../foundations/utils/resets.js';\nimport { height, width } from '../../foundations/__generated__/size.js';\nimport { space } from '../../foundations/__generated__/space.js';\nimport { transitions } from '../../foundations/animation/transitions.js';\nimport { focusHalo } from '../../foundations/accessibility/focus-halo.js';\nimport { appearance } from '../../foundations/utils/supports-queries.js';\nimport { textSans24, textSans17, textSans15 } from '../../foundations/__generated__/typography.js';\n\nconst fieldset = css`\n\t${resets.fieldset};\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tflex-direction: column;\n`;\nconst checkboxContainer = (checkbox2, error = false) => css`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: flex-start;\n\t/**\n\t * Ensure minimum height of 44px by applying 10px padding to top and bottom\n\t * of container. This ensures consistent spacing when supporting text present.\n\t */\n\tpadding: ${(height.inputMedium - height.inputXsmall) / 2}px 0;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tinput {\n\t\t\tborder: ${error ? `2px solid ${checkbox2.borderError}` : `2px solid ${checkbox2.borderHover}`};\n\t\t\t/*\n\t\t\t\tIn the indeterminate state, we increase the border width by 1px on\n\t\t\t\thover. This causes the position of the indeterminate dash to shift as it\n\t\t\t\tis absolutely positioned. This negative margin accounts for the extra\n\t\t\t\tborder width and prevents the shift. We need to locate this css here as\n\t\t\t\tthe hover sits on the container, rather than the input element.\n\t\t\t*/\n\t\t\t&:indeterminate {\n\t\t\t\t&:after {\n\t\t\t\t\tmargin: -1px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t&:active {\n\t\tinput {\n\t\t\tborder-color: ${checkbox2.borderHover};\n\t\t}\n\t}\n`;\nconst label = css`\n\tcursor: pointer;\n`;\nconst checkbox = (checkbox2, error = false) => css`\n\tflex: 0 0 auto;\n\tbox-sizing: border-box;\n\tdisplay: inline-block;\n\tcursor: pointer;\n\twidth: ${width.inputXsmall}px;\n\theight: ${height.inputXsmall}px;\n\tmargin: 0 ${space[2]}px 0 0;\n\n\tborder: 1px solid currentColor;\n\tbackground: ${checkbox2.fillUnselected};\n\tborder-radius: 4px;\n\tposition: relative;\n\ttransition: box-shadow ${transitions.short};\n\ttransition-delay: 0.08s;\n\tcolor: ${checkbox2.borderUnselected};\n\n\t&:focus {\n\t\t${focusHalo};\n\t}\n\n\t@supports (${appearance}) {\n\t\tappearance: none;\n\t\t&:checked {\n\t\t\tborder: ${error ? `2px solid ${checkbox2.borderError}` : `2px solid ${checkbox2.borderSelected}`};\n\t\t\t& ~ span:before {\n\t\t\t\tright: 0;\n\t\t\t}\n\t\t\t& ~ span:after {\n\t\t\t\ttop: 0;\n\t\t\t}\n\t\t}\n\n\t\t&:indeterminate {\n\t\t\t&:after {\n\t\t\t\t${textSans24};\n\t\t\t\tcolor: ${checkbox2.textIndeterminate};\n\t\t\t\tcontent: '-';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: -7px;\n\t\t\t\tleft: 6px;\n\t\t\t\tz-index: 5;\n\t\t\t}\n\t\t}\n\t}\n`;\nconst labelText = (checkbox2) => css`\n\t${textSans17};\n\tcolor: ${checkbox2.textLabel};\n\twidth: 100%;\n\tmargin-top: 1px;\n\t/* If label text is empty, add additional spacing to align supporting text */\n\t&:empty {\n\t\tmargin-top: 2px;\n\t}\n`;\nconst supportingText = (checkbox2) => css`\n\t${textSans15};\n\tcolor: ${checkbox2.textSupporting};\n`;\nconst tick = (checkbox2) => css`\n\t@supports (\n\t\t(appearance: none) or (-webkit-appearance: none) or (-moz-appearance: none)\n\t) {\n\t\t/* overall positional properties */\n\t\tposition: absolute;\n\t\twidth: 6px;\n\t\theight: 12px;\n\t\ttransform: rotate(45deg);\n\t\ttop: 15px;\n\t\tleft: 9px;\n\t\t/**\n\t\t * This prevents simulated click events to the checkbox (eg. from Selenium\n\t\t * tests) being intercepted by the tick\n\t\t */\n\t\tpointer-events: none;\n\n\t\t/* the checkmark ✓ */\n\t\t&:after,\n\t\t&:before {\n\t\t\tposition: absolute;\n\t\t\tdisplay: block;\n\t\t\tbackground-color: ${checkbox2.fillSelected};\n\t\t\ttransition: all ${transitions.short} ease-in-out;\n\t\t\tcontent: '';\n\t\t}\n\n\t\t/* the short side */\n\t\t&:before {\n\t\t\theight: 2px;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tright: 100%;\n\t\t\ttransition-delay: 0.05s;\n\t\t}\n\n\t\t/* the long side */\n\t\t&:after {\n\t\t\tbottom: 0;\n\t\t\tright: 0;\n\t\t\ttop: 100%;\n\t\t\twidth: 2px;\n\t\t\ttransition-delay: 0.1s;\n\t\t}\n\t}\n`;\nconst errorCheckbox = (checkbox2) => css`\n\tborder: 2px solid ${checkbox2.borderError};\n\tborder-radius: 4px;\n\t&:not(:checked):hover,\n\t&:active {\n\t\tborder: 2px solid ${checkbox2.borderHover};\n\t}\n`;\n\nexport { checkbox, checkboxContainer, errorCheckbox, fieldset, label, labelText, supportingText, tick };\n"],"names":["themeCheckbox","borderUnselected","palette","neutral","borderHover","brand","borderSelected","borderError","error","fillSelected","fillUnselected","textLabel","textSupporting","textIndeterminate","transformProviderTheme","themeLabel","themeLabelBrand","checkbox","border","borderChecked","backgroundChecked","textLabelSupporting","userFeedbackThemeDefault","labelThemeDefault","userFeedbackThemeBrand","labelThemeBrand","providerTheme","transformedTheme","Checkbox","id","label","labelContent","checked","supporting","defaultChecked","indeterminate","cssOverrides","theme","props","defaultId","useId","checkboxId","mergedTheme","mergeThemes","SupportingText","children","jsx","css","supportingText","LabelText","labelText","jsxs","checkboxContainer","type","errorCheckbox","ref","el","tick","htmlFor","CheckboxGroup","name","hideLabel","optional","groupId","legend","Legend","text","message","InlineError","descriptionId","fieldset","Children","map","child","cloneElement","Object","assign","resets","checkbox2","height","inputMedium","inputXsmall","width","space","transitions","short","focusHalo","appearance","textSans24","textSans17","textSans15"],"sourceRoot":""}