{"version":3,"file":"ScrollableMedium-importable.client.web.legacy.24ed0832ef272cf8d588.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/FrontCard.tsx","webpack://@guardian/dotcom-rendering/./src/components/CarouselNavigationButtons.tsx","webpack://@guardian/dotcom-rendering/./src/components/ScrollableCarousel.tsx","webpack://@guardian/dotcom-rendering/./src/components/ScrollableMedium.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/ophan-helpers.ts"],"sourcesContent":["import { ArticleDesign } from '../lib/articleFormat';\nimport { Card } from './Card/Card';\n/**\n * A wrapper around the normal Card component providing sensible defaults for Cards on front containers.\n *\n * Any prop used by the original Card can be used in FrontCard to override the defaults.\n *\n * Note: Below parameters are not an exhaustive list of params used by FrontCard, rather they are a list of\n * commonly overridden params to make it easier for a developer to know if they actually need to override these values.\n *\n * @param props\n * @param [props.headlineSize] - Defaults to \"medium\"\n * @param [props.imagePosition] - Defaults to \"top\"\n * @param [props.imagePositionOnMobile] - Defaults to \"left\"\n * @param [props.imageSize] - Defaults to \"small\"\n * @param [props.supportingContent] - Defaults to undefined, set to trail.supportingContent if you want this card to show sublinks.\n * @param [props.trailText] - Defaults to undefined, set to `trail.trailText` if you want this card to show trail text.\n */\nexport const FrontCard = (props) => {\n    const { trail, ...cardProps } = props;\n    const defaultProps = {\n        linkTo: trail.url,\n        format: trail.format,\n        headlineText: trail.headline,\n        byline: trail.byline,\n        showByline: trail.showByline,\n        showQuotedHeadline: trail.showQuotedHeadline,\n        webPublicationDate: trail.webPublicationDate,\n        kickerText: trail.kickerText,\n        showPulsingDot: trail.format.design === ArticleDesign.LiveBlog,\n        showClock: false,\n        image: trail.image,\n        isCrossword: trail.isCrossword,\n        canPlayInline: true,\n        starRating: trail.starRating,\n        dataLinkName: trail.dataLinkName,\n        snapData: trail.snapData,\n        discussionApiUrl: trail.discussionApiUrl,\n        discussionId: trail.discussionId,\n        avatarUrl: trail.avatarUrl,\n        mainMedia: trail.mainMedia,\n        isExternalLink: trail.isExternalLink,\n        branding: trail.branding,\n        slideshowImages: trail.slideshowImages,\n        showLivePlayable: trail.showLivePlayable,\n        showMainVideo: trail.showMainVideo,\n        galleryCount: trail.galleryCount,\n        podcastImage: trail.podcastImage,\n    };\n    return Card({ ...defaultProps, ...cardProps });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { from, space } from '@guardian/source/foundations';\nimport { Button, SvgChevronLeftSingle, SvgChevronRightSingle, } from '@guardian/source/react-components';\nimport { palette } from '../palette';\nconst themeButton = {\n    borderTertiary: palette('--carousel-chevron-border'),\n    textTertiary: palette('--carousel-chevron'),\n    backgroundTertiaryHover: palette('--carousel-chevron-hover'),\n};\nconst themeButtonDisabled = {\n    borderTertiary: palette('--carousel-chevron-border-disabled'),\n    textTertiary: palette('--carousel-chevron-disabled'),\n    backgroundTertiaryHover: 'transparent',\n};\nconst buttonStyles = css `\n\tdisplay: none;\n\t${from.tablet} {\n\t\tdisplay: flex;\n\t\tgap: ${space[1]}px;\n\t\tmargin-left: auto;\n\t}\n`;\n/**\n * Navigation buttons for use in a carousel-like component\n */\nexport const CarouselNavigationButtons = ({ previousButtonEnabled, nextButtonEnabled, onClickPreviousButton, onClickNextButton, dataLinkNameNextButton, dataLinkNamePreviousButton, }) => {\n    return (_jsxs(\"div\", { \"aria-controls\": \"carousel\", \"aria-label\": \"carousel arrows\", css: buttonStyles, children: [_jsx(Button, { hideLabel: true, iconSide: \"left\", icon: _jsx(SvgChevronLeftSingle, {}), onClick: onClickPreviousButton, priority: \"tertiary\", theme: previousButtonEnabled ? themeButton : themeButtonDisabled, size: \"small\", disabled: !previousButtonEnabled, \"aria-label\": \"previous\", value: \"previous\", \"data-link-name\": dataLinkNamePreviousButton }), _jsx(Button, { hideLabel: true, iconSide: \"left\", icon: _jsx(SvgChevronRightSingle, {}), onClick: onClickNextButton, priority: \"tertiary\", theme: nextButtonEnabled ? themeButton : themeButtonDisabled, size: \"small\", disabled: !nextButtonEnabled, \"aria-label\": \"next\", value: \"next\", \"data-link-name\": dataLinkNameNextButton })] }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { between, from, headlineBold28Object, space, textSansBold17Object, } from '@guardian/source/foundations';\nimport { useEffect, useRef, useState } from 'react';\nimport { nestedOphanComponents } from '../lib/ophan-helpers';\nimport { palette } from '../palette';\nimport { CarouselNavigationButtons } from './CarouselNavigationButtons';\n/**\n * Primary and Secondary containers have different typographic styles for the\n * titles. We get the font size and line height values for these from the\n * typography presets so we can calculate the offset needed to align the\n * navigation buttons with the title on tablet and desktop.\n */\nconst primaryTitlePreset = headlineBold28Object;\nconst secondaryTitlePreset = textSansBold17Object;\n/**\n * Grid sizing values to calculate negative margin used to pull navigation\n * buttons outside of container into the outer grid column at wide breakpoint.\n */\nconst gridColumnWidth = 60;\nconst gridGap = 20;\nconst gridGapMobile = 10;\n/**\n * On mobile the carousel extends into the outer margins to use the full width\n * of the screen. From tablet onwards the carousel sits within the page grid.\n *\n * The FrontSection container adds a -10px negative margin to either side of\n * the content from tablet so we add the margins back to align the carousel with\n * the grid. From leftCol we retain FrontSection's -10px negative margin on the\n * left side so that the carousel extends into the the middle of the gutter\n * between the grid columns to meet the dividing line.\n */\nconst containerStyles = css `\n\tposition: relative;\n\tmargin-left: -${gridGapMobile}px;\n\tmargin-right: -${gridGapMobile}px;\n\t${from.mobileLandscape} {\n\t\tmargin-left: -${gridGap}px;\n\t\tmargin-right: -${gridGap}px;\n\t}\n\t${from.tablet} {\n\t\tmargin-left: ${gridGap / 2}px;\n\t\tmargin-right: ${gridGap / 2}px;\n\t}\n\t${from.leftCol} {\n\t\tmargin-left: 0;\n\t}\n`;\nconst containerWithNavigationStyles = css `\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n\t${from.tablet} {\n\t\tgap: ${space[2]}px;\n\t}\n\n\t${from.wide} {\n\t\tflex-direction: row;\n\t\tgap: ${space[1]}px;\n\t}\n\n\t/**\n\t * From tablet, pull container up so navigation buttons align with title.\n\t * The margin is calculated from the front section title font size and line\n\t * height, and the default container spacing.\n\t *\n\t * From wide, the navigation buttons are pulled out of the main content area\n\t * into the right-hand column.\n\t *\n\t * Between leftCol and wide the top of the fixed dividing line is pushed\n\t * down so it starts below the navigation buttons and gap, and aligns with\n\t * the top of the carousel.\n\t */\n\t${between.tablet.and.leftCol} {\n\t\t[data-container-level='Primary'] & {\n\t\t\tmargin-top: calc(\n\t\t\t\t-${primaryTitlePreset.fontSize} * ${primaryTitlePreset.lineHeight} -\n\t\t\t\t\t${space[3]}px\n\t\t\t);\n\t\t}\n\t\t[data-container-level='Secondary'] & {\n\t\t\tmargin-top: calc(\n\t\t\t\t-${secondaryTitlePreset.fontSize} * ${secondaryTitlePreset.lineHeight} -\n\t\t\t\t\t${space[3]}px\n\t\t\t);\n\t\t}\n\t}\n\t${from.wide} {\n\t\tmargin-right: -${gridColumnWidth + gridGap / 2}px;\n\t}\n`;\nconst carouselStyles = css `\n\tdisplay: grid;\n\twidth: 100%;\n\tgrid-auto-columns: 1fr;\n\tgrid-auto-flow: column;\n\tgap: 20px;\n\toverflow-x: auto;\n\toverflow-y: hidden;\n\tscroll-snap-type: x mandatory;\n\tscroll-behavior: smooth;\n\toverscroll-behavior: contain auto;\n\t/**\n\t * Hide scrollbars\n\t * See: https://stackoverflow.com/a/38994837\n\t */\n\t::-webkit-scrollbar {\n\t\tdisplay: none; /* Safari and Chrome */\n\t}\n\tscrollbar-width: none; /* Firefox */\n\n\tpadding-left: ${gridGapMobile}px;\n\tpadding-right: ${gridGapMobile}px;\n\tscroll-padding-left: ${gridGapMobile}px;\n\t${from.mobileLandscape} {\n\t\tpadding-left: ${gridGap}px;\n\t\tpadding-right: ${gridGap}px;\n\t\tscroll-padding-left: ${gridGap}px;\n\t}\n\t${from.tablet} {\n\t\tpadding-left: 0;\n\t\tpadding-right: 0;\n\t\tscroll-padding-left: 0;\n\t}\n\t${from.leftCol} {\n\t\tpadding-left: ${gridGap / 2}px;\n\t\tscroll-padding-left: ${gridGap / 2}px;\n\t}\n`;\nconst itemStyles = css `\n\tdisplay: flex;\n\tscroll-snap-align: start;\n\tgrid-area: span 1;\n\tposition: relative;\n\t:not(:first-child)::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tleft: -10px;\n\t\twidth: 1px;\n\t\tbackground-color: ${palette('--card-border-top')};\n\t\ttransform: translateX(-50%);\n\t}\n`;\n/**\n * Generates CSS styles for a grid layout used in a carousel.\n *\n * @param {number} totalCards - The total number of cards in the carousel.\n * @param {number} visibleCardsOnMobile - Number of cards to show at once on mobile.\n * @param {number} visibleCardsOnTablet - Number of cards to show at once on tablet.\n * @returns {string} - The CSS styles for the grid layout.\n */\nconst generateCarouselColumnStyles = (totalCards, visibleCardsOnMobile, visibleCardsOnTablet) => {\n    const peepingCardWidth = space[8];\n    const cardGap = 20;\n    const offsetPeepingCardWidth = peepingCardWidth / visibleCardsOnMobile + cardGap;\n    const offsetCardGap = (cardGap * (visibleCardsOnTablet - 1)) / visibleCardsOnTablet;\n    return css `\n\t\t/**\n\t\t * On mobile a 32px slice of the next card is shown to indicate there\n\t\t * are more cards that can be scrolled to. Extra padding is also added\n\t\t * to the left and right to align cards with the page grid as the\n\t\t * carousel extends into the outer margins on mobile.\n\t\t *\n\t\t * These values are divided by the number of visible cards and\n\t\t * subtracted from their width so they are shown at the correct size.\n\t\t */\n\t\tgrid-template-columns: repeat(\n\t\t\t${totalCards},\n\t\t\tcalc(\n\t\t\t\t(100% / ${visibleCardsOnMobile}) - ${offsetPeepingCardWidth}px +\n\t\t\t\t\t${gridGapMobile / visibleCardsOnMobile}px\n\t\t\t)\n\t\t);\n\t\t${from.mobileLandscape} {\n\t\t\tgrid-template-columns: repeat(\n\t\t\t\t${totalCards},\n\t\t\t\tcalc(\n\t\t\t\t\t(100% / ${visibleCardsOnMobile}) -\n\t\t\t\t\t\t${offsetPeepingCardWidth}px +\n\t\t\t\t\t\t${gridGap / visibleCardsOnMobile}px\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\t${from.tablet} {\n\t\t\tgrid-template-columns: repeat(\n\t\t\t\t${totalCards},\n\t\t\t\tcalc(${100 / visibleCardsOnTablet}% - ${offsetCardGap}px)\n\t\t\t);\n\t\t}\n\t`;\n};\n/**\n * A component used in the carousel fronts containers (e.g. small/medium/feature)\n */\nexport const ScrollableCarousel = ({ children, carouselLength, visibleCardsOnMobile, visibleCardsOnTablet, }) => {\n    const carouselRef = useRef(null);\n    const [previousButtonEnabled, setPreviousButtonEnabled] = useState(false);\n    const [nextButtonEnabled, setNextButtonEnabled] = useState(true);\n    const showNavigation = carouselLength > visibleCardsOnTablet;\n    const scrollTo = (direction) => {\n        if (!carouselRef.current)\n            return;\n        const cardWidth = carouselRef.current.querySelector('li')?.offsetWidth ?? 0;\n        const offset = direction === 'left' ? -cardWidth : cardWidth;\n        carouselRef.current.scrollBy({\n            left: offset,\n            behavior: 'smooth',\n        });\n    };\n    /**\n     * Updates state of navigation buttons based on carousel's scroll position.\n     *\n     * This function checks the current scroll position of the carousel and sets\n     * the styles of the previous and next buttons accordingly. The button state\n     * is toggled when the midpoint of the first or last card has been scrolled\n     * in or out of view.\n     */\n    const updateButtonVisibilityOnScroll = () => {\n        const carouselElement = carouselRef.current;\n        if (!carouselElement)\n            return;\n        const scrollLeft = carouselElement.scrollLeft;\n        const maxScrollLeft = carouselElement.scrollWidth - carouselElement.clientWidth;\n        const cardWidth = carouselElement.querySelector('li')?.offsetWidth ?? 0;\n        setPreviousButtonEnabled(scrollLeft > cardWidth / 2);\n        setNextButtonEnabled(scrollLeft < maxScrollLeft - cardWidth / 2);\n    };\n    /**\n     * Throttle scroll events to optimise performance. As we're only using this\n     * to toggle button state as the carousel is scrolled we don't need to\n     * handle every event. This function ensures the callback is only called\n     * once every 200ms, no matter how many scroll events are fired.\n     */\n    const throttleEvent = (callback) => {\n        let isThrottled = false;\n        return function () {\n            if (!isThrottled) {\n                callback();\n                isThrottled = true;\n                setTimeout(() => (isThrottled = false), 200);\n            }\n        };\n    };\n    useEffect(() => {\n        const carouselElement = carouselRef.current;\n        if (!carouselElement)\n            return;\n        carouselElement.addEventListener('scroll', throttleEvent(updateButtonVisibilityOnScroll));\n        return () => {\n            carouselElement.removeEventListener('scroll', throttleEvent(updateButtonVisibilityOnScroll));\n        };\n    }, []);\n    return (_jsxs(\"div\", { css: [\n            containerStyles,\n            showNavigation && containerWithNavigationStyles,\n        ], children: [_jsx(\"ol\", { ref: carouselRef, css: [\n                    carouselStyles,\n                    generateCarouselColumnStyles(carouselLength, visibleCardsOnMobile, visibleCardsOnTablet),\n                ], \"data-heatphan-type\": \"carousel\", children: children }), showNavigation && (_jsx(CarouselNavigationButtons, { previousButtonEnabled: previousButtonEnabled, nextButtonEnabled: nextButtonEnabled, onClickPreviousButton: () => scrollTo('left'), onClickNextButton: () => scrollTo('right'), dataLinkNamePreviousButton: nestedOphanComponents('carousel', 'previous-button'), dataLinkNameNextButton: nestedOphanComponents('carousel', 'next-button') }))] }));\n};\nScrollableCarousel.Item = ({ children }) => (_jsx(\"li\", { css: itemStyles, children: children }));\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { isMediaCard } from '../lib/cardHelpers';\nimport { FrontCard } from './FrontCard';\nimport { ScrollableCarousel } from './ScrollableCarousel';\n/**\n * A container used on fronts to display a carousel of small cards\n *\n * ## Why does this need to be an Island?\n *\n * The carouselling arrow buttons need to run javascript.\n */\nexport const ScrollableMedium = ({ trails, containerPalette, containerType, absoluteServerTimes, imageLoading, showAge, aspectRatio, }) => {\n    return (_jsx(ScrollableCarousel, { carouselLength: trails.length, visibleCardsOnMobile: 2, visibleCardsOnTablet: 4, children: trails.map((trail) => {\n            const imagePosition = isMediaCard(trail.format)\n                ? 'top'\n                : 'bottom';\n            return (_jsx(ScrollableCarousel.Item, { children: _jsx(FrontCard, { trail: trail, imageLoading: imageLoading, absoluteServerTimes: !!absoluteServerTimes, containerPalette: containerPalette, containerType: containerType, showAge: !!showAge, headlineSizes: {\n                        desktop: 'xsmall',\n                        tablet: 'xxsmall',\n                    }, imagePositionOnDesktop: imagePosition, imagePositionOnMobile: imagePosition, imageSize: \"medium\", trailText: undefined, supportingContent: undefined, aspectRatio: aspectRatio, kickerText: trail.kickerText, showLivePlayable: trail.showLivePlayable, showTopBarDesktop: false, showTopBarMobile: false }) }, trail.url));\n        }) }));\n};\n","export const nestedOphanComponents = (...components) => components.join(' : ');\n"],"names":["FrontCard","props","trail","cardProps","_objectWithoutProperties","_excluded","defaultProps","linkTo","url","format","headlineText","headline","byline","showByline","showQuotedHeadline","webPublicationDate","kickerText","showPulsingDot","design","ArticleDesign","LiveBlog","showClock","image","isCrossword","canPlayInline","starRating","dataLinkName","snapData","discussionApiUrl","discussionId","avatarUrl","mainMedia","isExternalLink","branding","slideshowImages","showLivePlayable","showMainVideo","galleryCount","podcastImage","Card","_objectSpread","themeButton","borderTertiary","palette","textTertiary","backgroundTertiaryHover","themeButtonDisabled","buttonStyles","css","from","tablet","space","CarouselNavigationButtons","_ref","previousButtonEnabled","nextButtonEnabled","onClickPreviousButton","onClickNextButton","dataLinkNameNextButton","dataLinkNamePreviousButton","_jsxs","children","_jsx","Button","hideLabel","iconSide","icon","SvgChevronLeftSingle","onClick","priority","theme","size","disabled","value","SvgChevronRightSingle","primaryTitlePreset","headlineBold28Object","secondaryTitlePreset","textSansBold17Object","gridGap","gridGapMobile","containerStyles","mobileLandscape","leftCol","containerWithNavigationStyles","wide","between","and","fontSize","lineHeight","gridColumnWidth","carouselStyles","itemStyles","generateCarouselColumnStyles","totalCards","visibleCardsOnMobile","visibleCardsOnTablet","offsetPeepingCardWidth","offsetCardGap","ScrollableCarousel","carouselLength","carouselRef","useRef","_useState","useState","_useState2","_slicedToArray","setPreviousButtonEnabled","_useState3","_useState4","setNextButtonEnabled","showNavigation","scrollTo","direction","_carouselRef$current$","_carouselRef$current$2","current","cardWidth","querySelector","offsetWidth","offset","scrollBy","left","behavior","updateButtonVisibilityOnScroll","_carouselElement$quer","_carouselElement$quer2","carouselElement","scrollLeft","maxScrollLeft","scrollWidth","clientWidth","throttleEvent","callback","isThrottled","setTimeout","useEffect","addEventListener","removeEventListener","ref","nestedOphanComponents","Item","_ref2","ScrollableMedium","trails","containerPalette","containerType","absoluteServerTimes","imageLoading","showAge","aspectRatio","length","map","imagePosition","isMediaCard","headlineSizes","desktop","imagePositionOnDesktop","imagePositionOnMobile","imageSize","trailText","undefined","supportingContent","showTopBarDesktop","showTopBarMobile","_len","arguments","components","Array","_key","join"],"sourceRoot":""}