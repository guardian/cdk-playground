{"version":3,"file":"CardCommentCount-importable.client.web.legacy.57c040362d63265318cd.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/static/icons/comment.svg","webpack://@guardian/dotcom-rendering/./src/components/CardCommentCount.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/formatCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/transparentColour.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCommentCount.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/accessibility/visually-hidden.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/mq/mq.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgComment = function SvgComment(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 0l1 1v7l-1 1H7l-2 3H4V9H2L1 8V1l1-1h11z\"\n  })));\n};\nexport default SvgComment;","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { between, textSansBold12, visuallyHidden, } from '@guardian/source/foundations';\nimport { formatCount } from '../lib/formatCount';\nimport { useCommentCount } from '../lib/useCommentCount';\nimport { palette as themePalette } from '../palette';\nimport CommentIcon from '../static/icons/comment.svg';\nimport { ContainerOverrides } from './ContainerOverrides';\nconst containerStyles = (colour) => css `\n\tdisplay: flex;\n\tflex-direction: row;\n\t${textSansBold12};\n\t/**\n\t * Typography preset styles should not be overridden.\n\t * This has been done because the styles do not directly map to the new presets.\n\t * Please speak to your team's designer and update this to use a more appropriate preset.\n\t */\n\tline-height: 1.15;\n\tmargin-top: -4px;\n\tcolor: ${colour};\n`;\nconst svgStyles = (colour) => css `\n\tsvg {\n\t\tmargin-bottom: -5px;\n\t\theight: 14px;\n\t\twidth: 14px;\n\t\tmargin-right: 2px;\n\t\tfill: ${colour};\n\t}\n`;\nconst longStyles = css `\n\tdisplay: block;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: none;\n\t}\n`;\nconst shortStyles = css `\n\tdisplay: none;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: block;\n\t}\n`;\nexport const CardCommentCount = ({ containerPalette, discussionApiUrl, discussionId, isDynamo, colour = themePalette('--card-footer-text'), }) => {\n    const count = useCommentCount(discussionApiUrl, discussionId);\n    const { long, short } = formatCount(count);\n    const getCommentCountColour = () => {\n        if (isDynamo) {\n            return themePalette('--card-trail-text');\n        }\n        else {\n            return colour;\n        }\n    };\n    return (_jsx(ContainerOverrides, { containerPalette: containerPalette, children: _jsxs(\"div\", { css: containerStyles(getCommentCountColour()), children: [_jsx(\"div\", { css: svgStyles(getCommentCountColour()), children: _jsx(CommentIcon, {}) }), _jsx(\"div\", { css: longStyles, children: long }), _jsx(\"div\", { css: shortStyles, \"aria-hidden\": \"true\", children: short }), _jsxs(\"span\", { css: css `\n\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t`, children: [' ', \"comments\"] })] }) }));\n};\n","import { isUndefined } from '@guardian/libs';\nexport const formatCount = (count) => {\n    if (isUndefined(count))\n        return { short: '…', long: '…' };\n    if (count === 0)\n        return { short: '0', long: '0' };\n    const countAsInteger = Math.floor(count);\n    const displayCountLong = Intl.NumberFormat('en-GB').format(countAsInteger);\n    const displayCountShort = countAsInteger > 10000\n        ? `${Math.round(countAsInteger / 1000)}k`\n        : countAsInteger.toString();\n    return {\n        short: displayCountShort,\n        long: displayCountLong,\n    };\n};\n","const getColour = (string) => {\n    switch (string.length) {\n        case 2:\n            return parseInt(string, 16);\n        case 1:\n            return parseInt(string + string, 16);\n        default:\n            return 127;\n    }\n};\nconst fallback = 'rgba(127, 127, 127, 0.5)';\n/**\n * Transforms a hex colour to a transparent one of the same colour.\n *\n * The alternative [#RRGGBBAA notation is not well supported][caniuse],\n * so we used the more widely supported rgba() notation.\n *\n * [caniuse]: https://caniuse.com/css-rrggbbaa\n *\n * @param colour the hex string, e.g. #C70000\n * @param opacity optional opacity 0-1. Defaults to 0.5 (50%)\n * @returns an functional colour string, e.g. rgba(199, 0, 0, 0.5)\n */\nexport const transparentColour = (colour, opacity = 0.5) => {\n    // if we have an invalid string,\n    if (!colour.startsWith('#') || ![4, 7].includes(colour.length)) {\n        return fallback;\n    }\n    const hex = colour.length === 7 ? 2 : 1;\n    const r = getColour(colour.slice(1, 1 + hex));\n    const g = getColour(colour.slice(1 + hex, 1 + hex * 2));\n    const b = getColour(colour.slice(1 + hex * 2, 1 + hex * 3));\n    if ([r, g, b].some(Number.isNaN))\n        return fallback;\n    return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n};\n","import { isNonNullable, isObject } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { useApi } from './useApi';\n/**\n * **Build an initial set of discussions**\n *\n * Setting this attribute helps build an initial set of discussion IDs.\n * Without it, there is a risk that each new usage of `useCommentCount`\n * leads to a distinct request to the discussion API\n */\nexport const DISCUSSION_ID_DATA_ATTRIBUTE = 'data-discussion-id';\n/**\n * We only want to create this set on a client, never on the server\n */\nlet uniqueDiscussionIds;\n/**\n * Create an initial set of IDs by reading what is in the DOM\n */\nconst getInitialIds = () => [...document.querySelectorAll(`[${DISCUSSION_ID_DATA_ATTRIBUTE}]`)]\n    .map((element) => element.getAttribute(DISCUSSION_ID_DATA_ATTRIBUTE))\n    .filter(isNonNullable);\nexport const useCommentCount = (discussionApiUrl, shortUrl) => {\n    // A falsy value prevents fetching: https://swr.vercel.app/docs/conditional-fetching#conditional\n    const [url, setUrl] = useState();\n    useEffect(() => {\n        uniqueDiscussionIds ??= new Set(getInitialIds());\n        uniqueDiscussionIds.add(shortUrl);\n        const getCommentCountUrl = `${discussionApiUrl}/getCommentCounts?${new URLSearchParams({\n            'short-urls': [...uniqueDiscussionIds]\n                .sort() // ensures identical sets produce the same query parameter\n                .join(','),\n        }).toString()}`;\n        setUrl(getCommentCountUrl);\n    }, [discussionApiUrl, shortUrl]);\n    const { data } = useApi(url);\n    /**\n     * As per the endpoint, but let’s parse it\n     * @see https://github.com/guardian/discussion-api/blob/73e805641f509c79d12f207aeb50c3f1fb58c886/discussion-api/src/main/scala/com.gu.discussion.api/repository/Discussion.scala#L233\n     */\n    const count = isObject(data) ? data[shortUrl] : undefined;\n    return typeof count === 'number' ? count : undefined;\n};\n/** Ensure that we reduce the number of requests to get comment counts */\nexport const addDiscussionIds = (ids) => {\n    if (!uniqueDiscussionIds)\n        return;\n    for (const id of ids) {\n        uniqueDiscussionIds.add(id);\n    }\n};\n","/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour) => `var(${colour})`;\n// ----- Exports ----- //\nexport { palette };\n","const breakpoints = {\n    desktop: 980,\n    leftCol: 1140,\n    mobile: 320,\n    mobileLandscape: 480,\n    mobileMedium: 375,\n    phablet: 660,\n    tablet: 740,\n    wide: 1300\n};\nexport { breakpoints };\n","const visuallyHidden = `\n\tposition: absolute;\n\toverflow: hidden; /* gets rid of horizontal scrollbar that appears in some circumstances */\n\twhite-space: nowrap; /* The white-space property forces the content to render on one line. */\n\twidth: 1px;  /* ensures content is announced by VoiceOver. */\n\theight: 1px; /* ensures content is announced by VoiceOver. */\n\tmargin: -1px; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tpadding: 0; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tborder: 0;\n\tclip: rect(1px, 1px, 1px, 1px); /* clip removes any visible trace of the element */\n\t-webkit-clip-path: inset(50%); /* clip removes any visible trace of the element */\n\tclip-path: inset(50%); /* clip removes any visible trace of the element */\n`;\nexport { visuallyHidden };\n","import { breakpoints } from '../__generated__/breakpoints.js';\nconst smidgen = 0.1;\nconst minWidth = (from2) => `@media (min-width: ${`${from2}px`})`;\nconst maxWidth = (until2) => `@media (max-width: ${`${until2 - smidgen}px`})`;\nconst minWidthMaxWidth = (from2, until2) => `@media (min-width: ${`${from2}px`}) and (max-width: ${`${until2 - smidgen}px`})`;\nconst from = {\n    mobile: minWidth(breakpoints.mobile),\n    mobileMedium: minWidth(breakpoints.mobileMedium),\n    mobileLandscape: minWidth(breakpoints.mobileLandscape),\n    phablet: minWidth(breakpoints.phablet),\n    tablet: minWidth(breakpoints.tablet),\n    desktop: minWidth(breakpoints.desktop),\n    leftCol: minWidth(breakpoints.leftCol),\n    wide: minWidth(breakpoints.wide)\n};\nconst until = {\n    mobile: maxWidth(breakpoints.mobile),\n    mobileMedium: maxWidth(breakpoints.mobileMedium),\n    mobileLandscape: maxWidth(breakpoints.mobileLandscape),\n    phablet: maxWidth(breakpoints.phablet),\n    tablet: maxWidth(breakpoints.tablet),\n    desktop: maxWidth(breakpoints.desktop),\n    leftCol: maxWidth(breakpoints.leftCol),\n    wide: maxWidth(breakpoints.wide)\n};\nconst between = {\n    mobile: {\n        and: {\n            mobileMedium: minWidthMaxWidth(breakpoints.mobile, breakpoints.mobileMedium),\n            mobileLandscape: minWidthMaxWidth(breakpoints.mobile, breakpoints.mobileLandscape),\n            phablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n            tablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n            desktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n        }\n    },\n    mobileMedium: {\n        and: {\n            mobileLandscape: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.mobileLandscape),\n            phablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n            tablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n            desktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n        }\n    },\n    mobileLandscape: {\n        and: {\n            phablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.phablet),\n            tablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n            desktop: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide)\n        }\n    },\n    phablet: {\n        and: {\n            tablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n            desktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide)\n        }\n    },\n    tablet: {\n        and: {\n            desktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide)\n        }\n    },\n    desktop: {\n        and: {\n            leftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide)\n        }\n    },\n    leftCol: {\n        and: {\n            wide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide)\n        }\n    }\n};\nexport { between, from, until };\n"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","props","width","height","viewBox","d","containerStyles","colour","css","textSansBold12","svgStyles","longStyles","between","leftCol","and","wide","shortStyles","CardCommentCount","_ref","containerPalette","discussionApiUrl","discussionId","isDynamo","_ref$colour","themePalette","count","useCommentCount","_formatCount","formatCount","long","short","getCommentCountColour","_jsx","ContainerOverrides","children","_jsxs","CommentIcon","visuallyHidden","isUndefined","countAsInteger","Math","floor","displayCountLong","Intl","NumberFormat","format","concat","round","toString","getColour","string","parseInt","fallback","transparentColour","opacity","undefined","startsWith","includes","hex","slice","g","b","some","Number","isNaN","uniqueDiscussionIds","DISCUSSION_ID_DATA_ATTRIBUTE","shortUrl","_useState","useState","_useState2","_slicedToArray","url","setUrl","useEffect","_uniqueDiscussionIds","Set","_toConsumableArray","document","querySelectorAll","map","element","getAttribute","filter","isNonNullable","add","getCommentCountUrl","URLSearchParams","sort","join","data","useApi","isObject","addDiscussionIds","ids","_step","_iterator","_createForOfIteratorHelper","s","done","id","value","err","f","palette","breakpoints","desktop","mobile","mobileLandscape","mobileMedium","phablet","tablet","minWidth","from2","maxWidth","until2","minWidthMaxWidth","from","until"],"sourceRoot":""}