{"version":3,"file":"2572.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleCommand.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithWebIdentityCommand.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/defaultStsRoleAssumers.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthSchemeProvider.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthExtensionConfiguration.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/runtimeExtensions.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/STSClient.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/client-sts/dist-es/index.js"],"sourcesContent":["export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport class IDPCommunicationErrorException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexport class InvalidAuthorizationMessageException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const AssumeRoleWithSAMLRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SAMLAssertion && { SAMLAssertion: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithSAMLResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const GetFederationTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const GetSessionTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\n","import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidAuthorizationMessageException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithSAMLRequest(input, context),\n        [_A]: _ARWSAML,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DecodeAuthorizationMessageRequest(input, context),\n        [_A]: _DAM,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetAccessKeyInfoCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetAccessKeyInfoRequest(input, context),\n        [_A]: _GAKI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCallerIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetCallerIdentityRequest(input, context),\n        [_A]: _GCI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetFederationTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetFederationTokenRequest(input, context),\n        [_A]: _GFT,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetSessionTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetSessionTokenRequest(input, context),\n        [_A]: _GST,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAuthorizationMessageExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidAuthorizationMessageException(body.Error, context);\n    const exception = new InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_SAMLA] != null) {\n        entries[_SAMLA] = input[_SAMLA];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_DecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input[_EM] != null) {\n        entries[_EM] = input[_EM];\n    }\n    return entries;\n};\nconst se_GetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input[_AKI] != null) {\n        entries[_AKI] = input[_AKI];\n    }\n    return entries;\n};\nconst se_GetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst se_GetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_GetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAro] != null) {\n        entries[_PAro] = input[_PAro];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_NQ] != null) {\n        contents[_NQ] = __expectString(output[_NQ]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_STe] != null) {\n        contents[_STe] = __expectString(output[_STe]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_DecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {};\n    if (output[_DM] != null) {\n        contents[_DM] = __expectString(output[_DM]);\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_FederatedUser = (output, context) => {\n    const contents = {};\n    if (output[_FUI] != null) {\n        contents[_FUI] = __expectString(output[_FUI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_GetAccessKeyInfoResponse = (output, context) => {\n    const contents = {};\n    if (output[_Ac] != null) {\n        contents[_Ac] = __expectString(output[_Ac]);\n    }\n    return contents;\n};\nconst de_GetCallerIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_UI] != null) {\n        contents[_UI] = __expectString(output[_UI]);\n    }\n    if (output[_Ac] != null) {\n        contents[_Ac] = __expectString(output[_Ac]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_GetFederationTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_FU] != null) {\n        contents[_FU] = de_FederatedUser(output[_FU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    return contents;\n};\nconst de_GetSessionTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidAuthorizationMessageException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWSAML = \"AssumeRoleWithSAML\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ac = \"Account\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DAM = \"DecodeAuthorizationMessage\";\nconst _DM = \"DecodedMessage\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _EM = \"EncodedMessage\";\nconst _FU = \"FederatedUser\";\nconst _FUI = \"FederatedUserId\";\nconst _GAKI = \"GetAccessKeyInfo\";\nconst _GCI = \"GetCallerIdentity\";\nconst _GFT = \"GetFederationToken\";\nconst _GST = \"GetSessionToken\";\nconst _I = \"Issuer\";\nconst _K = \"Key\";\nconst _N = \"Name\";\nconst _NQ = \"NameQualifier\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"PrincipalArn\";\nconst _PAro = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _S = \"Subject\";\nconst _SAK = \"SecretAccessKey\";\nconst _SAMLA = \"SAMLAssertion\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SubjectType\";\nconst _STe = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _UI = \"UserId\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n","import { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser) => {\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            stsClient = new stsClientCtor({\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: requestHandler,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            stsClient = new stsClientCtor({\n                region: resolvedRegion,\n                requestHandler: requestHandler,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\n","import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithSAML\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => ({\n    ...input,\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return {\n        ...config_1,\n    };\n};\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import packageInfo from \"../package.json\";\nimport { AwsSdkSigV4Signer, emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credentialDefaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveHostHeaderConfig(_config_3);\n        const _config_5 = resolveUserAgentConfig(_config_4);\n        const _config_6 = resolveRetryConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n            identityProviderConfigProvider: this.getIdentityProviderConfigProvider(),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n    getDefaultHttpAuthSchemeParametersProvider() {\n        return defaultSTSHttpAuthSchemeParametersProvider;\n    }\n    getIdentityProviderConfigProvider() {\n        return async (config) => new DefaultIdentityProviderConfig({\n            \"aws.auth#sigv4\": config.credentials,\n        });\n    }\n}\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n","export * from \"./STSClient\";\nexport * from \"./STS\";\nexport * from \"./commands\";\nexport * from \"./models\";\nexport * from \"./defaultRoleAssumers\";\nexport { STSServiceException } from \"./models/STSServiceException\";\n"],"names":["resolveClientEndpointParameters","options","useDualstackEndpoint","useFipsEndpoint","useGlobalEndpoint","defaultSigningName","commonParams","UseGlobalEndpoint","type","name","UseFIPS","Endpoint","Region","UseDualStack","ServiceException","__ServiceException","STSServiceException","constructor","Object","setPrototypeOf","prototype","SENSITIVE_STRING","__BaseException","ExpiredTokenException","opts","$fault","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","IDPCommunicationErrorException","InvalidAuthorizationMessageException","CredentialsFilterSensitiveLog","obj","SecretAccessKey","AssumeRoleResponseFilterSensitiveLog","Credentials","AssumeRoleWithSAMLRequestFilterSensitiveLog","SAMLAssertion","AssumeRoleWithSAMLResponseFilterSensitiveLog","AssumeRoleWithWebIdentityRequestFilterSensitiveLog","WebIdentityToken","AssumeRoleWithWebIdentityResponseFilterSensitiveLog","GetFederationTokenResponseFilterSensitiveLog","GetSessionTokenResponseFilterSensitiveLog","parseXmlBody","parseBody","parseXmlErrorBody","parseErrorBody","HttpRequest","__HttpRequest","collectBody","decorateServiceException","__decorateServiceException","expectNonNull","__expectNonNull","expectString","__expectString","extendedEncodeURIComponent","__extendedEncodeURIComponent","parseRfc3339DateTimeWithOffset","__parseRfc3339DateTimeWithOffset","strictParseInt32","__strictParseInt32","withBaseException","se_AssumeRoleCommand","input","context","headers","SHARED_HEADERS","body","buildFormUrlencodedString","se_AssumeRoleRequest","_A","_AR","_V","_","buildHttpRpcRequest","undefined","se_AssumeRoleWithSAMLCommand","se_AssumeRoleWithSAMLRequest","_ARWSAML","se_AssumeRoleWithWebIdentityCommand","se_AssumeRoleWithWebIdentityRequest","_ARWWI","se_DecodeAuthorizationMessageCommand","se_DecodeAuthorizationMessageRequest","_DAM","se_GetAccessKeyInfoCommand","se_GetAccessKeyInfoRequest","_GAKI","se_GetCallerIdentityCommand","se_GetCallerIdentityRequest","_GCI","se_GetFederationTokenCommand","se_GetFederationTokenRequest","_GFT","se_GetSessionTokenCommand","se_GetSessionTokenRequest","_GST","de_AssumeRoleCommand","output","statusCode","de_CommandError","data","contents","de_AssumeRoleResponse","AssumeRoleResult","response","$metadata","deserializeMetadata","de_AssumeRoleWithSAMLCommand","de_AssumeRoleWithSAMLResponse","AssumeRoleWithSAMLResult","de_AssumeRoleWithWebIdentityCommand","de_AssumeRoleWithWebIdentityResponse","AssumeRoleWithWebIdentityResult","de_DecodeAuthorizationMessageCommand","de_DecodeAuthorizationMessageResponse","DecodeAuthorizationMessageResult","de_GetAccessKeyInfoCommand","de_GetAccessKeyInfoResponse","GetAccessKeyInfoResult","de_GetCallerIdentityCommand","de_GetCallerIdentityResponse","GetCallerIdentityResult","de_GetFederationTokenCommand","de_GetFederationTokenResponse","GetFederationTokenResult","de_GetSessionTokenCommand","de_GetSessionTokenResponse","GetSessionTokenResult","parsedOutput","errorCode","loadQueryErrorCode","de_ExpiredTokenExceptionRes","de_MalformedPolicyDocumentExceptionRes","de_PackedPolicyTooLargeExceptionRes","de_RegionDisabledExceptionRes","de_IDPRejectedClaimExceptionRes","de_InvalidIdentityTokenExceptionRes","de_IDPCommunicationErrorExceptionRes","de_InvalidAuthorizationMessageExceptionRes","parsedBody","throwDefaultError","Error","deserialized","de_ExpiredTokenException","exception","de_IDPCommunicationErrorException","de_IDPRejectedClaimException","de_InvalidAuthorizationMessageException","de_InvalidIdentityTokenException","de_MalformedPolicyDocumentException","de_PackedPolicyTooLargeException","de_RegionDisabledException","entries","_RA","_RSN","_PA","memberEntries","se_policyDescriptorListType","length","PolicyArns","forEach","key","value","loc","_P","_DS","_T","se_tagListType","Tags","_TTK","se_tagKeyListType","TransitiveTagKeys","_EI","_SN","_TC","_SI","_PC","se_ProvidedContextsListType","ProvidedContexts","_PAr","_SAMLA","_WIT","_PI","_EM","_AKI","_N","counter","entry","se_PolicyDescriptorType","_a","se_ProvidedContext","_PAro","_CA","se_Tag","_K","_Va","de_AssumedRoleUser","_ARI","_Ar","_C","de_Credentials","_ARU","_PPS","_S","_ST","_I","_Au","_NQ","_SFWIT","_Pr","_SAK","_STe","_E","_DM","_m","de_FederatedUser","_FUI","_Ac","_UI","_FU","httpStatusCode","requestId","extendedRequestId","cfId","collectBodyString","streamBody","then","utf8Encoder","path","resolvedHostname","hostname","protocol","port","basePath","endpoint","method","endsWith","slice","formEntries","map","join","Code","getEndpointPlugin","getSerdePlugin","Command","$Command","AssumeRoleCommand","classBuilder","ep","m","cs","config","o","serialize","deserialize","getEndpointParameterInstructions","s","n","f","ser","de","build","AssumeRoleWithWebIdentityCommand","ASSUME_ROLE_DEFAULT_REGION","getAccountIdFromAssumedRoleUser","assumedRoleUser","Arn","arnComponents","split","resolveRegion","_region","_parentRegion","credentialProviderLogger","region","parentRegion","debug","getDefaultRoleAssumer","stsOptions","stsClientCtor","stsClient","closureSourceCreds","sourceCreds","params","logger","parentClientConfig","requestHandler","resolvedRegion","credentialDefaultProvider","AssumedRoleUser","send","AccessKeyId","RoleArn","accountId","accessKeyId","secretAccessKey","sessionToken","SessionToken","expiration","Expiration","CredentialScope","credentialScope","getDefaultRoleAssumerWithWebIdentity","decorateDefaultCredentialProvider","provider","roleAssumer","roleAssumerWithWebIdentity","resolveAwsSdkSigV4Config","getSmithyContext","normalizeProvider","STSClient","defaultSTSHttpAuthSchemeParametersProvider","operation","createAwsAuthSigv4HttpAuthOption","authParameters","schemeId","signingProperties","propertiesExtractor","createSmithyApiNoAuthHttpAuthOption","defaultSTSHttpAuthSchemeProvider","push","resolveStsAuthConfig","resolveHttpAuthSchemeConfig","config_0","config_1","F","G","H","I","J","a","b","c","d","e","g","h","i","j","k","l","p","q","r","t","u","v","w","x","y","z","A","B","C","D","E","_data","version","parameters","rules","conditions","url","properties","authSchemes","signingName","signingRegion","error","ruleSet","awsEndpointFunctions","customEndpointFunctions","resolveEndpoint","defaultEndpointResolver","endpointParams","aws","AwsSdkSigV4Signer","NoAuthSigner","NoOpLogger","parseUrl","fromBase64","toBase64","fromUtf8","toUtf8","getRuntimeConfig","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","serviceId","urlParser","utf8Decoder","packageInfo","emitWarningIfUnsupportedVersion","awsCheckVersion","defaultProvider","defaultUserAgent","NODE_REGION_CONFIG_FILE_OPTIONS","NODE_REGION_CONFIG_OPTIONS","NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS","NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS","Hash","NODE_MAX_ATTEMPT_CONFIG_OPTIONS","NODE_RETRY_MODE_CONFIG_OPTIONS","loadConfig","loadNodeConfig","NodeHttpHandler","RequestHandler","streamCollector","calculateBodyLength","DEFAULT_RETRY_MODE","getSharedRuntimeConfig","loadConfigsForDefaultMode","resolveDefaultsModeConfig","process","defaultsMode","defaultConfigProvider","clientSharedValues","runtime","bodyLengthChecker","defaultUserAgentProvider","clientVersion","idProps","__config","maxAttempts","create","retryMode","default","sha256","bind","getHttpAuthExtensionConfiguration","runtimeConfig","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","resolveHttpAuthRuntimeConfig","getAwsRegionExtensionConfiguration","resolveAwsRegionExtensionConfiguration","getHttpHandlerExtensionConfiguration","resolveHttpHandlerRuntimeConfig","getDefaultExtensionConfiguration","resolveDefaultRuntimeConfig","asPartial","resolveRuntimeExtensions","extensionConfiguration","extension","configure","getHostHeaderPlugin","resolveHostHeaderConfig","getLoggerPlugin","getRecursionDetectionPlugin","getUserAgentPlugin","resolveUserAgentConfig","resolveRegionConfig","DefaultIdentityProviderConfig","getHttpAuthSchemeEndpointRuleSetPlugin","getHttpSigningPlugin","getContentLengthPlugin","resolveEndpointConfig","getRetryPlugin","resolveRetryConfig","Client","__Client","__getRuntimeConfig","configuration","_config_0","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","_config_7","_config_8","middlewareStack","use","httpAuthSchemeParametersProvider","getDefaultHttpAuthSchemeParametersProvider","identityProviderConfigProvider","getIdentityProviderConfigProvider","destroy","StsGetDefaultRoleAssumer","StsGetDefaultRoleAssumerWithWebIdentity","getCustomizableStsClientCtor","baseCtor","customizations","CustomizableSTSClient","customization","stsPlugins"],"sourceRoot":""}