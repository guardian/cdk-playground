{"version":3,"file":"Liveness-importable.client.web.7a394dd791703fcf5818.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/EditorialButton/styles.ts","webpack://@guardian/dotcom-rendering/./src/components/EditorialButton/EditorialButton.tsx","webpack://@guardian/dotcom-rendering/./src/components/Toast.tsx","webpack://@guardian/dotcom-rendering/./src/components/Liveness.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useApi.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__deprecated__/colour/palette.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/mq/mq.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/button/Button.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/hide/Hide.js"],"sourcesContent":["import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { neutral } from '@guardian/source/foundations';\nimport type { ButtonPriority } from '@guardian/source/react-components';\nimport { palette } from '../../palette';\n\nconst WHITE = neutral[100];\n\nexport const decideBackground = (\n\tpriority: ButtonPriority,\n): SerializedStyles => {\n\tswitch (priority) {\n\t\tcase 'primary':\n\t\tcase 'secondary':\n\t\t\treturn css`\n\t\t\t\tbackground-color: ${palette('--editorial-button-background')};\n\t\t\t\t:hover {\n\t\t\t\t\tbackground-color: ${palette(\n\t\t\t\t\t\t'--editorial-button-background-hover',\n\t\t\t\t\t)};\n\t\t\t\t\tborder: 1px solid\n\t\t\t\t\t\t${palette('--editorial-button-border-hover')};\n\t\t\t\t}\n\t\t\t`;\n\t\tcase 'subdued':\n\t\tcase 'tertiary':\n\t\t\treturn css`\n\t\t\t\tbackground-color: transparent;\n\t\t\t`;\n\t}\n};\n\nexport const decideBorder = (priority: ButtonPriority): SerializedStyles => {\n\tswitch (priority) {\n\t\tcase 'primary':\n\t\tcase 'secondary':\n\t\tcase 'tertiary':\n\t\t\treturn css`\n\t\t\t\tborder: 1px solid currentColor;\n\t\t\t`;\n\t\tcase 'subdued':\n\t\t\treturn css`\n\t\t\t\tborder: none;\n\t\t\t`;\n\t}\n};\n\nexport const decideFont = (priority: ButtonPriority): SerializedStyles => {\n\tswitch (priority) {\n\t\tcase 'primary':\n\t\tcase 'secondary':\n\t\t\treturn css`\n\t\t\t\tcolor: ${WHITE};\n\t\t\t`;\n\t\tcase 'subdued':\n\t\tcase 'tertiary':\n\t\t\treturn css`\n\t\t\t\tcolor: ${palette('--editorial-button-text')};\n\t\t\t`;\n\t}\n};\n","import type { ButtonProps as CoreButtonProps } from '@guardian/source/react-components';\nimport { Button as CoreButton } from '@guardian/source/react-components';\nimport { decideBackground, decideBorder, decideFont } from './styles';\n\nexport interface EditorialButtonProps extends CoreButtonProps {}\n\n/**\n *\n * This is the editorial version of the core Button component.\n * This editorial version requires the format prop and uses that to override Button styles based on `format.theme`\n *\n */\nexport const EditorialButton = ({\n\tchildren,\n\tpriority = 'primary',\n\t...props\n}: EditorialButtonProps) => {\n\tconst backgroundOverrides = decideBackground(priority);\n\tconst borderOverrides = decideBorder(priority);\n\tconst fontOverrides = decideFont(priority);\n\n\treturn (\n\t\t<CoreButton\n\t\t\tpriority={priority}\n\t\t\tcssOverrides={[backgroundOverrides, borderOverrides, fontOverrides]}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</CoreButton>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { space } from '@guardian/source/foundations';\nimport { Hide } from '@guardian/source/react-components';\nimport { EditorialButton } from './EditorialButton/EditorialButton';\n\nexport type ToastProps = {\n\tcount: number;\n\tonClick: () => void;\n};\n\n/** This icon will be added to Source at a subsequent time */\nconst SvgReload = ({ size }: { size: 12 | 16 | 18 | 24 | 26 | 28 | 30 }) => {\n\tconst tight = size <= 24;\n\tconst padding = tight ? 0 : (size - 24) / 2;\n\treturn (\n\t\t<svg\n\t\t\tviewBox={\n\t\t\t\ttight ? '0 0 24 24' : `-${padding} -${padding} ${size} ${size}`\n\t\t\t}\n\t\t\twidth={size}\n\t\t\theight={size}\n\t\t>\n\t\t\t<path d=\"M11.588 1a10.928 10.928 0 0 0-9.046 4.786l.126.676.877.527.676-.176C5.85 4.508 8.506 2.98 11.588 2.98c4.936 0 8.995 4.059 8.995 9.045 0 4.961-4.059 8.995-8.995 8.995-2.832 0-5.262-1.252-6.94-3.257l3.632-.601v-1.253H1.866l-.476.476V23h1.227l.627-3.784C5.248 21.546 8.205 23 11.588 23c6.089 0 11.025-4.911 11.025-10.975A11.01 11.01 0 0 0 11.588 1Z\" />\n\t\t</svg>\n\t);\n};\n\n/**\n * A button to scroll to the top when new content exists.\n *\n * This element is rendered using a Portal into the `toast-root` div. This\n * root div has position: sticky\n */\nexport const Toast = ({ count, onClick }: ToastProps) => {\n\treturn (\n\t\t<div\n\t\t\tcss={css`\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: ${space[2]}px;\n\t\t\t`}\n\t\t\tdata-testid=\"toast\"\n\t\t>\n\t\t\t<Hide above=\"phablet\">\n\t\t\t\t<EditorialButton\n\t\t\t\t\tsize=\"xsmall\" // <-- Mobile version is xsmall\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\ticon={<SvgReload size={30} />}\n\t\t\t\t>{`${count} new update${\n\t\t\t\t\tcount === 1 ? '' : 's'\n\t\t\t\t}`}</EditorialButton>\n\t\t\t</Hide>\n\t\t\t<Hide below=\"phablet\">\n\t\t\t\t<EditorialButton\n\t\t\t\t\tsize=\"small\" // <-- Desktop version is small\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\ticon={<SvgReload size={30} />}\n\t\t\t\t>{`${count} new update${\n\t\t\t\t\tcount === 1 ? '' : 's'\n\t\t\t\t}`}</EditorialButton>\n\t\t\t</Hide>\n\t\t</div>\n\t);\n};\n","import { isUndefined } from '@guardian/libs';\nimport { useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { getEmotionCache } from '../client/islands/emotion';\nimport { initHydration } from '../client/islands/initHydration';\nimport { useApi } from '../lib/useApi';\nimport type { LiveUpdateType } from '../types/liveBlog';\nimport { Toast } from './Toast';\n\ntype Props = {\n\tpageId: string;\n\twebTitle: string;\n\tajaxUrl: string;\n\tfilterKeyEvents: boolean;\n\tenhanceTweetsSwitch: boolean;\n\tonFirstPage: boolean;\n\twebURL: string;\n\tmostRecentBlockId: string;\n\thasPinnedPost: boolean;\n};\n\n/**\n * insert\n *\n * Takes html, parses and hydrates it, inserts the resulting blocks\n * at the top of the liveblog, and then enhances any tweets\n *\n * @param {string} html The block html to be inserted\n * @returns void\n */\nfunction insert(\n\thtml: string,\n\tenhanceTweetsSwitch: boolean,\n\ttopOfBlog: Element,\n) {\n\t// Create\n\t// ------\n\tconst template = document.createElement('template');\n\ttemplate.innerHTML =\n\t\thtml + `<!-- inserted at ${new Date().toDateString()} -->`;\n\tconst fragment = template.content;\n\n\t// Remove duplicates\n\t// -----------------\n\tfor (const article of fragment.querySelectorAll('article')) {\n\t\tif (document.getElementById(article.id)) article.remove();\n\t}\n\n\t// Hydrate\n\t// -------\n\tconst islands = fragment.querySelectorAll<HTMLElement>('gu-island');\n\tvoid Promise.all(\n\t\t[...islands].map((island) => initHydration(island, getEmotionCache())),\n\t);\n\n\t// Insert\n\t// ------\n\t// Shouldn't we sanitise this html?\n\t// We're being sent this string by our own backend, not reader input, so we\n\t// trust that the tags and attributes it contains are safe and intentional\n\tconst blogBody = document.querySelector<HTMLElement>('#liveblog-body');\n\tif (!blogBody) return;\n\t// nextSibling? See: https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore#example_2\n\tblogBody.insertBefore(fragment, topOfBlog.nextSibling);\n\n\t// Enhance\n\t// -----------\n\tif (enhanceTweetsSwitch) {\n\t\tconst pendingBlocks =\n\t\t\tblogBody.querySelectorAll<HTMLElement>('.pending.block');\n\t\t// https://developer.twitter.com/en/docs/twitter-for-websites/javascript-api/guides/scripting-loading-and-initialization\n\t\tif (typeof twttr !== 'undefined') {\n\t\t\ttwttr.ready((twitter) => {\n\t\t\t\ttwitter.widgets.load(Array.from(pendingBlocks));\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * reveal any blocks that have been inserted but are still hidden\n */\nfunction revealPendingBlocks() {\n\tconst blogBody = document.querySelector<HTMLElement>('#liveblog-body');\n\tconst pendingBlocks =\n\t\tblogBody?.querySelectorAll<HTMLElement>('.pending.block');\n\tif (pendingBlocks) {\n\t\tfor (const block of pendingBlocks) {\n\t\t\tblock.classList.add('reveal-slowly');\n\t\t\tblock.classList.remove('pending');\n\t\t}\n\t}\n\n\tif (!isUndefined(pendingBlocks) && pendingBlocks.length > 0) {\n\t\t// Notify commercial that new blocks are available and they can re-run spacefinder\n\t\tdocument.dispatchEvent(new CustomEvent('liveblog:blocks-updated'));\n\t}\n}\n\n/**\n * This abstracts the code to construct the url we use for polling. Of note is the fact\n * we have put `latestBlockId` in react state; by doing this we are able to change the url\n * that SWR uses for the request whilst still benefitting from the polling logic\n *\n * @returns string\n */\nfunction getKey(\n\tpageId: string,\n\tajaxUrl: string,\n\tlatestBlockId: string,\n\tfilterKeyEvents: boolean,\n): string | undefined {\n\ttry {\n\t\t// Construct the url to poll\n\t\tconst url = new URL(`${pageId}.json`, ajaxUrl);\n\t\turl.searchParams.set('lastUpdate', latestBlockId);\n\t\turl.searchParams.set('isLivePage', 'true');\n\t\turl.searchParams.set('dcr', 'true');\n\t\turl.searchParams.set(\n\t\t\t'filterKeyEvents',\n\t\t\tfilterKeyEvents ? 'true' : 'false',\n\t\t);\n\n\t\treturn url.href;\n\t} catch {\n\t\twindow.guardian.modules.sentry.reportError(\n\t\t\tnew Error(\n\t\t\t\t`An error was thrown trying to construct a URL using pageId: ${pageId} and ajaxUrl: ${ajaxUrl}`,\n\t\t\t),\n\t\t\t'liveness-getkey',\n\t\t);\n\t\t// Returning undefined here means the request is never made\n\t\t// See: https://swr.vercel.app/docs/conditional-fetching#conditional\n\t\treturn undefined;\n\t}\n}\n\n/**\n * Allow new blocks on live blogs to be added without page reload.\n * Polls the content API inserts news blocks if the user\n * is at the top of the article.\n * If they have scrolled down, show them a toast to scroll back up.\n *\n * This component insert HTML directly, which is generated from @see LiveBlock\n * and received from the `blocksToHtml` handler.\n */\nexport const Liveness = ({\n\tpageId,\n\twebTitle,\n\tajaxUrl,\n\tfilterKeyEvents,\n\tenhanceTweetsSwitch,\n\tonFirstPage,\n\twebURL,\n\tmostRecentBlockId,\n\thasPinnedPost,\n}: Props) => {\n\tconst [showToast, setShowToast] = useState(false);\n\tconst [topOfBlogVisible, setTopOfBlogVisible] = useState<boolean>();\n\tconst [numHiddenBlocks, setNumHiddenBlocks] = useState(0);\n\tconst [latestBlockId, setLatestBlockId] = useState(mostRecentBlockId);\n\tconst [key, setKey] = useState<string>();\n\n\tconst [topOfBlog, setTopOfBlog] = useState<Element | null>(null);\n\tconst [toastRoot, setToastRoot] = useState<Element | null>(null);\n\n\tuseEffect(() => {\n\t\tsetTopOfBlog(document.getElementById('top-of-blog'));\n\t\tsetToastRoot(document.getElementById('toast-root'));\n\t}, []);\n\n\t/**\n\t * This function runs (once) after every successful useApi call. This is useful because it\n\t * allows us to avoid the problems of imperative code being executed multiple times\n\t * inside react's declarative structure (things get re-rendered when any state changes)\n\t */\n\tconst onSuccess = useCallback(\n\t\t(data: LiveUpdateType) => {\n\t\t\tif (data.numNewBlocks && data.numNewBlocks > 0) {\n\t\t\t\t// Insert the new blocks in the dom (but hidden)\n\t\t\t\tif (onFirstPage) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttopOfBlog &&\n\t\t\t\t\t\t\tinsert(data.html, enhanceTweetsSwitch, topOfBlog);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log('>> failed >>', e);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tonFirstPage &&\n\t\t\t\t\ttopOfBlogVisible &&\n\t\t\t\t\tdocument.visibilityState === 'visible'\n\t\t\t\t) {\n\t\t\t\t\trevealPendingBlocks();\n\t\t\t\t\tsetNumHiddenBlocks(0);\n\t\t\t\t} else {\n\t\t\t\t\tsetShowToast(true);\n\t\t\t\t\t// Increment the count of new posts\n\t\t\t\t\tsetNumHiddenBlocks((count) => count + data.numNewBlocks);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update the block id we use for polling\n\t\t\tif (data.mostRecentBlockId) {\n\t\t\t\tsetLatestBlockId(data.mostRecentBlockId);\n\t\t\t}\n\t\t},\n\t\t[enhanceTweetsSwitch, onFirstPage, topOfBlog, topOfBlogVisible],\n\t);\n\n\tuseEffect(() => {\n\t\t/**\n\t\t * This is a utility used by our e2e tests\n\t\t *\n\t\t * Rather than expect these scripts to depend on polling, we\n\t\t * expose this function to allow tests to manually trigger\n\t\t * updates with whatever html and properties it wants\n\t\t *\n\t\t */\n\t\twindow.mockLiveUpdate = onSuccess;\n\t}, [onSuccess]);\n\n\tuseEffect(() => {\n\t\tsetKey(getKey(pageId, ajaxUrl, latestBlockId, filterKeyEvents));\n\t}, [pageId, ajaxUrl, latestBlockId, filterKeyEvents]);\n\n\t// useApi returns { data, loading, error } but we're not using them here\n\tuseApi(key, {\n\t\trefreshInterval: 10_000,\n\t\trefreshWhenHidden: true,\n\t\tonSuccess,\n\t});\n\n\tuseEffect(() => {\n\t\tdocument.title =\n\t\t\tnumHiddenBlocks > 0 ? `(${numHiddenBlocks}) ${webTitle}` : webTitle;\n\t}, [numHiddenBlocks, webTitle]);\n\n\tuseEffect(() => {\n\t\tif (!topOfBlog) return;\n\n\t\tconst observer = new window.IntersectionObserver(([entry]) => {\n\t\t\tif (!entry) return;\n\n\t\t\tsetTopOfBlogVisible(entry.isIntersecting);\n\n\t\t\tif (entry.isIntersecting && onFirstPage) {\n\t\t\t\t// If on first page, reveal blocks\n\t\t\t\trevealPendingBlocks();\n\t\t\t\tsetNumHiddenBlocks(0);\n\t\t\t\tsetShowToast(false);\n\t\t\t}\n\t\t});\n\n\t\tobserver.observe(topOfBlog);\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t}, [topOfBlog, onFirstPage]);\n\n\t/**\n\t * This useEffect sets up a listener for when the page is backgrounded or restored. We\n\t * do this so that any new blocks that were fetched while the blog was in the\n\t * background are animated in at the point when focus is restored\n\t */\n\tuseEffect(() => {\n\t\tconst handleVisibilityChange = () => {\n\t\t\t// The blog was either hidden or has become visible\n\t\t\tif (\n\t\t\t\t// If we're returning to a blog that has pending blocks and the reader\n\t\t\t\t// is at the top of the first page then...\n\t\t\t\tdocument.visibilityState === 'visible' &&\n\t\t\t\tnumHiddenBlocks > 0 &&\n\t\t\t\ttopOfBlogVisible &&\n\t\t\t\tonFirstPage\n\t\t\t) {\n\t\t\t\trevealPendingBlocks();\n\t\t\t\tsetNumHiddenBlocks(0);\n\t\t\t\tsetShowToast(false);\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('visibilitychange', handleVisibilityChange);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\n\t\t\t\t'visibilitychange',\n\t\t\t\thandleVisibilityChange,\n\t\t\t);\n\t\t};\n\t}, [numHiddenBlocks, onFirstPage, topOfBlogVisible]);\n\n\tconst handleToastClick = useCallback(() => {\n\t\t// We adjust the position we scroll readers to based on if there is a pinned\n\t\t// post or not. If there is we want to scroll them to a position below it, if\n\t\t// there is then we want to scroll them to a position that ensures they still\n\t\t// see the key events filter\n\t\tconst placeToScrollTo = hasPinnedPost ? 'top-of-blog' : 'maincontent';\n\t\tif (onFirstPage) {\n\t\t\tsetShowToast(false);\n\n\t\t\tdocument.getElementById(placeToScrollTo)?.scrollIntoView({\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t\twindow.history.replaceState({}, '', `#${placeToScrollTo}`);\n\t\t\trevealPendingBlocks();\n\t\t\tsetNumHiddenBlocks(0);\n\t\t} else {\n\t\t\twindow.location.href = `${webURL}#${placeToScrollTo}`;\n\t\t}\n\t}, [hasPinnedPost, onFirstPage, webURL]);\n\n\tif (toastRoot && showToast) {\n\t\t/**\n\t\t * Why `createPortal`?\n\t\t *\n\t\t * We use a Portal because of a the way different browsers implement `position: sticky`.\n\t\t * A [stickily positioned element][] depends on its [containing block][] to determine\n\t\t * when to become stuck.\n\t\t *\n\t\t * In Safari the containing block is set to the immediate parent\n\t\t * whereas Chrome, Firefox and other browser are more forgiving.\n\t\t *\n\t\t * By using a Portal we can insert the Toast as a sibling to the Island, which works around\n\t\t * Safari's behaviour.\n\t\t *\n\t\t * [stickily positioned element]: https://developer.mozilla.org/en-US/docs/Web/CSS/position#types_of_positioning\n\t\t * [containing block]: https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\t\t */\n\t\treturn createPortal(\n\t\t\t<Toast onClick={handleToastClick} count={numHiddenBlocks} />,\n\t\t\ttoastRoot,\n\t\t);\n\t}\n\n\treturn null;\n};\n","import { isUndefined } from '@guardian/libs';\nimport type { SWRConfiguration } from 'swr';\nimport useSWR from 'swr';\n\nfunction checkForErrors(response: Response) {\n\tif (!response.ok) {\n\t\tthrow Error(\n\t\t\tresponse.statusText ||\n\t\t\t\t`useApi | An api call returned HTTP status ${response.status}`,\n\t\t);\n\t}\n\treturn response;\n}\n\n/** **NOTE:** no parsing is done on the response, the type is merely asserted */\nconst fetcher =\n\t<T>(init?: RequestInit) =>\n\t(url: string): Promise<T> =>\n\t\tfetch(url, init)\n\t\t\t.then(checkForErrors)\n\t\t\t.then((res) => res.json());\n\ntype ApiResponse<T, E> = {\n\tloading: boolean;\n\tdata?: T;\n\terror?: E;\n};\n\n/**\n * A custom hook to make a GET request using the given url using the SWR lib (https://swr.vercel.app/).\n *\n * @template T assert the expected response type\n * @template E assert the potential error type\n * @param {string} url - The API endpoint. Falsy values will prevent any network requests\n * @param {SWRConfiguration<Data,Err>} options - The SWR config object - https://swr.vercel.app/docs/api#options\n * @param {RequestInit} init - The fetch init object - https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * @returns {ApiResponse<Data, Err>}\n * */\nexport const useApi = <Data = unknown, Err = Error>(\n\turl: string = '',\n\toptions?: SWRConfiguration<Data, Err>,\n\tinit?: RequestInit,\n): ApiResponse<Data, Err> => {\n\tconst { data, error } = useSWR<Data, Err>(url, fetcher(init), options);\n\n\treturn {\n\t\tdata,\n\t\terror,\n\t\tloading: !!url && isUndefined(error) && isUndefined(data),\n\t};\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n","import { palette } from '../../__generated__/palette.js';\n\nconst {\n  brand,\n  brandAlt,\n  neutral,\n  error,\n  success,\n  news,\n  opinion,\n  sport,\n  culture,\n  lifestyle,\n  labs,\n  specialReport,\n  focus\n} = palette;\nconst background = {\n  primary: palette.neutral[100],\n  secondary: palette.neutral[97],\n  inverse: palette.neutral[10],\n  ctaPrimary: palette.brand[400],\n  ctaPrimaryHover: \"#234B8A\",\n  ctaSecondary: palette.brand[800],\n  ctaSecondaryHover: \"#ACC9F7\",\n  ctaTertiaryHover: \"#E5E5E5\",\n  input: palette.neutral[100],\n  inputChecked: palette.brand[500]\n};\nconst brandBackground = {\n  primary: palette.brand[400],\n  inputChecked: palette.neutral[100],\n  ctaPrimary: palette.neutral[100],\n  ctaPrimaryHover: \"#E0E0E0\",\n  ctaSecondary: palette.brand[600],\n  ctaSecondaryHover: \"#234B8A\",\n  ctaTertiaryHover: palette.brand[300]\n};\nconst brandAltBackground = {\n  primary: palette.brandAlt[400],\n  ctaPrimary: palette.neutral[7],\n  ctaPrimaryHover: \"#454545\",\n  ctaSecondary: palette.brandAlt[200],\n  ctaSecondaryHover: \"#F2AE00\",\n  ctaTertiaryHover: \"#FFD213\"\n};\nconst border = {\n  primary: palette.neutral[60],\n  secondary: palette.neutral[86],\n  success: palette.success[400],\n  error: palette.error[400],\n  ctaTertiary: palette.brand[400],\n  input: palette.neutral[60],\n  inputChecked: palette.brand[500],\n  inputHover: palette.brand[500],\n  inputActive: palette.brand[500],\n  focusHalo: palette.focus[400]\n};\nconst brandBorder = {\n  primary: palette.brand[600],\n  secondary: palette.brand[600],\n  success: palette.success[500],\n  error: palette.error[500],\n  ctaTertiary: palette.neutral[100],\n  input: palette.brand[800],\n  inputChecked: palette.neutral[100],\n  inputHover: palette.neutral[100]\n};\nconst brandAltBorder = {\n  ctaTertiary: palette.neutral[7]\n};\nconst line = {\n  primary: palette.neutral[86]\n};\nconst brandLine = {\n  primary: palette.brand[600]\n};\nconst brandAltLine = {\n  primary: palette.neutral[7]\n};\nconst text = {\n  primary: palette.neutral[7],\n  supporting: palette.neutral[46],\n  success: palette.success[400],\n  error: palette.error[400],\n  ctaPrimary: palette.neutral[100],\n  ctaSecondary: palette.brand[400],\n  ctaTertiary: palette.brand[400],\n  anchorPrimary: palette.brand[500],\n  anchorSecondary: palette.neutral[7],\n  userInput: palette.neutral[7],\n  inputLabel: palette.neutral[7],\n  inputError: palette.neutral[7],\n  inputLabelSupporting: palette.neutral[46],\n  inputChecked: palette.brand[400],\n  //choice card only\n  inputHover: palette.brand[400],\n  //choice card only\n  groupLabel: palette.neutral[7],\n  groupLabelSupporting: palette.neutral[46],\n  newsInverse: palette.news[550]\n};\nconst brandText = {\n  primary: palette.neutral[100],\n  supporting: palette.brand[800],\n  success: palette.success[500],\n  error: palette.error[500],\n  ctaPrimary: palette.brand[400],\n  ctaSecondary: palette.neutral[100],\n  ctaTertiary: palette.neutral[100],\n  anchorPrimary: palette.neutral[100],\n  anchorPrimaryHover: palette.brandAlt[400],\n  userInput: palette.neutral[100],\n  inputLabel: palette.neutral[100],\n  inputLabelSupporting: palette.brand[800]\n};\nconst brandAltText = {\n  primary: palette.neutral[7],\n  supporting: palette.neutral[60],\n  ctaPrimary: palette.neutral[100],\n  ctaSecondary: palette.neutral[7],\n  ctaTertiary: palette.neutral[7],\n  anchorPrimary: palette.neutral[7]\n};\n\nexport { background, border, brand, brandAlt, brandAltBackground, brandAltBorder, brandAltLine, brandAltText, brandBackground, brandBorder, brandLine, brandText, culture, error, focus, labs, lifestyle, line, neutral, news, opinion, specialReport, sport, success, text };\n","const breakpoints = {\n  desktop: 980,\n  leftCol: 1140,\n  mobile: 320,\n  mobileLandscape: 480,\n  mobileMedium: 375,\n  phablet: 660,\n  tablet: 740,\n  wide: 1300\n};\n\nexport { breakpoints };\n","import { breakpoints } from '../__generated__/breakpoints.js';\n\nconst smidgen = 0.1;\nconst minWidth = (from2) => `@media (min-width: ${`${from2}px`})`;\nconst maxWidth = (until2) => `@media (max-width: ${`${until2 - smidgen}px`})`;\nconst minWidthMaxWidth = (from2, until2) => `@media (min-width: ${`${from2}px`}) and (max-width: ${`${until2 - smidgen}px`})`;\nconst from = {\n  mobile: minWidth(breakpoints.mobile),\n  mobileMedium: minWidth(breakpoints.mobileMedium),\n  mobileLandscape: minWidth(breakpoints.mobileLandscape),\n  phablet: minWidth(breakpoints.phablet),\n  tablet: minWidth(breakpoints.tablet),\n  desktop: minWidth(breakpoints.desktop),\n  leftCol: minWidth(breakpoints.leftCol),\n  wide: minWidth(breakpoints.wide)\n};\nconst until = {\n  mobile: maxWidth(breakpoints.mobile),\n  mobileMedium: maxWidth(breakpoints.mobileMedium),\n  mobileLandscape: maxWidth(breakpoints.mobileLandscape),\n  phablet: maxWidth(breakpoints.phablet),\n  tablet: maxWidth(breakpoints.tablet),\n  desktop: maxWidth(breakpoints.desktop),\n  leftCol: maxWidth(breakpoints.leftCol),\n  wide: maxWidth(breakpoints.wide)\n};\nconst between = {\n  mobile: {\n    and: {\n      mobileMedium: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileMedium\n      ),\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileMedium: {\n    and: {\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobileMedium,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileLandscape: {\n    and: {\n      phablet: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.phablet\n      ),\n      tablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n      desktop: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.desktop\n      ),\n      leftCol: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.leftCol\n      ),\n      wide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide)\n    }\n  },\n  phablet: {\n    and: {\n      tablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide)\n    }\n  },\n  tablet: {\n    and: {\n      desktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide)\n    }\n  },\n  desktop: {\n    and: {\n      leftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide)\n    }\n  },\n  leftCol: {\n    and: {\n      wide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide)\n    }\n  }\n};\n\nexport { between, from, until };\n","import { jsx } from '@emotion/react/jsx-runtime';\nimport { buttonContents } from './shared.js';\nimport { buttonStyles } from './styles.js';\n\nconst Button = ({\n  priority,\n  size,\n  icon: iconSvg,\n  iconSide,\n  hideLabel,\n  nudgeIcon,\n  type = \"button\",\n  isLoading = false,\n  loadingAnnouncement = \"Loading\",\n  cssOverrides,\n  children,\n  theme,\n  ...props\n}) => /* @__PURE__ */ jsx(\n  \"button\",\n  {\n    css: buttonStyles({\n      size,\n      priority,\n      icon: iconSvg,\n      hideLabel,\n      iconSide,\n      nudgeIcon,\n      cssOverrides,\n      isLoading,\n      theme\n    }),\n    type,\n    \"aria-live\": \"polite\",\n    \"aria-label\": isLoading ? loadingAnnouncement : void 0,\n    ...props,\n    children: buttonContents({\n      hideLabel,\n      iconSvg,\n      isLoading,\n      children\n    })\n  }\n);\n\nexport { Button };\n","import { jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { until, from } from '../../foundations/mq/mq.js';\n\nconst Hide = ({\n  children,\n  above,\n  // deprecated\n  below,\n  // deprecated\n  from: from$1 = above,\n  until: until$1 = below\n}) => {\n  let whenToHide;\n  if (until$1) {\n    whenToHide = css`\n\t\t\t${until[until$1]} {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`;\n  }\n  if (from$1) {\n    whenToHide = css`\n\t\t\t${whenToHide}\n\t\t\t${from[from$1]} {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`;\n  }\n  return /* @__PURE__ */ jsx(\"span\", { css: whenToHide, children });\n};\n\nexport { Hide };\n"],"names":["WHITE","neutral","EditorialButton","children","priority","props","backgroundOverrides","css","palette","decideBackground","borderOverrides","decideBorder","fontOverrides","decideFont","CoreButton","cssOverrides","SvgReload","size","tight","padding","svg","viewBox","width","height","path","d","Toast","count","onClick","div","space","data-testid","Hide","above","icon","below","revealPendingBlocks","blogBody","document","querySelector","pendingBlocks","querySelectorAll","block","classList","add","remove","isUndefined","length","dispatchEvent","CustomEvent","Liveness","pageId","webTitle","ajaxUrl","filterKeyEvents","enhanceTweetsSwitch","onFirstPage","webURL","mostRecentBlockId","hasPinnedPost","showToast","setShowToast","useState","topOfBlogVisible","setTopOfBlogVisible","numHiddenBlocks","setNumHiddenBlocks","latestBlockId","setLatestBlockId","key","setKey","topOfBlog","setTopOfBlog","toastRoot","setToastRoot","useEffect","getElementById","onSuccess","useCallback","data","numNewBlocks","html","template","createElement","innerHTML","Date","toDateString","fragment","content","article","id","islands","Promise","all","map","island","initHydration","getEmotionCache","insertBefore","nextSibling","twttr","ready","twitter","widgets","load","Array","from","insert","e","console","log","visibilityState","window","mockLiveUpdate","url","URL","searchParams","set","href","guardian","modules","sentry","reportError","Error","getKey","useApi","refreshInterval","refreshWhenHidden","title","observer","IntersectionObserver","entry","isIntersecting","observe","disconnect","handleVisibilityChange","addEventListener","removeEventListener","handleToastClick","placeToScrollTo","scrollIntoView","behavior","history","replaceState","location","createPortal","checkForErrors","response","ok","statusText","status","options","init","error","useSWR","fetch","then","res","json","fetcher","loading","colour","brand","brandAlt","success","news","opinion","sport","culture","lifestyle","labs","specialReport","focus","background","primary","secondary","inverse","ctaPrimary","ctaPrimaryHover","ctaSecondary","ctaSecondaryHover","ctaTertiaryHover","input","inputChecked","brandAltBackground","line","brandAltLine","text","supporting","ctaTertiary","anchorPrimary","anchorSecondary","userInput","inputLabel","inputError","inputLabelSupporting","inputHover","groupLabel","groupLabelSupporting","newsInverse","brandText","anchorPrimaryHover","brandAltText","breakpoints","desktop","leftCol","mobile","mobileLandscape","mobileMedium","phablet","tablet","wide","minWidth","from2","maxWidth","until2","minWidthMaxWidth","until","between","and","Button","iconSvg","iconSide","hideLabel","nudgeIcon","type","isLoading","loadingAnnouncement","theme","jsx","buttonStyles","buttonContents","whenToHide","from$1","until$1"],"sourceRoot":""}