{"version":3,"file":"AppsLightboxImage-importable.client.web.9dc5569d5b7d0f2c0036.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/AppsLightboxImage.importable.tsx","webpack://@guardian/dotcom-rendering/./src/components/AppsLightboxImageStore.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/thrift/protocols.ts","webpack://@guardian/dotcom-rendering/./src/lib/thrift/nativeConnection.ts","webpack://@guardian/dotcom-rendering/./src/lib/bridgetApi.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js"],"sourcesContent":["import { css } from '@emotion/react';\nimport type { ArticleFormat } from '../lib/articleFormat';\nimport { type RoleType } from '../types/content';\nimport { openLightboxForImageId } from './AppsLightboxImageStore.importable';\nimport type { Loading } from './CardPicture';\nimport { Picture } from './Picture';\n\ntype Props = {\n\telementId: string;\n\trole: RoleType;\n\tformat: ArticleFormat;\n\tmaster: string;\n\talt: string;\n\theight: number;\n\twidth: number;\n\tloading: Loading;\n\tisMainMedia?: boolean;\n};\n\nexport const AppsLightboxImage = ({\n\telementId,\n\trole,\n\tformat,\n\tmaster,\n\talt,\n\theight,\n\twidth,\n\tisMainMedia = false,\n\tloading = 'lazy',\n}: Props) => {\n\tconst picture = (\n\t\t<Picture\n\t\t\trole={role}\n\t\t\tformat={format}\n\t\t\tmaster={master}\n\t\t\talt={alt}\n\t\t\twidth={width}\n\t\t\theight={height}\n\t\t\tloading={loading}\n\t\t\tisMainMedia={isMainMedia}\n\t\t/>\n\t);\n\treturn (\n\t\t<button\n\t\t\tonClick={() => openLightboxForImageId(elementId)}\n\t\t\ttype=\"button\"\n\t\t\tcss={css`\n\t\t\t\tborder: none;\n\t\t\t\tbackground: none;\n\t\t\t\tpadding: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t`}\n\t\t>\n\t\t\t{picture}\n\t\t</button>\n\t);\n};\n","import { Image } from '@guardian/bridget/Image';\nimport { getGalleryClient } from '../lib/bridgetApi';\nimport { generateImageURL } from '../lib/image';\nimport type { ImageForAppsLightbox } from '../model/appsLightboxImages';\n\n// Populated when the component is rendered\nlet imageStore: ImageForAppsLightbox[] = [];\n\n/**\n * Uses Bridget's Gallery service to open the native lightbox at the provided image element ID.\n * This function should never be called server-side.\n */\nexport const openLightboxForImageId = (elementId: string): void => {\n\tconst currentIndex = imageStore.findIndex(\n\t\t(img) => img.elementId === elementId,\n\t);\n\n\t// Don't open the lightbox if the image wasn't found\n\tif (currentIndex === -1) {\n\t\treturn;\n\t}\n\n\t// Handle the case the device is rotated\n\tconst imageWidth = Math.max(window.innerHeight, window.innerWidth);\n\tconst resolution = window.devicePixelRatio >= 2 ? 'high' : 'low';\n\tvoid getGalleryClient()\n\t\t.launchSlideshow(\n\t\t\timageStore.map(\n\t\t\t\t(image) =>\n\t\t\t\t\tnew Image({\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height,\n\t\t\t\t\t\turl: generateImageURL({\n\t\t\t\t\t\t\tmainImage: image.masterUrl,\n\t\t\t\t\t\t\timageWidth,\n\t\t\t\t\t\t\tresolution,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcaption: image.caption,\n\t\t\t\t\t\tcredit: image.credit,\n\t\t\t\t\t}),\n\t\t\t),\n\t\t\tcurrentIndex,\n\t\t\tdocument.title,\n\t\t)\n\t\t// we don't need to handle this error\n\t\t.catch(() => undefined);\n};\n\nexport const AppsLightboxImageStore = ({\n\timages,\n}: {\n\timages: ImageForAppsLightbox[];\n}) => {\n\timageStore = images;\n\treturn null;\n};\n","import type {\n\tInt64,\n\tIThriftField,\n\tIThriftList,\n\tIThriftMap,\n\tIThriftMessage,\n\tIThriftSet,\n\tIThriftStruct,\n\tTTransport,\n\tTType,\n} from '@creditkarma/thrift-server-core';\nimport { MessageType, TProtocol } from '@creditkarma/thrift-server-core';\n\nexport abstract class TProtocolDecorator extends TProtocol {\n\tprivate concreteProtocol: TProtocol;\n\n\tconstructor(protocol: TProtocol) {\n\t\tsuper(protocol.getTransport());\n\t\tthis.concreteProtocol = protocol;\n\t}\n\n\tgetTransport(): TTransport {\n\t\treturn this.concreteProtocol.getTransport();\n\t}\n\tflush(): Buffer {\n\t\treturn this.concreteProtocol.flush();\n\t}\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\treturn this.concreteProtocol.writeMessageBegin(name, type, seqid);\n\t}\n\twriteMessageEnd(): void {\n\t\treturn this.concreteProtocol.writeMessageEnd();\n\t}\n\twriteStructBegin(name: string): void {\n\t\treturn this.concreteProtocol.writeStructBegin(name);\n\t}\n\twriteStructEnd(): void {\n\t\treturn this.concreteProtocol.writeStructEnd();\n\t}\n\twriteFieldBegin(name: string, type: TType, id: number): void {\n\t\treturn this.concreteProtocol.writeFieldBegin(name, type, id);\n\t}\n\twriteFieldEnd(): void {\n\t\treturn this.concreteProtocol.writeFieldEnd();\n\t}\n\twriteFieldStop(): void {\n\t\treturn this.concreteProtocol.writeFieldStop();\n\t}\n\twriteMapBegin(keyType: TType, valueType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeMapBegin(keyType, valueType, size);\n\t}\n\twriteMapEnd(): void {\n\t\treturn this.concreteProtocol.writeMapEnd();\n\t}\n\twriteListBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeListBegin(elementType, size);\n\t}\n\twriteListEnd(): void {\n\t\treturn this.concreteProtocol.writeListEnd();\n\t}\n\twriteSetBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeSetBegin(elementType, size);\n\t}\n\twriteSetEnd(): void {\n\t\treturn this.concreteProtocol.writeSetEnd();\n\t}\n\twriteBool(bool: boolean): void {\n\t\treturn this.concreteProtocol.writeBool(bool);\n\t}\n\twriteByte(b: number): void {\n\t\treturn this.concreteProtocol.writeByte(b);\n\t}\n\twriteI16(i16: number): void {\n\t\treturn this.concreteProtocol.writeI16(i16);\n\t}\n\twriteI32(i32: number): void {\n\t\treturn this.concreteProtocol.writeI32(i32);\n\t}\n\twriteI64(i64: number | Int64): void {\n\t\treturn this.concreteProtocol.writeI64(i64);\n\t}\n\twriteDouble(dbl: number): void {\n\t\treturn this.concreteProtocol.writeDouble(dbl);\n\t}\n\twriteString(arg: string): void {\n\t\treturn this.concreteProtocol.writeString(arg);\n\t}\n\twriteBinary(arg: string | Buffer): void {\n\t\treturn this.concreteProtocol.writeBinary(arg);\n\t}\n\treadMessageBegin(): IThriftMessage {\n\t\treturn this.concreteProtocol.readMessageBegin();\n\t}\n\treadMessageEnd(): void {\n\t\treturn this.concreteProtocol.readMessageEnd();\n\t}\n\treadStructBegin(): IThriftStruct {\n\t\treturn this.concreteProtocol.readStructBegin();\n\t}\n\treadStructEnd(): void {\n\t\treturn this.concreteProtocol.readStructEnd();\n\t}\n\treadFieldBegin(): IThriftField {\n\t\treturn this.concreteProtocol.readFieldBegin();\n\t}\n\treadFieldEnd(): void {\n\t\treturn this.concreteProtocol.readFieldEnd();\n\t}\n\treadMapBegin(): IThriftMap {\n\t\treturn this.concreteProtocol.readMapBegin();\n\t}\n\treadMapEnd(): void {\n\t\treturn this.concreteProtocol.readMapEnd();\n\t}\n\treadListBegin(): IThriftList {\n\t\treturn this.concreteProtocol.readListBegin();\n\t}\n\treadListEnd(): void {\n\t\treturn this.concreteProtocol.readListEnd();\n\t}\n\treadSetBegin(): IThriftSet {\n\t\treturn this.concreteProtocol.readSetBegin();\n\t}\n\treadSetEnd(): void {\n\t\treturn this.concreteProtocol.readSetEnd();\n\t}\n\treadBool(): boolean {\n\t\treturn this.concreteProtocol.readBool();\n\t}\n\treadByte(): number {\n\t\treturn this.concreteProtocol.readByte();\n\t}\n\treadI16(): number {\n\t\treturn this.concreteProtocol.readI16();\n\t}\n\treadI32(): number {\n\t\treturn this.concreteProtocol.readI32();\n\t}\n\treadI64(): Int64 {\n\t\treturn this.concreteProtocol.readI64();\n\t}\n\treadDouble(): number {\n\t\treturn this.concreteProtocol.readDouble();\n\t}\n\treadBinary(): Buffer {\n\t\treturn this.concreteProtocol.readBinary();\n\t}\n\treadString(): string {\n\t\treturn this.concreteProtocol.readString();\n\t}\n\tskip(type: TType): void {\n\t\treturn this.concreteProtocol.skip(type);\n\t}\n}\n\nexport class TMultiplexedProtocol extends TProtocolDecorator {\n\tstatic readonly separator = ':';\n\treadonly serviceName: string;\n\n\tconstructor(protocol: TProtocol, serviceName: string) {\n\t\tsuper(protocol);\n\t\tthis.serviceName = serviceName;\n\t}\n\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\tif (type === MessageType.CALL || type === MessageType.ONEWAY) {\n\t\t\tsuper.writeMessageBegin(\n\t\t\t\tthis.serviceName + TMultiplexedProtocol.separator + name,\n\t\t\t\ttype,\n\t\t\t\tseqid,\n\t\t\t);\n\t\t} else {\n\t\t\tsuper.writeMessageBegin(name, type, seqid);\n\t\t}\n\t}\n}\n","import type {\n\tIClientConstructor,\n\tIProtocolConstructor,\n\tITransportConstructor,\n\tProtocolType,\n\tThriftClient,\n\tTransportType,\n\tTTransport,\n} from '@creditkarma/thrift-server-core';\nimport {\n\tgetProtocol,\n\tgetTransport,\n\tTApplicationException,\n\tTApplicationExceptionType,\n\tThriftConnection,\n} from '@creditkarma/thrift-server-core';\nimport { TMultiplexedProtocol } from './protocols';\n\ndeclare global {\n\tinterface Window {\n\t\tnativeConnections?: Record<string, NativeConnection>;\n\t\tandroid?: {\n\t\t\tpostMessage: (data: string, connectionId: string) => void;\n\t\t};\n\t\twebkit?: {\n\t\t\tmessageHandlers: {\n\t\t\t\tiOSWebViewMessage: {\n\t\t\t\t\tpostMessage: (nativeMessage: NativeMessage) => void;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n}\n\nexport interface NativeMessage {\n\tdata: string;\n\tconnectionId: string;\n}\n\ninterface PromiseResponse {\n\tresolve: (response: Buffer) => void;\n\treject: (error: Error) => void;\n\ttimeoutId: NodeJS.Timeout;\n}\n\nconst ACTION_TIMEOUT_MS = 30000;\n\nfunction sendNativeMessage(nativeMessage: NativeMessage): void {\n\tif (window.android) {\n\t\twindow.android.postMessage(\n\t\t\tnativeMessage.data,\n\t\t\tnativeMessage.connectionId,\n\t\t);\n\t} else if (window.webkit) {\n\t\twindow.webkit.messageHandlers.iOSWebViewMessage.postMessage(\n\t\t\tnativeMessage,\n\t\t);\n\t} else {\n\t\tconsole.warn('No native APIs available');\n\t}\n}\n\nlet uid = 1;\nconst getUniqueConnectionId = () => `connection-${uid++}`;\n\nexport class NativeConnection extends ThriftConnection {\n\tconnectionId = getUniqueConnectionId();\n\tpromises: PromiseResponse[] = [];\n\toutBuffer: NativeMessage[] = [];\n\n\tconstructor(\n\t\tTransport: ITransportConstructor,\n\t\tProtocol: IProtocolConstructor,\n\t) {\n\t\tsuper(Transport, Protocol);\n\t\tif (typeof window !== 'undefined') {\n\t\t\twindow.nativeConnections = window.nativeConnections ?? {};\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treset(oldConnectionId: string): void {\n\t\tif (oldConnectionId === this.connectionId && window.nativeConnections) {\n\t\t\tconsole.warn('Reseting connection ' + oldConnectionId);\n\t\t\tdelete window.nativeConnections[this.connectionId];\n\t\t\tfor (const promise of this.promises) {\n\t\t\t\tpromise.reject(\n\t\t\t\t\tnew TApplicationException(\n\t\t\t\t\t\tTApplicationExceptionType.UNKNOWN,\n\t\t\t\t\t\t'Timeout error',\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.promises = [];\n\t\t\tthis.connectionId = getUniqueConnectionId();\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treceive(message: NativeMessage): void {\n\t\tconst resolver = this.promises.shift();\n\t\tif (resolver) {\n\t\t\tclearTimeout(resolver.timeoutId);\n\t\t\tconst data = Buffer.from(message.data, 'base64');\n\t\t\tresolver.resolve(data);\n\t\t}\n\t\tthis.sendNextMessage();\n\t}\n\n\tprivate sendNextMessage(): void {\n\t\tconst message = this.outBuffer.shift();\n\t\tif (message) {\n\t\t\tconsole.log('Sending next message');\n\t\t\tsendNativeMessage(message);\n\t\t}\n\t}\n\n\tsend(dataToSend: Buffer): Promise<Buffer> {\n\t\tconst id = this.connectionId;\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias -- Reassign this\n\t\tconst connection = this;\n\t\treturn new Promise<Buffer>(function (res, rej): void {\n\t\t\tconnection.promises.push({\n\t\t\t\tresolve: res,\n\t\t\t\treject: rej,\n\t\t\t\ttimeoutId: setTimeout(function () {\n\t\t\t\t\tconnection.reset(id);\n\t\t\t\t}, ACTION_TIMEOUT_MS),\n\t\t\t});\n\t\t\tconst message: NativeMessage = {\n\t\t\t\tdata: dataToSend.toString('base64'),\n\t\t\t\tconnectionId: id,\n\t\t\t};\n\t\t\tif (connection.promises.length === 1) {\n\t\t\t\tconsole.log('Sending message immediately');\n\t\t\t\tsendNativeMessage(message);\n\t\t\t} else {\n\t\t\t\tconsole.log('Queing message because others in flight');\n\t\t\t\tconnection.outBuffer.push(message);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function createAppClient<TClient extends ThriftClient<void>>(\n\tServiceClient: IClientConstructor<TClient, void>,\n\ttransport: TransportType = 'buffered',\n\tprotocol: ProtocolType = 'compact',\n): TClient {\n\tclass NamedMultiplexedProtocol extends TMultiplexedProtocol {\n\t\tconstructor(tTransport: TTransport) {\n\t\t\tconst Protocol = getProtocol(protocol);\n\t\t\tsuper(new Protocol(tTransport), ServiceClient.serviceName ?? '');\n\t\t}\n\t}\n\tconst connection = new NativeConnection(\n\t\tgetTransport(transport),\n\t\tNamedMultiplexedProtocol,\n\t);\n\treturn new ServiceClient(connection);\n}\n","import * as Acquisitions from '@guardian/bridget/Acquisitions';\nimport * as Analytics from '@guardian/bridget/Analytics';\nimport * as Commercial from '@guardian/bridget/Commercial';\nimport * as Discussion from '@guardian/bridget/Discussion';\nimport * as Environment from '@guardian/bridget/Environment';\nimport * as Gallery from '@guardian/bridget/Gallery';\nimport * as Interaction from '@guardian/bridget/Interaction';\nimport * as Metrics from '@guardian/bridget/Metrics';\nimport * as Navigation from '@guardian/bridget/Navigation';\nimport * as Newsletters from '@guardian/bridget/Newsletters';\nimport * as Notifications from '@guardian/bridget/Notifications';\nimport * as Tag from '@guardian/bridget/Tag';\nimport * as User from '@guardian/bridget/User';\nimport * as Video from '@guardian/bridget/Videos';\nimport { isUndefined } from '@guardian/libs';\nimport { createAppClient } from './thrift/nativeConnection';\n\nlet environmentClient: Environment.Client<void> | undefined = undefined;\nexport const getEnvironmentClient = (): Environment.Client<void> => {\n\tif (isUndefined(environmentClient)) {\n\t\tenvironmentClient = createAppClient<Environment.Client<void>>(\n\t\t\tEnvironment.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn environmentClient;\n};\n\nlet commercialClient: Commercial.Client<void> | undefined = undefined;\nexport const getCommercialClient = (): Commercial.Client<void> => {\n\tif (isUndefined(commercialClient)) {\n\t\tcommercialClient = createAppClient<Commercial.Client<void>>(\n\t\t\tCommercial.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn commercialClient;\n};\n\nlet acquisitionsClient: Acquisitions.Client<void> | undefined = undefined;\nexport const getAcquisitionsClient = (): Acquisitions.Client<void> => {\n\tif (!acquisitionsClient) {\n\t\tacquisitionsClient = createAppClient<Acquisitions.Client<void>>(\n\t\t\tAcquisitions.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn acquisitionsClient;\n};\n\nlet notificationsClient: Notifications.Client<void> | undefined = undefined;\nexport const getNotificationsClient = (): Notifications.Client<void> => {\n\tif (!notificationsClient) {\n\t\tnotificationsClient = createAppClient<Notifications.Client<void>>(\n\t\t\tNotifications.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn notificationsClient;\n};\n\nlet tagClient: Tag.Client<void> | undefined = undefined;\nexport const getTagClient = (): Tag.Client<void> => {\n\tif (!tagClient) {\n\t\ttagClient = createAppClient<Tag.Client<void>>(\n\t\t\tTag.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn tagClient;\n};\n\nlet userClient: User.Client<void> | undefined = undefined;\nexport const getUserClient = (): User.Client<void> => {\n\tif (!userClient) {\n\t\tuserClient = createAppClient<User.Client<void>>(\n\t\t\tUser.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn userClient;\n};\nlet galleryClient: Gallery.Client<void> | undefined = undefined;\nexport const getGalleryClient = (): Gallery.Client<void> => {\n\tif (!galleryClient) {\n\t\tgalleryClient = createAppClient<Gallery.Client<void>>(\n\t\t\tGallery.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn galleryClient;\n};\nlet videoClient: Video.Client<void> | undefined = undefined;\nexport const getVideoClient = (): Video.Client<void> => {\n\tif (!videoClient) {\n\t\tvideoClient = createAppClient<Video.Client<void>>(\n\t\t\tVideo.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn videoClient;\n};\nlet metricsClient: Metrics.Client<void> | undefined = undefined;\nexport const getMetricsClient = (): Metrics.Client<void> => {\n\tif (!metricsClient) {\n\t\tmetricsClient = createAppClient<Metrics.Client<void>>(\n\t\t\tMetrics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn metricsClient;\n};\nlet analyticsClient: Analytics.Client<void> | undefined = undefined;\nexport const getAnalyticsClient = (): Analytics.Client<void> => {\n\tif (!analyticsClient) {\n\t\tanalyticsClient = createAppClient<Analytics.Client<void>>(\n\t\t\tAnalytics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn analyticsClient;\n};\n\nlet navigationClient: Navigation.Client<void> | undefined = undefined;\nexport const getNavigationClient = (): Navigation.Client<void> => {\n\tif (!navigationClient) {\n\t\tnavigationClient = createAppClient<Navigation.Client<void>>(\n\t\t\tNavigation.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn navigationClient;\n};\n\nlet newslettersClient: Newsletters.Client<void> | undefined = undefined;\nexport const getNewslettersClient = (): Newsletters.Client<void> => {\n\tif (!newslettersClient) {\n\t\tnewslettersClient = createAppClient<Newsletters.Client<void>>(\n\t\t\tNewsletters.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn newslettersClient;\n};\n\nlet discussionClient: Discussion.Client<void> | undefined = undefined;\nexport const getDiscussionClient = (): Discussion.Client<void> => {\n\tif (!discussionClient) {\n\t\tdiscussionClient = createAppClient<Discussion.Client<void>>(\n\t\t\tDiscussion.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn discussionClient;\n};\n\nlet interactionClient: Interaction.Client<void> | undefined = undefined;\nexport const getInteractionClient = (): Interaction.Client<void> => {\n\tif (!interactionClient) {\n\t\tinteractionClient = createAppClient<Interaction.Client<void>>(\n\t\t\tInteraction.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn interactionClient;\n};\n","const breakpoints = {\n  desktop: 980,\n  leftCol: 1140,\n  mobile: 320,\n  mobileLandscape: 480,\n  mobileMedium: 375,\n  phablet: 660,\n  tablet: 740,\n  wide: 1300\n};\n\nexport { breakpoints };\n"],"names":["AppsLightboxImage","elementId","role","format","master","alt","height","width","isMainMedia","loading","picture","Picture","button","onClick","openLightboxForImageId","type","css","imageStore","currentIndex","findIndex","img","imageWidth","Math","max","window","innerHeight","innerWidth","resolution","devicePixelRatio","getGalleryClient","launchSlideshow","map","image","Image","url","generateImageURL","mainImage","masterUrl","caption","credit","document","title","catch","AppsLightboxImageStore","images","TProtocolDecorator","TProtocol","getTransport","this","concreteProtocol","flush","writeMessageBegin","name","seqid","writeMessageEnd","writeStructBegin","writeStructEnd","writeFieldBegin","id","writeFieldEnd","writeFieldStop","writeMapBegin","keyType","valueType","size","writeMapEnd","writeListBegin","elementType","writeListEnd","writeSetBegin","writeSetEnd","writeBool","bool","writeByte","b","writeI16","i16","writeI32","i32","writeI64","i64","writeDouble","dbl","writeString","arg","writeBinary","readMessageBegin","readMessageEnd","readStructBegin","readStructEnd","readFieldBegin","readFieldEnd","readMapBegin","readMapEnd","readListBegin","readListEnd","readSetBegin","readSetEnd","readBool","readByte","readI16","readI32","readI64","readDouble","readBinary","readString","skip","constructor","protocol","super","TMultiplexedProtocol","MessageType","CALL","ONEWAY","serviceName","separator","sendNativeMessage","nativeMessage","android","postMessage","data","connectionId","webkit","messageHandlers","iOSWebViewMessage","console","warn","uid","getUniqueConnectionId","NativeConnection","ThriftConnection","reset","oldConnectionId","nativeConnections","promise","promises","reject","TApplicationException","TApplicationExceptionType","UNKNOWN","receive","message","resolver","shift","clearTimeout","timeoutId","Buffer","from","resolve","sendNextMessage","outBuffer","log","send","dataToSend","connection","Promise","res","rej","push","setTimeout","toString","length","Transport","Protocol","createAppClient","ServiceClient","transport","tTransport","getProtocol","environmentClient","getEnvironmentClient","isUndefined","Environment","Client","commercialClient","getCommercialClient","Commercial","acquisitionsClient","getAcquisitionsClient","Acquisitions","notificationsClient","getNotificationsClient","Notifications","tagClient","getTagClient","Tag","userClient","getUserClient","User","galleryClient","Gallery","videoClient","getVideoClient","Video","analyticsClient","getAnalyticsClient","Analytics","navigationClient","getNavigationClient","Navigation","discussionClient","getDiscussionClient","Discussion","interactionClient","getInteractionClient","Interaction","breakpoints","desktop","leftCol","mobile","mobileLandscape","mobileMedium","phablet","tablet","wide"],"sourceRoot":""}