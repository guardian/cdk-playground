{"version":3,"file":"LightboxHash-importable.client.web.97899e92c7c67c4a2e51.js","mappings":"sMAwBO,MAAMA,EAAe,MAC3BC,EAAAA,EAAAA,YAAU,KACT,MAAMC,EAAOC,OAAOC,SAASF,KAC7B,GAAIA,EAAKG,WAAW,SAAU,EAC7BC,EAAAA,EAAAA,IACC,SACA,6EAED,MAAMC,EAAWL,EAAKM,UAAU,GAChCC,QAAQC,aACP,CAAC,EACD,GACAP,OAAOC,SAASO,SAAWR,OAAOC,SAASQ,QAE5CH,QAAQI,UAAU,CAAC,EAAG,GAAI,QAAiB,OAATN,GACnC,IACE,IAEI,K","sources":["webpack://@guardian/dotcom-rendering/./src/components/LightboxHash.importable.tsx"],"sourcesContent":["import { log } from '@guardian/libs';\nimport { useEffect } from 'react';\n\n/**\n * This small snippet of javascript is executed at page load. It checks to\n * see if the url that was initially loaded contains a hash matching the `#img-`\n * pattern.\n *\n * If it finds one, it means the reader has clicked a link pointing directly at an\n * image so the lightbox will immediately open. But because we close the lightbox\n * by going back, we need to make sure we have an entry in the history state to\n * go back to, so we create one here.\n *\n * If we didn't do this then you'd end up back where you were when you pasted the\n * url into the browser and unable to access the article under the lightbox.\n *\n * ## Why does this need to be an Island?\n *\n * This behaviour is entirely client-side.\n *\n * ---\n *\n * Does not render **anything**.\n */\nexport const LightboxHash = () => {\n\tuseEffect(() => {\n\t\tconst hash = window.location.hash;\n\t\tif (hash.startsWith('#img-')) {\n\t\t\tlog(\n\t\t\t\t'dotcom',\n\t\t\t\t'ðŸ’¡ An img hash was found on the url during page load, opening lightbox...',\n\t\t\t);\n\t\t\tconst position = hash.substring(5);\n\t\t\thistory.replaceState(\n\t\t\t\t{},\n\t\t\t\t'',\n\t\t\t\twindow.location.pathname + window.location.search,\n\t\t\t);\n\t\t\thistory.pushState({}, '', `#img-${position}`);\n\t\t}\n\t}, []);\n\n\treturn null;\n};\n"],"names":["LightboxHash","useEffect","hash","window","location","startsWith","log","position","substring","history","replaceState","pathname","search","pushState"],"sourceRoot":""}