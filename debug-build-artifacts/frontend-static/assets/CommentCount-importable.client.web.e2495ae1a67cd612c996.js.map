{"version":3,"file":"CommentCount-importable.client.web.e2495ae1a67cd612c996.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/static/icons/comment.svg","webpack://@guardian/dotcom-rendering/./src/components/CommentCount.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/formatCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/useApi.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCommentCount.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/mq/mq.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgComment = function SvgComment(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 0l1 1v7l-1 1H7l-2 3H4V9H2L1 8V1l1-1h11z\"\n  })));\n};\nexport default SvgComment;","import { css } from '@emotion/react';\nimport { isUndefined } from '@guardian/libs';\nimport { between, textSans17, until } from '@guardian/source/foundations';\nimport { formatCount } from '../lib/formatCount';\nimport { useCommentCount } from '../lib/useCommentCount';\nimport { palette as themePalette } from '../palette';\nimport CommentIcon from '../static/icons/comment.svg';\n\ntype Props = {\n\tdiscussionApiUrl: string;\n\tshortUrlId: string;\n};\n\nconst containerStyles = css`\n\tdisplay: flex;\n\talign-self: flex-end;\n\tflex-direction: column;\n\t${textSans17};\n\tfont-weight: bold;\n\tcolor: ${themePalette('--comment-count-fill')};\n\tpadding-top: 5px;\n\n\t${until.desktop} {\n\t\tcolor: ${themePalette('--comment-count-mobile-fill')};\n\t}\n`;\n\nconst iconContainerStyles = css`\n\theight: 15px;\n\tmargin: 0;\n\ttext-align: right;\n\tmargin-bottom: -2px;\n\tsvg {\n\t\theight: 18px;\n\t\twidth: 18px;\n\t}\n`;\n\nconst iconStyles = css`\n\tfill: ${themePalette('--comment-count-fill')};\n\t${until.desktop} {\n\t\tfill: ${themePalette('--comment-count-mobile-fill')};\n\t}\n`;\n\nconst longStyles = css`\n\tdisplay: block;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: none;\n\t}\n`;\n\nconst shortStyles = css`\n\tdisplay: none;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: block;\n\t}\n`;\n\nconst linkStyles = css`\n\tcolor: inherit;\n\ttext-decoration: none;\n\t:hover {\n\t\ttext-decoration: underline;\n\t}\n\t:visited {\n\t\tcolor: inherit;\n\t}\n`;\n\n/**\n * Shows the number of comments at the top of an article.\n *\n * ## Why does this need to be an Island?\n *\n * Fetches the count from the discussion API.\n *\n * ---\n *\n * [`Count` on Chromatic](https://www.chromatic.com/component?appId=63e251470cfbe61776b0ef19&csfId=components-counts&buildNumber=2967)\n */\nexport const CommentCount = ({ discussionApiUrl, shortUrlId }: Props) => {\n\tconst commentCount = useCommentCount(discussionApiUrl, shortUrlId);\n\n\t// If the comment count is 0 we still want to display it\n\tif (isUndefined(commentCount)) return null;\n\n\tconst { short, long } = formatCount(commentCount);\n\n\treturn (\n\t\t<data\n\t\t\tcss={containerStyles}\n\t\t\tdata-testid=\"comment-counts\"\n\t\t\tvalue={`${long} comments on this article`}\n\t\t>\n\t\t\t<a\n\t\t\t\thref=\"#comments\"\n\t\t\t\tcss={linkStyles}\n\t\t\t\taria-label={`${short} Comments`}\n\t\t\t>\n\t\t\t\t<div css={iconContainerStyles}>\n\t\t\t\t\t<CommentIcon css={iconStyles} />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tdata-testid=\"long-comment-count\"\n\t\t\t\t\tcss={longStyles}\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t>\n\t\t\t\t\t{long}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tdata-testid=\"short-comment-count\"\n\t\t\t\t\tcss={shortStyles}\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t>\n\t\t\t\t\t{short}\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t</data>\n\t);\n};\n","import { isUndefined } from '@guardian/libs';\n\nexport const formatCount = (\n\tcount?: number,\n): { short: string; long: string } => {\n\tif (isUndefined(count)) return { short: '…', long: '…' };\n\tif (count === 0) return { short: '0', long: '0' };\n\n\tconst countAsInteger = Math.floor(count);\n\tconst displayCountLong = Intl.NumberFormat('en-GB').format(countAsInteger);\n\tconst displayCountShort =\n\t\tcountAsInteger > 10000\n\t\t\t? `${Math.round(countAsInteger / 1000)}k`\n\t\t\t: countAsInteger.toString();\n\n\treturn {\n\t\tshort: displayCountShort,\n\t\tlong: displayCountLong,\n\t};\n};\n","import { isUndefined } from '@guardian/libs';\nimport type { SWRConfiguration } from 'swr';\nimport useSWR from 'swr';\n\nfunction checkForErrors(response: Response) {\n\tif (!response.ok) {\n\t\tthrow Error(\n\t\t\tresponse.statusText ||\n\t\t\t\t`useApi | An api call returned HTTP status ${response.status}`,\n\t\t);\n\t}\n\treturn response;\n}\n\n/** **NOTE:** no parsing is done on the response, the type is merely asserted */\nconst fetcher =\n\t<T>(init?: RequestInit) =>\n\t(url: string): Promise<T> =>\n\t\tfetch(url, init)\n\t\t\t.then(checkForErrors)\n\t\t\t.then((res) => res.json());\n\ntype ApiResponse<T, E> = {\n\tloading: boolean;\n\tdata?: T;\n\terror?: E;\n};\n\n/**\n * A custom hook to make a GET request using the given url using the SWR lib (https://swr.vercel.app/).\n *\n * @template T assert the expected response type\n * @template E assert the potential error type\n * @param {string} url - The API endpoint. Falsy values will prevent any network requests\n * @param {SWRConfiguration<Data,Err>} options - The SWR config object - https://swr.vercel.app/docs/api#options\n * @param {RequestInit} init - The fetch init object - https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * @returns {ApiResponse<Data, Err>}\n * */\nexport const useApi = <Data = unknown, Err = Error>(\n\turl: string = '',\n\toptions?: SWRConfiguration<Data, Err>,\n\tinit?: RequestInit,\n): ApiResponse<Data, Err> => {\n\tconst { data, error } = useSWR<Data, Err>(url, fetcher(init), options);\n\n\treturn {\n\t\tdata,\n\t\terror,\n\t\tloading: !!url && isUndefined(error) && isUndefined(data),\n\t};\n};\n","import { isNonNullable, isObject } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { useApi } from './useApi';\n\n/**\n * **Build an initial set of discussions**\n *\n * Setting this attribute helps build an initial set of discussion IDs.\n * Without it, there is a risk that each new usage of `useCommentCount`\n * leads to a distinct request to the discussion API\n */\nexport const DISCUSSION_ID_DATA_ATTRIBUTE = 'data-discussion-id';\n\n/**\n * We only want to create this set on a client, never on the server\n */\nlet uniqueDiscussionIds: Set<string> | undefined;\n\n/**\n * Create an initial set of IDs by reading what is in the DOM\n */\nconst getInitialIds = () =>\n\t[...document.querySelectorAll(`[${DISCUSSION_ID_DATA_ATTRIBUTE}]`)]\n\t\t.map((element) => element.getAttribute(DISCUSSION_ID_DATA_ATTRIBUTE))\n\t\t.filter(isNonNullable);\n\nexport const useCommentCount = (\n\tdiscussionApiUrl: string,\n\tshortUrl: string,\n): number | undefined => {\n\t// A falsy value prevents fetching: https://swr.vercel.app/docs/conditional-fetching#conditional\n\tconst [url, setUrl] = useState<string>();\n\n\tuseEffect(() => {\n\t\tuniqueDiscussionIds ??= new Set(getInitialIds());\n\t\tuniqueDiscussionIds.add(shortUrl);\n\n\t\tconst getCommentCountUrl = `${discussionApiUrl}/getCommentCounts?${new URLSearchParams(\n\t\t\t{\n\t\t\t\t'short-urls': [...uniqueDiscussionIds]\n\t\t\t\t\t.sort() // ensures identical sets produce the same query parameter\n\t\t\t\t\t.join(','),\n\t\t\t},\n\t\t).toString()}`;\n\n\t\tsetUrl(getCommentCountUrl);\n\t}, [discussionApiUrl, shortUrl]);\n\n\tconst { data } = useApi(url);\n\n\t/**\n\t * As per the endpoint, but let’s parse it\n\t * @see https://github.com/guardian/discussion-api/blob/73e805641f509c79d12f207aeb50c3f1fb58c886/discussion-api/src/main/scala/com.gu.discussion.api/repository/Discussion.scala#L233\n\t */\n\tconst count = isObject(data) ? data[shortUrl] : undefined;\n\treturn typeof count === 'number' ? count : undefined;\n};\n\n/** Ensure that we reduce the number of requests to get comment counts */\nexport const addDiscussionIds = (ids: string[]): void => {\n\tif (!uniqueDiscussionIds) return;\n\tfor (const id of ids) {\n\t\tuniqueDiscussionIds.add(id);\n\t}\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n","const breakpoints = {\n  desktop: 980,\n  leftCol: 1140,\n  mobile: 320,\n  mobileLandscape: 480,\n  mobileMedium: 375,\n  phablet: 660,\n  tablet: 740,\n  wide: 1300\n};\n\nexport { breakpoints };\n","import { breakpoints } from '../__generated__/breakpoints.js';\n\nconst smidgen = 0.1;\nconst minWidth = (from2) => `@media (min-width: ${`${from2}px`})`;\nconst maxWidth = (until2) => `@media (max-width: ${`${until2 - smidgen}px`})`;\nconst minWidthMaxWidth = (from2, until2) => `@media (min-width: ${`${from2}px`}) and (max-width: ${`${until2 - smidgen}px`})`;\nconst from = {\n  mobile: minWidth(breakpoints.mobile),\n  mobileMedium: minWidth(breakpoints.mobileMedium),\n  mobileLandscape: minWidth(breakpoints.mobileLandscape),\n  phablet: minWidth(breakpoints.phablet),\n  tablet: minWidth(breakpoints.tablet),\n  desktop: minWidth(breakpoints.desktop),\n  leftCol: minWidth(breakpoints.leftCol),\n  wide: minWidth(breakpoints.wide)\n};\nconst until = {\n  mobile: maxWidth(breakpoints.mobile),\n  mobileMedium: maxWidth(breakpoints.mobileMedium),\n  mobileLandscape: maxWidth(breakpoints.mobileLandscape),\n  phablet: maxWidth(breakpoints.phablet),\n  tablet: maxWidth(breakpoints.tablet),\n  desktop: maxWidth(breakpoints.desktop),\n  leftCol: maxWidth(breakpoints.leftCol),\n  wide: maxWidth(breakpoints.wide)\n};\nconst between = {\n  mobile: {\n    and: {\n      mobileMedium: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileMedium\n      ),\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileMedium: {\n    and: {\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobileMedium,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileLandscape: {\n    and: {\n      phablet: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.phablet\n      ),\n      tablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n      desktop: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.desktop\n      ),\n      leftCol: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.leftCol\n      ),\n      wide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide)\n    }\n  },\n  phablet: {\n    and: {\n      tablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide)\n    }\n  },\n  tablet: {\n    and: {\n      desktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide)\n    }\n  },\n  desktop: {\n    and: {\n      leftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide)\n    }\n  },\n  leftCol: {\n    and: {\n      wide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide)\n    }\n  }\n};\n\nexport { between, from, until };\n"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","props","width","height","viewBox","d","containerStyles","css","textSans17","themePalette","until","desktop","iconContainerStyles","iconStyles","longStyles","between","leftCol","and","wide","shortStyles","linkStyles","CommentCount","discussionApiUrl","shortUrlId","commentCount","useCommentCount","isUndefined","short","long","formatCount","data","data-testid","value","a","href","aria-label","div","CommentIcon","aria-hidden","count","countAsInteger","Math","floor","displayCountLong","Intl","NumberFormat","format","round","toString","checkForErrors","response","ok","Error","statusText","status","useApi","url","options","init","error","useSWR","fetch","then","res","json","fetcher","loading","DISCUSSION_ID_DATA_ATTRIBUTE","uniqueDiscussionIds","shortUrl","setUrl","useState","useEffect","Set","document","querySelectorAll","map","element","getAttribute","filter","isNonNullable","add","getCommentCountUrl","URLSearchParams","sort","join","isObject","undefined","addDiscussionIds","ids","id","palette","colour","breakpoints","mobile","mobileLandscape","mobileMedium","phablet","tablet","minWidth","from2","maxWidth","until2","minWidthMaxWidth","from"],"sourceRoot":""}