{"version":3,"file":"InteractiveContentsBlockComponent-importable.client.web.ff4f7f7afbc679562b9b.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/InteractiveContentsBlockComponent.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/getZIndex.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/accessibility/visually-hidden.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/mq/mq.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgChevronDownSingle.js"],"sourcesContent":["import { css } from '@emotion/react';\nimport { isUndefined } from '@guardian/libs';\nimport {\n\tfrom,\n\theadlineBold17,\n\theadlineBold20,\n\theadlineBold34,\n\theadlineLight20,\n\tpalette as sourcePalette,\n\tspace,\n\tuntil,\n} from '@guardian/source/foundations';\nimport { SvgChevronDownSingle } from '@guardian/source/react-components';\nimport { useCallback, useEffect, useState } from 'react';\nimport { getZIndex } from '../lib/getZIndex';\nimport { palette as themePalette } from '../palette';\nimport type { SubheadingBlockElement } from '../types/content';\n\nconst liStyles = css`\n\tborder-top: 1px solid ${sourcePalette.neutral[86]};\n\tborder-top-width: 1px;\n\tborder-top-style: solid;\n\tborder-top-color: ${sourcePalette.neutral[86]};\n\t:hover {\n\t\tbackground-color: ${themePalette('--interactive-contents-hover')};\n\t}\n`;\n\nconst borderRightStyles = css`\n\t${from.mobileLandscape} {\n\t\tborder-right: 1px solid ${sourcePalette.neutral[86]};\n\t\tborder-right-width: 1px;\n\t\tborder-right-style: solid;\n\t\tborder-right-color: ${sourcePalette.neutral[86]};\n\t}\n`;\n\nconst linkStyles = css`\n\tdisplay: flex;\n\t${headlineLight20}\n\n\tpadding-top: ${space[2]}px;\n\tpadding-bottom: ${space[2]}px;\n\tpadding-left: ${space[3]}px;\n\tpadding-right: ${space[3]}px;\n\n\t/* remove a tag link styling */\n\ttext-decoration: inherit;\n\tcolor: inherit;\n`;\n\nconst numberStyles = css`\n\tpadding-right: ${space[2]}px;\n\t${headlineBold20}\n`;\n\nconst headerStyles = css`\n\t${headlineBold34}\n\tpadding-left: ${space[3]}px;\n\tpadding-bottom: ${space[3]}px;\n`;\n\nconst stickyNavBaseStyles = css`\n\twidth: 90%;\n\t${from.tablet} {\n\t\tmax-width: 650px;\n\t\tmargin-left: ${space[4]}px;\n\t}\n\tbackground-color: ${sourcePalette.neutral[100]};\n\tborder: 1px solid ${sourcePalette.neutral[86]};\n\ttop: 0;\n\tz-index: ${getZIndex('banner')};\n`;\n\nconst olStyles = css`\n\tdisplay: grid;\n\t${from.mobileLandscape} {\n\t\tgrid-template-columns: 1fr 1fr;\n\t}\n`;\n\nconst stickyOlStyles = (showStickyNavOption: boolean) => css`\n\t${stickyNavBaseStyles}\n\ttop: 0;\n\tposition: fixed;\n\tmargin-top: ${space[12]}px;\n\tmax-height: 90vh;\n\toverflow-y: auto;\n\tdisplay: none;\n\t${showStickyNavOption && 'display: grid;'}\n`;\n\nconst wrapperStyles = css`\n\tmargin-top: -5px; /* a hack to get tighter margin between interactive element and Divider */\n\n\t${from.tablet} {\n\t\tmargin-left: -20px;\n\t\twidth: calc(100% + 20px);\n\t}\n\t${from.leftCol} {\n\t\tmargin-left: -10px;\n\t\twidth: calc(100% + 10px);\n\t}\n`;\n\nconst stickyNavCurrentHeaderStyles = css`\n\theight: ${space[12]}px;\n\tpadding: ${space[4]}px;\n\n\tdisplay: flex;\n\talign-items: center;\n\t${headlineBold20}\n\n\t${until.mobileLandscape} {\n\t\t${headlineBold17}\n\t}\n\tposition: fixed;\n\n\tcursor: pointer;\n\tborder-top: 0;\n\tbox-shadow: 0 4px 12px 0 rgb(0 0 0 / 5%);\n`;\n\nconst SVGStyles = css`\n\twidth: ${space[5]}px;\n\tdisplay: flex;\n\tmargin-right: ${space[2]}px;\n\ttransform: translateY(-3px) rotate(0deg);\n\ttransition: transform 250ms ease-out;\n`;\n\nconst SVGTransitionStyles = css`\n\ttransform: translateY(-3px) rotate(180deg);\n\ttransition: transform 250ms ease-out;\n`;\n\ntype Props = {\n\tsubheadingLinks: SubheadingBlockElement[];\n\tendDocumentElementId?: string;\n};\n\ninterface EnhancedSubheadingType extends SubheadingBlockElement {\n\tref?: HTMLElement | null;\n}\n\nexport const InteractiveContentsBlockComponent = ({\n\tsubheadingLinks,\n\tendDocumentElementId,\n}: Props) => {\n\tconst [showStickyNavOption, setShowStickyNavOption] =\n\t\tuseState<boolean>(false);\n\n\t// Loop through subheadingLinks and add a reference + reverse each object\n\tconst [enhancedSubheadings, setEnhancedSubheadings] = useState<\n\t\tEnhancedSubheadingType[]\n\t>([]);\n\tuseEffect(() => {\n\t\tsetEnhancedSubheadings(\n\t\t\tsubheadingLinks.map((subheadingLink) => ({\n\t\t\t\t...subheadingLink,\n\t\t\t\tref: document.getElementById(subheadingLink.elementId),\n\t\t\t})),\n\t\t);\n\t}, [subheadingLinks, setEnhancedSubheadings]);\n\n\t// set the height explicitly of the container as to make sure that when we detach\n\t// list elements we do not effect the page height\n\tconst [height, setHeight] = useState<number>();\n\tconst divRef = useCallback((node: HTMLDivElement | null) => {\n\t\tif (node) setHeight(node.getBoundingClientRect().height);\n\t}, []);\n\n\tconst [stickyNavCurrentHeader, setStickyNavCurrentHeader] =\n\t\tuseState<null | EnhancedSubheadingType>(null);\n\n\t// The sticky header needs to be based on the section of the article that is being view\n\t// We accomplish this by\n\t// -> Watching each of the elements with an intersection observer\n\t// -> If we've reached the 'endDocument' element stop displaying\n\t// -> If we stop intersecting with the current element, and its in view > show the preview element\n\t// -> If we're intersecting with an element set that to the active one\n\t// -> If the end element is in view, but the last element is not > show the last element\n\tuseEffect((): void | (() => void) => {\n\t\tif ('IntersectionObserver' in window) {\n\t\t\tconst getSubheadingIndexById = (id: string): number =>\n\t\t\t\tenhancedSubheadings.findIndex((item) => item.ref?.id === id);\n\n\t\t\tconst onObserve = (entries: IntersectionObserverEntry[]) => {\n\t\t\t\t// Check if we've reached the end of the document\n\t\t\t\tconst endElement = endDocumentElementId\n\t\t\t\t\t? entries.find(\n\t\t\t\t\t\t\t(entry) => entry.target.id === endDocumentElementId,\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined;\n\n\t\t\t\tif (endElement?.isIntersecting) {\n\t\t\t\t\treturn setStickyNavCurrentHeader(null);\n\t\t\t\t}\n\n\t\t\t\t// Check if the current element is in this update\n\t\t\t\tconst currentElement = entries.find(\n\t\t\t\t\t(entry) =>\n\t\t\t\t\t\tentry.target.id === stickyNavCurrentHeader?.elementId,\n\t\t\t\t);\n\n\t\t\t\t// If we're no longer intersecting with the current element &\n\t\t\t\t// it's still on the screen, switch to the preview element\n\t\t\t\tif (\n\t\t\t\t\tcurrentElement &&\n\t\t\t\t\t!currentElement.isIntersecting &&\n\t\t\t\t\tcurrentElement.boundingClientRect.y > 0\n\t\t\t\t) {\n\t\t\t\t\tconst index = getSubheadingIndexById(\n\t\t\t\t\t\tcurrentElement.target.id,\n\t\t\t\t\t);\n\t\t\t\t\t// If no subheading exists for the index we've probably scrolled past the top of the document\n\t\t\t\t\treturn setStickyNavCurrentHeader(\n\t\t\t\t\t\tenhancedSubheadings[index - 1] ?? null,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Check for entry of new element\n\t\t\t\tconst element = entries.find((entry) => entry.isIntersecting);\n\t\t\t\tif (element?.target.id) {\n\t\t\t\t\treturn setStickyNavCurrentHeader(\n\t\t\t\t\t\tenhancedSubheadings[\n\t\t\t\t\t\t\tgetSubheadingIndexById(element.target.id)\n\t\t\t\t\t\t] ?? null,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Check if we're scrolling up past the end of the document and set sticky nav to the last element\n\t\t\t\tconst [lastElement] = enhancedSubheadings.slice(-1);\n\t\t\t\tif (\n\t\t\t\t\tendElement &&\n\t\t\t\t\tendElement.boundingClientRect.y > 0 &&\n\t\t\t\t\tlastElement?.ref &&\n\t\t\t\t\tlastElement.ref.getBoundingClientRect().y < 0\n\t\t\t\t) {\n\t\t\t\t\treturn setStickyNavCurrentHeader(lastElement);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst observer = new IntersectionObserver(onObserve, {\n\t\t\t\t// Move the 'observation area' to the top of the page\n\t\t\t\trootMargin: `0px 0px -100% 0px`,\n\t\t\t});\n\n\t\t\tfor (const item of enhancedSubheadings) {\n\t\t\t\titem.ref && observer.observe(item.ref);\n\t\t\t}\n\n\t\t\tif (endDocumentElementId) {\n\t\t\t\tconst endDocumentRef =\n\t\t\t\t\tdocument.getElementById(endDocumentElementId);\n\t\t\t\tif (endDocumentRef) observer.observe(endDocumentRef);\n\t\t\t}\n\n\t\t\t// Disable the observer\n\t\t\treturn () => observer.disconnect();\n\t\t}\n\t}, [\n\t\tenhancedSubheadings,\n\t\tsetStickyNavCurrentHeader,\n\t\tstickyNavCurrentHeader,\n\t\tendDocumentElementId,\n\t]);\n\n\treturn (\n\t\t<div\n\t\t\tref={divRef}\n\t\t\tcss={wrapperStyles}\n\t\t\tstyle={!isUndefined(height) ? { height } : {}}\n\t\t>\n\t\t\t<h2 css={headerStyles}>Contents</h2>\n\t\t\t{/* only show sticky nav header if defined */}\n\t\t\t{stickyNavCurrentHeader && (\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tcss={[stickyNavBaseStyles, stickyNavCurrentHeaderStyles]}\n\t\t\t\t\tonClick={() => setShowStickyNavOption(!showStickyNavOption)}\n\t\t\t\t>\n\t\t\t\t\t<span\n\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\tSVGStyles,\n\t\t\t\t\t\t\tshowStickyNavOption && SVGTransitionStyles,\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SvgChevronDownSingle />\n\t\t\t\t\t</span>\n\t\t\t\t\t{stickyNavCurrentHeader.html}\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<ol\n\t\t\t\tdata-ignore=\"global-ol-styling\"\n\t\t\t\tcss={[\n\t\t\t\t\tolStyles,\n\t\t\t\t\t// we detach `ol` from the container when `stickyNavCurrentHeader` is defined\n\t\t\t\t\t// this allows us to reuse the list without redefining it\n\t\t\t\t\tstickyNavCurrentHeader &&\n\t\t\t\t\t\tstickyOlStyles(showStickyNavOption),\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{subheadingLinks.map((subheadingLink, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={subheadingLink.elementId}\n\t\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\t\tliStyles,\n\t\t\t\t\t\t\t\tindex % 2 === 0 && borderRightStyles,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tdata-ignore=\"global-link-styling\"\n\t\t\t\t\t\t\t\tcss={linkStyles}\n\t\t\t\t\t\t\t\thref={`#${subheadingLink.elementId}`}\n\t\t\t\t\t\t\t\tdata-title={subheadingLink.html}\n\t\t\t\t\t\t\t\tonClick={() => setShowStickyNavOption(false)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span css={numberStyles}>{index + 1}</span>\n\t\t\t\t\t\t\t\t{subheadingLink.html}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ol>\n\t\t</div>\n\t);\n};\n","/**\n * How do I get a z-index for my new item?\n *\n * Decide a meaningful name for your item and then insert it\n * in the indices array below. The higher up your item visually,\n * then the higher it will be in the z-index stack,\n * 'higher' means _earlier_ in the array.\n *\n * Eg. stickyAdWrapper will be given a higher z-index than bodyArea\n *\n * Once inserted in the array, use getZIndex() to return the css\n *\n * Eg.\n *\n * import { getZIndex } from './getZIndex';\n *\n * const myCss = css`\n *    color: blue;\n *    z-index: ${getZIndex('TheGuardian')};\n * `;\n *\n * As new items are added, all z-indexes are adjusted\n */\nconst indices = [\n\t// Modals will go here at the top\n\t'lightbox',\n\t'youTubeFullscreen',\n\n\t// Sticky video and button need to be above everything\n\t'sticky-video-button',\n\t'sticky-video',\n\t'banner',\n\t'dropdown',\n\t'burger',\n\t'mastheadVeggieBurgerExpandedMobile',\n\t'expanded-veggie-menu-wrapper',\n\t'expanded-veggie-menu',\n\n\t//header wrapper needs to be in line with veggie menus to ensure it stands above various banners\n\t'fullPageInteractiveHeaderWrapper',\n\n\t// Mobile sticky appears below banners\n\t'mobileSticky',\n\n\t// Headers with sticky ads\n\t'stickyAdWrapperLabsHeader',\n\t'stickyAdWrapper',\n\t'stickyAdWrapperNav',\n\n\t// My Account dropdown in masthead - needs to be below stickyAdWrapper\n\t'mastheadMyAccountDropdown',\n\n\t// Edition selector in masthead - needs to be below stickyAdWrapper\n\t'mastheadEditionDropdown',\n\n\t// Edition selector in nav - needs to be below stickyAdWrapper\n\t'editionDropdown',\n\n\t// The content displayed by the Details component\n\t'summaryDetails',\n\n\t// Liveblog toast\n\t'toast',\n\n\t// Onwards Carousel (Related content etc)\n\t'onwardsCarousel',\n\n\t// Search link should be above The Guardian svg\n\t'myAccountDropdown',\n\t'searchHeaderLink',\n\t'TheGuardian',\n\n\t// The edition switcher banner needs to be below the Edition selector\n\t// and the myAccount dropdown in the nav\n\t'editionSwitcherBanner',\n\n\t// Overlay for expandable marketing card (currently US only)\n\t'expandableMarketingCardOverlay',\n\n\t// Sticky table of contents element\n\t'tableOfContents',\n\n\t// Article headline (should be above main media)\n\t'articleHeadline',\n\t'immersiveBlackBox',\n\n\t// Body\n\t'bodyArea',\n\t'rightColumnArea',\n\n\t// Main media\n\t'mainMedia',\n\n\t// Nested links in cards should sit above the main card link\n\t// See: https://www.sarasoueidan.com/blog/nested-links/\n\t'card-nested-link',\n\t'card-link',\n] as const;\n\n// Implementation code - you don't need to change this to get a new index\nexport type ZIndex = (typeof indices)[number];\n\nexport const getZIndex = (name: ZIndex): number => {\n\tconst index = indices.indexOf(name);\n\tif (index === -1) return -1; // indexOf returns -1 if there is no match\n\treturn indices.length - index; // reverse the indices: last item gets 1\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n","const breakpoints = {\n  desktop: 980,\n  leftCol: 1140,\n  mobile: 320,\n  mobileLandscape: 480,\n  mobileMedium: 375,\n  phablet: 660,\n  tablet: 740,\n  wide: 1300\n};\n\nexport { breakpoints };\n","const visuallyHidden = `\n\tposition: absolute;\n\toverflow: hidden; /* gets rid of horizontal scrollbar that appears in some circumstances */\n\twhite-space: nowrap; /* The white-space property forces the content to render on one line. */\n\twidth: 1px;  /* ensures content is announced by VoiceOver. */\n\theight: 1px; /* ensures content is announced by VoiceOver. */\n\tmargin: -1px; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tpadding: 0; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tborder: 0;\n\tclip: rect(1px, 1px, 1px, 1px); /* clip removes any visible trace of the element */\n\t-webkit-clip-path: inset(50%); /* clip removes any visible trace of the element */\n\tclip-path: inset(50%); /* clip removes any visible trace of the element */\n`;\n\nexport { visuallyHidden };\n","import { breakpoints } from '../__generated__/breakpoints.js';\n\nconst smidgen = 0.1;\nconst minWidth = (from2) => `@media (min-width: ${`${from2}px`})`;\nconst maxWidth = (until2) => `@media (max-width: ${`${until2 - smidgen}px`})`;\nconst minWidthMaxWidth = (from2, until2) => `@media (min-width: ${`${from2}px`}) and (max-width: ${`${until2 - smidgen}px`})`;\nconst from = {\n  mobile: minWidth(breakpoints.mobile),\n  mobileMedium: minWidth(breakpoints.mobileMedium),\n  mobileLandscape: minWidth(breakpoints.mobileLandscape),\n  phablet: minWidth(breakpoints.phablet),\n  tablet: minWidth(breakpoints.tablet),\n  desktop: minWidth(breakpoints.desktop),\n  leftCol: minWidth(breakpoints.leftCol),\n  wide: minWidth(breakpoints.wide)\n};\nconst until = {\n  mobile: maxWidth(breakpoints.mobile),\n  mobileMedium: maxWidth(breakpoints.mobileMedium),\n  mobileLandscape: maxWidth(breakpoints.mobileLandscape),\n  phablet: maxWidth(breakpoints.phablet),\n  tablet: maxWidth(breakpoints.tablet),\n  desktop: maxWidth(breakpoints.desktop),\n  leftCol: maxWidth(breakpoints.leftCol),\n  wide: maxWidth(breakpoints.wide)\n};\nconst between = {\n  mobile: {\n    and: {\n      mobileMedium: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileMedium\n      ),\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileMedium: {\n    and: {\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobileMedium,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileLandscape: {\n    and: {\n      phablet: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.phablet\n      ),\n      tablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n      desktop: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.desktop\n      ),\n      leftCol: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.leftCol\n      ),\n      wide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide)\n    }\n  },\n  phablet: {\n    and: {\n      tablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide)\n    }\n  },\n  tablet: {\n    and: {\n      desktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide)\n    }\n  },\n  desktop: {\n    and: {\n      leftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide)\n    }\n  },\n  leftCol: {\n    and: {\n      wide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide)\n    }\n  }\n};\n\nexport { between, from, until };\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden } from '../../../foundations/accessibility/visually-hidden.js';\nimport { iconSize } from '../../../foundations/__generated__/size.js';\n\nconst Svg = ({ size, theme }) => /* @__PURE__ */ jsx(\n  \"svg\",\n  {\n    width: size ? iconSize[size] : void 0,\n    height: void 0,\n    viewBox: \"-3 -3 30 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: false,\n    \"aria-hidden\": true,\n    children: /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        d: \"m1 7.224 10.498 10.498h1.004L23 7.224l-.98-.954L12 14.708 1.98 6.27z\",\n        fill: theme?.fill\n      }\n    )\n  }\n);\nconst SvgChevronDownSingle = ({\n  size,\n  theme,\n  isAnnouncedByScreenReader = false\n}) => /* @__PURE__ */ jsxs(Fragment, { children: [\n  /* @__PURE__ */ jsx(Svg, { size, theme }),\n  isAnnouncedByScreenReader ? /* @__PURE__ */ jsx(\n    \"span\",\n    {\n      css: css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`,\n      children: \"Expand to show more\"\n    }\n  ) : \"\"\n] });\n\nexport { SvgChevronDownSingle };\n"],"names":["liStyles","css","sourcePalette","neutral","themePalette","borderRightStyles","from","mobileLandscape","linkStyles","headlineLight20","space","numberStyles","headlineBold20","headerStyles","headlineBold34","stickyNavBaseStyles","tablet","getZIndex","olStyles","stickyOlStyles","showStickyNavOption","wrapperStyles","leftCol","stickyNavCurrentHeaderStyles","until","headlineBold17","SVGStyles","SVGTransitionStyles","InteractiveContentsBlockComponent","subheadingLinks","endDocumentElementId","setShowStickyNavOption","useState","enhancedSubheadings","setEnhancedSubheadings","useEffect","map","subheadingLink","ref","document","getElementById","elementId","height","setHeight","divRef","useCallback","node","getBoundingClientRect","stickyNavCurrentHeader","setStickyNavCurrentHeader","window","getSubheadingIndexById","id","findIndex","item","observer","IntersectionObserver","entries","endElement","find","entry","target","undefined","isIntersecting","currentElement","boundingClientRect","y","index","element","lastElement","slice","rootMargin","observe","endDocumentRef","disconnect","div","style","isUndefined","h2","button","type","onClick","span","SvgChevronDownSingle","html","ol","data-ignore","li","a","href","data-title","indices","name","indexOf","length","palette","colour","breakpoints","desktop","mobile","mobileMedium","phablet","wide","visuallyHidden","minWidth","from2","maxWidth","until2","minWidthMaxWidth","between","and","Svg","size","theme","jsx","width","iconSize","viewBox","xmlns","focusable","children","fillRule","clipRule","d","fill","isAnnouncedByScreenReader","jsxs","Fragment"],"sourceRoot":""}