{"version":3,"file":"TopBarSupport-importable.client.web.1b6f212bc80d512131f4.js","mappings":"+TAGC,kB,grBA0BD,MAAMA,GAAeC,EAAAA,EAAAA,KAAGA,KAalBC,EAA4B,I,IAAA,YACjCC,EAAW,WACXC,EAAU,wBACVC,GAC+B,EAC/B,MAAOC,EAAuBC,IAC7BC,EAAAA,EAAAA,UAA4B,OACtBC,EAAeC,IACrBF,EAAAA,EAAAA,UAAmC,MAC9BG,GAAaC,EAAAA,EAAAA,MAEb,gBAAEC,IAAoBC,EAAAA,EAAAA,KAgE5B,OA9DAC,EAAAA,EAAAA,YAAU,KACT,IAAIC,EAAAA,EAAAA,GAAYb,IAA+B,YAAfQ,EAC/B,OAGD,MAAMM,GACLC,EAAAA,EAAAA,IAA2BP,GAC5B,GAAoC,YAAhCM,EAEH,QAGDE,EAAAA,EAAAA,KAEA,MAAMC,EAA6B,CAClCC,SAAU,CACTC,YAAalB,EACbmB,WAAY,eACZC,YAAaC,OAAOC,SAASC,OAASF,OAAOC,SAASE,SACtDC,WAAY,OAEbC,UAAW,CACVC,sBAAuBd,EACvBd,cACA6B,MAAOC,QACNC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,YAAaC,eAAe,KAE/CC,cAAcC,EAAAA,EAAAA,MACd3B,gBAIF4B,EAAAA,EAAAA,IAAUlC,EAAyBe,GACjCoB,MAAMC,IACN,IAAKA,EAASC,KACb,OAAO,KAGR,MAAM,OAAEC,GAAWF,EAASC,KAG5B,OAFAnC,EAAyBoC,IAGR,uBAAhBA,EAAOR,KAEJ,mEAEA,mEACFK,MAAMI,IACPlC,GAAiB,K,IAAMkC,E,OAAyB,QAAzBA,EAAAA,EAAaD,EAAOR,aAApBS,IAAAA,EAAAA,EAA6B,IAAI,G,GACvD,IAEFC,OAAOC,IACP,MAAMC,EAAM,oCAAkD,OAAdC,OAAOF,IAEvDG,QAAQC,IAAIH,GACZtB,OAAO0B,SAASC,QAAQC,OAAOC,YAC9B,IAAIC,MAAMR,GACV,qBAEA,GACD,CAAC5C,EAAaQ,EAAYN,EAAyBD,IAEhC,OAAlBK,GAA0BH,GAE5B,SAACkD,MAAAA,CAAIvD,IAAKD,E,UAET,SAACS,EAAAA,EAAAA,CACAgD,qBACCC,KAEKD,EAAAA,EAAAA,IACJC,EACA7C,E,GAGEP,EAAsBqD,UAMvB,IAAI,EAiBCC,EAAiB,I,IAAA,wBAAEvD,GAAgC,EAC/D,MAAM,gBAAEQ,IAAoBC,EAAAA,EAAAA,KACtBX,GAAc0D,EAAAA,EAAAA,GAAe,wBAC7BzD,GAAa0D,EAAAA,EAAAA,GAAcjD,GAEjC,OAAIG,EAAAA,EAAAA,GAAYb,KAAgBa,EAAAA,EAAAA,GAAYZ,GAAoB,MAG/D,SAACF,EAAAA,CACAC,YAAaA,EACbC,WAAYA,EACZC,wBAAyBA,G,0MCtJrB,MAAM0D,EAAgC,4BAChCC,EAA+B,2BAI/BC,EACZ,qCAIYC,EAAmB,gBAwEnBhD,EACZP,IAEA,MAAMwD,EAhE2B,CACjCxD,IAGA,QADeuB,EAAAA,EAAAA,GAAU,CAAEC,KAAM4B,KAEhC,IAAK,OACJ,OAAO,EACR,IAAK,QACJ,OAAO,EACR,QAMC,QAAIpD,GACI,UAIV,EA4CkByD,CAAmBzD,GACrC,MAAkB,YAAdwD,EACI,UAEAA,GAjBgC,MACxC,MAAME,EA3B2C,MAEjD,MAAMC,GAA8BpC,EAAAA,EAAAA,GAAU,CAC7CC,KAAM8B,IAGP,GAAKK,EASL,OAJ8BA,EAC3BC,SAASD,EAA6B,IACtC,SAE6BE,CAAS,EAYZC,GAC7B,QAAKzD,EAAAA,EAAAA,GAAYqD,IAVG,EAACK,EAAcC,KACnC,MACMC,EASOC,KAAKC,MATEJ,EACpB,OAAOK,KAAKC,MAAMJ,EAFD,MAEmB,EAS5BK,CAAaZ,IAND,EASR,EAUSa,EACrB,EAGYC,EAAsC,CAAC,EAAG,EAAG,GACpDC,EAAmC,CAAC,EAAG,EAAG,EAAG,GAEtCC,EAA8B,IACe,QAAzDnD,EAAAA,EAAAA,GAAU,CAAEC,KA/FkC,6BAoGlCmD,EAAqC,IAC1C,IAAIC,SAASC,KACftD,EAAAA,EAAAA,GAAU,CAAEC,KAAM,kBAAmBC,eAAe,KACvDoD,GAAQ,IAETC,EAAAA,EAAAA,KAAiB,I,IAAA,MAAEC,EAAK,MAAEC,EAAK,IAAEC,GAAK,EACrC,GAAIF,QAAAA,EAASE,EACZJ,GAAQ,QACF,GAAIG,EAAO,CACjB,MAAME,EACLV,EAAoCW,OAClCC,GAAYJ,EAAMK,SAASD,KAGzBF,GAhBRI,EAAAA,EAAQC,MAAMC,OA3FkB,iCA8G7BX,EAAQK,EACT,IACC,IAISO,EAA4BC,gBACZf,KACHD,IAGbiB,EAAkCD,gBAClBf,KACHD,IAIbkB,EAA+B,KAC3C,MAAOC,EAAaC,IAAkBjG,EAAAA,EAAAA,UACrC,WASD,OANAO,EAAAA,EAAAA,YAAU,KACTqF,IACE5D,KAAKiE,GACL5D,OAAM,IAAM4D,GAAe,IAAM,GACjC,IAEID,CAAW,EAGNE,EAA4B,IACxC,IAAInB,SAASC,KACRtD,EAAAA,EAAAA,GAAU,CAAEC,KAAM,kBAAmBC,eAAe,KACvDoD,GAAQ,IAETC,EAAAA,EAAAA,KAAiB,I,IAAA,MAAEC,EAAK,MAAEC,EAAK,IAAEC,GAAK,EACrC,GAAIF,QAAAA,EAASE,EACZJ,GAAQ,QACF,GAAIG,EAAO,CACjB,MAAME,EACLT,EAAiCU,OAC/BC,GAAYJ,EAAMK,SAASD,KAE9BP,EAAQK,EACT,IACC,IAISc,EAAiC,MAC3CV,EAAAA,EAAQC,MAAMU,IAAI1C,GAER2C,EAA8B,W,IAAC/B,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAcD,KAAKC,M,OAC9DmB,EAAAA,EAAQC,MAAMY,IAAI5C,GAAkB,EAAMY,EALxB,K,EASNiC,EAAuB,SACnCC,G,IACAlC,EAAM,UAANA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAMD,KAAKC,MAEX,QAAIkC,GACIlC,EAAM,IAAID,KAAKmC,GAAcC,UANf,IASvB,EAWa3E,EAAkB,KAC9B,MAAM4E,GAAkBhF,EAAAA,EAAAA,GAAU,CACjCC,KAAM,iBACNC,eAAe,IAGhB,IAAK8E,EACJ,OAGD,IAAI7E,EAEJ,IACCA,EAAe8E,KAAKC,MAAMC,mBAAmBH,GAC9C,CAAE,SAAO,CAET,OAAO7E,CAAY,C,wEC9NpB,IAAIiF,GAAoB,EAEjB,MAAMnG,EAAa,KACpBmG,IACJ7F,OAAO0B,SAASoE,QAAU,CACzBC,aAAYA,EACZC,uBAAsBA,EACtBC,MAAOC,EAAAA,SAERL,GAAoB,EACrB,C,qECDM,MAAM1G,EAAgB,KAE5B,OADmBgH,IACAC,MAClB,IAAK,UACJ,MAAO,UACR,IAAK,sBACL,IAAK,mBACJ,OAAO,EACR,IAAK,uBACL,IAAK,oBACJ,OAAO,EACT,EAGYD,EAAgB,KAC5B,MAAOE,EAAYC,IAAiBvH,EAAAA,EAAAA,UAAqB,CACxDqH,KAAM,YAcP,OAXA9G,EAAAA,EAAAA,YAAU,MACTiH,EAAAA,EAAAA,KACEC,IACAF,GAAcG,EAAAA,EAAAA,IAA0BD,GAAe,IAExD,IAAMF,GAAcI,EAAAA,EAAAA,SACnBtF,OAAOC,IACRG,QAAQH,MAAMA,EAAM,GACnB,GACA,IAEIgF,CAAU,C,sECvCX,MAAMjE,EAAkBuE,IAC9B,MAAOjI,EAAakI,IAAkB7H,EAAAA,EAAAA,YAgBtC,OAdAO,EAAAA,EAAAA,YAAU,MACTuH,EAAAA,EAAAA,KACE9F,MAAM+F,KACFC,EAAAA,EAAAA,GAAcD,IAAKF,EAAeE,EAAG,IAEzC1F,OAAO4F,IACP,MAAM1F,EAAM,gCAA0C,OAAVC,OAAOyF,IACnDhH,OAAO0B,SAASC,QAAQC,OAAOC,YAC9B,IAAIC,MAAMR,GACVqF,EAAAA,GAEA,GACD,CAACA,IAEGjI,CAAW,C,6DCjBZ,MAAM2D,EACZjD,IAEA,MAAO6H,EAAIC,IAASnI,EAAAA,EAAAA,YAYpB,OAVAO,EAAAA,EAAAA,YAAU,MACT6H,EAAAA,EAAAA,IAAS/H,GACP2B,MAAM,I,IAAA,WAAEpC,GAAY,EACpBuI,EAAMvI,EAAW,IAEjByC,OAAM,KACN8F,EAAM,4BAA4B,GACjC,GACD,CAAC9H,IAEG6H,CAAE,C","sources":["webpack://@guardian/dotcom-rendering/./src/components/TopBarSupport.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/lib/setAutomat.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAuthStatus.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCountryCode.ts","webpack://@guardian/dotcom-rendering/./src/lib/usePageViewId.ts"],"sourcesContent":["/**\n * @file\n * This file was largely lifted from https://github.com/guardian/dotcom-rendering/blob/b3ef504acd00d48e765e0656be5ffbad88981a39/dotcom-rendering/src/components/SupportTheG.importable.tsx\n */\nimport { css } from '@emotion/react';\nimport type { OphanComponentEvent } from '@guardian/libs';\nimport { getCookie, isUndefined } from '@guardian/libs';\nimport { getHeader } from '@guardian/support-dotcom-components';\nimport type {\n\tHeaderPayload,\n\tModuleData,\n\tModuleDataResponse,\n} from '@guardian/support-dotcom-components/dist/dotcom/types';\nimport { useEffect, useState } from 'react';\nimport { submitComponentEvent } from '../client/ophan/ophan';\nimport {\n\tgetPurchaseInfo,\n\tshouldHideSupportMessaging,\n} from '../lib/contributions';\nimport { setAutomat } from '../lib/setAutomat';\nimport { useIsSignedIn } from '../lib/useAuthStatus';\nimport { useCountryCode } from '../lib/useCountryCode';\nimport { usePageViewId } from '../lib/usePageViewId';\nimport { useConfig } from './ConfigContext';\n\ntype Props = {\n\tcontributionsServiceUrl: string;\n};\n\nconst headerStyles = css`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\toverflow-wrap: nowrap;\n`;\n\ntype ReaderRevenueLinksRemoteProps = {\n\tcountryCode: string;\n\tpageViewId: string;\n\tcontributionsServiceUrl: string;\n};\n\nconst ReaderRevenueLinksRemote = ({\n\tcountryCode,\n\tpageViewId,\n\tcontributionsServiceUrl,\n}: ReaderRevenueLinksRemoteProps) => {\n\tconst [supportHeaderResponse, setSupportHeaderResponse] =\n\t\tuseState<ModuleData | null>(null);\n\tconst [SupportHeader, setSupportHeader] =\n\t\tuseState<React.ElementType | null>(null);\n\tconst isSignedIn = useIsSignedIn();\n\n\tconst { renderingTarget } = useConfig();\n\n\tuseEffect((): void => {\n\t\tif (isUndefined(countryCode) || isSignedIn === 'Pending') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hideSupportMessagingForUser =\n\t\t\tshouldHideSupportMessaging(isSignedIn);\n\t\tif (hideSupportMessagingForUser === 'Pending') {\n\t\t\t// We don't yet know the user's supporter status\n\t\t\treturn;\n\t\t}\n\n\t\tsetAutomat();\n\n\t\tconst requestData: HeaderPayload = {\n\t\t\ttracking: {\n\t\t\t\tophanPageId: pageViewId,\n\t\t\t\tplatformId: 'GUARDIAN_WEB',\n\t\t\t\treferrerUrl: window.location.origin + window.location.pathname,\n\t\t\t\tclientName: 'dcr',\n\t\t\t},\n\t\t\ttargeting: {\n\t\t\t\tshowSupportMessaging: !hideSupportMessagingForUser,\n\t\t\t\tcountryCode,\n\t\t\t\tmvtId: Number(\n\t\t\t\t\tgetCookie({ name: 'GU_mvt_id', shouldMemoize: true }),\n\t\t\t\t),\n\t\t\t\tpurchaseInfo: getPurchaseInfo(),\n\t\t\t\tisSignedIn,\n\t\t\t},\n\t\t};\n\n\t\tgetHeader(contributionsServiceUrl, requestData)\n\t\t\t.then((response: ModuleDataResponse) => {\n\t\t\t\tif (!response.data) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst { module } = response.data;\n\t\t\t\tsetSupportHeaderResponse(module);\n\n\t\t\t\treturn (\n\t\t\t\t\tmodule.name === 'SignInPromptHeader'\n\t\t\t\t\t\t? /* webpackChunkName: \"sign-in-prompt-header\" */\n\t\t\t\t\t\t  import(`./marketing/header/SignInPromptHeader`)\n\t\t\t\t\t\t: /* webpackChunkName: \"header\" */\n\t\t\t\t\t\t  import(`./marketing/header/Header`)\n\t\t\t\t).then((headerModule: { [key: string]: React.ElementType }) => {\n\t\t\t\t\tsetSupportHeader(() => headerModule[module.name] ?? null);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconst msg = `Error importing RR header links: ${String(error)}`;\n\n\t\t\t\tconsole.log(msg);\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\tnew Error(msg),\n\t\t\t\t\t'rr-header-links',\n\t\t\t\t);\n\t\t\t});\n\t}, [countryCode, isSignedIn, contributionsServiceUrl, pageViewId]);\n\n\tif (SupportHeader !== null && supportHeaderResponse) {\n\t\treturn (\n\t\t\t<div css={headerStyles}>\n\t\t\t\t{}\n\t\t\t\t<SupportHeader\n\t\t\t\t\tsubmitComponentEvent={(\n\t\t\t\t\t\tcomponentEvent: OphanComponentEvent,\n\t\t\t\t\t) =>\n\t\t\t\t\t\tvoid submitComponentEvent(\n\t\t\t\t\t\t\tcomponentEvent,\n\t\t\t\t\t\t\trenderingTarget,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{...supportHeaderResponse.props}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn null;\n};\n\n/**\n * Shows support messaging and a CTA (call to action) button in the top bar\n * Messaging comes from the RRCP (reader revenue control panel) via the\n * contributions service\n *\n * ## Why does this need to be an Island?\n *\n * Reader revenue links are entirely client-side and specific to a unique\n * page view. They also relying on getting a country code.\n *\n * ---\n *\n * (No visual story exists)\n */\nexport const TopBarSupport = ({ contributionsServiceUrl }: Props) => {\n\tconst { renderingTarget } = useConfig();\n\tconst countryCode = useCountryCode('support-the-Guardian');\n\tconst pageViewId = usePageViewId(renderingTarget);\n\n\tif (isUndefined(countryCode) || isUndefined(pageViewId)) return null;\n\n\treturn (\n\t\t<ReaderRevenueLinksRemote\n\t\t\tcountryCode={countryCode}\n\t\t\tpageViewId={pageViewId}\n\t\t\tcontributionsServiceUrl={contributionsServiceUrl}\n\t\t/>\n\t);\n};\n","import {\n\tgetCookie,\n\tisUndefined,\n\tonConsentChange,\n\tstorage,\n} from '@guardian/libs';\nimport type { HeaderPayload } from '@guardian/support-dotcom-components/dist/dotcom/types';\nimport { useEffect, useState } from 'react';\nimport type { ArticleDeprecated } from '../types/article';\nimport type { DCRFrontType } from '../types/front';\nimport type { DCRNewslettersPageType } from '../types/newslettersPage';\nimport type { DCRTagPageType } from '../types/tagPage';\n\n// User Attributes API cookies (created on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n\n// Support Frontend cookie (created when a contribution is made)\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE =\n\t'gu.contributions.contrib-timestamp';\n\n//  Local storage keys\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_KEY = 'gu.noRRBanner';\n\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n\n// Returns true if we should hide support messaging because the user is a supporter.\n// Checks the cookie that is set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nexport const hasSupporterCookie = (\n\tisSignedIn: boolean,\n): boolean | 'Pending' => {\n\tconst cookie = getCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE });\n\tswitch (cookie) {\n\t\tcase 'true':\n\t\t\treturn true;\n\t\tcase 'false':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\t/**\n\t\t\t * If cookie is not present but user is signed in, we do not want to show any messaging.\n\t\t\t * This is because of a race condition on the first page view after signing in, where\n\t\t\t * we may be awaiting the response from the API to find out if they're a supporter.\n\t\t\t */\n\t\t\tif (isSignedIn) {\n\t\t\t\treturn 'Pending';\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t}\n};\n\n// looks at the SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (set by support-frontend when making one-off contribution)\n// and returns a Unix epoch int of the date if it exists.\nexport const getLastOneOffContributionTimestamp = (): number | undefined => {\n\t// Support cookies - expects Unix epoch\n\tconst contributionDateFromSupport = getCookie({\n\t\tname: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\t});\n\n\tif (!contributionDateFromSupport) {\n\t\treturn undefined;\n\t}\n\n\t// Parse dates into common a number\n\tconst parsedDateFromSupport = contributionDateFromSupport\n\t\t? parseInt(contributionDateFromSupport, 10)\n\t\t: 0;\n\n\treturn parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\n\nconst dateDiffDays = (from: number, to: number): number => {\n\tconst oneDayMs = 1000 * 60 * 60 * 24;\n\tconst diffMs = to - from;\n\treturn Math.floor(diffMs / oneDayMs);\n};\n\nconst AskPauseDays = 90;\n\nexport const isRecentOneOffContributor = (): boolean => {\n\tconst lastContributionDate = getLastOneOffContributionTimestamp();\n\tif (!isUndefined(lastContributionDate)) {\n\t\tconst now = Date.now();\n\t\treturn dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n\t}\n\n\treturn false;\n};\n\nexport const shouldHideSupportMessaging = (\n\tisSignedIn: boolean,\n): boolean | 'Pending' => {\n\tconst hasCookie = hasSupporterCookie(isSignedIn);\n\tif (hasCookie === 'Pending') {\n\t\treturn 'Pending';\n\t} else {\n\t\treturn hasCookie || isRecentOneOffContributor();\n\t}\n};\n\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\n\nexport const hasArticleCountOptOutCookie = (): boolean =>\n\tgetCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\n\nconst removeWeeklyArticleCountsFromLocalStorage = () =>\n\tstorage.local.remove(WEEKLY_ARTICLE_COUNT_KEY);\n\nexport const hasCmpConsentForWeeklyArticleCount = (): Promise<boolean> => {\n\treturn new Promise((resolve) => {\n\t\tif (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n\t\t\tresolve(true);\n\t\t}\n\t\tonConsentChange(({ usnat, tcfv2, aus }) => {\n\t\t\tif (usnat ?? aus) {\n\t\t\t\tresolve(true);\n\t\t\t} else if (tcfv2) {\n\t\t\t\tconst hasRequiredConsents =\n\t\t\t\t\tREQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every(\n\t\t\t\t\t\t(consent) => tcfv2.consents[consent],\n\t\t\t\t\t);\n\n\t\t\t\tif (!hasRequiredConsents) {\n\t\t\t\t\tremoveWeeklyArticleCountsFromLocalStorage();\n\t\t\t\t}\n\t\t\t\tresolve(hasRequiredConsents);\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const hasOptedOutOfArticleCount = async (): Promise<boolean> => {\n\tconst hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n\treturn !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n\nexport const hasOptedOutOfWeeklyArticleCount = async (): Promise<boolean> => {\n\tconst hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n\treturn !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = (): boolean | 'Pending' => {\n\tconst [hasOptedOut, setHasOptedOut] = useState<boolean | 'Pending'>(\n\t\t'Pending',\n\t);\n\n\tuseEffect(() => {\n\t\thasOptedOutOfArticleCount()\n\t\t\t.then(setHasOptedOut)\n\t\t\t.catch(() => setHasOptedOut(true));\n\t}, []);\n\n\treturn hasOptedOut;\n};\n\nexport const hasCmpConsentForBrowserId = (): Promise<boolean> =>\n\tnew Promise((resolve) => {\n\t\tif (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n\t\t\tresolve(true);\n\t\t}\n\t\tonConsentChange(({ usnat, tcfv2, aus }) => {\n\t\t\tif (usnat ?? aus) {\n\t\t\t\tresolve(true);\n\t\t\t} else if (tcfv2) {\n\t\t\t\tconst hasRequiredConsents =\n\t\t\t\t\tREQUIRED_CONSENTS_FOR_BROWSER_ID.every(\n\t\t\t\t\t\t(consent) => tcfv2.consents[consent],\n\t\t\t\t\t);\n\t\t\t\tresolve(hasRequiredConsents);\n\t\t\t}\n\t\t});\n\t});\n\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = (): boolean =>\n\t!!storage.local.get(NO_RR_BANNER_KEY);\n\nexport const setLocalNoBannerCachePeriod = (now: number = Date.now()): void =>\n\tstorage.local.set(NO_RR_BANNER_KEY, true, now + twentyMins);\n\n// Returns true if banner was closed in the last hour\nconst ONE_HOUR_IN_MS = 1000 * 60 * 60;\nexport const recentlyClosedBanner = (\n\tlastClosedAt?: string,\n\tnow = Date.now(),\n): boolean => {\n\tif (lastClosedAt) {\n\t\treturn now - new Date(lastClosedAt).getTime() < ONE_HOUR_IN_MS;\n\t}\n\treturn false;\n};\n\nexport const getContributionsServiceUrl = (\n\tconfig:\n\t\t| ArticleDeprecated\n\t\t| DCRFrontType\n\t\t| DCRTagPageType\n\t\t| DCRNewslettersPageType,\n): string => process.env.SDC_URL ?? config.contributionsServiceUrl;\n\ntype PurchaseInfo = HeaderPayload['targeting']['purchaseInfo'];\nexport const getPurchaseInfo = (): PurchaseInfo => {\n\tconst purchaseInfoRaw = getCookie({\n\t\tname: 'GU_CO_COMPLETE',\n\t\tshouldMemoize: true,\n\t});\n\n\tif (!purchaseInfoRaw) {\n\t\treturn undefined;\n\t}\n\n\tlet purchaseInfo: PurchaseInfo;\n\n\ttry {\n\t\tpurchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n\t} catch {} // eslint-disable-line no-empty -- silently handle error\n\n\treturn purchaseInfo;\n};\n","import * as emotionReact from '@emotion/react';\nimport * as emotionReactJsxRuntime from '@emotion/react/jsx-runtime';\nimport React from 'react';\n\nlet hasAutomatBeenSet = false;\n\nexport const setAutomat = (): void => {\n\tif (!hasAutomatBeenSet) {\n\t\twindow.guardian.automat = {\n\t\t\temotionReact,\n\t\t\temotionReactJsxRuntime,\n\t\t\treact: React,\n\t\t};\n\t\thasAutomatBeenSet = true;\n\t}\n};\n","import { useEffect, useState } from 'react';\nimport type { AuthStatus } from './identity';\nimport {\n\teitherInOktaTestOrElse,\n\tgetSignedInStatusWithCookies,\n\tgetSignedInStatusWithOkta,\n} from './identity';\n\n/**\n * A hook to find out if a user is signed in.\n * Returns `'Pending'` until status is known.\n * Always returns `'Pending'` during server-side rendering.\n * */\nexport const useIsSignedIn = (): boolean | 'Pending' => {\n\tconst authStatus = useAuthStatus();\n\tswitch (authStatus.kind) {\n\t\tcase 'Pending':\n\t\t\treturn 'Pending';\n\t\tcase 'SignedInWithCookies':\n\t\tcase 'SignedInWithOkta':\n\t\t\treturn true;\n\t\tcase 'SignedOutWithCookies':\n\t\tcase 'SignedOutWithOkta':\n\t\t\treturn false;\n\t}\n};\n\nexport const useAuthStatus = (): AuthStatus => {\n\tconst [authStatus, setAuthStatus] = useState<AuthStatus>({\n\t\tkind: 'Pending',\n\t});\n\n\tuseEffect(() => {\n\t\teitherInOktaTestOrElse(\n\t\t\t(oktaAuthState) => {\n\t\t\t\tsetAuthStatus(getSignedInStatusWithOkta(oktaAuthState));\n\t\t\t},\n\t\t\t() => setAuthStatus(getSignedInStatusWithCookies()),\n\t\t).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t}, []);\n\n\treturn authStatus;\n};\n","import { type CountryCode, isNonNullable } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getLocaleCode } from './getCountryCode';\n\nexport const useCountryCode = (feature: string): CountryCode | undefined => {\n\tconst [countryCode, setCountryCode] = useState<CountryCode>();\n\n\tuseEffect(() => {\n\t\tgetLocaleCode()\n\t\t\t.then((cc) => {\n\t\t\t\tif (isNonNullable(cc)) setCountryCode(cc);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconst msg = `Error fetching country code: ${String(e)}`;\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\tnew Error(msg),\n\t\t\t\t\tfeature,\n\t\t\t\t);\n\t\t\t});\n\t}, [feature]);\n\n\treturn countryCode;\n};\n","import { useEffect, useState } from 'react';\nimport { getOphan } from '../client/ophan/ophan';\nimport type { RenderingTarget } from '../types/renderingTarget';\n\nexport const usePageViewId = (\n\trenderingTarget: RenderingTarget,\n): string | undefined => {\n\tconst [id, setId] = useState<string>();\n\n\tuseEffect(() => {\n\t\tgetOphan(renderingTarget)\n\t\t\t.then(({ pageViewId }) => {\n\t\t\t\tsetId(pageViewId);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetId('no-page-view-id-available');\n\t\t\t});\n\t}, [renderingTarget]);\n\n\treturn id;\n};\n"],"names":["headerStyles","css","ReaderRevenueLinksRemote","countryCode","pageViewId","contributionsServiceUrl","supportHeaderResponse","setSupportHeaderResponse","useState","SupportHeader","setSupportHeader","isSignedIn","useIsSignedIn","renderingTarget","useConfig","useEffect","isUndefined","hideSupportMessagingForUser","shouldHideSupportMessaging","setAutomat","requestData","tracking","ophanPageId","platformId","referrerUrl","window","location","origin","pathname","clientName","targeting","showSupportMessaging","mvtId","Number","getCookie","name","shouldMemoize","purchaseInfo","getPurchaseInfo","getHeader","then","response","data","module","headerModule","catch","error","msg","String","console","log","guardian","modules","sentry","reportError","Error","div","submitComponentEvent","componentEvent","props","TopBarSupport","useCountryCode","usePageViewId","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_KEY","hasCookie","hasSupporterCookie","lastContributionDate","contributionDateFromSupport","parseInt","undefined","getLastOneOffContributionTimestamp","from","to","diffMs","Date","now","Math","floor","dateDiffDays","isRecentOneOffContributor","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasArticleCountOptOutCookie","hasCmpConsentForWeeklyArticleCount","Promise","resolve","onConsentChange","usnat","tcfv2","aus","hasRequiredConsents","every","consent","consents","storage","local","remove","hasOptedOutOfArticleCount","async","hasOptedOutOfWeeklyArticleCount","useHasOptedOutOfArticleCount","hasOptedOut","setHasOptedOut","hasCmpConsentForBrowserId","withinLocalNoBannerCachePeriod","get","setLocalNoBannerCachePeriod","set","recentlyClosedBanner","lastClosedAt","getTime","purchaseInfoRaw","JSON","parse","decodeURIComponent","hasAutomatBeenSet","automat","emotionReact","emotionReactJsxRuntime","react","React","useAuthStatus","kind","authStatus","setAuthStatus","eitherInOktaTestOrElse","oktaAuthState","getSignedInStatusWithOkta","getSignedInStatusWithCookies","feature","setCountryCode","getLocaleCode","cc","isNonNullable","e","id","setId","getOphan"],"sourceRoot":""}