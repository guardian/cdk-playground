{"version":3,"file":"VineBlockComponent-importable.client.web.a98a058ba9480de1276f.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/ClickToView.tsx","webpack://@guardian/dotcom-rendering/./src/components/MaintainAspectRatio.tsx","webpack://@guardian/dotcom-rendering/./src/components/VineBlockComponent.importable.tsx","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgCheckmark.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/button/Button.js"],"sourcesContent":["import { css } from '@emotion/react';\nimport {\n\tspace,\n\ttextSans15,\n\ttextSans17,\n\ttextSansBold17,\n\ttextSansBold20,\n} from '@guardian/source/foundations';\nimport { Button, SvgCheckmark } from '@guardian/source/react-components';\nimport { useState } from 'react';\nimport { palette } from '../palette';\nimport type { RoleType } from '../types/content';\n\ntype Props = {\n\tchildren: React.ReactNode;\n\trole?: RoleType;\n\tonAccept?: () => void;\n\tisTracking: boolean;\n\tisMainMedia?: boolean;\n\tsource?: string;\n\tsourceDomain?: string;\n};\n\nconst roleTextSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn textSans17;\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\tcase 'thumbnail': {\n\t\t\treturn textSans15;\n\t\t}\n\t}\n};\n\nconst roleHeadlineSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn textSansBold20;\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\tcase 'thumbnail': {\n\t\t\treturn textSansBold17;\n\t\t}\n\t}\n};\n\nconst roleButtonSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn 'default';\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\t\treturn 'small';\n\t\tcase 'thumbnail': {\n\t\t\treturn 'xsmall';\n\t\t}\n\t}\n};\n\nconst roleButtonText = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase':\n\t\tcase 'halfWidth':\n\t\tcase 'supporting': {\n\t\t\treturn 'Allow and continue';\n\t\t}\n\t\tcase 'thumbnail': {\n\t\t\treturn 'Allow';\n\t\t}\n\t}\n};\n\nconst buttonCss = css`\n\tbackground-color: ${palette('--click-to-view-button')};\n\tcolor: ${palette('--click-to-view-button-text')};\n\n\t:hover,\n\t:focus {\n\t\tbackground-color: ${palette('--click-to-view-button-hover')};\n\t}\n`;\n\nconst shouldDisplayOverlay = ({\n\tisTracking,\n\tisOverlayClicked,\n\tisMainMedia,\n}: {\n\tisTracking: boolean;\n\tisOverlayClicked: boolean;\n\tisMainMedia?: boolean;\n}) => {\n\tif (!!isMainMedia || !isTracking) {\n\t\treturn false;\n\t}\n\tif (isOverlayClicked) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport const ClickToView = ({\n\tchildren,\n\trole = 'inline',\n\tonAccept,\n\tisTracking,\n\tisMainMedia,\n\tsource,\n\tsourceDomain = 'unknown',\n}: Props) => {\n\tconst [isOverlayClicked, setIsOverlayClicked] = useState<boolean>(false);\n\n\tconst handleClick = () => {\n\t\tsetIsOverlayClicked(true);\n\t\tif (onAccept) {\n\t\t\tsetTimeout(() => onAccept());\n\t\t}\n\t};\n\n\tconst textSize = roleTextSize(role);\n\n\tif (\n\t\tshouldDisplayOverlay({\n\t\t\tisTracking,\n\t\t\tisOverlayClicked,\n\t\t\tisMainMedia,\n\t\t})\n\t) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tcss={css`\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbackground: ${palette('--click-to-view-background')};\n\t\t\t\t\tborder: 1px solid ${palette('--click-to-view-border')};\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tpadding: ${space[1]}px ${space[6]}px ${space[3]}px;\n\t\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t\t`}\n\t\t\t\tdata-component={`click-to-view:${sourceDomain}`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${roleHeadlineSize(role)}\n\t\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{source\n\t\t\t\t\t\t? `Allow ${source} content?`\n\t\t\t\t\t\t: 'Allow content provided by a third party?'}\n\t\t\t\t</div>\n\t\t\t\t<p\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${textSize}\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{source ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tThis article includes content provided by {source}.\n\t\t\t\t\t\t\tWe ask for your permission before anything is\n\t\t\t\t\t\t\tloaded, as they may be using cookies and other\n\t\t\t\t\t\t\ttechnologies. To view this content,{' '}\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\tclick &apos;Allow and continue&apos;\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tThis article includes content hosted on{' '}\n\t\t\t\t\t\t\t{sourceDomain}. We ask for your permission before\n\t\t\t\t\t\t\tanything is loaded, as the provider may be using\n\t\t\t\t\t\t\tcookies and other technologies. To view this\n\t\t\t\t\t\t\tcontent,{' '}\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\tclick &apos;Allow and continue&apos;\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\tmargin-top: ${space[5]}px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tpriority=\"primary\"\n\t\t\t\t\t\tsize={roleButtonSize(role)}\n\t\t\t\t\t\ticon={<SvgCheckmark />}\n\t\t\t\t\t\ticonSide=\"left\"\n\t\t\t\t\t\tonClick={() => handleClick()}\n\t\t\t\t\t\tdata-testid=\"click-to-view-button\"\n\t\t\t\t\t\tdata-link-name=\"allow-button\"\n\t\t\t\t\t\tcssOverrides={buttonCss}\n\t\t\t\t\t>\n\t\t\t\t\t\t{roleButtonText(role)}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <>{children}</>;\n};\n","import { css } from '@emotion/react';\nimport type { AspectRatio } from '../types/front';\n\ntype Props = {\n\theight: number;\n\twidth: number;\n\taspectRatio?: AspectRatio;\n\tchildren: React.ReactNode;\n};\n\nexport const MaintainAspectRatio = ({\n\theight,\n\twidth,\n\taspectRatio,\n\tchildren,\n}: Props) => {\n\t/* https://css-tricks.com/aspect-ratio-boxes/ */\n\tconst paddingBottom =\n\t\taspectRatio === '5:4'\n\t\t\t? `${(4 / 5) * 100}%`\n\t\t\t: `${(height / width) * 100}%`;\n\n\treturn (\n\t\t<div\n\t\t\tcss={css`\n\t\t\t\t/* position relative to contain the absolutely positioned iframe plus any Overlay image */\n\t\t\t\tposition: relative;\n\t\t\t\tpadding-bottom: ${paddingBottom};\n\t\t\t\t& > iframe,\n\t\t\t\t& > video {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t}\n\t\t\t`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { textSans20 } from '@guardian/source/foundations';\nimport type { RoleType, VineBlockElement } from '../types/content';\nimport { ClickToView } from './ClickToView';\nimport { MaintainAspectRatio } from './MaintainAspectRatio';\n\nconst titleStyle = css`\n\tp {\n\t\t${textSans20};\n\t\tfont-weight: bold;\n\t}\n`;\n\ntype Props = {\n\telement: VineBlockElement;\n\trole: RoleType;\n\tisTracking: boolean;\n\tsource?: string;\n\tsourceDomain?: string;\n};\n\nexport const VineBlockComponent = ({\n\telement,\n\trole,\n\tisTracking,\n\tsource,\n\tsourceDomain,\n}: Props) => {\n\treturn (\n\t\t<ClickToView\n\t\t\trole={role}\n\t\t\tisTracking={isTracking}\n\t\t\tsource={source}\n\t\t\tsourceDomain={sourceDomain}\n\t\t>\n\t\t\t{!!(element.url && element.width && element.height) && (\n\t\t\t\t<div>\n\t\t\t\t\t<div css={titleStyle}>\n\t\t\t\t\t\t<p>{element.title}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<MaintainAspectRatio\n\t\t\t\t\t\theight={element.height}\n\t\t\t\t\t\twidth={element.width}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div css=\"element-vine\">\n\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\ttitle=\"vine-embed\"\n\t\t\t\t\t\t\t\tsrc={element.url}\n\t\t\t\t\t\t\t\theight={element.height}\n\t\t\t\t\t\t\t\twidth={element.width}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<script\n\t\t\t\t\t\t\t\tasync={true}\n\t\t\t\t\t\t\t\tsrc=\"https://platform.vine.co/static/scripts/embed.js\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</MaintainAspectRatio>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</ClickToView>\n\t);\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden } from '../../../foundations/accessibility/visually-hidden.js';\nimport { iconSize } from '../../../foundations/__generated__/size.js';\n\nconst Svg = ({ size, theme }) => /* @__PURE__ */ jsx(\n  \"svg\",\n  {\n    width: size ? iconSize[size] : void 0,\n    height: void 0,\n    viewBox: \"-3 -3 30 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: false,\n    \"aria-hidden\": true,\n    children: /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        d: \"M3.011 11.884 2 12.894l5.057 7.08h.48L22 5.006l-1.011-.986L7.537 16.207z\",\n        fill: theme?.fill\n      }\n    )\n  }\n);\nconst SvgCheckmark = ({\n  size,\n  theme,\n  isAnnouncedByScreenReader = false\n}) => /* @__PURE__ */ jsxs(Fragment, { children: [\n  /* @__PURE__ */ jsx(Svg, { size, theme }),\n  isAnnouncedByScreenReader ? /* @__PURE__ */ jsx(\n    \"span\",\n    {\n      css: css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`,\n      children: \"Checkmark\"\n    }\n  ) : \"\"\n] });\n\nexport { SvgCheckmark };\n","import { jsx } from '@emotion/react/jsx-runtime';\nimport { buttonContents } from './shared.js';\nimport { buttonStyles } from './styles.js';\n\nconst Button = ({\n  priority,\n  size,\n  icon: iconSvg,\n  iconSide,\n  hideLabel,\n  nudgeIcon,\n  type = \"button\",\n  isLoading = false,\n  loadingAnnouncement = \"Loading\",\n  cssOverrides,\n  children,\n  theme,\n  ...props\n}) => /* @__PURE__ */ jsx(\n  \"button\",\n  {\n    css: buttonStyles({\n      size,\n      priority,\n      icon: iconSvg,\n      hideLabel,\n      iconSide,\n      nudgeIcon,\n      cssOverrides,\n      isLoading,\n      theme\n    }),\n    type,\n    \"aria-live\": \"polite\",\n    \"aria-label\": isLoading ? loadingAnnouncement : void 0,\n    ...props,\n    children: buttonContents({\n      hideLabel,\n      iconSvg,\n      isLoading,\n      children\n    })\n  }\n);\n\nexport { Button };\n"],"names":["roleHeadlineSize","role","textSansBold20","textSansBold17","roleButtonSize","roleButtonText","buttonCss","css","palette","ClickToView","children","onAccept","isTracking","isMainMedia","source","sourceDomain","isOverlayClicked","setIsOverlayClicked","useState","textSize","textSans17","textSans15","roleTextSize","shouldDisplayOverlay","div","space","data-component","p","strong","Button","priority","size","icon","SvgCheckmark","iconSide","onClick","setTimeout","data-testid","data-link-name","cssOverrides","MaintainAspectRatio","height","width","aspectRatio","paddingBottom","titleStyle","textSans20","VineBlockComponent","element","url","title","iframe","src","script","async","colour","Svg","theme","jsx","iconSize","viewBox","xmlns","focusable","fillRule","clipRule","d","fill","isAnnouncedByScreenReader","jsxs","Fragment","visuallyHidden","iconSvg","hideLabel","nudgeIcon","type","isLoading","loadingAnnouncement","props","buttonStyles","buttonContents"],"sourceRoot":""}