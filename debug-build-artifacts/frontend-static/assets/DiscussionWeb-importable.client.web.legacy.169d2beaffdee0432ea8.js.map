{"version":3,"file":"DiscussionWeb-importable.client.web.legacy.169d2beaffdee0432ea8.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/DiscussionWeb.importable.tsx","webpack://@guardian/dotcom-rendering/./src/components/Placeholder.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useAuthStatus.ts","webpack://@guardian/dotcom-rendering/./src/lib/useHydrated.ts"],"sourcesContent":["import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { isObject, joinUrl } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { addUserName, comment, pickComment, recommend, reply, reportAbuse, unPickComment, } from '../lib/discussionApi';\nimport { getOptionsHeadersWithOkta } from '../lib/identity';\nimport { useAuthStatus } from '../lib/useAuthStatus';\nimport { useHydrated } from '../lib/useHydrated';\nimport { Discussion } from './Discussion';\nimport { Placeholder } from './Placeholder';\nconst getUser = async ({ discussionApiUrl, authStatus, }) => {\n    const data = await fetch(joinUrl(discussionApiUrl, 'profile/me?strict_sanctions_check=false'), getOptionsHeadersWithOkta(authStatus))\n        .then((r) => r.json())\n        .catch(() => undefined);\n    if (!isObject(data))\n        return;\n    if (!isObject(data.userProfile))\n        return;\n    const profile = data.userProfile;\n    const isStaff = profile.badge.some((e) => e.name === 'Staff');\n    return isStaff\n        ? {\n            kind: 'Staff',\n            profile,\n            onComment: comment(authStatus),\n            onReply: reply(authStatus),\n            onRecommend: recommend(authStatus),\n            onPick: pickComment(authStatus),\n            onUnpick: unPickComment(authStatus),\n            addUsername: addUserName(authStatus),\n            reportAbuse: reportAbuse(authStatus),\n        }\n        : {\n            kind: 'Reader',\n            profile,\n            onComment: comment(authStatus),\n            onReply: reply(authStatus),\n            onRecommend: recommend(authStatus),\n            addUsername: addUserName(authStatus),\n            reportAbuse: reportAbuse(authStatus),\n        };\n};\n/**\n * A wrapper component that decides if the user is signed in or not.\n *\n * If they are, it renders `DiscussionWhenSignedIn` which includes\n * an API call to fetch the user profile.\n *\n * If not, it simply renders `Discussion`\n *\n * We use component composition like this here because you cannot call react\n * hooks conditionally and we're using a hook to make the fetch request\n *\n * Note. We allow the ...props pattern here because it makes sense when we're\n * just passing them through\n *\n * ## Why does this need to be an Island?\n *\n * Discussion has client-side interactivity.\n * Signed-in status is only known on the client.\n *\n * ---\n *\n * (No visual story exist)\n */\nexport const DiscussionWeb = (props) => {\n    const hydrated = useHydrated();\n    const authStatus = useAuthStatus();\n    const [user, setUser] = useState();\n    useEffect(() => {\n        if (authStatus.kind === 'Pending')\n            return;\n        if (authStatus.kind === 'SignedOutWithCookies')\n            return;\n        if (authStatus.kind === 'SignedOutWithOkta')\n            return;\n        getUser({ discussionApiUrl: props.discussionApiUrl, authStatus })\n            .then(setUser)\n            .catch(() => {\n            // do nothing\n        });\n    }, [authStatus, props.discussionApiUrl]);\n    if (!hydrated)\n        return _jsx(Placeholder, { height: 324 });\n    return (_jsx(Discussion, { user: user, ...props, reportAbuseUnauthenticated: reportAbuse(undefined) }));\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css, keyframes } from '@emotion/react';\nimport { isUndefined } from '@guardian/libs';\nimport { palette, space } from '@guardian/source/foundations';\nconst BACKGROUND_COLOUR = palette.neutral[93];\nconst shimmer = keyframes `\n  0% {\n    background-position: -1500px 0;\n  }\n  100% {\n    background-position: 1500px 0;\n  }\n`;\nconst shimmerStyles = (backgroundColor) => css `\n\tanimation: ${shimmer} 2s infinite linear;\n\tbackground: linear-gradient(\n\t\tto right,\n\t\t${backgroundColor} 4%,\n\t\twhite 25%,\n\t\t${backgroundColor} 36%\n\t);\n\tbackground-size: 1500px 100%;\n`;\nexport const Placeholder = ({ height, rootId, width, spaceBelow, spaceLeft, shouldShimmer = true, backgroundColor = BACKGROUND_COLOUR, }) => (_jsx(\"div\", { id: rootId, css: css `\n\t\t\tflex-grow: 1;\n\t\t`, \"data-name\": \"placeholder\", children: _jsx(\"div\", { css: css `\n\t\t\t\tmin-height: ${height}px;\n\t\t\t\twidth: ${!isUndefined(width) ? `${width}px` : '100%'};\n\t\t\t\tmargin-bottom: ${spaceBelow && space[spaceBelow]}px;\n\t\t\t\tmargin-left: ${spaceLeft && space[spaceLeft]}px;\n\t\t\t\tbackground-color: ${backgroundColor};\n\n\t\t\t\t${shouldShimmer && shimmerStyles(backgroundColor)}\n\t\t\t` }) }));\n","import { useEffect, useState } from 'react';\nimport { eitherInOktaTestOrElse, getSignedInStatusWithCookies, getSignedInStatusWithOkta, } from './identity';\n/**\n * A hook to find out if a user is signed in.\n * Returns `'Pending'` until status is known.\n * Always returns `'Pending'` during server-side rendering.\n * */\nexport const useIsSignedIn = () => {\n    const authStatus = useAuthStatus();\n    switch (authStatus.kind) {\n        case 'Pending':\n            return 'Pending';\n        case 'SignedInWithCookies':\n        case 'SignedInWithOkta':\n            return true;\n        case 'SignedOutWithCookies':\n        case 'SignedOutWithOkta':\n            return false;\n    }\n};\nexport const useAuthStatus = () => {\n    const [authStatus, setAuthStatus] = useState({\n        kind: 'Pending',\n    });\n    useEffect(() => {\n        eitherInOktaTestOrElse((oktaAuthState) => {\n            setAuthStatus(getSignedInStatusWithOkta(oktaAuthState));\n        }, () => setAuthStatus(getSignedInStatusWithCookies())).catch((error) => {\n            console.error(error);\n        });\n    }, []);\n    return authStatus;\n};\n","import { useEffect, useState } from 'react';\nexport const useHydrated = () => {\n    const [hydrated, setHydrated] = useState(false);\n    useEffect(() => {\n        setHydrated(true);\n    }, []);\n    return hydrated;\n};\n"],"names":["getUser","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","discussionApiUrl","authStatus","data","profile","isStaff","_context","prev","next","fetch","joinUrl","getOptionsHeadersWithOkta","then","r","json","catch","sent","isObject","abrupt","userProfile","badge","some","e","name","kind","onComment","comment","onReply","reply","onRecommend","recommend","onPick","pickComment","onUnpick","unPickComment","addUsername","addUserName","reportAbuse","stop","_x","apply","arguments","DiscussionWeb","props","hydrated","useHydrated","useAuthStatus","_useState","useState","_useState2","_slicedToArray","user","setUser","useEffect","_jsx","Discussion","_objectSpread","reportAbuseUnauthenticated","undefined","Placeholder","height","BACKGROUND_COLOUR","palette","neutral","shimmer","keyframes","_templateObject","_taggedTemplateLiteral","shimmerStyles","backgroundColor","css","styles","rootId","width","spaceBelow","spaceLeft","_ref2$shouldShimmer","shouldShimmer","_ref2$backgroundColor","id","children","isUndefined","concat","space","useIsSignedIn","setAuthStatus","eitherInOktaTestOrElse","oktaAuthState","getSignedInStatusWithOkta","getSignedInStatusWithCookies","error","console","setHydrated"],"sourceRoot":""}