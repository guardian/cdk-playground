{"version":3,"file":"3897.client.web.legacy.e0feff97e94b4561e65e.js","mappings":"osCAEA,IAAMA,EAAiB,8BACVC,EAAwB,WACjC,IAAMC,GAAUC,EAAAA,EAAAA,GACTC,SAASC,iBAAiB,6BAEjC,GAA0B,IAAtBH,EAAWI,OACX,OAAOC,QAAQC,UAGnB,IAC+BC,EAD/BC,EAAAC,EACqBT,GAAU,IAA/B,IAAAQ,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAiC,CAAC,IAADC,EACT,QAApBA,EADaN,EAAAO,MACNC,qBAAa,IAAAF,GAApBA,EAAsBG,YAAY,SAAUlB,EAChD,CAAC,OAAAmB,GAAAT,EAAAU,EAAAD,EAAA,SAAAT,EAAAW,GAAA,CA2CD,OA1CAC,OAAOC,iBAAiB,WAAW,SAACC,GAChC,GAAIA,EAAMC,SAAWzB,EAArB,CAEA,IAAM0B,EAAUxB,EAAWyB,QAAO,SAACC,GAC/B,IACI,GAAwB,OAApBA,EAAEX,eAA2C,OAAjBO,EAAMK,OAClC,OAAOD,EAAEX,gBAAkBO,EAAMK,MAEzC,CACA,MAAOT,GACH,OAAO,CACX,CACA,OAAO,CACX,IACA,GAAuB,IAAnBM,EAAQpB,OACR,IACI,IAAMwB,EAAUC,KAAKC,MAAMR,EAAMS,MACjC,KAAKC,EAAAA,EAAAA,GAASJ,IAAoC,iBAAjBA,EAAQK,KACrC,OAEJ,GACS,eADDL,EAAQK,KACZ,CAAkB,IACcC,EADfC,EAAA1B,EACQe,GAAO,IAA5B,IAAAW,EAAAzB,MAAAwB,EAAAC,EAAAxB,KAAAC,MAA8B,CAAC,IAApBwB,EAAMF,EAAApB,MACb,GAA6B,iBAAlBc,EAAQd,MACfsB,EAAOC,OAAM,GAAAC,OAAMV,EAAQd,YAE1B,GAA6B,iBAAlBc,EAAQd,MAAoB,CACxC,IAAMA,EAAQyB,SAASX,EAAQd,MAAO,IAClC0B,OAAOC,UAAU3B,KACjBsB,EAAOC,OAAM,GAAAC,OAAMxB,GAE3B,CACJ,CAAC,OAAAG,GAAAkB,EAAAjB,EAAAD,EAAA,SAAAkB,EAAAhB,GAAA,CACI,CAGjB,CACA,MAAOD,GACH,CApCE,CAuCd,IACOb,QAAQC,SACnB,C","sources":["webpack://@guardian/dotcom-rendering/./src/client/newsletterEmbedIframe.ts"],"sourcesContent":["import { isObject } from '@guardian/libs';\n/* No trailing slash! */\nconst guardianOrigin = 'https://www.theguardian.com';\nexport const newsletterEmbedIframe = () => {\n    const allIframes = [\n        ...document.querySelectorAll('iframe.email-sub__iframe'),\n    ];\n    if (allIframes.length === 0)\n        return Promise.resolve();\n    // Tell the iframes to resize once this script is loaded\n    // Otherwise, earlier resize events might be missed\n    // So we don't have to load this script as a priority on each load\n    for (const iframe of allIframes) {\n        iframe.contentWindow?.postMessage('resize', guardianOrigin);\n    }\n    window.addEventListener('message', (event) => {\n        if (event.origin !== guardianOrigin)\n            return;\n        const iframes = allIframes.filter((i) => {\n            try {\n                if (i.contentWindow !== null && event.source !== null) {\n                    return i.contentWindow === event.source;\n                }\n            }\n            catch (e) {\n                return false;\n            }\n            return false;\n        });\n        if (iframes.length !== 0) {\n            try {\n                const message = JSON.parse(event.data);\n                if (!isObject(message) || typeof message.type !== 'string') {\n                    return;\n                }\n                switch (message.type) {\n                    case 'set-height':\n                        for (const iframe of iframes) {\n                            if (typeof message.value === 'number') {\n                                iframe.height = `${message.value}`;\n                            }\n                            else if (typeof message.value === 'string') {\n                                const value = parseInt(message.value, 10);\n                                if (Number.isInteger(value)) {\n                                    iframe.height = `${value}`;\n                                }\n                            }\n                        }\n                        break;\n                    default:\n                }\n            }\n            catch (e) {\n                // do nothing\n            }\n        }\n    });\n    return Promise.resolve();\n};\n"],"names":["guardianOrigin","newsletterEmbedIframe","allIframes","_toConsumableArray","document","querySelectorAll","length","Promise","resolve","_step","_iterator","_createForOfIteratorHelper","s","n","done","_iframe$contentWindow","value","contentWindow","postMessage","err","e","f","window","addEventListener","event","origin","iframes","filter","i","source","message","JSON","parse","data","isObject","type","_step2","_iterator2","iframe","height","concat","parseInt","Number","isInteger"],"sourceRoot":""}