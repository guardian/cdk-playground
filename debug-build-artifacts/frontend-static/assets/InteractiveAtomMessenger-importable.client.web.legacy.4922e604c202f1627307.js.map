{"version":3,"file":"InteractiveAtomMessenger-importable.client.web.legacy.4922e604c202f1627307.js","mappings":"wOAGMA,GAA2BC,EAAAA,EAAAA,KAAQ,OAAQ,EAC7CC,EAAAA,EAAAA,KAAO,CACHC,MAAMC,EAAAA,EAAAA,KAAQ,sBACdC,QAAQC,EAAAA,EAAAA,UAEZJ,EAAAA,EAAAA,KAAO,CACHC,MAAMC,EAAAA,EAAAA,KAAQ,sBACdG,QAAQD,EAAAA,EAAAA,WAcHE,EAA2B,SAAHC,GAAgB,IAAVC,EAAED,EAAFC,GACvCC,GAAkCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA4BL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA4BT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhChB,EAAMiB,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAA4BZ,EAAAA,EAAAA,UAAS,GAAEa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAhCjB,EAAMkB,EAAA,GAAEC,EAASD,EAAA,GAClBE,GAAcC,EAAAA,EAAAA,cAAY,SAACC,GAAa,IAADC,EACzCX,SAAqB,QAAfW,EAANX,EAAQY,qBAAa,IAAAD,GAArBA,EAAuBH,YAAYE,EAAS,IAChD,GAAG,CAACV,IA2DJ,OA1DAa,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQC,SAASC,cAAc,cAADC,OAAe1B,EAAE,OAChDuB,GAELb,EAAUa,EACd,GAAG,CAACvB,KACJsB,EAAAA,EAAAA,YAAU,YACAb,aAAM,EAANA,EAAQkB,yBAAyBC,gBAEvCtB,EAAaG,EAAOkB,cACxB,GAAG,CAAClB,KACJa,EAAAA,EAAAA,YAAU,WACN,GAAKb,GAEAJ,EAAL,CAEA,IAAMwB,EAAiB,WACnB,IAAMC,EAAOzB,EAAU0B,wBACvB,OAAID,EAAKE,IAAM,EACJnB,EAAU,GACjBiB,EAAKE,KAAOF,EAAKjC,OACVgB,EAAU,QACrBA,GAAWiB,EAAKE,IACpB,EACMC,EAAkB,SAACC,GACrB,GAAIA,EAAMC,SAAW1B,EAAOY,cAA5B,CAEA,IAAMe,GAASC,EAAAA,EAAAA,KAAU/C,EAA0B4C,EAAMI,MACzD,GAAKF,EAAOG,QAEZ,OAAQH,EAAOI,OAAO/C,MAClB,IAAK,qBAED,YADAuB,EAAUoB,EAAOI,OAAO3C,QAG5B,IAAK,qBAGD,OAFA4C,EAAAA,EAAAA,IAAI,SAAU,aAAc,CAAEpC,UAAAA,SAC9BI,EAAOiC,UAAUC,IAAI,WAXnB,CAed,EAGA,OAFAC,OAAOC,iBAAiB,SAAUhB,GAClCe,OAAOC,iBAAiB,UAAWZ,GAC5B,WACHW,OAAOE,oBAAoB,SAAUjB,GACrCe,OAAOE,oBAAoB,UAAWb,EAC1C,CAhCU,CAiCd,GAAG,CAACxB,EAAQJ,KACZiB,EAAAA,EAAAA,YAAU,WACNL,EAAY,CAAExB,KAAM,qBAAsBE,OAAAA,GAC9C,GAAG,CAACsB,EAAatB,KACjB2B,EAAAA,EAAAA,YAAU,WACDjB,IAELA,EAAU0C,MAAMlD,OAASA,EAAS,EAAC,GAAA6B,OAAM7B,EAAM,MAAO,OACtDoB,EAAY,CAAExB,KAAM,qBAAsBI,OAAAA,IAC9C,GAAG,CAACoB,EAAapB,EAAQQ,IAClB,IACX,C","sources":["webpack://@guardian/dotcom-rendering/./src/components/InteractiveAtomMessenger.importable.tsx"],"sourcesContent":["import { log } from '@guardian/libs';\nimport { useCallback, useEffect, useState } from 'react';\nimport { literal, number, object, safeParse, variant } from 'valibot';\nconst interactiveMessageSchema = variant('kind', [\n    object({\n        kind: literal('interactive:scroll'),\n        scroll: number(),\n    }),\n    object({\n        kind: literal('interactive:height'),\n        height: number(),\n    }),\n]);\n/**\n * Send and receive messages from interactive Atoms.\n *\n * Currently supported messages:\n * - `interactive:scroll`\n * - `interactive:height`\n *\n * ## Why does this need to be an Island?\n *\n * It needs to send information to an adjoining `InteractiveAtom`\n */\nexport const InteractiveAtomMessenger = ({ id }) => {\n    const [container, setContainer] = useState();\n    const [iframe, setIframe] = useState();\n    const [scroll, setScroll] = useState(0);\n    const [height, setHeight] = useState(0);\n    const postMessage = useCallback((message) => {\n        iframe?.contentWindow?.postMessage(message, '*');\n    }, [iframe]);\n    useEffect(() => {\n        const found = document.querySelector(`iframe[id=\"${id}\"]`);\n        if (!found)\n            return;\n        setIframe(found);\n    }, [id]);\n    useEffect(() => {\n        if (!(iframe?.parentElement instanceof HTMLDivElement))\n            return;\n        setContainer(iframe.parentElement);\n    }, [iframe]);\n    useEffect(() => {\n        if (!iframe)\n            return;\n        if (!container)\n            return;\n        const scrollListener = () => {\n            const rect = container.getBoundingClientRect();\n            if (rect.top > 0)\n                return setScroll(0);\n            if (rect.top < -rect.height)\n                return setScroll(1);\n            setScroll(-rect.top);\n        };\n        const messageListener = (event) => {\n            if (event.source !== iframe.contentWindow)\n                return;\n            const result = safeParse(interactiveMessageSchema, event.data);\n            if (!result.success)\n                return;\n            switch (result.output.kind) {\n                case 'interactive:height': {\n                    setHeight(result.output.height);\n                    return;\n                }\n                case 'interactive:scroll': {\n                    log('dotcom', 'ðŸ“œ scrolly', { container });\n                    iframe.classList.add('scrolly');\n                    return;\n                }\n            }\n        };\n        window.addEventListener('scroll', scrollListener);\n        window.addEventListener('message', messageListener);\n        return () => {\n            window.removeEventListener('scroll', scrollListener);\n            window.removeEventListener('message', messageListener);\n        };\n    }, [iframe, container]);\n    useEffect(() => {\n        postMessage({ kind: 'interactive:scroll', scroll });\n    }, [postMessage, scroll]);\n    useEffect(() => {\n        if (!container)\n            return;\n        container.style.height = height > 0 ? `${height}px` : 'auto';\n        postMessage({ kind: 'interactive:height', height });\n    }, [postMessage, height, container]);\n    return null;\n};\n"],"names":["interactiveMessageSchema","variant","object","kind","literal","scroll","number","height","InteractiveAtomMessenger","_ref","id","_useState","useState","_useState2","_slicedToArray","container","setContainer","_useState3","_useState4","iframe","setIframe","_useState5","_useState6","setScroll","_useState7","_useState8","setHeight","postMessage","useCallback","message","_iframe$contentWindow","contentWindow","useEffect","found","document","querySelector","concat","parentElement","HTMLDivElement","scrollListener","rect","getBoundingClientRect","top","messageListener","event","source","result","safeParse","data","success","output","log","classList","add","window","addEventListener","removeEventListener","style"],"sourceRoot":""}