{"version":3,"file":"EnhancePinnedPost-importable.client.web.legacy.e11aab08eb7ec7a5e690.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/EnhancePinnedPost.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useIsInView.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/lodash.debounce@4.0.8/node_modules/lodash.debounce/index.js"],"sourcesContent":["import { isUndefined, startPerformanceMeasure } from '@guardian/libs';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { submitComponentEvent } from '../client/ophan/ophan';\nimport { useIsInView } from '../lib/useIsInView';\nimport { useConfig } from './ConfigContext';\n/**\n * toggle show more button and overlay on pinned post\n */\nfunction toggleShowMore(show, checked) {\n    const pinnedPostButton = document.querySelector('#pinned-post-button');\n    const pinnedPostOverlay = document.querySelector('#pinned-post-overlay');\n    if (pinnedPostButton) {\n        if (show) {\n            pinnedPostButton.style.removeProperty('display');\n        }\n        else if (!checked) {\n            pinnedPostButton.style.display = 'none';\n        }\n    }\n    if (pinnedPostOverlay) {\n        if (show) {\n            pinnedPostOverlay.style.removeProperty('display');\n        }\n        else {\n            pinnedPostOverlay.style.display = 'none';\n        }\n    }\n}\n/**\n * Scroll to the top of the main content when the pinned post is collapsed if the top of the post is out of view\n */\nconst scrollOnCollapse = (pinnedPost) => {\n    const position = pinnedPost.getBoundingClientRect();\n    if (position.top < 0) {\n        pinnedPost.scrollIntoView({\n            behavior: 'smooth',\n        });\n    }\n};\nconst handleClickTracking = (checked, pinnedPost, renderingTarget) => {\n    if (checked) {\n        void submitComponentEvent({\n            component: {\n                componentType: 'LIVE_BLOG_PINNED_POST',\n                id: pinnedPost.id,\n            },\n            action: 'CLICK',\n            value: 'show-more',\n        }, renderingTarget);\n    }\n    else {\n        void submitComponentEvent({\n            component: {\n                componentType: 'LIVE_BLOG_PINNED_POST',\n                id: pinnedPost.id,\n            },\n            action: 'CLICK',\n            value: 'show-less',\n        }, renderingTarget);\n        scrollOnCollapse(pinnedPost);\n    }\n};\n/**\n * Observes the pinned post element on live blogs.\n *\n * ## Why does this need to be an Island?\n *\n * We want to record how long this element was in view\n *\n * ---\n *\n * No visual output\n */\nexport const EnhancePinnedPost = () => {\n    const [pinnedPost, setPinnedPost] = useState(null);\n    const [pinnedPostCheckBox, setPinnedPostCheckBox] = useState(null);\n    const [pinnedPostContent, setPinnedPostContent] = useState(null);\n    useEffect(() => {\n        setPinnedPost(document.querySelector('[data-gu-marker=pinned-post]'));\n        setPinnedPostCheckBox(document.querySelector('input[name=pinned-post-checkbox]'));\n        setPinnedPostContent(document.querySelector('#collapsible-body'));\n    }, []);\n    const [hasBeenSeen, setHasBeenSeen] = useState(false);\n    const [isInView] = useIsInView({\n        threshold: 0.1,\n        repeat: true,\n        node: pinnedPost ?? undefined,\n    });\n    const { renderingTarget } = useConfig();\n    const pinnedPostTiming = useRef();\n    const checkContentHeight = useCallback(() => {\n        if (!pinnedPostContent)\n            return;\n        if (!pinnedPostCheckBox)\n            return;\n        const { checked } = pinnedPostCheckBox;\n        const contentFitsContainer = pinnedPostContent.scrollHeight <= pinnedPostContent.clientHeight;\n        if (contentFitsContainer)\n            toggleShowMore(false, checked);\n        else\n            toggleShowMore(true, checked);\n    }, [pinnedPostCheckBox, pinnedPostContent]);\n    /**\n     * Checks for dom updates (embeds loading etc) and updates content height\n     */\n    useEffect(() => {\n        if (!pinnedPost)\n            return;\n        checkContentHeight();\n        const observer = new MutationObserver(checkContentHeight);\n        const config = {\n            childList: true,\n            subtree: true,\n        };\n        observer.observe(pinnedPost, config);\n        return () => observer.disconnect();\n    }, [checkContentHeight, pinnedPost]);\n    useEffect(() => {\n        if (!pinnedPost)\n            return;\n        if (!pinnedPostCheckBox)\n            return;\n        const listener = () => {\n            checkContentHeight();\n            handleClickTracking(pinnedPostCheckBox.checked, pinnedPost, renderingTarget);\n        };\n        pinnedPostCheckBox.addEventListener('change', listener);\n        return () => pinnedPostCheckBox.removeEventListener('change', listener);\n    }, [checkContentHeight, pinnedPost, pinnedPostCheckBox, renderingTarget]);\n    // calculate duration when user is viewing pinned post\n    // and emit ophan events when the pinned post goes out of view\n    useEffect(() => {\n        if (!pinnedPost)\n            return;\n        if (isInView) {\n            setHasBeenSeen(true);\n            pinnedPostTiming.current = startPerformanceMeasure('dotcom', 'pinned-post-view-duration');\n        }\n        else if (hasBeenSeen) {\n            const timeTaken = pinnedPostTiming.current?.endPerformanceMeasure();\n            if (!isUndefined(timeTaken)) {\n                const timeTakenInSeconds = timeTaken / 1000;\n                void submitComponentEvent({\n                    component: {\n                        componentType: 'LIVE_BLOG_PINNED_POST',\n                        id: pinnedPost.id,\n                    },\n                    action: 'VIEW',\n                    value: timeTakenInSeconds.toString(),\n                }, renderingTarget);\n            }\n        }\n    }, [isInView, hasBeenSeen, renderingTarget, pinnedPost]);\n    // render nothing\n    return null;\n};\n","import libDebounce from 'lodash.debounce';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n/**\n * Custom hook around the `IntersectionObserver`.\n *\n * @returns a tuple containing `[isInView, setNode]`\n */\nconst useIsInView = (options) => {\n    const [isInView, setIsInView] = useState(false);\n    const [node, setNode] = useState(options.node ?? null);\n    const observer = useRef(null);\n    const intersectionObserverCallback = useCallback(([entry]) => {\n        if (!entry)\n            return;\n        if (entry.isIntersecting) {\n            setIsInView(true);\n        }\n        else if (options.repeat) {\n            setIsInView(false);\n        }\n    }, [options.repeat]);\n    const intersectionCallback = options.debounce\n        ? libDebounce(intersectionObserverCallback, 200)\n        : intersectionObserverCallback;\n    useEffect(() => {\n        options.node && setNode(options.node);\n    }, [options.node]);\n    useEffect(() => {\n        if (!node)\n            return;\n        // Check for browser support https://caniuse.com/intersectionobserver\n        if (!('IntersectionObserver' in window))\n            return;\n        observer.current = new window.IntersectionObserver(intersectionCallback, options);\n        observer.current.observe(node);\n        return () => observer.current?.disconnect();\n    }, [node, options, intersectionCallback]);\n    useEffect(() => {\n        if (!options.repeat && isInView)\n            observer.current?.disconnect();\n    }, [isInView, options.repeat]);\n    return [isInView, setNode];\n};\nexport { useIsInView };\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n"],"names":["EnhancePinnedPost","_useState","useState","_useState2","_slicedToArray","pinnedPost","setPinnedPost","_useState3","_useState4","pinnedPostCheckBox","setPinnedPostCheckBox","_useState5","_useState6","pinnedPostContent","setPinnedPostContent","useEffect","document","querySelector","_useState7","_useState8","hasBeenSeen","setHasBeenSeen","_useIsInView","useIsInView","threshold","repeat","node","undefined","isInView","renderingTarget","useConfig","pinnedPostTiming","useRef","checkContentHeight","useCallback","checked","show","pinnedPostButton","pinnedPostOverlay","style","removeProperty","display","toggleShowMore","scrollHeight","clientHeight","observer","MutationObserver","observe","childList","subtree","disconnect","listener","submitComponentEvent","component","componentType","id","action","value","getBoundingClientRect","top","scrollIntoView","behavior","scrollOnCollapse","handleClickTracking","addEventListener","removeEventListener","current","startPerformanceMeasure","_pinnedPostTiming$cur","timeTaken","endPerformanceMeasure","isUndefined","timeTakenInSeconds","toString","options","_options$node","setIsInView","setNode","intersectionObserverCallback","_ref","entry","isIntersecting","intersectionCallback","debounce","libDebounce","window","IntersectionObserver","_observer$current","_observer$current2","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","g","Object","freeSelf","self","root","Function","objectToString","prototype","nativeMax","Math","max","nativeMin","min","now","Date","isObject","type","toNumber","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","cancel","clearTimeout","flush"],"sourceRoot":""}