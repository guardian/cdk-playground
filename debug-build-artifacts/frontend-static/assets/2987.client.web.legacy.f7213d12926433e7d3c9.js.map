{"version":3,"file":"2987.client.web.legacy.f7213d12926433e7d3c9.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/datetime/timeAgo.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/format/Pillar.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/switches/getSwitches.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/deprecated-exports.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/ArticleElementRole/ArticleElementRole.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/countries/countries.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/countries/getCountryByCountryCode.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/format/ArticleDesign.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/format/ArticleDisplay.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/format/ArticleSpecial.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/joinUrl/joinUrl.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/logger/debug.js"],"sourcesContent":["const units = {\n    second: 1e3,\n    minute: 6e4,\n    hour: 36e5,\n    day: 864e5\n};\nconst duration = ({ then, now }) => {\n    const difference = now - then;\n    if (difference < units.minute) {\n        return { length: difference / units.second, unit: \"second\" };\n    }\n    else if (difference < units.hour) {\n        return { length: difference / units.minute, unit: \"minute\" };\n    }\n    else if (difference < units.day) {\n        return { length: difference / units.hour, unit: \"hour\" };\n    }\n    else {\n        return { length: difference / units.day, unit: \"day\" };\n    }\n};\nconst isYesterday = (then, now) => {\n    const today = new Date(now);\n    const yesterday = new Date(now);\n    yesterday.setDate(today.getDate() - 1);\n    return new Date(then).toDateString() === yesterday.toDateString();\n};\nconst withTime = (date) => `${date.getHours()}.${date.getMinutes().toString().padStart(2, \"0\")}`;\nconst timeAgo = (epoch, options) => {\n    const then = epoch;\n    const now = options?.now ?? Date.now();\n    const verbose = options?.verbose ?? false;\n    const { length: rawLength, unit } = duration({ then, now });\n    const length = Math.round(rawLength);\n    if (length < 0) {\n        return false;\n    }\n    switch (unit) {\n        case \"second\": {\n            if (length > 55) {\n                return verbose ? \"1 minute ago\" : \"1m ago\";\n            }\n            else if (length < 15) {\n                return \"now\";\n            }\n            else if (!verbose) {\n                return `${length}s ago`;\n            }\n            else {\n                return `${length} seconds ago`;\n            }\n        }\n        case \"minute\": {\n            if (length > 55) {\n                return verbose ? \"1 hour ago\" : \"1h ago\";\n            }\n            else if (!verbose) {\n                return `${length}m ago`;\n            }\n            else if (length == 1) {\n                return \"1 minute ago\";\n            }\n            else {\n                return `${length} minutes ago`;\n            }\n        }\n        case \"hour\": {\n            if (!verbose) {\n                return `${length}h ago`;\n            }\n            else if (length == 1) {\n                return \"1 hour ago\";\n            }\n            else {\n                return `${length} hours ago`;\n            }\n        }\n        case \"day\": {\n            if (rawLength < (options?.daysUntilAbsolute ?? 7)) {\n                if (!verbose) {\n                    return `${length}d ago`;\n                }\n                else if (isYesterday(then, now)) {\n                    return `Yesterday ${withTime(new Date(then))}`;\n                }\n                else if (length == 1) {\n                    return \"1 day ago\";\n                }\n                else {\n                    return `${length} days ago`;\n                }\n            }\n            return new Date(then).toLocaleString(\"en-GB\", {\n                day: \"numeric\",\n                month: verbose ? \"long\" : \"short\",\n                year: \"numeric\"\n            });\n        }\n    }\n};\nexport { duration, timeAgo };\n","var Pillar = /* @__PURE__ */ ((Pillar2) => {\n    Pillar2[Pillar2[\"News\"] = 0] = \"News\";\n    Pillar2[Pillar2[\"Opinion\"] = 1] = \"Opinion\";\n    Pillar2[Pillar2[\"Sport\"] = 2] = \"Sport\";\n    Pillar2[Pillar2[\"Culture\"] = 3] = \"Culture\";\n    Pillar2[Pillar2[\"Lifestyle\"] = 4] = \"Lifestyle\";\n    return Pillar2;\n})(Pillar || {});\nexport { Pillar };\n","import { isBoolean } from '../isBoolean/isBoolean.js';\nimport { isObject } from '../isObject/isObject.js';\nconst URL = \"https://www.theguardian.com/switches.json\";\nconst validate = (switches2) => isObject(switches2) && Object.values(switches2).every(isBoolean);\nconst fetchSwitches = () => fetch(URL).then((response) => response.json()).then((switches2) => validate(switches2) ? switches2 : Promise.reject(new Error(\"Error getting remote switches \\u2013 config is malformed\")));\nlet switches;\nconst getSwitches = async () => switches || (switches = window.guardian?.config?.switches ?? await fetchSwitches());\nexport { getSwitches };\n","import { Pillar } from './format/Pillar.js';\nconst ArticlePillar = Pillar;\nexport { ArticlePillar };\n","var ArticleElementRole = /* @__PURE__ */ ((ArticleElementRole2) => {\n    ArticleElementRole2[ArticleElementRole2[\"Standard\"] = 0] = \"Standard\";\n    ArticleElementRole2[ArticleElementRole2[\"Immersive\"] = 1] = \"Immersive\";\n    ArticleElementRole2[ArticleElementRole2[\"Supporting\"] = 2] = \"Supporting\";\n    ArticleElementRole2[ArticleElementRole2[\"Showcase\"] = 3] = \"Showcase\";\n    ArticleElementRole2[ArticleElementRole2[\"Inline\"] = 4] = \"Inline\";\n    ArticleElementRole2[ArticleElementRole2[\"Thumbnail\"] = 5] = \"Thumbnail\";\n    ArticleElementRole2[ArticleElementRole2[\"HalfWidth\"] = 6] = \"HalfWidth\";\n    return ArticleElementRole2;\n})(ArticleElementRole || {});\nexport { ArticleElementRole };\n","const countries = {\n    afghanistan: {\n        countryCode: \"AF\",\n        name: \"Afghanistan\"\n    },\n    \\u00E5land_islands: {\n        countryCode: \"AX\",\n        name: \"\\xC5land Islands\"\n    },\n    albania: {\n        countryCode: \"AL\",\n        name: \"Albania\"\n    },\n    algeria: {\n        countryCode: \"DZ\",\n        name: \"Algeria\"\n    },\n    american_samoa: {\n        countryCode: \"AS\",\n        name: \"American Samoa\"\n    },\n    andorra: {\n        countryCode: \"AD\",\n        name: \"Andorra\"\n    },\n    angola: {\n        countryCode: \"AO\",\n        name: \"Angola\"\n    },\n    anguilla: {\n        countryCode: \"AI\",\n        name: \"Anguilla\"\n    },\n    antarctica: {\n        countryCode: \"AQ\",\n        name: \"Antarctica\"\n    },\n    antigua_and_barbuda: {\n        countryCode: \"AG\",\n        name: \"Antigua and Barbuda\"\n    },\n    argentina: {\n        countryCode: \"AR\",\n        name: \"Argentina\"\n    },\n    armenia: {\n        countryCode: \"AM\",\n        name: \"Armenia\"\n    },\n    aruba: {\n        countryCode: \"AW\",\n        name: \"Aruba\"\n    },\n    australia: {\n        countryCode: \"AU\",\n        name: \"Australia\"\n    },\n    austria: {\n        countryCode: \"AT\",\n        name: \"Austria\"\n    },\n    azerbaijan: {\n        countryCode: \"AZ\",\n        name: \"Azerbaijan\"\n    },\n    bahamas: {\n        countryCode: \"BS\",\n        name: \"Bahamas\"\n    },\n    bahrain: {\n        countryCode: \"BH\",\n        name: \"Bahrain\"\n    },\n    bangladesh: {\n        countryCode: \"BD\",\n        name: \"Bangladesh\"\n    },\n    barbados: {\n        countryCode: \"BB\",\n        name: \"Barbados\"\n    },\n    belarus: {\n        countryCode: \"BY\",\n        name: \"Belarus\"\n    },\n    belgium: {\n        countryCode: \"BE\",\n        name: \"Belgium\"\n    },\n    belize: {\n        countryCode: \"BZ\",\n        name: \"Belize\"\n    },\n    benin: {\n        countryCode: \"BJ\",\n        name: \"Benin\"\n    },\n    bermuda: {\n        countryCode: \"BM\",\n        name: \"Bermuda\"\n    },\n    bhutan: {\n        countryCode: \"BT\",\n        name: \"Bhutan\"\n    },\n    bolivia: {\n        countryCode: \"BO\",\n        name: \"Bolivia (Plurinational State of)\"\n    },\n    bosnia_and_herzegovina: {\n        countryCode: \"BA\",\n        name: \"Bosnia and Herzegovina\"\n    },\n    botswana: {\n        countryCode: \"BW\",\n        name: \"Botswana\"\n    },\n    bouvet_island: {\n        countryCode: \"BV\",\n        name: \"Bouvet Island\"\n    },\n    brazil: {\n        countryCode: \"BR\",\n        name: \"Brazil\"\n    },\n    british_indian_ocean_territory: {\n        countryCode: \"IO\",\n        name: \"British Indian Ocean Territory\"\n    },\n    brunei_darussalam: {\n        countryCode: \"BN\",\n        name: \"Brunei Darussalam\"\n    },\n    bulgaria: {\n        countryCode: \"BG\",\n        name: \"Bulgaria\"\n    },\n    burkina_faso: {\n        countryCode: \"BF\",\n        name: \"Burkina Faso\"\n    },\n    burundi: {\n        countryCode: \"BI\",\n        name: \"Burundi\"\n    },\n    cabo_verde: {\n        countryCode: \"CV\",\n        name: \"Cabo Verde\"\n    },\n    cambodia: {\n        countryCode: \"KH\",\n        name: \"Cambodia\"\n    },\n    cameroon: {\n        countryCode: \"CM\",\n        name: \"Cameroon\"\n    },\n    canada: {\n        countryCode: \"CA\",\n        name: \"Canada\"\n    },\n    caribbean_netherlands: {\n        countryCode: \"BQ\",\n        name: \"Bonaire, Sint Eustatius and Saba\"\n    },\n    cayman_islands: {\n        countryCode: \"KY\",\n        name: \"Cayman Islands\"\n    },\n    central_african_republic: {\n        countryCode: \"CF\",\n        name: \"Central African Republic\"\n    },\n    chad: {\n        countryCode: \"TD\",\n        name: \"Chad\"\n    },\n    chile: {\n        countryCode: \"CL\",\n        name: \"Chile\"\n    },\n    china: {\n        countryCode: \"CN\",\n        name: \"China\"\n    },\n    christmas_island: {\n        countryCode: \"CX\",\n        name: \"Christmas Island\"\n    },\n    cocos_keeling_islands: {\n        countryCode: \"CC\",\n        name: \"Cocos (Keeling) Islands\"\n    },\n    colombia: {\n        countryCode: \"CO\",\n        name: \"Colombia\"\n    },\n    comoros: {\n        countryCode: \"KM\",\n        name: \"Comoros\"\n    },\n    congo: {\n        countryCode: \"CG\",\n        name: \"Congo\"\n    },\n    cook_islands: {\n        countryCode: \"CK\",\n        name: \"Cook Islands\"\n    },\n    costa_rica: {\n        countryCode: \"CR\",\n        name: \"Costa Rica\"\n    },\n    croatia: {\n        countryCode: \"HR\",\n        name: \"Croatia\"\n    },\n    cuba: {\n        countryCode: \"CU\",\n        name: \"Cuba\"\n    },\n    cura\\u00E7ao: {\n        countryCode: \"CW\",\n        name: \"Cura\\xE7ao\"\n    },\n    cyprus: {\n        countryCode: \"CY\",\n        name: \"Cyprus\"\n    },\n    czechia: {\n        countryCode: \"CZ\",\n        name: \"Czechia\"\n    },\n    democratic_republic_of_the_congo: {\n        countryCode: \"CD\",\n        name: \"Democratic Republic of the Congo\"\n    },\n    denmark: {\n        countryCode: \"DK\",\n        name: \"Denmark\"\n    },\n    djibouti: {\n        countryCode: \"DJ\",\n        name: \"Djibouti\"\n    },\n    dominica: {\n        countryCode: \"DM\",\n        name: \"Dominica\"\n    },\n    dominican_republic: {\n        countryCode: \"DO\",\n        name: \"Dominican Republic\"\n    },\n    ecuador: {\n        countryCode: \"EC\",\n        name: \"Ecuador\"\n    },\n    egypt: {\n        countryCode: \"EG\",\n        name: \"Egypt\"\n    },\n    el_salvador: {\n        countryCode: \"SV\",\n        name: \"El Salvador\"\n    },\n    equatorial_guinea: {\n        countryCode: \"GQ\",\n        name: \"Equatorial Guinea\"\n    },\n    eritrea: {\n        countryCode: \"ER\",\n        name: \"Eritrea\"\n    },\n    estonia: {\n        countryCode: \"EE\",\n        name: \"Estonia\"\n    },\n    eswatini: {\n        countryCode: \"SZ\",\n        name: \"Eswatini\"\n    },\n    ethiopia: {\n        countryCode: \"ET\",\n        name: \"Ethiopia\"\n    },\n    falkland_islands: {\n        countryCode: \"FK\",\n        name: \"Falkland Islands (Malvinas)\"\n    },\n    faroe_islands: {\n        countryCode: \"FO\",\n        name: \"Faroe Islands\"\n    },\n    federated_states_of_micronesia: {\n        countryCode: \"FM\",\n        name: \"Federated States of Micronesia\"\n    },\n    fiji: {\n        countryCode: \"FJ\",\n        name: \"Fiji\"\n    },\n    finland: {\n        countryCode: \"FI\",\n        name: \"Finland\"\n    },\n    france: {\n        countryCode: \"FR\",\n        name: \"France\"\n    },\n    french_guiana: {\n        countryCode: \"GF\",\n        name: \"French Guiana\"\n    },\n    french_polynesia: {\n        countryCode: \"PF\",\n        name: \"French Polynesia\"\n    },\n    french_southern_territories: {\n        countryCode: \"TF\",\n        name: \"French Southern Territories\"\n    },\n    gabon: {\n        countryCode: \"GA\",\n        name: \"Gabon\"\n    },\n    gambia: {\n        countryCode: \"GM\",\n        name: \"Gambia\"\n    },\n    georgia: {\n        countryCode: \"GE\",\n        name: \"Georgia\"\n    },\n    germany: {\n        countryCode: \"DE\",\n        name: \"Germany\"\n    },\n    ghana: {\n        countryCode: \"GH\",\n        name: \"Ghana\"\n    },\n    gibraltar: {\n        countryCode: \"GI\",\n        name: \"Gibraltar\"\n    },\n    greece: {\n        countryCode: \"GR\",\n        name: \"Greece\"\n    },\n    greenland: {\n        countryCode: \"GL\",\n        name: \"Greenland\"\n    },\n    grenada: {\n        countryCode: \"GD\",\n        name: \"Grenada\"\n    },\n    guadeloupe: {\n        countryCode: \"GP\",\n        name: \"Guadeloupe\"\n    },\n    guam: {\n        countryCode: \"GU\",\n        name: \"Guam\"\n    },\n    guatemala: {\n        countryCode: \"GT\",\n        name: \"Guatemala\"\n    },\n    guernsey: {\n        countryCode: \"GG\",\n        name: \"Guernsey\"\n    },\n    guinea: {\n        countryCode: \"GN\",\n        name: \"Guinea\"\n    },\n    guinea_bissau: {\n        countryCode: \"GW\",\n        name: \"Guinea-Bissau\"\n    },\n    guyana: {\n        countryCode: \"GY\",\n        name: \"Guyana\"\n    },\n    haiti: {\n        countryCode: \"HT\",\n        name: \"Haiti\"\n    },\n    heard_island_and_mcdonald_islands: {\n        countryCode: \"HM\",\n        name: \"Heard Island and McDonald Islands\"\n    },\n    holy_see: {\n        countryCode: \"VA\",\n        name: \"Holy See\"\n    },\n    honduras: {\n        countryCode: \"HN\",\n        name: \"Honduras\"\n    },\n    hong_kong: {\n        countryCode: \"HK\",\n        name: \"Hong Kong\"\n    },\n    hungary: {\n        countryCode: \"HU\",\n        name: \"Hungary\"\n    },\n    iceland: {\n        countryCode: \"IS\",\n        name: \"Iceland\"\n    },\n    india: {\n        countryCode: \"IN\",\n        name: \"India\"\n    },\n    indonesia: {\n        countryCode: \"ID\",\n        name: \"Indonesia\"\n    },\n    iran: {\n        countryCode: \"IR\",\n        name: \"Iran (Islamic Republic of)\"\n    },\n    iraq: {\n        countryCode: \"IQ\",\n        name: \"Iraq\"\n    },\n    ireland: {\n        countryCode: \"IE\",\n        name: \"Ireland\"\n    },\n    isle_of_man: {\n        countryCode: \"IM\",\n        name: \"Isle of Man\"\n    },\n    israel: {\n        countryCode: \"IL\",\n        name: \"Israel\"\n    },\n    italy: {\n        countryCode: \"IT\",\n        name: \"Italy\"\n    },\n    ivory_coast: {\n        countryCode: \"CI\",\n        name: \"C\\xF4te d'Ivoire\"\n    },\n    jamaica: {\n        countryCode: \"JM\",\n        name: \"Jamaica\"\n    },\n    japan: {\n        countryCode: \"JP\",\n        name: \"Japan\"\n    },\n    jersey: {\n        countryCode: \"JE\",\n        name: \"Jersey\"\n    },\n    jordan: {\n        countryCode: \"JO\",\n        name: \"Jordan\"\n    },\n    kazakhstan: {\n        countryCode: \"KZ\",\n        name: \"Kazakhstan\"\n    },\n    kenya: {\n        countryCode: \"KE\",\n        name: \"Kenya\"\n    },\n    kiribati: {\n        countryCode: \"KI\",\n        name: \"Kiribati\"\n    },\n    kuwait: {\n        countryCode: \"KW\",\n        name: \"Kuwait\"\n    },\n    kyrgyzstan: {\n        countryCode: \"KG\",\n        name: \"Kyrgyzstan\"\n    },\n    laos: {\n        countryCode: \"LA\",\n        name: \"Lao People's Democratic Republic\"\n    },\n    latvia: {\n        countryCode: \"LV\",\n        name: \"Latvia\"\n    },\n    lebanon: {\n        countryCode: \"LB\",\n        name: \"Lebanon\"\n    },\n    lesotho: {\n        countryCode: \"LS\",\n        name: \"Lesotho\"\n    },\n    liberia: {\n        countryCode: \"LR\",\n        name: \"Liberia\"\n    },\n    libya: {\n        countryCode: \"LY\",\n        name: \"Libya\"\n    },\n    liechtenstein: {\n        countryCode: \"LI\",\n        name: \"Liechtenstein\"\n    },\n    lithuania: {\n        countryCode: \"LT\",\n        name: \"Lithuania\"\n    },\n    luxembourg: {\n        countryCode: \"LU\",\n        name: \"Luxembourg\"\n    },\n    macao: {\n        countryCode: \"MO\",\n        name: \"Macao\"\n    },\n    madagascar: {\n        countryCode: \"MG\",\n        name: \"Madagascar\"\n    },\n    malawi: {\n        countryCode: \"MW\",\n        name: \"Malawi\"\n    },\n    malaysia: {\n        countryCode: \"MY\",\n        name: \"Malaysia\"\n    },\n    maldives: {\n        countryCode: \"MV\",\n        name: \"Maldives\"\n    },\n    mali: {\n        countryCode: \"ML\",\n        name: \"Mali\"\n    },\n    malta: {\n        countryCode: \"MT\",\n        name: \"Malta\"\n    },\n    marshall_islands: {\n        countryCode: \"MH\",\n        name: \"Marshall Islands\"\n    },\n    martinique: {\n        countryCode: \"MQ\",\n        name: \"Martinique\"\n    },\n    mauritania: {\n        countryCode: \"MR\",\n        name: \"Mauritania\"\n    },\n    mauritius: {\n        countryCode: \"MU\",\n        name: \"Mauritius\"\n    },\n    mayotte: {\n        countryCode: \"YT\",\n        name: \"Mayotte\"\n    },\n    mexico: {\n        countryCode: \"MX\",\n        name: \"Mexico\"\n    },\n    moldova: {\n        countryCode: \"MD\",\n        name: \"Republic of Moldova\"\n    },\n    monaco: {\n        countryCode: \"MC\",\n        name: \"Monaco\"\n    },\n    mongolia: {\n        countryCode: \"MN\",\n        name: \"Mongolia\"\n    },\n    montenegro: {\n        countryCode: \"ME\",\n        name: \"Montenegro\"\n    },\n    montserrat: {\n        countryCode: \"MS\",\n        name: \"Montserrat\"\n    },\n    morocco: {\n        countryCode: \"MA\",\n        name: \"Morocco\"\n    },\n    mozambique: {\n        countryCode: \"MZ\",\n        name: \"Mozambique\"\n    },\n    myanmar: {\n        countryCode: \"MM\",\n        name: \"Myanmar\"\n    },\n    namibia: {\n        countryCode: \"NA\",\n        name: \"Namibia\"\n    },\n    nauru: {\n        countryCode: \"NR\",\n        name: \"Nauru\"\n    },\n    nepal: {\n        countryCode: \"NP\",\n        name: \"Nepal\"\n    },\n    netherlands: {\n        countryCode: \"NL\",\n        name: \"Netherlands\"\n    },\n    new_caledonia: {\n        countryCode: \"NC\",\n        name: \"New Caledonia\"\n    },\n    new_zealand: {\n        countryCode: \"NZ\",\n        name: \"New Zealand\"\n    },\n    nicaragua: {\n        countryCode: \"NI\",\n        name: \"Nicaragua\"\n    },\n    niger: {\n        countryCode: \"NE\",\n        name: \"Niger\"\n    },\n    nigeria: {\n        countryCode: \"NG\",\n        name: \"Nigeria\"\n    },\n    niue: {\n        countryCode: \"NU\",\n        name: \"Niue\"\n    },\n    norfolk_island: {\n        countryCode: \"NF\",\n        name: \"Norfolk Island\"\n    },\n    north_korea: {\n        countryCode: \"KP\",\n        name: \"Democratic People's Republic of Korea\"\n    },\n    north_macedonia: {\n        countryCode: \"MK\",\n        name: \"North Macedonia\"\n    },\n    northern_mariana_islands: {\n        countryCode: \"MP\",\n        name: \"Northern Mariana Islands\"\n    },\n    norway: {\n        countryCode: \"NO\",\n        name: \"Norway\"\n    },\n    oman: {\n        countryCode: \"OM\",\n        name: \"Oman\"\n    },\n    pakistan: {\n        countryCode: \"PK\",\n        name: \"Pakistan\"\n    },\n    palau: {\n        countryCode: \"PW\",\n        name: \"Palau\"\n    },\n    panama: {\n        countryCode: \"PA\",\n        name: \"Panama\"\n    },\n    papua_new_guinea: {\n        countryCode: \"PG\",\n        name: \"Papua New Guinea\"\n    },\n    paraguay: {\n        countryCode: \"PY\",\n        name: \"Paraguay\"\n    },\n    peru: {\n        countryCode: \"PE\",\n        name: \"Peru\"\n    },\n    philippines: {\n        countryCode: \"PH\",\n        name: \"Philippines\"\n    },\n    pitcairn: {\n        countryCode: \"PN\",\n        name: \"Pitcairn\"\n    },\n    poland: {\n        countryCode: \"PL\",\n        name: \"Poland\"\n    },\n    portugal: {\n        countryCode: \"PT\",\n        name: \"Portugal\"\n    },\n    puerto_rico: {\n        countryCode: \"PR\",\n        name: \"Puerto Rico\"\n    },\n    qatar: {\n        countryCode: \"QA\",\n        name: \"Qatar\"\n    },\n    romania: {\n        countryCode: \"RO\",\n        name: \"Romania\"\n    },\n    russia: {\n        countryCode: \"RU\",\n        name: \"Russian Federation\"\n    },\n    rwanda: {\n        countryCode: \"RW\",\n        name: \"Rwanda\"\n    },\n    r\\u00E9union: {\n        countryCode: \"RE\",\n        name: \"R\\xE9union\"\n    },\n    saint_barth\\u00E9lemy: {\n        countryCode: \"BL\",\n        name: \"Saint Barth\\xE9lemy\"\n    },\n    saint_helena_ascension_and_tristan_da_cunha: {\n        countryCode: \"SH\",\n        name: \"Saint Helena, Ascension and Tristan da Cunha\"\n    },\n    saint_kitts_and_nevis: {\n        countryCode: \"KN\",\n        name: \"Saint Kitts and Nevis\"\n    },\n    saint_lucia: {\n        countryCode: \"LC\",\n        name: \"Saint Lucia\"\n    },\n    saint_martin: {\n        countryCode: \"MF\",\n        name: \"Saint Martin (French part)\"\n    },\n    saint_pierre_and_miquelon: {\n        countryCode: \"PM\",\n        name: \"Saint Pierre and Miquelon\"\n    },\n    saint_vincent_and_the_grenadines: {\n        countryCode: \"VC\",\n        name: \"Saint Vincent and the Grenadines\"\n    },\n    samoa: {\n        countryCode: \"WS\",\n        name: \"Samoa\"\n    },\n    san_marino: {\n        countryCode: \"SM\",\n        name: \"San Marino\"\n    },\n    sao_tome_and_principe: {\n        countryCode: \"ST\",\n        name: \"Sao Tome and Principe\"\n    },\n    saudi_arabia: {\n        countryCode: \"SA\",\n        name: \"Saudi Arabia\"\n    },\n    senegal: {\n        countryCode: \"SN\",\n        name: \"Senegal\"\n    },\n    serbia: {\n        countryCode: \"RS\",\n        name: \"Serbia\"\n    },\n    seychelles: {\n        countryCode: \"SC\",\n        name: \"Seychelles\"\n    },\n    sierra_leone: {\n        countryCode: \"SL\",\n        name: \"Sierra Leone\"\n    },\n    singapore: {\n        countryCode: \"SG\",\n        name: \"Singapore\"\n    },\n    sint_maarten: {\n        countryCode: \"SX\",\n        name: \"Sint Maarten (Dutch part)\"\n    },\n    slovakia: {\n        countryCode: \"SK\",\n        name: \"Slovakia\"\n    },\n    slovenia: {\n        countryCode: \"SI\",\n        name: \"Slovenia\"\n    },\n    solomon_islands: {\n        countryCode: \"SB\",\n        name: \"Solomon Islands\"\n    },\n    somalia: {\n        countryCode: \"SO\",\n        name: \"Somalia\"\n    },\n    south_africa: {\n        countryCode: \"ZA\",\n        name: \"South Africa\"\n    },\n    south_georgia_and_the_south_sandwich_islands: {\n        countryCode: \"GS\",\n        name: \"South Georgia and the South Sandwich Islands\"\n    },\n    south_korea: {\n        countryCode: \"KR\",\n        name: \"Republic of Korea\"\n    },\n    south_sudan: {\n        countryCode: \"SS\",\n        name: \"South Sudan\"\n    },\n    spain: {\n        countryCode: \"ES\",\n        name: \"Spain\"\n    },\n    sri_lanka: {\n        countryCode: \"LK\",\n        name: \"Sri Lanka\"\n    },\n    state_of_palestine: {\n        countryCode: \"PS\",\n        name: \"State of Palestine\"\n    },\n    sudan: {\n        countryCode: \"SD\",\n        name: \"Sudan\"\n    },\n    suriname: {\n        countryCode: \"SR\",\n        name: \"Suriname\"\n    },\n    svalbard_and_jan_mayen: {\n        countryCode: \"SJ\",\n        name: \"Svalbard and Jan Mayen\"\n    },\n    sweden: {\n        countryCode: \"SE\",\n        name: \"Sweden\"\n    },\n    switzerland: {\n        countryCode: \"CH\",\n        name: \"Switzerland\"\n    },\n    syria: {\n        countryCode: \"SY\",\n        name: \"Syrian Arab Republic\"\n    },\n    taiwan: {\n        countryCode: \"TW\",\n        name: \"Taiwan, Province of China\"\n    },\n    tajikistan: {\n        countryCode: \"TJ\",\n        name: \"Tajikistan\"\n    },\n    tanzania: {\n        countryCode: \"TZ\",\n        name: \"United Republic of Tanzania\"\n    },\n    thailand: {\n        countryCode: \"TH\",\n        name: \"Thailand\"\n    },\n    timor_leste: {\n        countryCode: \"TL\",\n        name: \"Timor-Leste\"\n    },\n    togo: {\n        countryCode: \"TG\",\n        name: \"Togo\"\n    },\n    tokelau: {\n        countryCode: \"TK\",\n        name: \"Tokelau\"\n    },\n    tonga: {\n        countryCode: \"TO\",\n        name: \"Tonga\"\n    },\n    trinidad_and_tobago: {\n        countryCode: \"TT\",\n        name: \"Trinidad and Tobago\"\n    },\n    tunisia: {\n        countryCode: \"TN\",\n        name: \"Tunisia\"\n    },\n    turkey: {\n        countryCode: \"TR\",\n        name: \"Turkey\"\n    },\n    turkmenistan: {\n        countryCode: \"TM\",\n        name: \"Turkmenistan\"\n    },\n    turks_and_caicos_islands: {\n        countryCode: \"TC\",\n        name: \"Turks and Caicos Islands\"\n    },\n    tuvalu: {\n        countryCode: \"TV\",\n        name: \"Tuvalu\"\n    },\n    uganda: {\n        countryCode: \"UG\",\n        name: \"Uganda\"\n    },\n    ukraine: {\n        countryCode: \"UA\",\n        name: \"Ukraine\"\n    },\n    united_arab_emirates: {\n        countryCode: \"AE\",\n        name: \"United Arab Emirates\"\n    },\n    united_kingdom: {\n        countryCode: \"GB\",\n        name: \"United Kingdom of Great Britain and Northern Ireland\"\n    },\n    united_states_minor_outlying_islands: {\n        countryCode: \"UM\",\n        name: \"United States Minor Outlying Islands\"\n    },\n    united_states_of_america: {\n        countryCode: \"US\",\n        name: \"United States of America\"\n    },\n    uruguay: {\n        countryCode: \"UY\",\n        name: \"Uruguay\"\n    },\n    uzbekistan: {\n        countryCode: \"UZ\",\n        name: \"Uzbekistan\"\n    },\n    vanuatu: {\n        countryCode: \"VU\",\n        name: \"Vanuatu\"\n    },\n    venezuela: {\n        countryCode: \"VE\",\n        name: \"Bolivarian Republic of Venezuela\"\n    },\n    vietnam: {\n        countryCode: \"VN\",\n        name: \"Viet Nam\"\n    },\n    virgin_islands_british: {\n        countryCode: \"VG\",\n        name: \"Virgin Islands (British)\"\n    },\n    virgin_islands_us: {\n        countryCode: \"VI\",\n        name: \"Virgin Islands (U.S.)\"\n    },\n    wallis_and_futuna: {\n        countryCode: \"WF\",\n        name: \"Wallis and Futuna\"\n    },\n    western_sahara: {\n        countryCode: \"EH\",\n        name: \"Western Sahara\"\n    },\n    yemen: {\n        countryCode: \"YE\",\n        name: \"Yemen\"\n    },\n    zambia: {\n        countryCode: \"ZM\",\n        name: \"Zambia\"\n    },\n    zimbabwe: {\n        countryCode: \"ZW\",\n        name: \"Zimbabwe\"\n    }\n};\nexport { countries };\n","import { countries } from './countries.js';\nconst getCountryByCountryCodeCache = {};\nconst getCountryByCountryCode = (countryCode) => getCountryByCountryCodeCache[countryCode] || (getCountryByCountryCodeCache[countryCode] = Object.values(countries).find((country) => country.countryCode === countryCode));\nexport { getCountryByCountryCode, getCountryByCountryCodeCache };\n","var ArticleDesign = /* @__PURE__ */ ((ArticleDesign2) => {\n    ArticleDesign2[ArticleDesign2[\"Standard\"] = 0] = \"Standard\";\n    ArticleDesign2[ArticleDesign2[\"Picture\"] = 1] = \"Picture\";\n    ArticleDesign2[ArticleDesign2[\"Gallery\"] = 2] = \"Gallery\";\n    ArticleDesign2[ArticleDesign2[\"Audio\"] = 3] = \"Audio\";\n    ArticleDesign2[ArticleDesign2[\"Video\"] = 4] = \"Video\";\n    ArticleDesign2[ArticleDesign2[\"Review\"] = 5] = \"Review\";\n    ArticleDesign2[ArticleDesign2[\"Analysis\"] = 6] = \"Analysis\";\n    ArticleDesign2[ArticleDesign2[\"Explainer\"] = 7] = \"Explainer\";\n    ArticleDesign2[ArticleDesign2[\"Comment\"] = 8] = \"Comment\";\n    ArticleDesign2[ArticleDesign2[\"Letter\"] = 9] = \"Letter\";\n    ArticleDesign2[ArticleDesign2[\"Feature\"] = 10] = \"Feature\";\n    ArticleDesign2[ArticleDesign2[\"LiveBlog\"] = 11] = \"LiveBlog\";\n    ArticleDesign2[ArticleDesign2[\"DeadBlog\"] = 12] = \"DeadBlog\";\n    ArticleDesign2[ArticleDesign2[\"Recipe\"] = 13] = \"Recipe\";\n    ArticleDesign2[ArticleDesign2[\"MatchReport\"] = 14] = \"MatchReport\";\n    ArticleDesign2[ArticleDesign2[\"Interview\"] = 15] = \"Interview\";\n    ArticleDesign2[ArticleDesign2[\"Editorial\"] = 16] = \"Editorial\";\n    ArticleDesign2[ArticleDesign2[\"Quiz\"] = 17] = \"Quiz\";\n    ArticleDesign2[ArticleDesign2[\"Interactive\"] = 18] = \"Interactive\";\n    ArticleDesign2[ArticleDesign2[\"PhotoEssay\"] = 19] = \"PhotoEssay\";\n    ArticleDesign2[ArticleDesign2[\"PrintShop\"] = 20] = \"PrintShop\";\n    ArticleDesign2[ArticleDesign2[\"Obituary\"] = 21] = \"Obituary\";\n    ArticleDesign2[ArticleDesign2[\"Correction\"] = 22] = \"Correction\";\n    ArticleDesign2[ArticleDesign2[\"FullPageInteractive\"] = 23] = \"FullPageInteractive\";\n    ArticleDesign2[ArticleDesign2[\"NewsletterSignup\"] = 24] = \"NewsletterSignup\";\n    ArticleDesign2[ArticleDesign2[\"Timeline\"] = 25] = \"Timeline\";\n    ArticleDesign2[ArticleDesign2[\"Profile\"] = 26] = \"Profile\";\n    return ArticleDesign2;\n})(ArticleDesign || {});\nexport { ArticleDesign };\n","var ArticleDisplay = /* @__PURE__ */ ((ArticleDisplay2) => {\n    ArticleDisplay2[ArticleDisplay2[\"Standard\"] = 0] = \"Standard\";\n    ArticleDisplay2[ArticleDisplay2[\"Immersive\"] = 1] = \"Immersive\";\n    ArticleDisplay2[ArticleDisplay2[\"Showcase\"] = 2] = \"Showcase\";\n    ArticleDisplay2[ArticleDisplay2[\"NumberedList\"] = 3] = \"NumberedList\";\n    return ArticleDisplay2;\n})(ArticleDisplay || {});\nexport { ArticleDisplay };\n","var ArticleSpecial = /* @__PURE__ */ ((ArticleSpecial2) => {\n    ArticleSpecial2[ArticleSpecial2[\"SpecialReport\"] = 5] = \"SpecialReport\";\n    ArticleSpecial2[ArticleSpecial2[\"Labs\"] = 6] = \"Labs\";\n    ArticleSpecial2[ArticleSpecial2[\"SpecialReportAlt\"] = 7] = \"SpecialReportAlt\";\n    return ArticleSpecial2;\n})(ArticleSpecial || {});\nexport { ArticleSpecial };\n","const multipleSlashesInRoute = /\\b\\/{2,}/g;\nconst joinUrl = (...args) => args.join(\"/\").replace(multipleSlashesInRoute, \"/\");\nexport { joinUrl };\n","import { log } from './logger.js';\nconst debug = (team, ...args) => {\n    const isNotProd = window.location.origin !== \"https://www.theguardian.com\";\n    if (isNotProd) {\n        log(team, ...args);\n    }\n};\nexport { debug };\n"],"names":["units","timeAgo","epoch","options","_options$now","_options$verbose","date","_ref","difference","then","now","Date","verbose","_duration","length","unit","rawLength","Math","round","concat","_options$daysUntilAbs","daysUntilAbsolute","today","yesterday","setDate","getDate","toDateString","isYesterday","getHours","getMinutes","toString","padStart","toLocaleString","day","month","year","switches","Pillar","Pillar2","ArticlePillar","ArticleElementRole","ArticleElementRole2","countries","afghanistan","countryCode","name","åland_islands","albania","algeria","american_samoa","andorra","angola","anguilla","antarctica","antigua_and_barbuda","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","bosnia_and_herzegovina","botswana","bouvet_island","brazil","british_indian_ocean_territory","brunei_darussalam","bulgaria","burkina_faso","burundi","cabo_verde","cambodia","cameroon","canada","caribbean_netherlands","cayman_islands","central_african_republic","chad","chile","china","christmas_island","cocos_keeling_islands","colombia","comoros","congo","cook_islands","costa_rica","croatia","cuba","curaçao","cyprus","czechia","democratic_republic_of_the_congo","denmark","djibouti","dominica","dominican_republic","ecuador","egypt","el_salvador","equatorial_guinea","eritrea","estonia","eswatini","ethiopia","falkland_islands","faroe_islands","federated_states_of_micronesia","fiji","finland","france","french_guiana","french_polynesia","french_southern_territories","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guinea_bissau","guyana","haiti","heard_island_and_mcdonald_islands","holy_see","honduras","hong_kong","hungary","iceland","india","indonesia","iran","iraq","ireland","isle_of_man","israel","italy","ivory_coast","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","laos","latvia","lebanon","lesotho","liberia","libya","liechtenstein","lithuania","luxembourg","macao","madagascar","malawi","malaysia","maldives","mali","malta","marshall_islands","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","new_caledonia","new_zealand","nicaragua","niger","nigeria","niue","norfolk_island","north_korea","north_macedonia","northern_mariana_islands","norway","oman","pakistan","palau","panama","papua_new_guinea","paraguay","peru","philippines","pitcairn","poland","portugal","puerto_rico","qatar","romania","russia","rwanda","réunion","saint_barthélemy","saint_helena_ascension_and_tristan_da_cunha","saint_kitts_and_nevis","saint_lucia","saint_martin","saint_pierre_and_miquelon","saint_vincent_and_the_grenadines","samoa","san_marino","sao_tome_and_principe","saudi_arabia","senegal","serbia","seychelles","sierra_leone","singapore","sint_maarten","slovakia","slovenia","solomon_islands","somalia","south_africa","south_georgia_and_the_south_sandwich_islands","south_korea","south_sudan","spain","sri_lanka","state_of_palestine","sudan","suriname","svalbard_and_jan_mayen","sweden","switzerland","syria","taiwan","tajikistan","tanzania","thailand","timor_leste","togo","tokelau","tonga","trinidad_and_tobago","tunisia","turkey","turkmenistan","turks_and_caicos_islands","tuvalu","uganda","ukraine","united_arab_emirates","united_kingdom","united_states_minor_outlying_islands","united_states_of_america","uruguay","uzbekistan","vanuatu","venezuela","vietnam","virgin_islands_british","virgin_islands_us","wallis_and_futuna","western_sahara","yemen","zambia","zimbabwe","getCountryByCountryCodeCache","getCountryByCountryCode","Object","values","find","country","ArticleDesign","ArticleDesign2","ArticleDisplay","ArticleDisplay2","ArticleSpecial","ArticleSpecial2","getSwitches","_asyncToGenerator","_regeneratorRuntime","_callee","_window$guardian$conf","_window$guardian","_context","prev","next","t0","window","guardian","config","t1","fetch","response","json","switches2","isObject","every","isBoolean","validate","Promise","reject","Error","sent","abrupt","stop","apply","arguments","multipleSlashesInRoute","joinUrl","_len","args","Array","_key","join","replace","debug","team","location","origin","log"],"sourceRoot":""}