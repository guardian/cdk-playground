{"version":3,"file":"348.client.web.aaa1731499f1a304a3f1.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/Card/components/LI.tsx","webpack://@guardian/dotcom-rendering/./src/lib/verticalDividerWithBottomOffset.ts","webpack://@guardian/dotcom-rendering/./src/components/Card/components/UL.tsx","webpack://@guardian/dotcom-rendering/./src/components/FrontCard.tsx","webpack://@guardian/dotcom-rendering/./src/model/enhanceSnaps.ts","webpack://@guardian/dotcom-rendering/./src/model/enhanceCards.ts","webpack://@guardian/dotcom-rendering/./src/model/enhanceTags.ts","webpack://@guardian/dotcom-rendering/./src/components/ShowMore.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/dynamicSlices.tsx","webpack://@guardian/dotcom-rendering/./src/lib/byline.ts","webpack://@guardian/dotcom-rendering/./src/lib/getDataLinkName.ts","webpack://@guardian/dotcom-rendering/./src/lib/verticalDivider.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport { from, space, until } from '@guardian/source/foundations';\nimport { verticalDivider } from '../../../lib/verticalDivider';\nimport { verticalDividerWithBottomOffset } from '../../../lib/verticalDividerWithBottomOffset';\nimport { palette } from '../../../palette';\n\ntype CardPercentageType =\n\t| '25%'\n\t| '33.333%'\n\t| '50%'\n\t| '66.666%'\n\t| '75%'\n\t| '100%';\n\n/**\n * This value needs to match the one set\n * in the `verticalDividerWithBottomOffset`\n */\nconst GAP_SIZE = `${space[3]}px`;\n\nconst liStyles = css`\n\t/* This position relative is needed to contain the vertical divider */\n\tposition: relative;\n\n\tdisplay: flex;\n\trow-gap: ${GAP_SIZE};\n`;\n\nconst sidePaddingStylesMobile = (override?: number) => css`\n\t/* Set spacing on the li element */\n\t${until.tablet} {\n\t\tpadding-left: ${override ?? 10}px;\n\t\tpadding-right: ${override ?? 10}px;\n\t}\n`;\n\nconst sidePaddingStyles = (override?: number) => css`\n\t${from.tablet} {\n\t\tpadding-left: ${override ?? 10}px;\n\t\tpadding-right: ${override ?? 10}px;\n\t}\n`;\n\nconst snapAlignStartStyles = css`\n\t/* Snap start of card */\n\tscroll-snap-align: start;\n`;\n\nconst decideSize = (percentage?: CardPercentageType, stretch?: boolean) => {\n\tlet sizeStyle;\n\tif (percentage) {\n\t\tsizeStyle = css`\n\t\t\tflex-basis: ${percentage};\n\t\t\t${stretch &&\n\t\t\tcss`\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t`;\n\t} else if (stretch) {\n\t\tsizeStyle = css`\n\t\t\tflex-grow: 1;\n\t\t`;\n\t} else {\n\t\tsizeStyle = css`\n\t\t\tflex: 1;\n\t\t`;\n\t}\n\treturn sizeStyle;\n};\n\nconst decideDivider = (\n\toffsetBottomPaddingOnDivider: boolean,\n\tpaddingSize: string,\n\tverticalDividerColour: string,\n) =>\n\toffsetBottomPaddingOnDivider\n\t\t? verticalDividerWithBottomOffset(paddingSize, verticalDividerColour)\n\t\t: verticalDivider(verticalDividerColour);\n\ntype Props = {\n\tchildren: React.ReactNode;\n\t/** Used to give a particular LI more or less weight / space */\n\tpercentage?: CardPercentageType;\n\t/** When true, the card stretches based on content */\n\tstretch?: boolean;\n\t/** If this LI wraps a card in a row this should be true */\n\tshowDivider?: boolean;\n\t/** If this LI directly wraps a card this should be true */\n\tpadSides?: boolean;\n\t/** Overrides the default padding */\n\tpadSidesOverride?: number;\n\t/** Should be true if spacing between cards is desired on mobile devices */\n\tpadSidesOnMobile?: boolean;\n\t/** Overrides the default mobile padding */\n\tpadSidesMobileOverride?: number;\n\t/** True when snapping card when scrolling e.g. in carousel */\n\tsnapAlignStart?: boolean;\n\t/** Prevent the divider from spanning the LI's bottom padding. To be used when you know that the\n\tLI will have bottom padding, but won't have another card in the same container directly below it. */\n\toffsetBottomPaddingOnDivider?: boolean;\n\t/** Overrides the vertical divider colour */\n\tverticalDividerColour?: string;\n};\n\nexport const LI = ({\n\tchildren,\n\tpercentage,\n\tstretch,\n\tshowDivider,\n\tpadSides = false,\n\tpadSidesOverride,\n\tpadSidesOnMobile = false,\n\tpadSidesMobileOverride,\n\tsnapAlignStart = false,\n\toffsetBottomPaddingOnDivider = false,\n\tverticalDividerColour = palette('--section-border'),\n}: Props) => {\n\t// Decide sizing\n\tconst sizeStyles = decideSize(percentage, stretch);\n\n\treturn (\n\t\t<li\n\t\t\tcss={[\n\t\t\t\tliStyles,\n\t\t\t\tsizeStyles,\n\t\t\t\tshowDivider &&\n\t\t\t\t\tdecideDivider(\n\t\t\t\t\t\toffsetBottomPaddingOnDivider,\n\t\t\t\t\t\tGAP_SIZE,\n\t\t\t\t\t\tverticalDividerColour,\n\t\t\t\t\t),\n\t\t\t\tpadSides && sidePaddingStyles(padSidesOverride),\n\t\t\t\tpadSidesOnMobile &&\n\t\t\t\t\tsidePaddingStylesMobile(padSidesMobileOverride),\n\t\t\t\tsnapAlignStart && snapAlignStartStyles,\n\t\t\t]}\n\t\t>\n\t\t\t{children}\n\t\t</li>\n\t);\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { from } from '@guardian/source/foundations';\n\nexport function verticalDividerWithBottomOffset(\n\tbottomPaddingSize: string,\n\tverticalDividerColour: string,\n): SerializedStyles {\n\treturn css`\n\t\t${from.tablet} {\n\t\t\t:before {\n\t\t\t\tcontent: '';\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 1px;\n\t\t\t\t/* 100% is a reasonable fallback for browsers which don't support calc() */\n\t\t\t\theight: 100%;\n\t\t\t\theight: calc(100% + ${bottomPaddingSize});\n\t\t\t\tborder-left: 1px solid ${verticalDividerColour};\n\t\t\t}\n\t\t}\n\t`;\n}\n","import { css } from '@emotion/react';\nimport { from, space, until } from '@guardian/source/foundations';\nimport { verticalDivider } from '../../../lib/verticalDivider';\nimport { palette } from '../../../palette';\n\ntype Direction = 'row' | 'column' | 'row-reverse';\n\nconst getSpacingPx = (hasLargeSpacing: boolean) =>\n\thasLargeSpacing ? space[6] : space[3];\n\nconst ulStyles = (direction: Direction, spacingPx: number) => css`\n\twidth: 100%;\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: ${direction};\n\t${until.tablet} {\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t}\n\n\t& > li {\n\t\tmargin-bottom: ${spacingPx}px;\n\t}\n\n\t@supports (row-gap: 1em) {\n\t\t& > li {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\t\t/* Supported in flex layout is lacking: https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap#browser_compatibility */\n\t\trow-gap: ${spacingPx}px;\n\t}\n`;\n\nconst wrapStyles = css`\n\t${from.tablet} {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst marginBottom = (spacingPx: number) => css`\n\tmargin-bottom: ${spacingPx}px;\n`;\n\nconst topBarStyles = (splitTopBar: boolean) => css`\n\t${from.tablet} {\n\t\tpadding-top: 8px;\n\t\t::before {\n\t\t\tcontent: '';\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\ttop: 0px;\n\t\t\tleft: 10px;\n\t\t\twidth: calc(100% - 20px);\n\t\t\theight: 1px;\n\t\t\t${splitTopBar\n\t\t\t\t? `background-image: linear-gradient(\n\t\t\t\tto right,\n\t\t\t\t${palette('--card-border-top')},\n\t\t\t\t${palette('--card-border-top')} calc(50% - 10px),\n\t\t\t\trgba(0, 0, 0, 0) calc(50% - 10px),\n\t\t\t\trgba(0, 0, 0, 0) calc(50% + 10px),\n\t\t\t\t${palette('--card-border-top')} calc(50% + 10px),\n\t\t\t\t${palette('--card-border-top')}\n\t\t\t)`\n\t\t\t\t: `background-color: ${palette('--card-border-top')};`}\n\t\t}\n\t}\n`;\n\ntype Props = {\n\tchildren: React.ReactNode;\n\t/** Passed to flex-direction */\n\tdirection?: Direction;\n\t/** If this UL is a column and not the left most column */\n\tshowDivider?: boolean;\n\t/** If this UL is a row, add spacing below */\n\tpadBottom?: boolean;\n\t/** Used to keep cards aligned in adjacent columns */\n\twrapCards?: boolean;\n\t/** Used to display a full width bar along the top of the container */\n\tshowTopBar?: boolean;\n\t/** Used to add a gap in the center of the top bar */\n\tsplitTopBar?: boolean;\n\t/** Used to give beta containers additional space */\n\thasLargeSpacing?: boolean;\n\t/** Overrides the vertical divider colour */\n\tverticalDividerColour?: string;\n};\n\nexport const UL = ({\n\tchildren,\n\tdirection = 'column',\n\tshowDivider = false,\n\tpadBottom = false,\n\twrapCards = false,\n\tshowTopBar = false,\n\thasLargeSpacing = false,\n\tsplitTopBar = false,\n\tverticalDividerColour = palette('--section-border'),\n}: Props) => {\n\tconst spacingPx = getSpacingPx(hasLargeSpacing);\n\treturn (\n\t\t<ul\n\t\t\tcss={[\n\t\t\t\tulStyles(direction, spacingPx),\n\t\t\t\tshowDivider && verticalDivider(verticalDividerColour),\n\t\t\t\tpadBottom && marginBottom(spacingPx),\n\t\t\t\twrapCards && wrapStyles,\n\t\t\t\tshowTopBar && topBarStyles(splitTopBar),\n\t\t\t]}\n\t\t>\n\t\t\t{children}\n\t\t</ul>\n\t);\n};\n","import { ArticleDesign } from '../lib/articleFormat';\nimport type { DCRFrontCard } from '../types/front';\nimport type { Props as CardProps } from './Card/Card';\nimport { Card } from './Card/Card';\n\ntype Props = {\n\ttrail: DCRFrontCard;\n} & Partial<CardProps> &\n\tPick<CardProps, 'imageLoading' | 'absoluteServerTimes'>;\n\n/**\n * A wrapper around the normal Card component providing sensible defaults for Cards on front containers.\n *\n * Any prop used by the original Card can be used in FrontCard to override the defaults.\n *\n * Note: Below parameters are not an exhaustive list of params used by FrontCard, rather they are a list of\n * commonly overridden params to make it easier for a developer to know if they actually need to override these values.\n *\n * @param props\n * @param [props.headlineSize] - Defaults to \"medium\"\n * @param [props.imagePosition] - Defaults to \"top\"\n * @param [props.imagePositionOnMobile] - Defaults to \"left\"\n * @param [props.imageSize] - Defaults to \"small\"\n * @param [props.supportingContent] - Defaults to undefined, set to trail.supportingContent if you want this card to show sublinks.\n * @param [props.trailText] - Defaults to undefined, set to `trail.trailText` if you want this card to show trail text.\n */\nexport const FrontCard = (props: Props) => {\n\tconst { trail, ...cardProps } = props;\n\tconst defaultProps: Omit<\n\t\tCardProps,\n\t\t'imageLoading' | 'absoluteServerTimes'\n\t> = {\n\t\tlinkTo: trail.url,\n\t\tformat: trail.format,\n\t\theadlineText: trail.headline,\n\t\tbyline: trail.byline,\n\t\tshowByline: trail.showByline,\n\t\tshowQuotedHeadline: trail.showQuotedHeadline,\n\t\twebPublicationDate: trail.webPublicationDate,\n\t\tkickerText: trail.kickerText,\n\t\tshowPulsingDot: trail.format.design === ArticleDesign.LiveBlog,\n\t\tshowClock: false,\n\t\timage: trail.image,\n\t\tisCrossword: trail.isCrossword,\n\t\tcanPlayInline: true,\n\t\tstarRating: trail.starRating,\n\t\tdataLinkName: trail.dataLinkName,\n\t\tsnapData: trail.snapData,\n\t\tdiscussionApiUrl: trail.discussionApiUrl,\n\t\tdiscussionId: trail.discussionId,\n\t\tavatarUrl: trail.avatarUrl,\n\t\tmainMedia: trail.mainMedia,\n\t\tisExternalLink: trail.isExternalLink,\n\t\tbranding: trail.branding,\n\t\tslideshowImages: trail.slideshowImages,\n\t\tshowLivePlayable: trail.showLivePlayable,\n\t\tshowMainVideo: trail.showMainVideo,\n\t\tgalleryCount: trail.galleryCount,\n\t\tpodcastImage: trail.podcastImage,\n\t};\n\n\treturn Card({ ...defaultProps, ...cardProps });\n};\n","import type { DCRSnapType, FESnapType } from '../types/front';\n\n/**\n *\n * This function takes a `FESnapType` and turns it into a `DCRSnapType`. It mutates\n * certain properties such as embedCss to work with Emotion.\n *\n * @returns the DCR snap with its properties mutated\n */\nexport const enhanceSnaps = (\n\tsnap: FESnapType | undefined,\n): DCRSnapType | undefined => {\n\tconst dcrSnap = snap;\n\n\t// Emotion doesn't parse this conditional CSS correctly which is used by some thrashers to check\n\t// if there’s a page skin. This regex fixes the vast majority of these cases should allow future snaps\n\t// to be built with DCR in mind.\n\tif (dcrSnap?.embedCss) {\n\t\tdcrSnap.embedCss = dcrSnap.embedCss.replace(\n\t\t\t/body:not\\(\\.has-active-pageskin\\)(?! &)/g,\n\t\t\t'body:not(.has-active-pageskin) &',\n\t\t);\n\t}\n\n\treturn dcrSnap;\n};\n","import { isUndefined } from '@guardian/libs';\nimport {\n\tArticleDesign,\n\ttype ArticleFormat,\n\tdecideFormat,\n} from '../lib/articleFormat';\nimport { getSoleContributor } from '../lib/byline';\nimport type { EditionId } from '../lib/edition';\nimport type { Group } from '../lib/getDataLinkName';\nimport { getDataLinkNameCard } from '../lib/getDataLinkName';\nimport type {\n\tDCRFrontCard,\n\tDCRSlideshowImage,\n\tDCRSupportingContent,\n\tFEFrontCard,\n\tFEMediaAtom,\n\tFESupportingContent,\n} from '../types/front';\nimport type { MainMedia } from '../types/mainMedia';\nimport type { PodcastSeriesImage, TagType } from '../types/tag';\nimport { enhanceSnaps } from './enhanceSnaps';\nimport { enhanceTags } from './enhanceTags';\n\nconst enhanceSupportingContent = (\n\tsupportingContent: FESupportingContent[],\n\tparentFormat: ArticleFormat,\n): DCRSupportingContent[] => {\n\treturn supportingContent.map((subLink) => {\n\t\t/** Use link format where available and fallback to parent otherwise */\n\t\tconst linkFormat = subLink.format\n\t\t\t? decideFormat(subLink.format)\n\t\t\t: parentFormat;\n\n\t\tconst supportingContentIsLive =\n\t\t\tsubLink.format?.design === 'LiveBlogDesign';\n\n\t\tconst kickerText = subLink.header.kicker?.item?.properties.kickerText;\n\n\t\treturn {\n\t\t\tformat: linkFormat,\n\t\t\theadline: subLink.header.headline,\n\t\t\turl: decideUrl(subLink),\n\t\t\tkickerText:\n\t\t\t\t!kickerText && supportingContentIsLive ? 'Live' : kickerText,\n\t\t};\n\t});\n};\n\nconst decideAvatarUrl = (\n\ttags: TagType[] = [],\n\tbyline?: string,\n): string | undefined => {\n\tconst soleContributor = getSoleContributor(tags, byline);\n\treturn soleContributor?.bylineLargeImageUrl ?? undefined;\n};\n\n/**\n * This function decides the best URL to link to on a Card or Supporting Content. It will pick the first non-undefined property of the following:\n *\n * `trail.properties.webUrl` - Where CAPI expects the content to be. Fully qualified but turned into a relative URL by DCR if possible. Ignored if the trail is type LinkSnap.\n * `trail.properties.href` - Location that a LinkSnap references.\n * `trail.header.url` - Where Frontend/FAPI expects the content to be. Usually identical to a relative-ized webUrl. In theory this should never get picked but it's the only URL where we're guaranteed it not be undefined which makes TypeScript happy.\n */\nconst decideUrl = (trail: FESupportingContent | FEFrontCard) => {\n\t/**\n\t * Frontend gives us fully qualified webUrls (https://www.theguardian.com/a/thing) which we want as relative URLs instead\n\t *\n\t * Don't try to provide a relative URL for LinkSnap, these will link to domains other than www.theguardian.com and therefore wont have a relative path.\n\t */\n\tif (\n\t\t!isUndefined(trail.properties.webUrl) &&\n\t\t!('type' in trail && trail.type === 'LinkSnap')\n\t) {\n\t\ttry {\n\t\t\treturn new URL(trail.properties.webUrl).pathname;\n\t\t} catch (_) {\n\t\t\t/**\n\t\t\t * In theory CAPI/FAPI/Frontend should never give us an webURL but\n\t\t\t * lets just fallback to a non relative URL just in case.\n\t\t\t *\n\t\t\t * Ideally we'd like to know when this happens, but unfortunately we can't access `logger` from here as this code also needs to be ran on the client by ShowMore.\n\t\t\t */\n\t\t}\n\t}\n\n\treturn trail.properties.webUrl ?? trail.properties.href ?? trail.header.url;\n};\n\nconst decideImage = (trail: FEFrontCard) => {\n\tif (\n\t\ttrail.type === 'LinkSnap' ||\n\t\ttrail.properties.image?.type === 'Replace'\n\t) {\n\t\treturn trail.properties.image?.item.imageSrc;\n\t}\n\n\tif (trail.display.imageHide) return undefined;\n\n\tif (trail.properties.isCrossword && trail.properties.maybeContentId) {\n\t\treturn `https://api.nextgen.guardianapps.co.uk/${trail.properties.maybeContentId}.svg`;\n\t}\n\n\treturn trail.properties.maybeContent?.trail.trailPicture?.allImages[0]?.url;\n};\n\n/**\n * Fetches podcast series image if it exists within the tags on a trail.\n * Also provides alt text for this image (series name) for when it is rendered.\n */\nconst getPodcastSeriesImage = (\n\ttrail: FEFrontCard,\n): PodcastSeriesImage | undefined => {\n\tconst podcastFromTags = trail.properties.maybeContent?.tags.tags\n\t\t.map(({ properties }) => properties)\n\t\t.find(({ tagType, podcast }) => tagType === 'Series' && !!podcast);\n\n\treturn podcastFromTags?.podcast?.image\n\t\t? {\n\t\t\t\tsrc: podcastFromTags.podcast.image,\n\t\t\t\taltText: podcastFromTags.webTitle,\n\t\t  }\n\t\t: undefined;\n};\n\nconst decideKicker = (\n\ttrail: FEFrontCard,\n\tcardInTagPage: boolean,\n\tpageId?: string,\n) => {\n\tif (trail.properties.isBreaking) {\n\t\treturn 'Breaking news';\n\t}\n\n\tif (cardInTagPage) {\n\t\treturn pageId && !pageId.includes('/series')\n\t\t\t? trail.header.seriesOrBlogKicker?.name\n\t\t\t: undefined;\n\t}\n\n\treturn trail.header.kicker?.item?.properties.kickerText;\n};\n\nconst decideSlideshowImages = (\n\ttrail: FEFrontCard,\n): DCRSlideshowImage[] | undefined => {\n\tconst assets = trail.properties.image?.item.assets;\n\tconst shouldShowSlideshow =\n\t\ttrail.properties.image?.type === 'ImageSlideshow' &&\n\t\ttrail.properties.imageSlideshowReplace;\n\tif (shouldShowSlideshow && assets && assets.length > 0) {\n\t\treturn assets;\n\t}\n\treturn undefined;\n};\n\n/**\n * While the first Media Atom is *not* guaranteed to be the main media,\n * it *happens to be* correct in the majority of cases.\n * @see https://github.com/guardian/frontend/pull/26247 for inspiration\n */\n\nconst getActiveMediaAtom = (mediaAtom?: FEMediaAtom): MainMedia | undefined => {\n\tif (mediaAtom) {\n\t\tconst asset = mediaAtom.assets.find(\n\t\t\t({ version }) => version === mediaAtom.activeVersion,\n\t\t);\n\t\tif (asset?.platform === 'Youtube') {\n\t\t\treturn {\n\t\t\t\ttype: 'Video',\n\t\t\t\tid: mediaAtom.id,\n\t\t\t\tvideoId: asset.id,\n\t\t\t\tduration: mediaAtom.duration ?? 0,\n\t\t\t\ttitle: mediaAtom.title,\n\t\t\t\t// Size fixed to a 5:3 ratio\n\t\t\t\twidth: 500,\n\t\t\t\theight: 300,\n\t\t\t\torigin: mediaAtom.source ?? 'Unknown origin',\n\t\t\t\texpired: !!mediaAtom.expired,\n\t\t\t\timages:\n\t\t\t\t\tmediaAtom.posterImage?.allImages.map(\n\t\t\t\t\t\t({ url, fields: { width } }) => ({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\twidth: Number(width),\n\t\t\t\t\t\t}),\n\t\t\t\t\t) ?? [],\n\t\t\t};\n\t\t}\n\t}\n\treturn undefined;\n};\n\nconst decideMedia = (\n\tformat: ArticleFormat,\n\tshowMainVideo?: boolean,\n\tmediaAtom?: FEMediaAtom,\n): MainMedia | undefined => {\n\t// If the showVideo toggle is enabled in the fronts tool,\n\t// we should return the active mediaAtom regardless of the design\n\tif (showMainVideo) {\n\t\treturn getActiveMediaAtom(mediaAtom);\n\t}\n\n\tswitch (format.design) {\n\t\tcase ArticleDesign.Gallery:\n\t\t\treturn { type: 'Gallery' };\n\n\t\tcase ArticleDesign.Audio:\n\t\t\treturn {\n\t\t\t\ttype: 'Audio',\n\t\t\t\tduration: mediaAtom?.duration ?? 0,\n\t\t\t};\n\n\t\tcase ArticleDesign.Video: {\n\t\t\treturn getActiveMediaAtom(mediaAtom);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n};\n\nexport const enhanceCards = (\n\tcollections: FEFrontCard[],\n\t{\n\t\tcardInTagPage,\n\t\toffset = 0,\n\t\teditionId,\n\t\tpageId,\n\t\tdiscussionApiUrl,\n\t}: {\n\t\tcardInTagPage: boolean;\n\t\t/** Used for the data link name to indicate card position in container */\n\t\toffset?: number;\n\t\teditionId: EditionId;\n\t\tpageId?: string;\n\t\tdiscussionApiUrl: string;\n\t},\n): DCRFrontCard[] =>\n\tcollections.map((faciaCard, index) => {\n\t\t// Snap cards may not have a format, default to a standard format if that's the case.\n\t\tconst format = decideFormat(\n\t\t\tfaciaCard.format ?? {\n\t\t\t\tdesign: 'ArticleDesign',\n\t\t\t\ttheme: 'NewsPillar',\n\t\t\t\tdisplay: 'StandardDisplay',\n\t\t\t},\n\t\t);\n\t\tconst group: Group = `${Number(faciaCard.card.group)}${\n\t\t\tfaciaCard.display.isBoosted ? '+' : ''\n\t\t}`;\n\n\t\tconst dataLinkName = getDataLinkNameCard(\n\t\t\tformat,\n\t\t\tgroup,\n\t\t\toffset + index,\n\t\t\tfaciaCard.card.cardStyle.type,\n\t\t);\n\n\t\tconst tags = faciaCard.properties.maybeContent?.tags.tags\n\t\t\t? enhanceTags(faciaCard.properties.maybeContent.tags.tags)\n\t\t\t: [];\n\n\t\tconst branding = faciaCard.properties.editionBrandings.find(\n\t\t\t(editionBranding) => editionBranding.edition.id === editionId,\n\t\t)?.branding;\n\n\t\tconst imageSrc = decideImage(faciaCard);\n\n\t\tconst podcastImage = getPodcastSeriesImage(faciaCard);\n\n\t\tconst isContributorTagPage = !!pageId && pageId.startsWith('profile/');\n\t\treturn {\n\t\t\tformat,\n\t\t\tdataLinkName,\n\t\t\turl: decideUrl(faciaCard),\n\t\t\theadline: faciaCard.header.headline,\n\t\t\ttrailText: faciaCard.card.trailText,\n\t\t\tstarRating: faciaCard.card.starRating,\n\t\t\twebPublicationDate: !isUndefined(\n\t\t\t\tfaciaCard.card.webPublicationDateOption,\n\t\t\t)\n\t\t\t\t? new Date(\n\t\t\t\t\t\tfaciaCard.card.webPublicationDateOption,\n\t\t\t\t  ).toISOString()\n\t\t\t\t: undefined,\n\t\t\tkickerText: decideKicker(faciaCard, cardInTagPage, pageId),\n\t\t\tsupportingContent: faciaCard.supportingContent\n\t\t\t\t? enhanceSupportingContent(faciaCard.supportingContent, format)\n\t\t\t\t: undefined,\n\t\t\tdiscussionApiUrl,\n\t\t\tdiscussionId: faciaCard.discussion.isCommentable\n\t\t\t\t? faciaCard.discussion.discussionId\n\t\t\t\t: undefined,\n\t\t\tbyline: faciaCard.properties.byline ?? undefined,\n\t\t\tshowByline: faciaCard.properties.showByline,\n\t\t\tsnapData: enhanceSnaps(faciaCard.enriched),\n\t\t\tisBoosted: faciaCard.display.isBoosted,\n\t\t\tboostLevel: faciaCard.display.boostLevel,\n\t\t\tisCrossword: faciaCard.properties.isCrossword,\n\t\t\tshowQuotedHeadline: faciaCard.display.showQuotedHeadline,\n\t\t\tshowLivePlayable: faciaCard.display.showLivePlayable,\n\t\t\tavatarUrl:\n\t\t\t\t!isContributorTagPage &&\n\t\t\t\tfaciaCard.properties.maybeContent?.tags.tags &&\n\t\t\t\tfaciaCard.properties.image?.type === 'Cutout'\n\t\t\t\t\t? decideAvatarUrl(\n\t\t\t\t\t\t\ttags,\n\t\t\t\t\t\t\tfaciaCard.properties.maybeContent.trail.byline,\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined,\n\t\t\tmainMedia: decideMedia(\n\t\t\t\tformat,\n\t\t\t\tfaciaCard.properties.showMainVideo,\n\t\t\t\tfaciaCard.properties.maybeContent?.elements.mainMediaAtom ??\n\t\t\t\t\tfaciaCard.properties.maybeContent?.elements.mediaAtoms[0],\n\t\t\t),\n\t\t\tisExternalLink: faciaCard.card.cardStyle.type === 'ExternalLink',\n\t\t\tembedUri: faciaCard.properties.embedUri ?? undefined,\n\t\t\tbranding,\n\t\t\tslideshowImages: decideSlideshowImages(faciaCard),\n\t\t\tshowMainVideo: faciaCard.properties.showMainVideo,\n\t\t\t...(!!imageSrc && {\n\t\t\t\timage: {\n\t\t\t\t\tsrc: imageSrc,\n\t\t\t\t\taltText:\n\t\t\t\t\t\tfaciaCard.properties.maybeContent?.trail.trailPicture\n\t\t\t\t\t\t\t?.allImages[0]?.fields.altText ?? '',\n\t\t\t\t},\n\t\t\t}),\n\t\t\tpodcastImage,\n\t\t\tgalleryCount: faciaCard.card.galleryCount,\n\t\t};\n\t});\n","import type { FETagType, TagType } from '../types/tag';\n\nexport const enhanceTags = (tags: FETagType[]): TagType[] =>\n\ttags.map((tag) => enhanceTag(tag));\n\nconst enhanceTag = ({\n\tproperties: {\n\t\tid,\n\t\ttagType: type,\n\t\twebTitle: title,\n\t\ttwitterHandle,\n\t\tbylineImageUrl,\n\t\tcontributorLargeImagePath: bylineLargeImageUrl,\n\t},\n}: FETagType): TagType => ({\n\tid,\n\ttype,\n\ttitle,\n\ttwitterHandle,\n\tbylineImageUrl,\n\tbylineLargeImageUrl,\n});\n","import { css } from '@emotion/react';\nimport { isNonNullable } from '@guardian/libs';\nimport {\n\tfrom,\n\tpalette as sourcePalette,\n\tspace,\n\tuntil,\n\tvisuallyHidden,\n} from '@guardian/source/foundations';\nimport {\n\tButton,\n\tInlineError,\n\tSvgCross,\n\tSvgPlus,\n} from '@guardian/source/react-components';\nimport { useEffect, useState } from 'react';\nimport { shouldPadWrappableRows } from '../lib/dynamicSlices';\nimport type { EditionId } from '../lib/edition';\nimport { useApi } from '../lib/useApi';\nimport { enhanceCards } from '../model/enhanceCards';\nimport { palette } from '../palette';\nimport type { DCRContainerPalette, FEFrontCard } from '../types/front';\nimport { LI } from './Card/components/LI';\nimport { UL } from './Card/components/UL';\nimport { FrontCard } from './FrontCard';\n\nconst decideButtonText = ({\n\tisOpen,\n\tloading,\n\ttitle,\n}: {\n\tisOpen: boolean;\n\tloading: boolean;\n\ttitle: string;\n}) => {\n\tif (isOpen && loading) return <>Loading</>;\n\tif (isOpen) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\tLess{' '}\n\t\t\t\t<span\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{/* The context of what we're hiding is likely more useful for screen-reader users */}\n\t\t\t\t\t{title}\n\t\t\t\t</span>\n\t\t\t</>\n\t\t);\n\t}\n\treturn <>More {title}</>;\n};\n\ntype Props = {\n\ttitle: string;\n\tpageId: string;\n\t/**\n\t * `collectionId` is the id of the collection as it figures in the fronts\n\t * config. It is used to generate the URL for the show-more API endpoint.\n\t */\n\tcollectionId: string;\n\t/**\n\t * The value of the `id` attribute on the container element that this 'show more'\n\t * button sits beneath. The main container is server-side rendered, so this show more\n\t * button needs to access its contents on the client side so that we can check whether\n\t * any of the stories received from the `show-more` endpoint are already being displayed\n\t * in the main container. (This can happen due to a lag between when the page is SSRd\n\t * and when the user clicks the 'show more' button.)\n\t */\n\tsectionId: string;\n\tshowAge: boolean;\n\tajaxUrl: string;\n\teditionId: EditionId;\n\tcontainerPalette?: DCRContainerPalette;\n\tdiscussionApiUrl: string;\n};\n\nexport const ShowMore = ({\n\ttitle,\n\tpageId,\n\tsectionId,\n\tcollectionId,\n\tshowAge,\n\tajaxUrl,\n\teditionId,\n\tcontainerPalette,\n\tdiscussionApiUrl,\n}: Props) => {\n\tconst [existingCardLinks, setExistingCardLinks] = useState<string[]>([]);\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\t/**\n\t * Store the URLs of the cards in the main container for this button, to\n\t * allow us to filter out duplicated stories when we load them from the\n\t * 'show-more' endpoint.\n\t */\n\tuseEffect(() => {\n\t\tconst container = document.getElementById(`container-${sectionId}`);\n\t\tconst containerLinks = Array.from(\n\t\t\tcontainer?.querySelectorAll('a') ?? [],\n\t\t)\n\t\t\t.map((element) => element.attributes.getNamedItem('href')?.value)\n\t\t\t.filter(isNonNullable);\n\n\t\tsetExistingCardLinks(containerLinks);\n\t}, [sectionId]);\n\n\t/** We only pass an actual URL to SWR when 'showMore' is true.\n\t * Toggling 'isOpen' will trigger a re-render\n\t *   @see https://swr.vercel.app/docs/conditional-fetching#conditional\n\t */\n\tconst url = isOpen\n\t\t? `${ajaxUrl}/${pageId}/show-more/${collectionId}.json?dcr=true`\n\t\t: undefined;\n\tconst { data, error, loading } = useApi<FEFrontCard[]>(url);\n\n\tconst cards =\n\t\tdata &&\n\t\tenhanceCards(data, {\n\t\t\tcardInTagPage: false,\n\t\t\teditionId,\n\t\t\tdiscussionApiUrl,\n\t\t}).filter((card) => !existingCardLinks.includes(card.url));\n\n\tconst showMoreContainerId = `show-more-${collectionId}`;\n\n\tuseEffect(() => {\n\t\t/**\n\t\t * Focus the first of the new cards when they're loaded in.\n\t\t * There's no need to check `isOpen` here because if `isOpen` is\n\t\t * `false` then `filteredData` will be `undefined`.\n\t\t * */\n\n\t\tconst [card] = cards ?? [];\n\t\tif (card) {\n\t\t\tconst maybeFirstCard = document.querySelector(\n\t\t\t\t`#${showMoreContainerId} [data-link-name=\"${card.dataLinkName}\"]`,\n\t\t\t);\n\t\t\tif (maybeFirstCard instanceof HTMLElement) {\n\t\t\t\tmaybeFirstCard.focus();\n\t\t\t}\n\t\t}\n\t}, [cards, showMoreContainerId]);\n\n\treturn (\n\t\t<>\n\t\t\t<div id={showMoreContainerId} aria-live=\"polite\">\n\t\t\t\t{cards && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\tpadding-top: ${space[2]}px;\n\t\t\t\t\t\t`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<UL direction=\"row\" wrapCards={true}>\n\t\t\t\t\t\t\t{cards.map((card, cardIndex) => {\n\t\t\t\t\t\t\t\tconst columns = 3;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<LI\n\t\t\t\t\t\t\t\t\t\tkey={card.url}\n\t\t\t\t\t\t\t\t\t\tpercentage=\"33.333%\"\n\t\t\t\t\t\t\t\t\t\tstretch={cards.length % columns !== 1}\n\t\t\t\t\t\t\t\t\t\tpadSides={true}\n\t\t\t\t\t\t\t\t\t\tshowDivider={cardIndex % columns !== 0}\n\t\t\t\t\t\t\t\t\t\toffsetBottomPaddingOnDivider={shouldPadWrappableRows(\n\t\t\t\t\t\t\t\t\t\t\tcardIndex,\n\t\t\t\t\t\t\t\t\t\t\tcards.length -\n\t\t\t\t\t\t\t\t\t\t\t\t(cards.length % columns),\n\t\t\t\t\t\t\t\t\t\t\tcolumns,\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FrontCard\n\t\t\t\t\t\t\t\t\t\t\ttrail={card}\n\t\t\t\t\t\t\t\t\t\t\timage={undefined}\n\t\t\t\t\t\t\t\t\t\t\tavatarUrl={undefined}\n\t\t\t\t\t\t\t\t\t\t\tslideshowImages={undefined}\n\t\t\t\t\t\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\t\t\t\t\t\theadlineSizes={{\n\t\t\t\t\t\t\t\t\t\t\t\tdesktop: 'xxsmall',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\timageLoading=\"eager\"\n\t\t\t\t\t\t\t\t\t\t\tabsoluteServerTimes={false}\n\t\t\t\t\t\t\t\t\t\t\ttrailTextColour={palette(\n\t\t\t\t\t\t\t\t\t\t\t\t'--card-headline',\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</LI>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</UL>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tcss={[\n\t\t\t\t\tcss`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t`,\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"xsmall\"\n\t\t\t\t\ticon={isOpen ? <SvgCross /> : <SvgPlus />}\n\t\t\t\t\tisLoading={loading}\n\t\t\t\t\ticonSide=\"left\"\n\t\t\t\t\tonClick={() => setIsOpen(!isOpen)}\n\t\t\t\t\tcssOverrides={css`\n\t\t\t\t\t\tmargin-top: ${space[4]}px;\n\t\t\t\t\t\tmargin-right: 10px;\n\t\t\t\t\t\tcolor: ${sourcePalette.neutral[100]};\n\t\t\t\t\t\tbackground-color: ${sourcePalette.neutral[7]};\n\t\t\t\t\t\tborder-color: ${sourcePalette.neutral[7]};\n\t\t\t\t\t\t&:hover {\n\t\t\t\t\t\t\tbackground-color: ${sourcePalette.neutral[46]};\n\t\t\t\t\t\t\tborder-color: ${sourcePalette.neutral[46]};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* On smaller screens, button text overflows the container so we wrap to prevent it */\n\t\t\t\t\t\t${until.phablet} {\n\t\t\t\t\t\t\twhite-space: normal;\n\t\t\t\t\t\t\theight: unset;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t\taria-controls={showMoreContainerId}\n\t\t\t\t\taria-expanded={isOpen && !loading}\n\t\t\t\t\taria-describedby={`show-more-button-${collectionId}-description`}\n\t\t\t\t\tdata-link-name=\"more\"\n\t\t\t\t>\n\t\t\t\t\t{decideButtonText({\n\t\t\t\t\t\tisOpen,\n\t\t\t\t\t\tloading,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t})}\n\t\t\t\t</Button>\n\t\t\t\t<span\n\t\t\t\t\tid={`show-more-button-${collectionId}-description`}\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\tLoads more stories and moves focus to first new story.\n\t\t\t\t</span>\n\t\t\t\t{error && (\n\t\t\t\t\t<InlineError\n\t\t\t\t\t\tcssOverrides={css`\n\t\t\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\t\t\tpadding-top: 18px;\n\t\t\t\t\t\t`}\n\t\t\t\t\t>\n\t\t\t\t\t\tSorry, failed to load more stories. Retrying in a few\n\t\t\t\t\t\tseconds.\n\t\t\t\t\t</InlineError>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import { LI } from '../components/Card/components/LI';\nimport { UL } from '../components/Card/components/UL';\nimport type { Loading } from '../components/CardPicture';\nimport type {\n\tDCRContainerPalette,\n\tDCRFrontCard,\n\tDCRGroupedTrails,\n} from '../types/front';\nimport type { TrailType } from '../types/trails';\nimport {\n\tCard100Media100,\n\tCard100Media75,\n\tCard25Media25,\n\tCard25Media25Tall,\n\tCard50Media50,\n\tCard50Media50Tall,\n\tCard75Media50Left,\n\tCard75Media50Right,\n\tCardDefaultMedia,\n} from './cardWrappers';\n\n/**\n * A place for shared slices which are used across multiple dynamic/ containers\n *\n * ASCII Art Guide:\n * '#'            => Image\n * ' ' | '_'      => text / trail / supporting content\n */\n\n/* ._________________._________________.\n * |#################|#################|\n * |#################|#################|\n * |_________________|_________________|\n */\nexport const Card50_Card50 = ({\n\tcards,\n\tcontainerPalette,\n\tshowAge,\n\tabsoluteServerTimes,\n\timageLoading,\n}: {\n\tcards: DCRFrontCard[];\n\timageLoading: Loading;\n\tcontainerPalette?: DCRContainerPalette;\n\tshowAge?: boolean;\n\tabsoluteServerTimes: boolean;\n}) => {\n\tconst cards50 = cards.slice(0, 2);\n\n\treturn (\n\t\t<UL direction=\"row\" padBottom={true}>\n\t\t\t{cards50.map((trail, index) => (\n\t\t\t\t<LI\n\t\t\t\t\tkey={trail.url}\n\t\t\t\t\tpercentage=\"50%\"\n\t\t\t\t\tpadSides={true}\n\t\t\t\t\tshowDivider={index !== 0}\n\t\t\t\t>\n\t\t\t\t\t<Card50Media50Tall\n\t\t\t\t\t\ttrail={trail}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\t\t</UL>\n\t);\n};\n\n/* ._________________________._________.\n * |         ################|#########|\n * |         ################|#########|\n * |_________################|_________|\n */\nexport const Card75_Card25 = ({\n\tcards,\n\tcontainerPalette,\n\tshowAge,\n\tabsoluteServerTimes,\n\timageLoading,\n}: {\n\tcards: DCRFrontCard[];\n\timageLoading: Loading;\n\tcontainerPalette?: DCRContainerPalette;\n\tshowAge?: boolean;\n\tabsoluteServerTimes: boolean;\n}) => {\n\tconst card75 = cards.slice(0, 1);\n\tconst card25 = cards.slice(1, 2);\n\n\treturn (\n\t\t<UL direction=\"row\" padBottom={true}>\n\t\t\t{card75.map((trail) => (\n\t\t\t\t<LI key={trail.url} percentage=\"75%\" padSides={true}>\n\t\t\t\t\t<Card75Media50Right\n\t\t\t\t\t\ttrail={trail}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\t\t\t{card25.map((trail) => (\n\t\t\t\t<LI\n\t\t\t\t\tkey={trail.url}\n\t\t\t\t\tpercentage=\"25%\"\n\t\t\t\t\tpadSides={true}\n\t\t\t\t\tshowDivider={true}\n\t\t\t\t>\n\t\t\t\t\t<Card25Media25\n\t\t\t\t\t\ttrail={trail}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\t\t</UL>\n\t);\n};\n\n/* ._________________________._________.\n * |#########|###############          |\n * |#########|###############          |\n * |_________|###############__________|\n */\nexport const Card25_Card75 = ({\n\tcards,\n\tcontainerPalette,\n\tshowAge,\n\tabsoluteServerTimes,\n\timageLoading,\n}: {\n\tcards: DCRFrontCard[];\n\timageLoading: Loading;\n\tcontainerPalette?: DCRContainerPalette;\n\tshowAge?: boolean;\n\tabsoluteServerTimes: boolean;\n}) => {\n\tconst card25 = cards.slice(0, 1);\n\tconst card75 = cards.slice(1, 2);\n\n\treturn (\n\t\t<UL direction=\"row\" padBottom={true}>\n\t\t\t{card25.map((trail) => (\n\t\t\t\t<LI key={trail.url} percentage=\"25%\" padSides={true}>\n\t\t\t\t\t<Card25Media25\n\t\t\t\t\t\ttrail={trail}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\t\t\t{card75.map((trail) => (\n\t\t\t\t<LI\n\t\t\t\t\tkey={trail.url}\n\t\t\t\t\tpercentage=\"75%\"\n\t\t\t\t\tpadSides={true}\n\t\t\t\t\tshowDivider={true}\n\t\t\t\t>\n\t\t\t\t\t<Card75Media50Left\n\t\t\t\t\t\ttrail={trail}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\t\t</UL>\n\t);\n};\n\n/* ._________________.________.________.\n * |#################|########|########|\n * |                 |        |        |\n * |_________________|________|________|\n */\nexport const Card50_Card25_Card25 = ({\n\tcards,\n\tcontainerPalette,\n\tshowAge,\n\tabsoluteServerTimes,\n\timageLoading,\n}: {\n\tcards: DCRFrontCard[];\n\timageLoading: Loading;\n\tcontainerPalette?: DCRContainerPalette;\n\tshowAge?: boolean;\n\tabsoluteServerTimes: boolean;\n}) => {\n\tconst card50 = cards.slice(0, 1);\n\tconst cards25 = cards.slice(1, 3);\n\n\treturn (\n\t\t<UL direction=\"row\" padBottom={true}>\n\t\t\t{card50.map((trail) => (\n\t\t\t\t<LI key={trail.url} percentage=\"50%\" padSides={true}>\n\t\t\t\t\t<Card50Media50\n\t\t\t\t\t\ttrail={trail}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\n\t\t\t{cards25.map((trail) => (\n\t\t\t\t<LI\n\t\t\t\t\tkey={trail.url}\n\t\t\t\t\tpercentage=\"25%\"\n\t\t\t\t\tpadSides={true}\n\t\t\t\t\tshowDivider={true}\n\t\t\t\t>\n\t\t\t\t\t<Card25Media25Tall\n\t\t\t\t\t\ttrail={trail}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\t\t</UL>\n\t);\n};\n\n/* ._________________.\n * |#################|\n * |#################|\n * |#################|\n * |_________________|\n */\nexport const Card100PictureTop = ({\n\tcards,\n\tshowAge,\n\tcontainerPalette,\n\timageLoading,\n\tabsoluteServerTimes,\n}: {\n\tcards: DCRFrontCard[];\n\timageLoading: Loading;\n\tshowAge?: boolean;\n\tabsoluteServerTimes: boolean;\n\tcontainerPalette?: DCRContainerPalette;\n}) => {\n\tconst card100 = cards.slice(0, 1);\n\n\treturn (\n\t\t<UL padBottom={true}>\n\t\t\t{card100.map((card) => (\n\t\t\t\t<LI key={card.url} percentage=\"100%\" padSides={true}>\n\t\t\t\t\t<Card100Media100\n\t\t\t\t\t\ttrail={card}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\t\t</UL>\n\t);\n};\n\nexport const Card25_Card25_Card25_Card25 = ({\n\tcards,\n\tshowAge,\n\tabsoluteServerTimes,\n\tcontainerPalette,\n\timageLoading,\n}: {\n\tcards: DCRFrontCard[];\n\timageLoading: Loading;\n\tshowAge?: boolean;\n\tabsoluteServerTimes: boolean;\n\tcontainerPalette?: DCRContainerPalette;\n}) => {\n\tif (cards.length < 4) return null;\n\n\tconst bigs = cards.slice(0, 4);\n\n\treturn (\n\t\t<UL direction=\"row\" wrapCards={true}>\n\t\t\t{bigs.map((card, cardIndex) => {\n\t\t\t\treturn (\n\t\t\t\t\t<LI\n\t\t\t\t\t\tkey={card.url}\n\t\t\t\t\t\tpercentage={`25%`}\n\t\t\t\t\t\tpadSides={true}\n\t\t\t\t\t\tshowDivider={cardIndex !== 0}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Card25Media25\n\t\t\t\t\t\t\ttrail={card}\n\t\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</LI>\n\t\t\t\t);\n\t\t\t})}\n\t\t</UL>\n\t);\n};\n\nexport const ColumnOfCards50_Card25_Card25 = ({\n\tcards,\n\tshowAge,\n\tabsoluteServerTimes,\n\tcontainerPalette,\n\timageLoading,\n}: {\n\tcards: DCRFrontCard[];\n\timageLoading: Loading;\n\tshowAge?: boolean;\n\tabsoluteServerTimes: boolean;\n\tcontainerPalette?: DCRContainerPalette;\n}) => {\n\tconst bigs = cards.slice(0, 2).reverse();\n\tconst remaining = cards.slice(2);\n\n\treturn (\n\t\t<UL direction=\"row-reverse\">\n\t\t\t{bigs.map((big) => {\n\t\t\t\treturn (\n\t\t\t\t\t<LI\n\t\t\t\t\t\tpercentage=\"25%\"\n\t\t\t\t\t\tpadSides={true}\n\t\t\t\t\t\tshowDivider={true}\n\t\t\t\t\t\tkey={big.url}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Card25Media25Tall\n\t\t\t\t\t\t\ttrail={big}\n\t\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</LI>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<LI percentage=\"50%\">\n\t\t\t\t<UL direction=\"row\" wrapCards={true}>\n\t\t\t\t\t{remaining.map((card) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LI\n\t\t\t\t\t\t\t\tpercentage=\"100%\"\n\t\t\t\t\t\t\t\tkey={card.url}\n\t\t\t\t\t\t\t\tpadSides={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CardDefaultMedia\n\t\t\t\t\t\t\t\t\ttrail={card}\n\t\t\t\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</LI>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</UL>\n\t\t\t</LI>\n\t\t</UL>\n\t);\n};\n\n/* .___________________________________.\n * |       ############################|\n * |       ############################|\n * |       ############################|\n * |_______############################|\n */\nexport const Card100PictureRight = ({\n\tcards,\n\tshowAge,\n\tabsoluteServerTimes,\n\tcontainerPalette,\n\timageLoading,\n}: {\n\tcards: DCRFrontCard[];\n\timageLoading: Loading;\n\tshowAge?: boolean;\n\tabsoluteServerTimes: boolean;\n\tcontainerPalette?: DCRContainerPalette;\n}) => {\n\tconst card100 = cards.slice(0, 1);\n\n\treturn (\n\t\t<UL padBottom={true}>\n\t\t\t{card100.map((card) => (\n\t\t\t\t<LI key={card.url} percentage=\"100%\" padSides={true}>\n\t\t\t\t\t<Card100Media75\n\t\t\t\t\t\ttrail={card}\n\t\t\t\t\t\tcontainerPalette={containerPalette}\n\t\t\t\t\t\tshowAge={showAge}\n\t\t\t\t\t\tabsoluteServerTimes={absoluteServerTimes}\n\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t/>\n\t\t\t\t</LI>\n\t\t\t))}\n\t\t</UL>\n\t);\n};\n\n/**\n * Abstraction to decide whether to show padding on wrapped rows of cards.\n *\n * For three columns, We have different results with 5 or 9 cards\n *\n * @example - All but last 2\n * ```\n * ┌───┐ ┌───┐ ┌───┐\n * │Pad│ │Pad│ │Pad│\n * └───┘ └───┘ └───┘\n * ┌───┐ ┌───┐\n * │No!│ │No!│\n * └───┘ └───┘\n * ```\n * - All but last 3\n * ```\n * ┌───┐ ┌───┐ ┌───┐\n * │Pad│ │Pad│ │Pad│\n * └───┘ └───┘ └───┘\n * ┌───┐ ┌───┐ ┌───┐\n * │Pad│ │Pad│ │Pad│\n * └───┘ └───┘ └───┘\n * ┌───┐ ┌───┐ ┌───┐\n * │No!│ │No!│ │No!│\n * └───┘ └───┘ └───┘\n * ```\n *\n * @param index - Index of the current card\n * @param totalCards - Total number of cards being shown\n * @param cardsPerRow - No. of cards in each row (if full)\n */\nexport const shouldPadWrappableRows = (\n\tindex: number,\n\ttotalCards: number,\n\tcardsPerRow: number,\n): boolean => index < totalCards - (totalCards % cardsPerRow || cardsPerRow);\n\n/**\n * Filter trails an object of grouped trails, removing any trails included in the\n * 'filter' array\n *\n * @param opts.groupedTrails Object of grouped trails we want to filter cards from\n * @param opts.filter Array of cards we want to filter against\n * @returns grouped trails object filtered against the 'filter' array\n */\nexport const filterGroupedTrails = ({\n\tgroupedTrails,\n\tfilter,\n}: {\n\tgroupedTrails: DCRGroupedTrails;\n\tfilter: TrailType[];\n}): DCRGroupedTrails => {\n\tconst shouldFilterCard = (card: TrailType) =>\n\t\tfilter.findIndex((filterCard) => filterCard.url === card.url) === -1;\n\treturn {\n\t\tsnap: groupedTrails.snap.filter(shouldFilterCard),\n\t\tsplash: groupedTrails.splash.filter(shouldFilterCard),\n\t\thuge: groupedTrails.huge.filter(shouldFilterCard),\n\t\tveryBig: groupedTrails.veryBig.filter(shouldFilterCard),\n\t\tbig: groupedTrails.big.filter(shouldFilterCard),\n\t\tstandard: groupedTrails.standard.filter(shouldFilterCard),\n\t};\n};\n","import type { TagType } from '../types/tag';\n\ninterface ContributorTag extends TagType {\n\ttype: 'Contributor';\n}\n\nexport const isContributor = (tag: TagType): tag is ContributorTag =>\n\ttag.type === 'Contributor';\n\n/**\n * Get the sole contributor on an article.\n *\n * This can be used to display more information about them,\n * such as their picture, bio or social media handle.\n *\n * An article has a sole contributor only if all of the following are true:\n * - there is a byline which is not an empty string\n * - the byline does not include the word “and”\n * - there is a `Contributor` tag whose title is included in the byline\n *\n * @returns A sole contributor if there is one, `undefined` otherwise.\n */\nexport const getSoleContributor = (\n\ttags: TagType[],\n\tbyline: string | undefined,\n): ContributorTag | undefined => {\n\tif (!byline) return undefined;\n\tif (byline.includes(' and ')) return undefined;\n\n\tconst [firstContributor, otherContributor] = tags\n\t\t.filter(isContributor)\n\t\t.filter(({ title }) => byline.includes(title));\n\n\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- we don’t have unchecked indexed access\n\tif (otherContributor) return undefined;\n\n\treturn firstContributor;\n};\n\nexport const getContributorTagsForToken = (\n\ttags: TagType[],\n\ttoken: string,\n): ContributorTag[] => {\n\treturn tags.filter(isContributor).filter((t) => t.title === token);\n};\n\ntype BylineComponent = { token: string; tag: TagType } | string;\n\nexport const getBylineComponentsFromTokens = (\n\ttokens: string[],\n\ttags: TagType[],\n): BylineComponent[] => {\n\tconst [bylineComponents] = tokens.reduce<[BylineComponent[], TagType[]]>(\n\t\t([bylines, remainingTags], token) => {\n\t\t\tconst [firstContributorTag] = getContributorTagsForToken(\n\t\t\t\tremainingTags,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\tif (!firstContributorTag) {\n\t\t\t\treturn [bylines.concat(token), remainingTags];\n\t\t\t}\n\n\t\t\t// We've used this tag, so remove it from the list of possible tags.\n\t\t\t// This ensures we don't use the same contributor tag when two identical\n\t\t\t// names with different contributor tags are used.\n\t\t\tconst newRemainingTags = remainingTags.filter(\n\t\t\t\t(tag) => !(tag.id === firstContributorTag.id),\n\t\t\t);\n\n\t\t\treturn [\n\t\t\t\tbylines.concat({ tag: firstContributorTag, token }),\n\t\t\t\tnewRemainingTags,\n\t\t\t];\n\t\t},\n\t\t[[], tags],\n\t);\n\n\treturn bylineComponents;\n};\n","import type { FEFrontCardStyle } from '../types/front';\nimport type { RichLinkCardType } from '../types/layout';\nimport {\n\tArticleDesign,\n\ttype ArticleFormat,\n\tArticleSpecial,\n} from './articleFormat';\n\n/**\n * TODO: missing \"podcast\"\n */\nconst getLinkType = (\n\t{ theme, design }: ArticleFormat,\n\tcardStyle?: FEFrontCardStyle,\n): RichLinkCardType => {\n\tif (cardStyle === 'ExternalLink') return 'external';\n\tif (cardStyle === 'Feature') return 'feature';\n\n\tswitch (theme) {\n\t\tcase ArticleSpecial.SpecialReport:\n\t\t\treturn 'special-report';\n\t\tdefault:\n\t\t\tswitch (design) {\n\t\t\t\tcase ArticleDesign.Analysis:\n\t\t\t\t\treturn 'analysis';\n\t\t\t\tcase ArticleDesign.LiveBlog:\n\t\t\t\t\treturn 'live';\n\t\t\t\tcase ArticleDesign.DeadBlog:\n\t\t\t\t\treturn 'dead';\n\t\t\t\tcase ArticleDesign.Feature:\n\t\t\t\t\treturn 'feature';\n\t\t\t\tcase ArticleDesign.Editorial:\n\t\t\t\t\treturn 'editorial';\n\t\t\t\tcase ArticleDesign.Comment:\n\t\t\t\t\treturn 'comment';\n\t\t\t\tcase ArticleDesign.Gallery:\n\t\t\t\tcase ArticleDesign.Audio:\n\t\t\t\tcase ArticleDesign.Video:\n\t\t\t\t\treturn 'media';\n\t\t\t\tcase ArticleDesign.Review:\n\t\t\t\t\treturn 'review';\n\t\t\t\tcase ArticleDesign.Letter:\n\t\t\t\t\treturn 'letters';\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'news';\n\t\t\t}\n\t}\n};\n\nexport type Group = `${number}` | `${number}+`;\n\n/**\n * Get the `data-link-name` attribute for a card.\n * Used by Ophan for understanding reader journeys. E.g:\n * - `feature | card-2+ | card-@1`\n * - `news | group-0 | card-@5`\n *\n * @see {JSX.IntrinsicAttributes}\n */\nexport const getDataLinkNameCard = (\n\tformat: ArticleFormat,\n\tgroup: Group,\n\tindex: number,\n\tcardStyle?: FEFrontCardStyle,\n): string =>\n\t[\n\t\tgetLinkType(format, cardStyle),\n\t\t`group-${group}`,\n\t\t`card-@${Math.max(index + 1, 1)}`,\n\t].join(' | ');\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { from } from '@guardian/source/foundations';\n\nexport const verticalDivider = (\n\tverticalDividerColour: string,\n): SerializedStyles => {\n\treturn css`\n\t\t${from.tablet} {\n\t\t\t:before {\n\t\t\t\tcontent: '';\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 1px;\n\t\t\t\theight: 100%;\n\t\t\t\tborder-left: 1px solid ${verticalDividerColour};\n\t\t\t}\n\t\t}\n\t`;\n};\n"],"names":["GAP_SIZE","space","liStyles","css","sidePaddingStylesMobile","override","until","tablet","snapAlignStartStyles","decideDivider","offsetBottomPaddingOnDivider","paddingSize","verticalDividerColour","bottomPaddingSize","from","verticalDividerWithBottomOffset","verticalDivider","LI","children","percentage","stretch","showDivider","padSides","padSidesOverride","padSidesOnMobile","padSidesMobileOverride","snapAlignStart","palette","sizeStyles","sizeStyle","decideSize","li","ulStyles","direction","spacingPx","wrapStyles","marginBottom","topBarStyles","splitTopBar","UL","padBottom","wrapCards","showTopBar","hasLargeSpacing","getSpacingPx","ul","FrontCard","props","trail","cardProps","defaultProps","linkTo","url","format","headlineText","headline","byline","showByline","showQuotedHeadline","webPublicationDate","kickerText","showPulsingDot","design","ArticleDesign","LiveBlog","showClock","image","isCrossword","canPlayInline","starRating","dataLinkName","snapData","discussionApiUrl","discussionId","avatarUrl","mainMedia","isExternalLink","branding","slideshowImages","showLivePlayable","showMainVideo","galleryCount","podcastImage","Card","enhanceSnaps","snap","dcrSnap","embedCss","replace","decideAvatarUrl","tags","soleContributor","getSoleContributor","bylineLargeImageUrl","undefined","decideUrl","isUndefined","properties","webUrl","type","URL","pathname","_","href","header","decideKicker","cardInTagPage","pageId","isBreaking","includes","seriesOrBlogKicker","name","kicker","item","decideSlideshowImages","assets","imageSlideshowReplace","length","getActiveMediaAtom","mediaAtom","asset","find","version","activeVersion","platform","id","videoId","duration","title","width","height","origin","source","expired","images","posterImage","allImages","map","fields","Number","decideMedia","Gallery","Audio","Video","enhanceCards","collections","offset","editionId","faciaCard","index","decideFormat","theme","display","group","card","isBoosted","getDataLinkNameCard","cardStyle","maybeContent","tag","tagType","webTitle","twitterHandle","bylineImageUrl","contributorLargeImagePath","enhanceTag","enhanceTags","editionBrandings","editionBranding","edition","imageSrc","imageHide","maybeContentId","trailPicture","podcastFromTags","podcast","src","altText","getPodcastSeriesImage","isContributorTagPage","startsWith","supportingContent","parentFormat","trailText","webPublicationDateOption","Date","toISOString","subLink","linkFormat","supportingContentIsLive","discussion","isCommentable","enriched","boostLevel","elements","mainMediaAtom","mediaAtoms","embedUri","decideButtonText","isOpen","loading","span","visuallyHidden","ShowMore","sectionId","collectionId","showAge","ajaxUrl","containerPalette","existingCardLinks","setExistingCardLinks","useState","setIsOpen","useEffect","container","document","getElementById","containerLinks","Array","querySelectorAll","element","attributes","getNamedItem","value","filter","isNonNullable","data","error","useApi","cards","showMoreContainerId","maybeFirstCard","querySelector","HTMLElement","focus","div","aria-live","cardIndex","totalCards","headlineSizes","desktop","imageLoading","absoluteServerTimes","trailTextColour","Button","size","icon","SvgCross","SvgPlus","isLoading","iconSide","onClick","cssOverrides","sourcePalette","neutral","phablet","aria-controls","aria-expanded","aria-describedby","data-link-name","InlineError","isContributor","firstContributor","otherContributor","getBylineComponentsFromTokens","tokens","bylineComponents","reduce","token","bylines","remainingTags","firstContributorTag","t","getContributorTagsForToken","concat","newRemainingTags","getLinkType","ArticleSpecial","SpecialReport","Analysis","DeadBlog","Feature","Editorial","Comment","Review","Letter","Math","max","join"],"sourceRoot":""}