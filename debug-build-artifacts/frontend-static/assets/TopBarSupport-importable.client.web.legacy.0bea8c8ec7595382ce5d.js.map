{"version":3,"file":"TopBarSupport-importable.client.web.legacy.0bea8c8ec7595382ce5d.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/TopBarSupport.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/lib/setAutomat.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAuthStatus.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCountryCode.ts","webpack://@guardian/dotcom-rendering/./src/lib/usePageViewId.ts"],"sourcesContent":["import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n/**\n * @file\n * This file was largely lifted from https://github.com/guardian/dotcom-rendering/blob/b3ef504acd00d48e765e0656be5ffbad88981a39/dotcom-rendering/src/components/SupportTheG.importable.tsx\n */\nimport { css } from '@emotion/react';\nimport { getCookie, isUndefined } from '@guardian/libs';\nimport { getHeader } from '@guardian/support-dotcom-components';\nimport { useEffect, useState } from 'react';\nimport { submitComponentEvent } from '../client/ophan/ophan';\nimport { getPurchaseInfo, shouldHideSupportMessaging, } from '../lib/contributions';\nimport { setAutomat } from '../lib/setAutomat';\nimport { useIsSignedIn } from '../lib/useAuthStatus';\nimport { useCountryCode } from '../lib/useCountryCode';\nimport { usePageViewId } from '../lib/usePageViewId';\nimport { useConfig } from './ConfigContext';\nconst headerStyles = css `\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\toverflow-wrap: nowrap;\n`;\nconst ReaderRevenueLinksRemote = ({ countryCode, pageViewId, contributionsServiceUrl, }) => {\n    const [supportHeaderResponse, setSupportHeaderResponse] = useState(null);\n    const [SupportHeader, setSupportHeader] = useState(null);\n    const isSignedIn = useIsSignedIn();\n    const { renderingTarget } = useConfig();\n    useEffect(() => {\n        if (isUndefined(countryCode) || isSignedIn === 'Pending') {\n            return;\n        }\n        const hideSupportMessagingForUser = shouldHideSupportMessaging(isSignedIn);\n        if (hideSupportMessagingForUser === 'Pending') {\n            // We don't yet know the user's supporter status\n            return;\n        }\n        setAutomat();\n        const requestData = {\n            tracking: {\n                ophanPageId: pageViewId,\n                platformId: 'GUARDIAN_WEB',\n                referrerUrl: window.location.origin + window.location.pathname,\n                clientName: 'dcr',\n            },\n            targeting: {\n                showSupportMessaging: !hideSupportMessagingForUser,\n                countryCode,\n                mvtId: Number(getCookie({ name: 'GU_mvt_id', shouldMemoize: true })),\n                purchaseInfo: getPurchaseInfo(),\n                isSignedIn,\n            },\n        };\n        getHeader(contributionsServiceUrl, requestData)\n            .then((response) => {\n            if (!response.data) {\n                return null;\n            }\n            const { module } = response.data;\n            setSupportHeaderResponse(module);\n            return (module.name === 'SignInPromptHeader'\n                ? /* webpackChunkName: \"sign-in-prompt-header\" */\n                    import(`./marketing/header/SignInPromptHeader`)\n                : /* webpackChunkName: \"header\" */\n                    import(`./marketing/header/Header`)).then((headerModule) => {\n                setSupportHeader(() => headerModule[module.name] ?? null);\n            });\n        })\n            .catch((error) => {\n            const msg = `Error importing RR header links: ${String(error)}`;\n            console.log(msg);\n            window.guardian.modules.sentry.reportError(new Error(msg), 'rr-header-links');\n        });\n    }, [countryCode, isSignedIn, contributionsServiceUrl, pageViewId]);\n    if (SupportHeader !== null && supportHeaderResponse) {\n        return (_jsx(\"div\", { css: headerStyles, children: _jsx(SupportHeader, { submitComponentEvent: (componentEvent) => void submitComponentEvent(componentEvent, renderingTarget), ...supportHeaderResponse.props }) }));\n    }\n    return null;\n};\n/**\n * Shows support messaging and a CTA (call to action) button in the top bar\n * Messaging comes from the RRCP (reader revenue control panel) via the\n * contributions service\n *\n * ## Why does this need to be an Island?\n *\n * Reader revenue links are entirely client-side and specific to a unique\n * page view. They also relying on getting a country code.\n *\n * ---\n *\n * (No visual story exists)\n */\nexport const TopBarSupport = ({ contributionsServiceUrl }) => {\n    const { renderingTarget } = useConfig();\n    const countryCode = useCountryCode('support-the-Guardian');\n    const pageViewId = usePageViewId(renderingTarget);\n    if (isUndefined(countryCode) || isUndefined(pageViewId))\n        return null;\n    return (_jsx(ReaderRevenueLinksRemote, { countryCode: countryCode, pageViewId: pageViewId, contributionsServiceUrl: contributionsServiceUrl }));\n};\n","import { getCookie, isUndefined, onConsentChange, storage, } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\n// User Attributes API cookies (created on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n// Support Frontend cookie (created when a contribution is made)\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE = 'gu.contributions.contrib-timestamp';\n//  Local storage keys\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_KEY = 'gu.noRRBanner';\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n// Returns true if we should hide support messaging because the user is a supporter.\n// Checks the cookie that is set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nexport const hasSupporterCookie = (isSignedIn) => {\n    const cookie = getCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE });\n    switch (cookie) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            /**\n             * If cookie is not present but user is signed in, we do not want to show any messaging.\n             * This is because of a race condition on the first page view after signing in, where\n             * we may be awaiting the response from the API to find out if they're a supporter.\n             */\n            if (isSignedIn) {\n                return 'Pending';\n            }\n            else {\n                return false;\n            }\n    }\n};\n// looks at the SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (set by support-frontend when making one-off contribution)\n// and returns a Unix epoch int of the date if it exists.\nexport const getLastOneOffContributionTimestamp = () => {\n    // Support cookies - expects Unix epoch\n    const contributionDateFromSupport = getCookie({\n        name: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n    });\n    if (!contributionDateFromSupport) {\n        return undefined;\n    }\n    // Parse dates into common a number\n    const parsedDateFromSupport = contributionDateFromSupport\n        ? parseInt(contributionDateFromSupport, 10)\n        : 0;\n    return parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\nconst dateDiffDays = (from, to) => {\n    const oneDayMs = 1000 * 60 * 60 * 24;\n    const diffMs = to - from;\n    return Math.floor(diffMs / oneDayMs);\n};\nconst AskPauseDays = 90;\nexport const isRecentOneOffContributor = () => {\n    const lastContributionDate = getLastOneOffContributionTimestamp();\n    if (!isUndefined(lastContributionDate)) {\n        const now = Date.now();\n        return dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n    }\n    return false;\n};\nexport const shouldHideSupportMessaging = (isSignedIn) => {\n    const hasCookie = hasSupporterCookie(isSignedIn);\n    if (hasCookie === 'Pending') {\n        return 'Pending';\n    }\n    else {\n        return hasCookie || isRecentOneOffContributor();\n    }\n};\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\nexport const hasArticleCountOptOutCookie = () => getCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\nconst removeWeeklyArticleCountsFromLocalStorage = () => storage.local.remove(WEEKLY_ARTICLE_COUNT_KEY);\nexport const hasCmpConsentForWeeklyArticleCount = () => {\n    return new Promise((resolve) => {\n        if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n            resolve(true);\n        }\n        onConsentChange(({ usnat, tcfv2, aus }) => {\n            if (usnat ?? aus) {\n                resolve(true);\n            }\n            else if (tcfv2) {\n                const hasRequiredConsents = REQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every((consent) => tcfv2.consents[consent]);\n                if (!hasRequiredConsents) {\n                    removeWeeklyArticleCountsFromLocalStorage();\n                }\n                resolve(hasRequiredConsents);\n            }\n        });\n    });\n};\nexport const hasOptedOutOfArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\nexport const hasOptedOutOfWeeklyArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = () => {\n    const [hasOptedOut, setHasOptedOut] = useState('Pending');\n    useEffect(() => {\n        hasOptedOutOfArticleCount()\n            .then(setHasOptedOut)\n            .catch(() => setHasOptedOut(true));\n    }, []);\n    return hasOptedOut;\n};\nexport const hasCmpConsentForBrowserId = () => new Promise((resolve) => {\n    if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n        resolve(true);\n    }\n    onConsentChange(({ usnat, tcfv2, aus }) => {\n        if (usnat ?? aus) {\n            resolve(true);\n        }\n        else if (tcfv2) {\n            const hasRequiredConsents = REQUIRED_CONSENTS_FOR_BROWSER_ID.every((consent) => tcfv2.consents[consent]);\n            resolve(hasRequiredConsents);\n        }\n    });\n});\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = () => !!storage.local.get(NO_RR_BANNER_KEY);\nexport const setLocalNoBannerCachePeriod = (now = Date.now()) => storage.local.set(NO_RR_BANNER_KEY, true, now + twentyMins);\n// Returns true if banner was closed in the last hour\nconst ONE_HOUR_IN_MS = 1000 * 60 * 60;\nexport const recentlyClosedBanner = (lastClosedAt, now = Date.now()) => {\n    if (lastClosedAt) {\n        return now - new Date(lastClosedAt).getTime() < ONE_HOUR_IN_MS;\n    }\n    return false;\n};\nexport const getContributionsServiceUrl = (config) => process.env.SDC_URL ?? config.contributionsServiceUrl;\nexport const getPurchaseInfo = () => {\n    const purchaseInfoRaw = getCookie({\n        name: 'GU_CO_COMPLETE',\n        shouldMemoize: true,\n    });\n    if (!purchaseInfoRaw) {\n        return undefined;\n    }\n    let purchaseInfo;\n    try {\n        purchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n    }\n    catch { } // eslint-disable-line no-empty -- silently handle error\n    return purchaseInfo;\n};\n","import * as emotionReact from '@emotion/react';\nimport * as emotionReactJsxRuntime from '@emotion/react/jsx-runtime';\nimport React from 'react';\nlet hasAutomatBeenSet = false;\nexport const setAutomat = () => {\n    if (!hasAutomatBeenSet) {\n        window.guardian.automat = {\n            emotionReact,\n            emotionReactJsxRuntime,\n            react: React,\n        };\n        hasAutomatBeenSet = true;\n    }\n};\n","import { useEffect, useState } from 'react';\nimport { eitherInOktaTestOrElse, getSignedInStatusWithCookies, getSignedInStatusWithOkta, } from './identity';\n/**\n * A hook to find out if a user is signed in.\n * Returns `'Pending'` until status is known.\n * Always returns `'Pending'` during server-side rendering.\n * */\nexport const useIsSignedIn = () => {\n    const authStatus = useAuthStatus();\n    switch (authStatus.kind) {\n        case 'Pending':\n            return 'Pending';\n        case 'SignedInWithCookies':\n        case 'SignedInWithOkta':\n            return true;\n        case 'SignedOutWithCookies':\n        case 'SignedOutWithOkta':\n            return false;\n    }\n};\nexport const useAuthStatus = () => {\n    const [authStatus, setAuthStatus] = useState({\n        kind: 'Pending',\n    });\n    useEffect(() => {\n        eitherInOktaTestOrElse((oktaAuthState) => {\n            setAuthStatus(getSignedInStatusWithOkta(oktaAuthState));\n        }, () => setAuthStatus(getSignedInStatusWithCookies())).catch((error) => {\n            console.error(error);\n        });\n    }, []);\n    return authStatus;\n};\n","import { isNonNullable } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getLocaleCode } from './getCountryCode';\nexport const useCountryCode = (feature) => {\n    const [countryCode, setCountryCode] = useState();\n    useEffect(() => {\n        getLocaleCode()\n            .then((cc) => {\n            if (isNonNullable(cc))\n                setCountryCode(cc);\n        })\n            .catch((e) => {\n            const msg = `Error fetching country code: ${String(e)}`;\n            window.guardian.modules.sentry.reportError(new Error(msg), feature);\n        });\n    }, [feature]);\n    return countryCode;\n};\n","import { useEffect, useState } from 'react';\nimport { getOphan } from '../client/ophan/ophan';\nexport const usePageViewId = (renderingTarget) => {\n    const [id, setId] = useState();\n    useEffect(() => {\n        getOphan(renderingTarget)\n            .then(({ pageViewId }) => {\n            setId(pageViewId);\n        })\n            .catch(() => {\n            setId('no-page-view-id-available');\n        });\n    }, [renderingTarget]);\n    return id;\n};\n"],"names":["headerStyles","name","styles","ReaderRevenueLinksRemote","_ref","countryCode","pageViewId","contributionsServiceUrl","_useState","useState","_useState2","_slicedToArray","supportHeaderResponse","setSupportHeaderResponse","_useState3","_useState4","SupportHeader","setSupportHeader","isSignedIn","useIsSignedIn","renderingTarget","useConfig","useEffect","isUndefined","hideSupportMessagingForUser","shouldHideSupportMessaging","setAutomat","requestData","tracking","ophanPageId","platformId","referrerUrl","window","location","origin","pathname","clientName","targeting","showSupportMessaging","mvtId","Number","getCookie","shouldMemoize","purchaseInfo","getPurchaseInfo","getHeader","then","response","data","module","headerModule","_headerModule$module$","catch","error","msg","concat","String","console","log","guardian","modules","sentry","reportError","Error","_jsx","css","children","_objectSpread","submitComponentEvent","componentEvent","props","TopBarSupport","_ref2","useCountryCode","usePageViewId","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_KEY","diffMs","lastContributionDate","hasCookie","hasSupporterCookie","contributionDateFromSupport","parseInt","undefined","getLastOneOffContributionTimestamp","Date","now","Math","floor","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasArticleCountOptOutCookie","hasCmpConsentForWeeklyArticleCount","Promise","resolve","onConsentChange","usnat","tcfv2","aus","hasRequiredConsents","every","consent","consents","storage","local","remove","hasOptedOutOfArticleCount","_asyncToGenerator","_regeneratorRuntime","_callee","hasCmpConsent","_context","prev","next","sent","abrupt","stop","apply","arguments","hasOptedOutOfWeeklyArticleCount","_ref3","_callee2","_context2","useHasOptedOutOfArticleCount","hasOptedOut","setHasOptedOut","hasCmpConsentForBrowserId","_ref4","withinLocalNoBannerCachePeriod","get","setLocalNoBannerCachePeriod","length","set","recentlyClosedBanner","lastClosedAt","getTime","purchaseInfoRaw","JSON","parse","decodeURIComponent","_unused","hasAutomatBeenSet","automat","emotionReact","emotionReactJsxRuntime","react","React","useAuthStatus","kind","authStatus","setAuthStatus","eitherInOktaTestOrElse","oktaAuthState","getSignedInStatusWithOkta","getSignedInStatusWithCookies","feature","setCountryCode","getLocaleCode","cc","isNonNullable","e","id","setId","getOphan"],"sourceRoot":""}