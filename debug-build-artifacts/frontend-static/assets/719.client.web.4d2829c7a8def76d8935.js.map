{"version":3,"file":"719.client.web.4d2829c7a8def76d8935.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/FollowButtons.tsx","webpack://@guardian/dotcom-rendering/./src/components/FollowWrapper.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useIsMyGuardianEnabled.ts","webpack://@guardian/dotcom-rendering/./src/lib/useIsBridgetCompatible.ts","webpack://@guardian/dotcom-rendering/./src/lib/thrift/protocols.ts","webpack://@guardian/dotcom-rendering/./src/lib/thrift/nativeConnection.ts","webpack://@guardian/dotcom-rendering/./src/lib/bridgetApi.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { space, textSans15 } from '@guardian/source/foundations';\nimport {\n\tSvgCheckmark,\n\tSvgNotificationsOff,\n\tSvgNotificationsOn,\n\tSvgPlus,\n} from '@guardian/source/react-components';\nimport { palette } from '../palette';\n\ntype IconProps = {\n\tisFollowing?: boolean;\n\ticonIsFollowing: EmotionJSX.Element;\n\ticonIsNotFollowing: EmotionJSX.Element;\n};\n\nconst FollowIcon = ({\n\tisFollowing,\n\ticonIsFollowing,\n\ticonIsNotFollowing,\n}: IconProps) => (\n\t<div\n\t\tcss={css`\n\t\t\tdisplay: flex;\n\t\t\tmargin: 0;\n\t\t\tmargin-right: ${space[1]}px;\n\n\t\t\tborder-radius: 100%;\n\t\t\tborder: 1px solid ${palette('--follow-icon-fill')};\n\n\t\t\tsvg {\n\t\t\t\tmargin: 1px;\n\t\t\t}\n\t\t`}\n\t\tstyle={{\n\t\t\tbackgroundColor: isFollowing\n\t\t\t\t? palette('--follow-icon-fill')\n\t\t\t\t: undefined,\n\t\t\tfill: isFollowing\n\t\t\t\t? palette('--follow-icon-background')\n\t\t\t\t: palette('--follow-icon-fill'),\n\t\t}}\n\t>\n\t\t{isFollowing ? iconIsFollowing : iconIsNotFollowing}\n\t</div>\n);\n\nconst buttonStyles = (withExtraBottomMargin: boolean) => css`\n\t${textSans15}\n\tcolor: ${palette('--follow-text')};\n\tbackground: none;\n\tborder: none;\n\tdisplay: block;\n\tmargin-left: 0;\n\tmin-height: ${space[6]}px;\n\tpadding: 0;\n\ttext-align: left;\n\t${withExtraBottomMargin && `margin-bottom: ${space[2]}px;`}\n`;\n\nconst containerStyles = css`\n\tdisplay: flex;\n\talign-items: center;\n\tcolumn-gap: 0.2em;\n`;\n\nconst notificationsTextSpan = ({\n\tisFollowing,\n}: Pick<ButtonProps, 'isFollowing'>) => (\n\t<span>Notifications {isFollowing ? 'on' : 'off'}</span>\n);\n\nconst tagTextSpan = ({\n\tisFollowing,\n\tdisplayName,\n}: {\n\tisFollowing: boolean;\n\tdisplayName?: string;\n}) => (\n\t<span>\n\t\t{isFollowing ? 'Following' : 'Follow'} {displayName}\n\t</span>\n);\n\n// bridget props\ntype ButtonProps = {\n\tisFollowing: boolean;\n\tonClickHandler: () => void;\n};\n\nexport const FollowNotificationsButton = ({\n\tisFollowing,\n\tonClickHandler,\n\twithExtraBottomMargin = false,\n}: ButtonProps & { withExtraBottomMargin?: boolean }) => {\n\treturn (\n\t\t<button\n\t\t\tonClick={onClickHandler}\n\t\t\ttype=\"button\"\n\t\t\tcss={[buttonStyles(withExtraBottomMargin)]}\n\t\t>\n\t\t\t<span css={containerStyles}>\n\t\t\t\t<FollowIcon\n\t\t\t\t\tisFollowing={isFollowing}\n\t\t\t\t\ticonIsFollowing={<SvgNotificationsOn size=\"xsmall\" />}\n\t\t\t\t\ticonIsNotFollowing={<SvgNotificationsOff size=\"xsmall\" />}\n\t\t\t\t/>\n\t\t\t\t{notificationsTextSpan({ isFollowing })}\n\t\t\t</span>\n\t\t</button>\n\t);\n};\n\nexport const FollowTagButton = ({\n\tisFollowing,\n\tdisplayName = '',\n\tonClickHandler,\n\twithExtraBottomMargin = false,\n}: ButtonProps & { displayName: string; withExtraBottomMargin?: boolean }) => {\n\treturn (\n\t\t<button\n\t\t\tonClick={onClickHandler}\n\t\t\ttype=\"button\"\n\t\t\tcss={[buttonStyles(withExtraBottomMargin)]}\n\t\t>\n\t\t\t<span css={containerStyles}>\n\t\t\t\t<FollowIcon\n\t\t\t\t\tisFollowing={isFollowing}\n\t\t\t\t\ticonIsFollowing={<SvgCheckmark size=\"xsmall\" />}\n\t\t\t\t\ticonIsNotFollowing={<SvgPlus size=\"xsmall\" />}\n\t\t\t\t/>\n\t\t\t\t{tagTextSpan({ isFollowing, displayName })}\n\t\t\t</span>\n\t\t</button>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { Topic } from '@guardian/bridget/Topic';\nimport { isUndefined, log } from '@guardian/libs';\nimport { from, space } from '@guardian/source/foundations';\nimport { useEffect, useState } from 'react';\nimport { getNotificationsClient, getTagClient } from '../lib/bridgetApi';\nimport { useIsBridgetCompatible } from '../lib/useIsBridgetCompatible';\nimport { useIsMyGuardianEnabled } from '../lib/useIsMyGuardianEnabled';\nimport { FollowNotificationsButton, FollowTagButton } from './FollowButtons';\n\ntype Props = {\n\tid: string;\n\tdisplayName: string;\n};\n\nexport const FollowWrapper = ({ id, displayName }: Props) => {\n\tconst [isFollowingNotifications, setIsFollowingNotifications] = useState<\n\t\tboolean | undefined\n\t>(undefined);\n\tconst [isFollowingTag, setIsFollowingTag] = useState<boolean | undefined>(\n\t\tundefined,\n\t);\n\tconst [showFollowTagButton, setShowFollowTagButton] =\n\t\tuseState<boolean>(false);\n\n\tconst isMyGuardianEnabled = useIsMyGuardianEnabled();\n\tconst isBridgetCompatible = useIsBridgetCompatible('2.5.0');\n\n\tisBridgetCompatible && isMyGuardianEnabled && setShowFollowTagButton(true);\n\n\tuseEffect(() => {\n\t\tconst topic = new Topic({\n\t\t\tid,\n\t\t\tdisplayName,\n\t\t\ttype: 'tag-contributor',\n\t\t});\n\n\t\tvoid getNotificationsClient()\n\t\t\t.isFollowing(topic)\n\t\t\t.then(setIsFollowingNotifications)\n\t\t\t.catch((error) => {\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\terror,\n\t\t\t\t\t'bridget-getNotificationsClient-isFollowing-error',\n\t\t\t\t),\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'dotcom',\n\t\t\t\t\t\t'Bridget getNotificationsClient.isFollowing Error:',\n\t\t\t\t\t\terror,\n\t\t\t\t\t);\n\t\t\t});\n\n\t\tvoid getTagClient()\n\t\t\t.isFollowing(topic)\n\t\t\t.then(setIsFollowingTag)\n\t\t\t.catch((error) => {\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\terror,\n\t\t\t\t\t'bridget-getTagClient-isFollowing-error',\n\t\t\t\t),\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'dotcom',\n\t\t\t\t\t\t'Bridget getTagClient.isFollowing Error:',\n\t\t\t\t\t\terror,\n\t\t\t\t\t);\n\t\t\t});\n\t}, [id, displayName]);\n\n\tconst tagHandler = () => {\n\t\tconst topic = new Topic({\n\t\t\tid,\n\t\t\tdisplayName,\n\t\t\ttype: 'tag-contributor',\n\t\t});\n\n\t\tisFollowingTag\n\t\t\t? void getTagClient()\n\t\t\t\t\t.unfollow(topic)\n\t\t\t\t\t.then((success) => {\n\t\t\t\t\t\tsuccess && setIsFollowingTag(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t'bridget-getTagClient-unfollow-error',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t'dotcom',\n\t\t\t\t\t\t\t\t'Bridget getTagClient.unfollow Error:',\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t: void getTagClient()\n\t\t\t\t\t.follow(topic)\n\t\t\t\t\t.then((success) => {\n\t\t\t\t\t\tsuccess && setIsFollowingTag(true);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t'bridget-getTagClient-follow-error',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t'dotcom',\n\t\t\t\t\t\t\t\t'Bridget getTagClient.follow Error:',\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t};\n\n\tconst notificationsHandler = () => {\n\t\tconst topic = new Topic({\n\t\t\tid,\n\t\t\tdisplayName,\n\t\t\ttype: 'tag-contributor',\n\t\t});\n\n\t\tisFollowingNotifications\n\t\t\t? void getNotificationsClient()\n\t\t\t\t\t.unfollow(topic)\n\t\t\t\t\t.then((success) => {\n\t\t\t\t\t\tsuccess && setIsFollowingNotifications(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t'briidget-getNotificationsClient-unfollow-error',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t'dotcom',\n\t\t\t\t\t\t\t\t'Bridget getNotificationsClient.unfollow Error:',\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t: void getNotificationsClient()\n\t\t\t\t\t.follow(topic)\n\t\t\t\t\t.then((success) => {\n\t\t\t\t\t\tsuccess && setIsFollowingNotifications(true);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t'bridget-getNotificationsClient-follow-error',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t'dotcom',\n\t\t\t\t\t\t\t\t'Bridget getNotificationsClient.follow Error:',\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tcss={css`\n\t\t\t\tmin-height: ${space[6]}px;\n\n\t\t\t\t${from.phablet} {\n\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\tflex-direction: column;\n\n\t\t\t\t\tbutton:first-of-type {\n\t\t\t\t\t\tmargin-right: ${space[5]}px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`}\n\t\t>\n\t\t\t{showFollowTagButton && (\n\t\t\t\t<FollowTagButton\n\t\t\t\t\tisFollowing={isFollowingTag ?? false}\n\t\t\t\t\tdisplayName={displayName}\n\t\t\t\t\tonClickHandler={\n\t\t\t\t\t\t!isUndefined(isFollowingTag)\n\t\t\t\t\t\t\t? tagHandler\n\t\t\t\t\t\t\t: () => undefined\n\t\t\t\t\t}\n\t\t\t\t\twithExtraBottomMargin={true}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<FollowNotificationsButton\n\t\t\t\tisFollowing={isFollowingNotifications ?? false}\n\t\t\t\tonClickHandler={\n\t\t\t\t\t!isUndefined(isFollowingNotifications)\n\t\t\t\t\t\t? notificationsHandler\n\t\t\t\t\t\t: () => undefined\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import { log } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getEnvironmentClient } from './bridgetApi';\n\nexport const useIsMyGuardianEnabled = (): boolean | undefined => {\n\tconst [isEnabled, setIsEnabled] = useState<boolean | undefined>(undefined);\n\n\tuseEffect(() => {\n\t\tvoid getEnvironmentClient()\n\t\t\t.isMyGuardianEnabled()\n\t\t\t.then(setIsEnabled)\n\t\t\t.catch((error) => {\n\t\t\t\tsetIsEnabled(false);\n\t\t\t\tlog('dotcom', 'isMyGuardianEnabled check failed:', error);\n\t\t\t});\n\t}, []);\n\treturn isEnabled;\n};\n","import { compare } from 'compare-versions';\nimport { useEffect, useState } from 'react';\nimport { getEnvironmentClient } from './bridgetApi';\n\nexport const useIsBridgetCompatible = (\n\trequiredVersion = '2.0.0',\n): boolean | undefined => {\n\tconst [isCompatible, setIsCompatible] = useState<boolean | undefined>(\n\t\tundefined,\n\t);\n\n\tuseEffect(() => {\n\t\tvoid getEnvironmentClient()\n\t\t\t.nativeThriftPackageVersion()\n\t\t\t.then((bridgetVersion) => {\n\t\t\t\tsetIsCompatible(compare(bridgetVersion, requiredVersion, '>='));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetIsCompatible(false);\n\t\t\t\tconsole.log('nativeThriftPackageVersion', { error });\n\t\t\t});\n\t}, [requiredVersion]);\n\treturn isCompatible;\n};\n","import type {\n\tInt64,\n\tIThriftField,\n\tIThriftList,\n\tIThriftMap,\n\tIThriftMessage,\n\tIThriftSet,\n\tIThriftStruct,\n\tTTransport,\n\tTType,\n} from '@creditkarma/thrift-server-core';\nimport { MessageType, TProtocol } from '@creditkarma/thrift-server-core';\n\nexport abstract class TProtocolDecorator extends TProtocol {\n\tprivate concreteProtocol: TProtocol;\n\n\tconstructor(protocol: TProtocol) {\n\t\tsuper(protocol.getTransport());\n\t\tthis.concreteProtocol = protocol;\n\t}\n\n\tgetTransport(): TTransport {\n\t\treturn this.concreteProtocol.getTransport();\n\t}\n\tflush(): Buffer {\n\t\treturn this.concreteProtocol.flush();\n\t}\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\treturn this.concreteProtocol.writeMessageBegin(name, type, seqid);\n\t}\n\twriteMessageEnd(): void {\n\t\treturn this.concreteProtocol.writeMessageEnd();\n\t}\n\twriteStructBegin(name: string): void {\n\t\treturn this.concreteProtocol.writeStructBegin(name);\n\t}\n\twriteStructEnd(): void {\n\t\treturn this.concreteProtocol.writeStructEnd();\n\t}\n\twriteFieldBegin(name: string, type: TType, id: number): void {\n\t\treturn this.concreteProtocol.writeFieldBegin(name, type, id);\n\t}\n\twriteFieldEnd(): void {\n\t\treturn this.concreteProtocol.writeFieldEnd();\n\t}\n\twriteFieldStop(): void {\n\t\treturn this.concreteProtocol.writeFieldStop();\n\t}\n\twriteMapBegin(keyType: TType, valueType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeMapBegin(keyType, valueType, size);\n\t}\n\twriteMapEnd(): void {\n\t\treturn this.concreteProtocol.writeMapEnd();\n\t}\n\twriteListBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeListBegin(elementType, size);\n\t}\n\twriteListEnd(): void {\n\t\treturn this.concreteProtocol.writeListEnd();\n\t}\n\twriteSetBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeSetBegin(elementType, size);\n\t}\n\twriteSetEnd(): void {\n\t\treturn this.concreteProtocol.writeSetEnd();\n\t}\n\twriteBool(bool: boolean): void {\n\t\treturn this.concreteProtocol.writeBool(bool);\n\t}\n\twriteByte(b: number): void {\n\t\treturn this.concreteProtocol.writeByte(b);\n\t}\n\twriteI16(i16: number): void {\n\t\treturn this.concreteProtocol.writeI16(i16);\n\t}\n\twriteI32(i32: number): void {\n\t\treturn this.concreteProtocol.writeI32(i32);\n\t}\n\twriteI64(i64: number | Int64): void {\n\t\treturn this.concreteProtocol.writeI64(i64);\n\t}\n\twriteDouble(dbl: number): void {\n\t\treturn this.concreteProtocol.writeDouble(dbl);\n\t}\n\twriteString(arg: string): void {\n\t\treturn this.concreteProtocol.writeString(arg);\n\t}\n\twriteBinary(arg: string | Buffer): void {\n\t\treturn this.concreteProtocol.writeBinary(arg);\n\t}\n\treadMessageBegin(): IThriftMessage {\n\t\treturn this.concreteProtocol.readMessageBegin();\n\t}\n\treadMessageEnd(): void {\n\t\treturn this.concreteProtocol.readMessageEnd();\n\t}\n\treadStructBegin(): IThriftStruct {\n\t\treturn this.concreteProtocol.readStructBegin();\n\t}\n\treadStructEnd(): void {\n\t\treturn this.concreteProtocol.readStructEnd();\n\t}\n\treadFieldBegin(): IThriftField {\n\t\treturn this.concreteProtocol.readFieldBegin();\n\t}\n\treadFieldEnd(): void {\n\t\treturn this.concreteProtocol.readFieldEnd();\n\t}\n\treadMapBegin(): IThriftMap {\n\t\treturn this.concreteProtocol.readMapBegin();\n\t}\n\treadMapEnd(): void {\n\t\treturn this.concreteProtocol.readMapEnd();\n\t}\n\treadListBegin(): IThriftList {\n\t\treturn this.concreteProtocol.readListBegin();\n\t}\n\treadListEnd(): void {\n\t\treturn this.concreteProtocol.readListEnd();\n\t}\n\treadSetBegin(): IThriftSet {\n\t\treturn this.concreteProtocol.readSetBegin();\n\t}\n\treadSetEnd(): void {\n\t\treturn this.concreteProtocol.readSetEnd();\n\t}\n\treadBool(): boolean {\n\t\treturn this.concreteProtocol.readBool();\n\t}\n\treadByte(): number {\n\t\treturn this.concreteProtocol.readByte();\n\t}\n\treadI16(): number {\n\t\treturn this.concreteProtocol.readI16();\n\t}\n\treadI32(): number {\n\t\treturn this.concreteProtocol.readI32();\n\t}\n\treadI64(): Int64 {\n\t\treturn this.concreteProtocol.readI64();\n\t}\n\treadDouble(): number {\n\t\treturn this.concreteProtocol.readDouble();\n\t}\n\treadBinary(): Buffer {\n\t\treturn this.concreteProtocol.readBinary();\n\t}\n\treadString(): string {\n\t\treturn this.concreteProtocol.readString();\n\t}\n\tskip(type: TType): void {\n\t\treturn this.concreteProtocol.skip(type);\n\t}\n}\n\nexport class TMultiplexedProtocol extends TProtocolDecorator {\n\tstatic readonly separator = ':';\n\treadonly serviceName: string;\n\n\tconstructor(protocol: TProtocol, serviceName: string) {\n\t\tsuper(protocol);\n\t\tthis.serviceName = serviceName;\n\t}\n\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\tif (type === MessageType.CALL || type === MessageType.ONEWAY) {\n\t\t\tsuper.writeMessageBegin(\n\t\t\t\tthis.serviceName + TMultiplexedProtocol.separator + name,\n\t\t\t\ttype,\n\t\t\t\tseqid,\n\t\t\t);\n\t\t} else {\n\t\t\tsuper.writeMessageBegin(name, type, seqid);\n\t\t}\n\t}\n}\n","import type {\n\tIClientConstructor,\n\tIProtocolConstructor,\n\tITransportConstructor,\n\tProtocolType,\n\tThriftClient,\n\tTransportType,\n\tTTransport,\n} from '@creditkarma/thrift-server-core';\nimport {\n\tgetProtocol,\n\tgetTransport,\n\tTApplicationException,\n\tTApplicationExceptionType,\n\tThriftConnection,\n} from '@creditkarma/thrift-server-core';\nimport { TMultiplexedProtocol } from './protocols';\n\ndeclare global {\n\tinterface Window {\n\t\tnativeConnections?: Record<string, NativeConnection>;\n\t\tandroid?: {\n\t\t\tpostMessage: (data: string, connectionId: string) => void;\n\t\t};\n\t\twebkit?: {\n\t\t\tmessageHandlers: {\n\t\t\t\tiOSWebViewMessage: {\n\t\t\t\t\tpostMessage: (nativeMessage: NativeMessage) => void;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n}\n\nexport interface NativeMessage {\n\tdata: string;\n\tconnectionId: string;\n}\n\ninterface PromiseResponse {\n\tresolve: (response: Buffer) => void;\n\treject: (error: Error) => void;\n\ttimeoutId: NodeJS.Timeout;\n}\n\nconst ACTION_TIMEOUT_MS = 30000;\n\nfunction sendNativeMessage(nativeMessage: NativeMessage): void {\n\tif (window.android) {\n\t\twindow.android.postMessage(\n\t\t\tnativeMessage.data,\n\t\t\tnativeMessage.connectionId,\n\t\t);\n\t} else if (window.webkit) {\n\t\twindow.webkit.messageHandlers.iOSWebViewMessage.postMessage(\n\t\t\tnativeMessage,\n\t\t);\n\t} else {\n\t\tconsole.warn('No native APIs available');\n\t}\n}\n\nlet uid = 1;\nconst getUniqueConnectionId = () => `connection-${uid++}`;\n\nexport class NativeConnection extends ThriftConnection {\n\tconnectionId = getUniqueConnectionId();\n\tpromises: PromiseResponse[] = [];\n\toutBuffer: NativeMessage[] = [];\n\n\tconstructor(\n\t\tTransport: ITransportConstructor,\n\t\tProtocol: IProtocolConstructor,\n\t) {\n\t\tsuper(Transport, Protocol);\n\t\tif (typeof window !== 'undefined') {\n\t\t\twindow.nativeConnections = window.nativeConnections ?? {};\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treset(oldConnectionId: string): void {\n\t\tif (oldConnectionId === this.connectionId && window.nativeConnections) {\n\t\t\tconsole.warn('Reseting connection ' + oldConnectionId);\n\t\t\tdelete window.nativeConnections[this.connectionId];\n\t\t\tfor (const promise of this.promises) {\n\t\t\t\tpromise.reject(\n\t\t\t\t\tnew TApplicationException(\n\t\t\t\t\t\tTApplicationExceptionType.UNKNOWN,\n\t\t\t\t\t\t'Timeout error',\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.promises = [];\n\t\t\tthis.connectionId = getUniqueConnectionId();\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treceive(message: NativeMessage): void {\n\t\tconst resolver = this.promises.shift();\n\t\tif (resolver) {\n\t\t\tclearTimeout(resolver.timeoutId);\n\t\t\tconst data = Buffer.from(message.data, 'base64');\n\t\t\tresolver.resolve(data);\n\t\t}\n\t\tthis.sendNextMessage();\n\t}\n\n\tprivate sendNextMessage(): void {\n\t\tconst message = this.outBuffer.shift();\n\t\tif (message) {\n\t\t\tconsole.log('Sending next message');\n\t\t\tsendNativeMessage(message);\n\t\t}\n\t}\n\n\tsend(dataToSend: Buffer): Promise<Buffer> {\n\t\tconst id = this.connectionId;\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias -- Reassign this\n\t\tconst connection = this;\n\t\treturn new Promise<Buffer>(function (res, rej): void {\n\t\t\tconnection.promises.push({\n\t\t\t\tresolve: res,\n\t\t\t\treject: rej,\n\t\t\t\ttimeoutId: setTimeout(function () {\n\t\t\t\t\tconnection.reset(id);\n\t\t\t\t}, ACTION_TIMEOUT_MS),\n\t\t\t});\n\t\t\tconst message: NativeMessage = {\n\t\t\t\tdata: dataToSend.toString('base64'),\n\t\t\t\tconnectionId: id,\n\t\t\t};\n\t\t\tif (connection.promises.length === 1) {\n\t\t\t\tconsole.log('Sending message immediately');\n\t\t\t\tsendNativeMessage(message);\n\t\t\t} else {\n\t\t\t\tconsole.log('Queing message because others in flight');\n\t\t\t\tconnection.outBuffer.push(message);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function createAppClient<TClient extends ThriftClient<void>>(\n\tServiceClient: IClientConstructor<TClient, void>,\n\ttransport: TransportType = 'buffered',\n\tprotocol: ProtocolType = 'compact',\n): TClient {\n\tclass NamedMultiplexedProtocol extends TMultiplexedProtocol {\n\t\tconstructor(tTransport: TTransport) {\n\t\t\tconst Protocol = getProtocol(protocol);\n\t\t\tsuper(new Protocol(tTransport), ServiceClient.serviceName ?? '');\n\t\t}\n\t}\n\tconst connection = new NativeConnection(\n\t\tgetTransport(transport),\n\t\tNamedMultiplexedProtocol,\n\t);\n\treturn new ServiceClient(connection);\n}\n","import * as Acquisitions from '@guardian/bridget/Acquisitions';\nimport * as Analytics from '@guardian/bridget/Analytics';\nimport * as Commercial from '@guardian/bridget/Commercial';\nimport * as Discussion from '@guardian/bridget/Discussion';\nimport * as Environment from '@guardian/bridget/Environment';\nimport * as Gallery from '@guardian/bridget/Gallery';\nimport * as Interaction from '@guardian/bridget/Interaction';\nimport * as Metrics from '@guardian/bridget/Metrics';\nimport * as Navigation from '@guardian/bridget/Navigation';\nimport * as Newsletters from '@guardian/bridget/Newsletters';\nimport * as Notifications from '@guardian/bridget/Notifications';\nimport * as Tag from '@guardian/bridget/Tag';\nimport * as User from '@guardian/bridget/User';\nimport * as Video from '@guardian/bridget/Videos';\nimport { isUndefined } from '@guardian/libs';\nimport { createAppClient } from './thrift/nativeConnection';\n\nlet environmentClient: Environment.Client<void> | undefined = undefined;\nexport const getEnvironmentClient = (): Environment.Client<void> => {\n\tif (isUndefined(environmentClient)) {\n\t\tenvironmentClient = createAppClient<Environment.Client<void>>(\n\t\t\tEnvironment.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn environmentClient;\n};\n\nlet commercialClient: Commercial.Client<void> | undefined = undefined;\nexport const getCommercialClient = (): Commercial.Client<void> => {\n\tif (isUndefined(commercialClient)) {\n\t\tcommercialClient = createAppClient<Commercial.Client<void>>(\n\t\t\tCommercial.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn commercialClient;\n};\n\nlet acquisitionsClient: Acquisitions.Client<void> | undefined = undefined;\nexport const getAcquisitionsClient = (): Acquisitions.Client<void> => {\n\tif (!acquisitionsClient) {\n\t\tacquisitionsClient = createAppClient<Acquisitions.Client<void>>(\n\t\t\tAcquisitions.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn acquisitionsClient;\n};\n\nlet notificationsClient: Notifications.Client<void> | undefined = undefined;\nexport const getNotificationsClient = (): Notifications.Client<void> => {\n\tif (!notificationsClient) {\n\t\tnotificationsClient = createAppClient<Notifications.Client<void>>(\n\t\t\tNotifications.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn notificationsClient;\n};\n\nlet tagClient: Tag.Client<void> | undefined = undefined;\nexport const getTagClient = (): Tag.Client<void> => {\n\tif (!tagClient) {\n\t\ttagClient = createAppClient<Tag.Client<void>>(\n\t\t\tTag.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn tagClient;\n};\n\nlet userClient: User.Client<void> | undefined = undefined;\nexport const getUserClient = (): User.Client<void> => {\n\tif (!userClient) {\n\t\tuserClient = createAppClient<User.Client<void>>(\n\t\t\tUser.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn userClient;\n};\nlet galleryClient: Gallery.Client<void> | undefined = undefined;\nexport const getGalleryClient = (): Gallery.Client<void> => {\n\tif (!galleryClient) {\n\t\tgalleryClient = createAppClient<Gallery.Client<void>>(\n\t\t\tGallery.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn galleryClient;\n};\nlet videoClient: Video.Client<void> | undefined = undefined;\nexport const getVideoClient = (): Video.Client<void> => {\n\tif (!videoClient) {\n\t\tvideoClient = createAppClient<Video.Client<void>>(\n\t\t\tVideo.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn videoClient;\n};\nlet metricsClient: Metrics.Client<void> | undefined = undefined;\nexport const getMetricsClient = (): Metrics.Client<void> => {\n\tif (!metricsClient) {\n\t\tmetricsClient = createAppClient<Metrics.Client<void>>(\n\t\t\tMetrics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn metricsClient;\n};\nlet analyticsClient: Analytics.Client<void> | undefined = undefined;\nexport const getAnalyticsClient = (): Analytics.Client<void> => {\n\tif (!analyticsClient) {\n\t\tanalyticsClient = createAppClient<Analytics.Client<void>>(\n\t\t\tAnalytics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn analyticsClient;\n};\n\nlet navigationClient: Navigation.Client<void> | undefined = undefined;\nexport const getNavigationClient = (): Navigation.Client<void> => {\n\tif (!navigationClient) {\n\t\tnavigationClient = createAppClient<Navigation.Client<void>>(\n\t\t\tNavigation.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn navigationClient;\n};\n\nlet newslettersClient: Newsletters.Client<void> | undefined = undefined;\nexport const getNewslettersClient = (): Newsletters.Client<void> => {\n\tif (!newslettersClient) {\n\t\tnewslettersClient = createAppClient<Newsletters.Client<void>>(\n\t\t\tNewsletters.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn newslettersClient;\n};\n\nlet discussionClient: Discussion.Client<void> | undefined = undefined;\nexport const getDiscussionClient = (): Discussion.Client<void> => {\n\tif (!discussionClient) {\n\t\tdiscussionClient = createAppClient<Discussion.Client<void>>(\n\t\t\tDiscussion.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn discussionClient;\n};\n\nlet interactionClient: Interaction.Client<void> | undefined = undefined;\nexport const getInteractionClient = (): Interaction.Client<void> => {\n\tif (!interactionClient) {\n\t\tinteractionClient = createAppClient<Interaction.Client<void>>(\n\t\t\tInteraction.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn interactionClient;\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n"],"names":["FollowIcon","isFollowing","iconIsFollowing","iconIsNotFollowing","div","css","space","palette","style","backgroundColor","undefined","fill","buttonStyles","withExtraBottomMargin","textSans15","containerStyles","notificationsTextSpan","span","tagTextSpan","displayName","FollowNotificationsButton","onClickHandler","button","onClick","type","SvgNotificationsOn","size","SvgNotificationsOff","FollowTagButton","SvgCheckmark","SvgPlus","FollowWrapper","id","isFollowingNotifications","setIsFollowingNotifications","useState","isFollowingTag","setIsFollowingTag","showFollowTagButton","setShowFollowTagButton","isMyGuardianEnabled","isEnabled","setIsEnabled","useEffect","getEnvironmentClient","then","catch","error","log","useIsMyGuardianEnabled","requiredVersion","isCompatible","setIsCompatible","nativeThriftPackageVersion","bridgetVersion","compare","console","useIsBridgetCompatible","topic","Topic","getNotificationsClient","window","guardian","modules","sentry","reportError","getTagClient","from","phablet","isUndefined","unfollow","success","follow","TProtocolDecorator","TProtocol","getTransport","this","concreteProtocol","flush","writeMessageBegin","name","seqid","writeMessageEnd","writeStructBegin","writeStructEnd","writeFieldBegin","writeFieldEnd","writeFieldStop","writeMapBegin","keyType","valueType","writeMapEnd","writeListBegin","elementType","writeListEnd","writeSetBegin","writeSetEnd","writeBool","bool","writeByte","b","writeI16","i16","writeI32","i32","writeI64","i64","writeDouble","dbl","writeString","arg","writeBinary","readMessageBegin","readMessageEnd","readStructBegin","readStructEnd","readFieldBegin","readFieldEnd","readMapBegin","readMapEnd","readListBegin","readListEnd","readSetBegin","readSetEnd","readBool","readByte","readI16","readI32","readI64","readDouble","readBinary","readString","skip","constructor","protocol","super","TMultiplexedProtocol","MessageType","CALL","ONEWAY","serviceName","separator","sendNativeMessage","nativeMessage","android","postMessage","data","connectionId","webkit","messageHandlers","iOSWebViewMessage","warn","uid","getUniqueConnectionId","NativeConnection","ThriftConnection","reset","oldConnectionId","nativeConnections","promise","promises","reject","TApplicationException","TApplicationExceptionType","UNKNOWN","receive","message","resolver","shift","clearTimeout","timeoutId","Buffer","resolve","sendNextMessage","outBuffer","send","dataToSend","connection","Promise","res","rej","push","setTimeout","toString","length","Transport","Protocol","createAppClient","ServiceClient","transport","tTransport","getProtocol","environmentClient","Environment","Client","commercialClient","getCommercialClient","Commercial","acquisitionsClient","getAcquisitionsClient","Acquisitions","notificationsClient","Notifications","tagClient","Tag","userClient","getUserClient","User","galleryClient","getGalleryClient","Gallery","videoClient","getVideoClient","Video","analyticsClient","getAnalyticsClient","Analytics","navigationClient","getNavigationClient","Navigation","discussionClient","getDiscussionClient","Discussion","interactionClient","getInteractionClient","Interaction","colour"],"sourceRoot":""}