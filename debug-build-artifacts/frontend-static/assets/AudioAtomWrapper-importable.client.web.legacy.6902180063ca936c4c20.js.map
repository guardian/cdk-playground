{"version":3,"file":"AudioAtomWrapper-importable.client.web.legacy.6902180063ca936c4c20.js","mappings":"0QAKMA,GAAgBC,EAAAA,EAAAA,KAAG,gFAIpBC,EAAAA,EAAAA,GAAQ,uBAAsB,aAC9BA,EAAAA,EAAAA,GAAQ,uBAAsB,gHAMdA,EAAAA,EAAAA,GAAQ,2BAA0B,gGAOjDC,GAAcF,EAAAA,EAAAA,KAAG,UACbC,EAAAA,EAAAA,GAAQ,uBAAsB,IACrCE,EAAAA,IAAc,KAEXC,GAAaJ,EAAAA,EAAAA,KAChBK,EAAAA,IAAgB,KAEbC,EAAc,CAAAC,KAAA,SAAAC,OAAA,gCAIdC,EAAiB,CAAAF,KAAA,UAAAC,OAAA,gDAKjBE,EAAkB,CAAAH,KAAA,SAAAC,OAAA,6DAMlBG,GAAcX,EAAAA,EAAAA,KAAG,mFAOnBY,EAAAA,EAAS,kBAIPC,EAAY,CAAAN,KAAA,SAAAC,OAAA,4DAMZM,EAAa,CAAAP,KAAA,SAAAC,OAAA,4DAMbO,EAAW,CAAAR,KAAA,UAAAC,OAAA,0CAKXQ,EAAe,CAAAT,KAAA,UAAAC,OAAA,gDAKfS,EAAgB,CAAAV,KAAA,SAAAC,OAAA,wBAIhBU,GAAwBlB,EAAAA,EAAAA,KAAG,qFAK7BC,EAAAA,EAAAA,GAAQ,sBAAqB,cAC7BA,EAAAA,EAAAA,GAAQ,6BAA4B,oFAQpCW,EAAAA,EAAS,yCAKGX,EAAAA,EAAAA,GAAQ,sBAAqB,uGAO7BA,EAAAA,EAAAA,GAAQ,sBAAqB,oFAO7BA,EAAAA,EAAAA,GAAQ,sBAAqB,4DAOvCkB,EAAiB,CAAAZ,KAAA,UAAAC,OAAA,kEAMjBY,GAAapB,EAAAA,EAAAA,KAChBqB,EAAAA,IAAU,KAEPC,EAAY,SAACC,GAAC,OAAKA,EAAEC,QAAQ,GAAGC,SAAS,EAAG,IAAK,EACjDC,EAAa,SAACH,GAChB,IAAMI,EAASC,KAAKC,MAAMN,EAAI,IACxBO,EAASF,KAAKC,MAAON,EAAI,KAAQ,IACjCQ,EAAOH,KAAKC,MAAMN,EAAI,MAC5B,MAAM,GAANS,OAAUV,EAAUS,GAAK,KAAAC,OAAIV,EAAUQ,GAAO,KAAAE,OAAIV,EAAUK,GAChE,EACMM,EAAW,WAAH,OAAUC,EAAAA,EAAAA,KAAK,MAAO,CAAElC,IAAKc,EAAeqB,MAAO,OAAQC,OAAQ,OAAQC,QAAS,YAAaC,UAAUC,EAAAA,EAAAA,MAAM,IAAK,CAAEC,KAAM,OAAQC,SAAU,UAAWH,SAAU,EAACJ,EAAAA,EAAAA,KAAK,SAAU,CAAEM,MAAMvC,EAAAA,EAAAA,GAAQ,sBAAuByC,GAAI,KAAMC,GAAI,KAAMC,EAAG,QAASV,EAAAA,EAAAA,KAAK,OAAQ,CAAEW,EAAG,+DAAgEL,MAAMvC,EAAAA,EAAAA,GAAQ,iCAAoC,EACxY6C,EAAU,WAAH,OAAUZ,EAAAA,EAAAA,KAAK,MAAO,CAAElC,IAAKa,EAAcsB,MAAO,OAAQC,OAAQ,OAAQC,QAAS,YAAaC,UAAUC,EAAAA,EAAAA,MAAM,IAAK,CAAEC,KAAM,OAAQC,SAAU,UAAWH,SAAU,EAACJ,EAAAA,EAAAA,KAAK,SAAU,CAAEM,MAAMvC,EAAAA,EAAAA,GAAQ,sBAAuByC,GAAI,KAAMC,GAAI,KAAMC,EAAG,QAASV,EAAAA,EAAAA,KAAK,OAAQ,CAAEM,MAAMvC,EAAAA,EAAAA,GAAQ,2BAA4B4C,EAAG,kEAAqE,EACnYE,EAAW,SAACC,EAAUC,GACxB,OAAOA,EACDD,EAASE,QAAQ,WAAY,2BAC7BF,CACV,EAAEG,EAAA,CAAA5C,KAAA,SAAAC,OAAA,oBACW4C,EAAY,SAAHC,GAAoE,IAA9DC,EAAED,EAAFC,GAAIC,EAAQF,EAARE,SAAUC,EAAMH,EAANG,OAAQC,EAAKJ,EAALI,MAAOR,EAAcI,EAAdJ,eAAgBS,EAAQL,EAARK,SAC/DC,GAAUC,EAAAA,EAAAA,QAAO,MACvBC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAE9BI,GAAsCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA0CT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtCG,GAAgCb,EAAAA,EAAAA,UAASf,EAASQ,EAAUN,IAAgB2B,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArEE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,IAC5BG,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACNC,EAAiBtB,EAAQuB,QACzBC,EAA+B,WAAO,IAADC,EAAAC,EACjCC,EAA+B,QAAlBF,EAAGzB,EAAQuB,eAAO,IAAAE,OAAA,EAAfA,EAAiBf,YACjCkB,EAA4B,QAAlBF,EAAG1B,EAAQuB,eAAO,IAAAG,OAAA,EAAfA,EAAiB3B,SACpCgB,EAAkCc,MAAjBF,GAA4CE,MAAdD,EACxCD,EAAgBC,EAAc,IAC/B,GACNjB,EAAegB,QAAAA,EAAiB,EACpC,EAEA,OADe,QAAfN,EAAArB,EAAQuB,eAAO,IAAAF,GAAfA,EAAiBS,iBAAiB,aAAcN,GACzC,kBAAMF,EACPA,EAAeS,oBAAoB,aAAcP,QACjDK,CAAU,CACpB,GAAG,CAAC7B,EAASW,EAAgBrB,IAE7B,IAAA0C,GAAwC7B,EAAAA,EAAAA,UAASJ,GAASkC,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAnDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IACpCb,EAAAA,EAAAA,YAAU,WAAO,IAADgB,EACNd,EAAiBtB,EAAQuB,QACzBc,EAAqB,WAAH,OAASF,EAAgBnC,EAAQuB,QAAUvB,EAAQuB,QAAQxB,SAAWA,EAAU,EAExG,OADe,QAAfqC,EAAApC,EAAQuB,eAAO,IAAAa,GAAfA,EAAiBN,iBAAiB,aAAcO,GACzC,kBAAMf,aAAc,EAAdA,EAAgBS,oBAAoB,aAAcM,EAAoB,CACvF,GAAG,CAACrC,EAASmC,EAAiBpC,IAC9B,IAWMuC,GAAgBrC,EAAAA,EAAAA,QAAO,MA+B7B,OA9BAmB,EAAAA,EAAAA,YAAU,WACN,IAEMmB,EAAc,SAACC,GAFK,KAGlBA,EAAEC,SACFC,SAASC,gBAAkBL,EAAcf,SACrCvB,EAAQuB,UACRvB,EAAQuB,QAAQb,aAAe,IALlB,KAOjB8B,EAAEC,SACFC,SAASC,gBAAkBL,EAAcf,SACrCvB,EAAQuB,UACRvB,EAAQuB,QAAQb,aAAe,GAE3C,EAEA,OADAgC,SAASZ,iBAAiB,UAAWS,GAC9B,kBAAMG,SAASX,oBAAoB,UAAWQ,EAAa,CACtE,GAAG,CAACvC,EAASsC,KAEblB,EAAAA,EAAAA,YAAU,WACND,EAAY/B,EAASQ,EAAUN,GACnC,GAAG,CAACA,EAAgBM,KASZhB,EAAAA,EAAAA,MAAM,MAAO,CAAEvC,IAAKD,EAAe,eAAgBuD,EAAI,iBAAkB,QAAShB,SAAU,EAACC,EAAAA,EAAAA,MAAM,MAAO,CAAEvC,IAAGmD,EAEpHb,SAAU,EAACJ,EAAAA,EAAAA,KAAK,OAAQ,CAAElC,IAAKE,EAAaoC,SAAUkB,KAAWtB,EAAAA,EAAAA,KAAK,KAAM,CAAElC,IAAKI,EAAYkC,SAAUmB,QAAclB,EAAAA,EAAAA,MAAM,MAAO,CAAEvC,IAAKM,EAAgBgC,SAAU,EAACJ,EAAAA,EAAAA,KAAK,QAAS,CAAElC,IAAKS,EAAmB8F,IAAK1B,EAAU2B,IAAK7C,EAAS8C,QAAS,OAAQ,iBAAkB,kBAAmB,gBAAiBZ,EAAc,gBAAiBvC,QAAAA,EAAM,UAAW,aAAclD,EAAYkC,UAAUC,EAAAA,EAAAA,MAAM,IAAK,CAAED,SAAU,CAAC,qFAAsFuC,QAAiB3C,EAAAA,EAAAA,KAAK,MAAO,CAAElC,IAAKU,EAAoB4B,UAAUJ,EAAAA,EAAAA,KAAK,SAAU,CAAEwE,KAAM,SAAU,cAAezC,EAAY,eAAiB,cAAe0C,QAAS,WAAF,OAAS1C,GALjqBC,GAAa,QACE,QAAf0C,EAAAjD,EAAQuB,eAAO,IAAA0B,GAAfA,EAAiBC,WALjB3C,GAAa,QACO,QAApB4C,EAAKnD,EAAQuB,eAAO,IAAA4B,GAAfA,EAAiBC,SAFR,IAAMD,EAICF,CAMkrB,EAAG5G,IAAKW,EAAa2B,SAAU2B,GAAY/B,EAAAA,EAAAA,KAAKD,EAAU,CAAC,IAAKC,EAAAA,EAAAA,KAAKY,EAAS,CAAC,QAAUP,EAAAA,EAAAA,MAAM,MAAO,CAAEvC,IAAKe,EAAauB,SAAU,EAACJ,EAAAA,EAAAA,KAAK,MAAO,CAAElC,IAAKgB,EAAiBsB,UAAUJ,EAAAA,EAAAA,KAAK,OAAQ,CAAElC,IAAKoB,EAAYkB,SAAUZ,EAAW2C,QAAoBnC,EAAAA,EAAAA,KAAK,MAAO,CAAElC,IAAKiB,EAAkBqB,UAAUJ,EAAAA,EAAAA,KAAK,QAAS,CAAElC,IAAKkB,EAAuBsF,IAAKP,EAAeS,KAAM,QAASM,IAAK,IAAKC,IAAK,MAAOC,KAAM,IAAKC,MAAO1C,EAAekC,QA5C7lC,SAACR,GAC5B,GAAIxC,EAAQuB,QAAS,CACjB,IAAMkC,EAA2BjB,EAAEkB,YAAYC,QAAUnB,EAAEoB,cAAcC,YAAe,IAExF7D,EAAQuB,QAAQb,YACXV,EAAQuB,QAAQxB,SAAW,IAAO0D,CAC3C,CACJ,EAqC6pCK,UAAU,OAAYvF,EAAAA,EAAAA,KAAK,MAAO,CAAElC,IAAKmB,EAAmBmB,UAAUJ,EAAAA,EAAAA,KAAK,OAAQ,CAAElC,IAAKoB,EAAYkB,SAAUZ,EAAWmE,eAC5xC,EC/Ma6B,EAAmB,SAAHvE,GAAgH,IAA1GG,EAAEH,EAAFG,GAAIC,EAAQJ,EAARI,SAAUC,EAAML,EAANK,OAAQC,EAAKN,EAALM,MAAOC,EAAQP,EAARO,SAAUiE,EAAqBxE,EAArBwE,sBAAuBC,EAAczE,EAAdyE,eAAgBC,EAAmB1E,EAAnB0E,oBAI7GhE,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDZ,EAAcc,EAAA,GAAE+D,EAAiB/D,EAAA,GAexC,OAdAgB,EAAAA,EAAAA,YAAU,YACNgD,EAAAA,EAAAA,KAAgB,SAACC,GAIb,IAAMC,GAAeC,EAAAA,EAAAA,IAAc,QAASF,GACxCJ,GACAK,GACAJ,GACAF,GACAG,GAAkB,EAE1B,GACJ,GAAG,CAACH,EAAuBC,EAAgBC,KACnC3F,EAAAA,EAAAA,KAAKkB,EAAW,CAAEE,GAAIA,EAAIC,SAAUA,EAAUC,OAAQA,EAAQC,MAAOA,EAAOC,SAAUA,EAAUT,eAAgBA,GAC5H,C,kCCrBA,IAAMhD,EAAU,SAACkI,GAAM,aAAAnG,OAAYmG,EAAM,K","sources":["webpack://@guardian/dotcom-rendering/./src/components/AudioAtom/AudioAtom.tsx","webpack://@guardian/dotcom-rendering/./src/components/AudioAtomWrapper.importable.tsx","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { focusHalo, headlineBold17, headlineMedium17, textSans15, } from '@guardian/source/foundations';\nimport { useEffect, useRef, useState } from 'react';\nimport { palette } from '../../palette';\nconst wrapperStyles = css `\n\twidth: 100%;\n\tborder-image: repeating-linear-gradient(\n\t\t\tto bottom,\n\t\t\t${palette('--audio-atom-border')},\n\t\t\t${palette('--audio-atom-border')} 1px,\n\t\t\ttransparent 1px,\n\t\t\ttransparent 4px\n\t\t)\n\t\t13;\n\tborder-top: 13px solid black;\n\tbackground-color: ${palette('--audio-atom-background')};\n\tposition: relative;\n\tpadding-left: 5px;\n\tpadding-right: 5px;\n\tpadding-bottom: 1px;\n\tmargin: 16px 0 36px;\n`;\nconst kickerStyle = css `\n\tcolor: ${palette('--audio-atom-kicker')};\n\t${headlineBold17};\n`;\nconst titleStyle = css `\n\t${headlineMedium17};\n`;\nconst audioBodyStyle = css `\n\tdisplay: flex;\n\toverflow: hidden;\n`;\nconst audioElementStyle = css `\n\theight: 0;\n\tvertical-align: baseline;\n\twidth: 300px;\n`;\nconst audioControlsStyle = css `\n\tbox-sizing: content-box;\n\tpadding: 5px;\n\twidth: 50px;\n\theight: 50px;\n`;\nconst buttonStyle = css `\n\tpadding: 0;\n\tborder: 0;\n\toutline: 0;\n\tcursor: pointer;\n\tbackground-color: transparent;\n\t:focus {\n\t\t${focusHalo}\n\t}\n\theight: 50px;\n`;\nconst svgPlayStyle = css `\n\tfill: currentColor;\n\toverflow: hidden;\n\twidth: 50px;\n\theight: auto;\n`;\nconst svgPauseStyle = css `\n\tfill: currentColor;\n\toverflow: hidden;\n\twidth: 50px;\n\theight: auto;\n`;\nconst timingStyle = css `\n\talign-items: center;\n\tdisplay: flex;\n\tflex: 1;\n`;\nconst timePlayedStyle = css `\n\tmin-width: 75px;\n\tpadding-top: 6px;\n\tdisplay: block;\n`;\nconst progressBarStyle = css `\n\tflex: 1;\n\tdisplay: block;\n`;\nconst progressBarInputStyle = css `\n\twidth: 100%;\n\tappearance: none;\n\tbackground-image: linear-gradient(\n\t\tto right,\n\t\t${palette('--audio-atom-icons')} 0%,\n\t\t${palette('--audio-atom-progress-bar')} 0%\n\t);\n\theight: 6px;\n\toutline: 0;\n\tcursor: pointer;\n\tmargin-left: 0;\n\tmargin-right: 0;\n\t:focus {\n\t\t${focusHalo}\n\t}\n\n\t/* Use the pillar to style the colour of the range thumb */\n\t&::-webkit-slider-thumb {\n\t\tbackground: ${palette('--audio-atom-icons')};\n\t\t-webkit-appearance: none; /* stylelint-disable-line property-no-vendor-prefix */\n\t\twidth: 14px;\n\t\theight: 14px;\n\t\tborder-radius: 50px;\n\t}\n\t&::-moz-range-thumb {\n\t\tbackground: ${palette('--audio-atom-icons')};\n\t\twidth: 14px;\n\t\theight: 14px;\n\t\tborder: none;\n\t\tborder-radius: 50px;\n\t}\n\t&::-ms-thumb {\n\t\tbackground: ${palette('--audio-atom-icons')};\n\t\twidth: 14px;\n\t\theight: 14px;\n\t\tborder: none;\n\t\tborder-radius: 50px;\n\t}\n`;\nconst timeDurationStyle = css `\n\tmin-width: 65px;\n\tpadding-top: 6px;\n\tpadding-left: 10px;\n\tdisplay: block;\n`;\nconst timeStyles = css `\n\t${textSans15}\n`;\nconst formatNum = (t) => t.toFixed(0).padStart(2, '0');\nconst formatTime = (t) => {\n    const second = Math.floor(t % 60);\n    const minute = Math.floor((t % 3600) / 60);\n    const hour = Math.floor(t / 3600);\n    return `${formatNum(hour)}:${formatNum(minute)}:${formatNum(second)}`;\n};\nconst PauseSVG = () => (_jsx(\"svg\", { css: svgPauseStyle, width: \"30px\", height: \"30px\", viewBox: \"0 0 30 30\", children: _jsxs(\"g\", { fill: \"none\", fillRule: \"evenodd\", children: [_jsx(\"circle\", { fill: palette('--audio-atom-icons'), cx: \"15\", cy: \"15\", r: \"15\" }), _jsx(\"path\", { d: \"M9.429 7.286h3.429v15.429h-3.43zm7.286 0h3.429v15.429h-3.43z\", fill: palette('--audio-atom-background') })] }) }));\nconst PlaySVG = () => (_jsx(\"svg\", { css: svgPlayStyle, width: \"30px\", height: \"30px\", viewBox: \"0 0 30 30\", children: _jsxs(\"g\", { fill: \"none\", fillRule: \"evenodd\", children: [_jsx(\"circle\", { fill: palette('--audio-atom-icons'), cx: \"15\", cy: \"15\", r: \"15\" }), _jsx(\"path\", { fill: palette('--audio-atom-background'), d: \"M10.113 8.571l-.47.366V20.01l.472.347 13.456-5.593v-.598z\" })] }) }));\nconst buildUrl = (basicUrl, shouldUseAcast) => {\n    return shouldUseAcast\n        ? basicUrl.replace('https://', 'https://flex.acast.com/')\n        : basicUrl;\n};\nexport const AudioAtom = ({ id, trackUrl, kicker, title, shouldUseAcast, duration, }) => {\n    const audioEl = useRef(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    // update current time and progress bar position\n    const [currentTime, setCurrentTime] = useState(0);\n    const [percentPlayed, setPercentPlayed] = useState(0);\n    // url\n    const [urlToUse, setUrlToUse] = useState(buildUrl(trackUrl, shouldUseAcast));\n    useEffect(() => {\n        const audioElCurrent = audioEl.current;\n        const updateCurrentTimeAndPosition = () => {\n            const elCurrentTime = audioEl.current?.currentTime;\n            const elDuration = audioEl.current?.duration;\n            setPercentPlayed(elCurrentTime != undefined && elDuration != undefined\n                ? (elCurrentTime / elDuration) * 100\n                : 0);\n            setCurrentTime(elCurrentTime ?? 0);\n        };\n        audioEl.current?.addEventListener('timeupdate', updateCurrentTimeAndPosition);\n        return () => audioElCurrent\n            ? audioElCurrent.removeEventListener('timeupdate', updateCurrentTimeAndPosition)\n            : undefined;\n    }, [audioEl, setCurrentTime, shouldUseAcast]);\n    // update duration time\n    const [durationTime, setDurationTime] = useState(duration);\n    useEffect(() => {\n        const audioElCurrent = audioEl.current;\n        const updateDurationTime = () => setDurationTime(audioEl.current ? audioEl.current.duration : duration);\n        audioEl.current?.addEventListener('loadeddata', updateDurationTime);\n        return () => audioElCurrent?.removeEventListener('loadeddata', updateDurationTime);\n    }, [audioEl, setDurationTime, duration]);\n    const updateAudioCurrentTime = (e) => {\n        if (audioEl.current) {\n            const percentagePositionClick = (e.nativeEvent.offsetX / e.currentTarget.offsetWidth) * 100;\n            // set the currentTime of the audio based on percentagePositionClick\n            audioEl.current.currentTime =\n                (audioEl.current.duration / 100) * percentagePositionClick;\n        }\n    };\n    // ***************************\n    // *     Accessibility       *\n    // ***************************\n    const progressBarEl = useRef(null);\n    useEffect(() => {\n        const rightArrowKeyCode = 39;\n        const leftArrowKeyCode = 37;\n        const keyListener = (e) => {\n            if (e.keyCode === rightArrowKeyCode &&\n                document.activeElement === progressBarEl.current) {\n                if (audioEl.current)\n                    audioEl.current.currentTime += 15;\n            }\n            if (e.keyCode === leftArrowKeyCode &&\n                document.activeElement === progressBarEl.current) {\n                if (audioEl.current)\n                    audioEl.current.currentTime -= 15;\n            }\n        };\n        document.addEventListener('keydown', keyListener);\n        return () => document.removeEventListener('keydown', keyListener);\n    }, [audioEl, progressBarEl]);\n    // If Acast is enabled, replace the default url with an ad enabled one\n    useEffect(() => {\n        setUrlToUse(buildUrl(trackUrl, shouldUseAcast));\n    }, [shouldUseAcast, trackUrl]);\n    const playAudio = () => {\n        setIsPlaying(true);\n        void audioEl.current?.play();\n    };\n    const pauseAudio = () => {\n        setIsPlaying(false);\n        audioEl.current?.pause();\n    };\n    return (_jsxs(\"div\", { css: wrapperStyles, \"data-atom-id\": id, \"data-atom-type\": \"audio\", children: [_jsxs(\"div\", { css: css `\n\t\t\t\t\tpadding-left: 5px;\n\t\t\t\t`, children: [_jsx(\"span\", { css: kickerStyle, children: kicker }), _jsx(\"h4\", { css: titleStyle, children: title })] }), _jsxs(\"div\", { css: audioBodyStyle, children: [_jsx(\"audio\", { css: audioElementStyle, src: urlToUse, ref: audioEl, preload: \"none\", \"data-component\": \"inarticle audio\", \"data-duration\": durationTime, \"data-media-id\": id ?? '_no_ids', \"data-title\": titleStyle, children: _jsxs(\"p\", { children: [\"Sorry your browser does not support audio - but you can download here and listen $\", urlToUse] }) }), _jsx(\"div\", { css: audioControlsStyle, children: _jsx(\"button\", { type: \"button\", \"data-testid\": isPlaying ? 'pause-button' : 'play-button', onClick: () => (isPlaying ? pauseAudio() : playAudio()), css: buttonStyle, children: isPlaying ? _jsx(PauseSVG, {}) : _jsx(PlaySVG, {}) }) }), _jsxs(\"div\", { css: timingStyle, children: [_jsx(\"div\", { css: timePlayedStyle, children: _jsx(\"span\", { css: timeStyles, children: formatTime(currentTime) }) }), _jsx(\"div\", { css: progressBarStyle, children: _jsx(\"input\", { css: progressBarInputStyle, ref: progressBarEl, type: \"range\", min: \"0\", max: \"100\", step: \"1\", value: percentPlayed, onClick: updateAudioCurrentTime, readOnly: true }) }), _jsx(\"div\", { css: timeDurationStyle, children: _jsx(\"span\", { css: timeStyles, children: formatTime(durationTime) }) })] })] })] }));\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { getConsentFor, onConsentChange } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { AudioAtom } from './AudioAtom/AudioAtom';\n/**\n * ## Why does this need to be an Island?\n *\n * The audio atom is interactive.\n * Requires consent to use audio ads.\n *\n * ---\n *\n * (No visual story exists)\n */\nexport const AudioAtomWrapper = ({ id, trackUrl, kicker, title, duration, contentIsNotSensitive, aCastisEnabled, readerCanBeShownAds, }) => {\n    // *****************\n    // *     ACast     *\n    // *****************\n    const [shouldUseAcast, setShouldUseAcast] = useState(false);\n    useEffect(() => {\n        onConsentChange((state) => {\n            // Should we use ad enabled audio? If so, then set the shouldUseAcast\n            // state to true, triggering a rerender of AudioAtom using a new track url\n            // (one with adverts)\n            const consentGiven = getConsentFor('acast', state);\n            if (aCastisEnabled &&\n                consentGiven &&\n                readerCanBeShownAds && // Eg. Not a subscriber\n                contentIsNotSensitive) {\n                setShouldUseAcast(true);\n            }\n        });\n    }, [contentIsNotSensitive, aCastisEnabled, readerCanBeShownAds]);\n    return (_jsx(AudioAtom, { id: id, trackUrl: trackUrl, kicker: kicker, title: title, duration: duration, shouldUseAcast: shouldUseAcast }));\n};\n","/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour) => `var(${colour})`;\n// ----- Exports ----- //\nexport { palette };\n"],"names":["wrapperStyles","css","palette","kickerStyle","headlineBold17","titleStyle","headlineMedium17","audioBodyStyle","name","styles","audioElementStyle","audioControlsStyle","buttonStyle","focusHalo","svgPlayStyle","svgPauseStyle","timingStyle","timePlayedStyle","progressBarStyle","progressBarInputStyle","timeDurationStyle","timeStyles","textSans15","formatNum","t","toFixed","padStart","formatTime","second","Math","floor","minute","hour","concat","PauseSVG","_jsx","width","height","viewBox","children","_jsxs","fill","fillRule","cx","cy","r","d","PlaySVG","buildUrl","basicUrl","shouldUseAcast","replace","_ref","AudioAtom","_ref2","id","trackUrl","kicker","title","duration","audioEl","useRef","_useState","useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","_useState3","_useState4","currentTime","setCurrentTime","_useState5","_useState6","percentPlayed","setPercentPlayed","_useState7","_useState8","urlToUse","setUrlToUse","useEffect","_audioEl$current3","audioElCurrent","current","updateCurrentTimeAndPosition","_audioEl$current","_audioEl$current2","elCurrentTime","elDuration","undefined","addEventListener","removeEventListener","_useState9","_useState10","durationTime","setDurationTime","_audioEl$current4","updateDurationTime","progressBarEl","keyListener","e","keyCode","document","activeElement","src","ref","preload","type","onClick","_audioEl$current6","pause","_audioEl$current5","play","min","max","step","value","percentagePositionClick","nativeEvent","offsetX","currentTarget","offsetWidth","readOnly","AudioAtomWrapper","contentIsNotSensitive","aCastisEnabled","readerCanBeShownAds","setShouldUseAcast","onConsentChange","state","consentGiven","getConsentFor","colour"],"sourceRoot":""}