{"version":3,"file":"ShowHideContainers-importable.client.web.3f311da74a5f67628636.js","mappings":"6OAKA,MAqBaA,EAAsB,I,IAAA,kCAClCC,GACO,EA0DP,OAzDAC,EAAAA,EAAAA,YAAU,KACT,MAAMC,EAlBmB,MAC1B,MAAMC,EAAOC,EAAAA,EAAQC,MAAMC,IAAK,6BAEhC,MAVyB,CAACH,MACrBI,EAAAA,EAAAA,GAASJ,MACTK,OAAOC,KAAKN,GAAMO,MAAMC,EAAAA,MACxBH,OAAOI,OAAOT,GAAMO,MAAMC,EAAAA,GAO1BE,CAAkBV,GAEhBA,EAF8B,CAAC,CAE3B,EAacW,GAElBC,EAAkB,CAACC,EAAmBC,KAC3C,MAAMC,EAAuD,SAA1CD,EAAQE,aAAa,iBAElCC,EACLC,OAAOC,SAASC,eAAeP,GAE5BE,GACHhB,EAAgBc,GAAa,SAC7BI,SAAAA,EAASI,UAAUC,IAAI,UACvBR,EAAQS,UAAY,OACpBT,EAAQU,aAAa,gBAAiB,SACtCV,EAAQU,aAAa,iBAAkB,UAEvCzB,EAAgBc,GAAa,SAC7BI,SAAAA,EAASI,UAAUI,OAAO,UAC1BX,EAAQS,UAAY,OACpBT,EAAQU,aAAa,gBAAiB,QACtCV,EAAQU,aAAa,iBAAkB,SAGxCvB,EAAAA,EAAQC,MAAMwB,IAAK,4BAA4B3B,EAAgB,EAG1D4B,EAAqBC,MAAMC,KAChCX,OAAOC,SAASW,iBACf,4BAIIC,EAA2BJ,EAC/BK,KAAKC,IACL,MAAMpB,EAAYoB,EAAGjB,aAAa,yBAClC,OAAOH,GAAad,EAAgBc,EAAU,IAE9CN,OAAO2B,GAAoB,WAAVA,IAEnB,IAAK,MAAMC,KAAKR,EAAoB,CAG/B9B,GAAqCkC,GACxCI,EAAEV,SAGH,MAAMZ,EAAYsB,EAAEnB,aAAa,yBAC5BH,IAELsB,EAAEC,QAAU,IAAMxB,EAAgBC,EAAWsB,GAEV,WAA/BpC,EAAgBc,IACnBD,EAAgBC,EAAWsB,GAE7B,IACE,CAACtC,KAEG,wB","sources":["webpack://@guardian/dotcom-rendering/./src/components/ShowHideContainers.importable.tsx"],"sourcesContent":["import { isObject, isString, storage } from '@guardian/libs';\nimport { useEffect } from 'react';\n\ntype ContainerStates = { [id: string]: string };\n\nconst isContainerStates = (item: unknown): item is ContainerStates => {\n\tif (!isObject(item)) return false;\n\tif (!Object.keys(item).every(isString)) return false;\n\tif (!Object.values(item).every(isString)) return false;\n\treturn true;\n};\n\nconst getContainerStates = (): ContainerStates => {\n\tconst item = storage.local.get(`gu.prefs.container-states`);\n\n\tif (!isContainerStates(item)) return {};\n\n\treturn item;\n};\n\ntype Props = {\n\t/** When in the ON position, we remove the show/hide functionality for all\n\t * containers on the page if the user does not have any hidden containers */\n\tdisableFrontContainerToggleSwitch: boolean;\n};\n\nexport const ShowHideContainers = ({\n\tdisableFrontContainerToggleSwitch,\n}: Props) => {\n\tuseEffect(() => {\n\t\tconst containerStates = getContainerStates();\n\n\t\tconst toggleContainer = (sectionId: string, element: HTMLElement) => {\n\t\t\tconst isExpanded = element.getAttribute('aria-expanded') === 'true';\n\n\t\t\tconst section: Element | null =\n\t\t\t\twindow.document.getElementById(sectionId);\n\n\t\t\tif (isExpanded) {\n\t\t\t\tcontainerStates[sectionId] = 'closed';\n\t\t\t\tsection?.classList.add('hidden');\n\t\t\t\telement.innerHTML = 'Show';\n\t\t\t\telement.setAttribute('aria-expanded', 'false');\n\t\t\t\telement.setAttribute('data-link-name', 'Show');\n\t\t\t} else {\n\t\t\t\tcontainerStates[sectionId] = 'opened';\n\t\t\t\tsection?.classList.remove('hidden');\n\t\t\t\telement.innerHTML = 'Hide';\n\t\t\t\telement.setAttribute('aria-expanded', 'true');\n\t\t\t\telement.setAttribute('data-link-name', 'Hide');\n\t\t\t}\n\n\t\t\tstorage.local.set(`gu.prefs.container-states`, containerStates);\n\t\t};\n\n\t\tconst allShowHideButtons = Array.from(\n\t\t\twindow.document.querySelectorAll<HTMLElement>(\n\t\t\t\t'[data-show-hide-button]',\n\t\t\t),\n\t\t);\n\n\t\tconst allContainersAreExpanded = allShowHideButtons\n\t\t\t.map((el) => {\n\t\t\t\tconst sectionId = el.getAttribute('data-show-hide-button');\n\t\t\t\treturn sectionId && containerStates[sectionId];\n\t\t\t})\n\t\t\t.every((state) => state !== 'closed');\n\n\t\tfor (const e of allShowHideButtons) {\n\t\t\t// We want to remove the ability to toggle front containers between expanded and collapsed states.\n\t\t\t// The first part of doing this is removing the feature for those who do not currently use it.\n\t\t\tif (disableFrontContainerToggleSwitch && allContainersAreExpanded) {\n\t\t\t\te.remove();\n\t\t\t}\n\n\t\t\tconst sectionId = e.getAttribute('data-show-hide-button');\n\t\t\tif (!sectionId) continue;\n\n\t\t\te.onclick = () => toggleContainer(sectionId, e);\n\n\t\t\tif (containerStates[sectionId] === 'closed') {\n\t\t\t\ttoggleContainer(sectionId, e);\n\t\t\t}\n\t\t}\n\t}, [disableFrontContainerToggleSwitch]);\n\n\treturn <></>;\n};\n"],"names":["ShowHideContainers","disableFrontContainerToggleSwitch","useEffect","containerStates","item","storage","local","get","isObject","Object","keys","every","isString","values","isContainerStates","getContainerStates","toggleContainer","sectionId","element","isExpanded","getAttribute","section","window","document","getElementById","classList","add","innerHTML","setAttribute","remove","set","allShowHideButtons","Array","from","querySelectorAll","allContainersAreExpanded","map","el","state","e","onclick"],"sourceRoot":""}