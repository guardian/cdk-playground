{"version":3,"file":"FocusStyles-importable.client.web.legacy.486948540cd94aaa5c59.js","mappings":"+KA0CIA,E,iCA1CAC,EAAYC,OAAOC,eAEnBC,EAAgB,SAACC,EAAKC,EAAKC,GAAK,OADd,SAACF,EAAKC,EAAKC,GAAK,OAAKD,KAAOD,EAAMJ,EAAUI,EAAKC,EAAK,CAAEE,YAAY,EAAMC,cAAc,EAAMC,UAAU,EAAMH,MAAAA,IAAWF,EAAIC,GAAOC,CAAM,CACvHI,CAAgBN,EAAoB,YAAfO,EAAAA,EAAAA,GAAON,GAAmBA,EAAM,GAAKA,EAAKC,EAAO,EAEzGM,EAAqB,WAiBgC,OAAvDC,EAAAA,EAAAA,IAhBA,SAAAD,EAAYE,EAAWC,GAAY,IAADC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAL,GAC9BM,KAAKJ,UAAYA,EACjBI,KAAKH,UAAYA,EACjBZ,EAAce,KAAM,aAAa,GACjCf,EAAce,KAAM,iBAAiB,SAACC,GANzB,IAOLA,EAAEC,QACFJ,EAAKK,QACLL,EAAKF,UAAUQ,iBAAiB,YAAaN,EAAKO,iBAE1D,IACApB,EAAce,KAAM,mBAAmB,WACnCF,EAAKK,QACLL,EAAKF,UAAUU,UAAUC,IAAIT,EAAKD,WAClCC,EAAKF,UAAUQ,iBAAiB,UAAWN,EAAKU,cACpD,GACJ,GACA,EAAArB,IAAA,WAAAC,MACA,WACI,OAAOY,KAAKS,SAChB,GACA,CAAAtB,IAAA,QAAAC,MACA,WACIY,KAAKJ,UAAUQ,iBAAiB,YAAaJ,KAAKK,iBAClDL,KAAKS,WAAY,CACrB,GACA,CAAAtB,IAAA,OAAAC,MACA,WACIY,KAAKG,QACLH,KAAKS,WAAY,CACrB,GAAC,CAAAtB,IAAA,QAAAC,MACD,WACIY,KAAKJ,UAAUU,UAAUI,OAAOV,KAAKH,WACrCG,KAAKJ,UAAUe,oBAAoB,UAAWX,KAAKQ,eACnDR,KAAKJ,UAAUe,oBAAoB,YAAaX,KAAKK,gBACzD,IAAC,CAnCsB,GA6CrBO,EAGmB,WAAF,OARd/B,IACDA,EAAe,IAAIa,EAAsBmB,SAASC,gBAJnC,uBAMZjC,GAKkCkC,OAAO,E,WClDvCC,EAAc,WAQvB,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACJ,GAAG,IAEI,IACX,C","sources":["webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/accessibility/focus-style-manager.js","webpack://@guardian/dotcom-rendering/./src/components/FocusStyles.importable.tsx"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nconst TAB_KEY_CODE = 9;\nclass InteractionModeEngine {\n    constructor(container, className) {\n        this.container = container;\n        this.className = className;\n        __publicField(this, \"isRunning\", false);\n        __publicField(this, \"handleKeyDown\", (e) => {\n            if (e.which === TAB_KEY_CODE) {\n                this.reset();\n                this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n            }\n        });\n        __publicField(this, \"handleMouseDown\", () => {\n            this.reset();\n            this.container.classList.add(this.className);\n            this.container.addEventListener(\"keydown\", this.handleKeyDown);\n        });\n    }\n    /** Returns whether the engine is currently running. */\n    isActive() {\n        return this.isRunning;\n    }\n    /** Enable behavior which applies the given className when in mouse mode. */\n    start() {\n        this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        this.isRunning = true;\n    }\n    /** Disable interaction mode behavior and remove className from container. */\n    stop() {\n        this.reset();\n        this.isRunning = false;\n    }\n    reset() {\n        this.container.classList.remove(this.className);\n        this.container.removeEventListener(\"keydown\", this.handleKeyDown);\n        this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n    }\n}\nconst FOCUS_DISABLED = \"src-focus-disabled\";\nlet _focusEngine;\nconst focusEngine = () => {\n    if (!_focusEngine) {\n        _focusEngine = new InteractionModeEngine(document.documentElement, FOCUS_DISABLED);\n    }\n    return _focusEngine;\n};\nconst FocusStyleManager = {\n    alwaysShowFocus: () => focusEngine().stop(),\n    isActive: () => focusEngine().isActive(),\n    onlyShowFocusOnTabs: () => focusEngine().start()\n};\nexport { FocusStyleManager, InteractionModeEngine };\n","import { FocusStyleManager } from '@guardian/source/foundations';\nimport { useEffect } from 'react';\nexport const FocusStyles = () => {\n    // Ensure the focus state of any buttons/inputs in any of the Source\n    // components are only applied when navigating via keyboard.\n    // READ: https://www.theguardian.design/2a1e5182b/p/6691bb-accessibility/t/32e9fb\n    useEffect(() => {\n        FocusStyleManager.onlyShowFocusOnTabs();\n    }, []);\n    // Nothing is rendered by this component\n    return null;\n};\n"],"names":["_focusEngine","__defProp","Object","defineProperty","__publicField","obj","key","value","enumerable","configurable","writable","__defNormalProp","_typeof","InteractionModeEngine","_createClass","container","className","_this","_classCallCheck","this","e","which","reset","addEventListener","handleMouseDown","classList","add","handleKeyDown","isRunning","remove","removeEventListener","FocusStyleManager","document","documentElement","start","FocusStyles","useEffect"],"sourceRoot":""}