{"version":3,"file":"AdPortals-importable.client.web.0438852377cf6d9635f6.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/lodash.debounce@4.0.8/node_modules/lodash.debounce/index.js","webpack://@guardian/dotcom-rendering/./src/components/AdPlaceholder.apps.tsx","webpack://@guardian/dotcom-rendering/./src/components/AdSlot.apps.tsx","webpack://@guardian/dotcom-rendering/./src/components/AdPortals.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/thrift/protocols.ts","webpack://@guardian/dotcom-rendering/./src/lib/thrift/nativeConnection.ts","webpack://@guardian/dotcom-rendering/./src/lib/bridgetApi.ts","webpack://@guardian/dotcom-rendering/./src/lib/useMatchMedia.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/mq/mq.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","import { css } from '@emotion/react';\n\nconst rightAdsPlaceholderClass = 'right-ad-portal-placeholder';\nconst adPlaceholderClass = 'ad-portal-placeholder';\n\nconst rightAdsStyles = css`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\theight: 100%;\n`;\n\n/**\n * A server-side ad placeholder for apps, into which ads are inserted\n * client-side. See `AdPortals.importable.tsx` for more details.\n */\nconst RightAdsPlaceholder = () => (\n\t<div className={rightAdsPlaceholderClass} css={rightAdsStyles}></div>\n);\n\n/**\n * A server-side ad placeholder for apps, into which ads are inserted\n * client-side. See `AdPortals.importable.tsx` for more details.\n */\nconst AdPlaceholder = () => <div className={adPlaceholderClass} />;\n\nexport {\n\tAdPlaceholder,\n\tadPlaceholderClass,\n\trightAdsPlaceholderClass,\n\tRightAdsPlaceholder,\n};\n","import { css } from '@emotion/react';\nimport { remSpace, textSans14, until } from '@guardian/source/foundations';\nimport { forwardRef } from 'react';\nimport { palette } from '../palette';\n\n// Exported for Storybook use\nexport interface Props {\n\tisFirstAdSlot: boolean;\n}\n\nconst adHeightPx = 258;\n\nconst styles = css`\n\tclear: both;\n\tmargin: ${remSpace[4]} 0;\n\tbackground: ${palette('--ad-background')};\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\t${until.phablet} {\n\t\tmargin: 1em 0px;\n\t}\n`;\n\nconst adLabelsStyles = css`\n\t${textSans14}\n\tpadding: ${remSpace[3]};\n\tfloat: left;\n\tdisplay: flex;\n\tjustify-content: center;\n\n\t/* We need to account for padding on both sides */\n\twidth: calc(100% - 2 * ${remSpace[3]});\n\n\tp {\n\t\tmargin: 0;\n\t\tfloat: left;\n\t\tfont-size: 16px;\n\t\tfont-weight: 400;\n\t\tcolor: ${palette('--ad-labels-text')};\n\t}\n`;\n\nconst adSlotStyles = css`\n\tclear: both;\n\tpadding-bottom: ${adHeightPx}px;\n\twidth: 100%;\n`;\n\nconst adSlotSquareStyles = css`\n\t${adSlotStyles}\n\t${until.phablet} {\n\t\twidth: 320px;\n\t\tmargin-left: 10px;\n\t\tmargin-right: 10px;\n\t}\n\n\theight: 344px;\n\twidth: 300px;\n\tpadding-bottom: 0;\n`;\n\n/**\n * AdSlot component for in-article ads **on apps only**\n *\n * Is set up with a forward ref due to the way ads are handled natively.\n * These slots are dynamically inserted into articles using React portals.\n * The ref is important so that we can provide the location of the slot to\n * the native layer, for it to \"paint\" an advert over the top of it.\n */\nexport const AdSlot = forwardRef<HTMLDivElement, Props>(\n\t({ isFirstAdSlot }, ref) => (\n\t\t<aside css={styles}>\n\t\t\t<div css={adLabelsStyles}>\n\t\t\t\t<p>Advertisement</p>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tcss={isFirstAdSlot ? adSlotSquareStyles : adSlotStyles}\n\t\t\t\tref={ref}\n\t\t\t></div>\n\t\t</aside>\n\t),\n);\n","import { AdSlot as BridgetAdSlot } from '@guardian/bridget/AdSlot';\nimport type { IRect as BridgetRect } from '@guardian/bridget/Rect';\nimport { isUndefined } from '@guardian/libs';\nimport { breakpoints } from '@guardian/source/foundations';\nimport type { Breakpoint } from '@guardian/source/foundations';\nimport libDebounce from 'lodash.debounce';\nimport { useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { getCommercialClient, getUserClient } from '../lib/bridgetApi';\nimport { useMatchMedia } from '../lib/useMatchMedia';\nimport {\n\tadPlaceholderClass,\n\trightAdsPlaceholderClass,\n} from './AdPlaceholder.apps';\nimport { AdSlot } from './AdSlot.apps';\n\nconst calculateAdPosition = (element: Element): BridgetRect => {\n\tconst elementRect = element.getBoundingClientRect();\n\n\tconst scrollLeft =\n\t\tdocument.scrollingElement !== null\n\t\t\t? document.scrollingElement.scrollLeft\n\t\t\t: document.body.scrollLeft;\n\tconst scrollTop =\n\t\tdocument.scrollingElement !== null\n\t\t\t? document.scrollingElement.scrollTop\n\t\t\t: document.body.scrollTop;\n\n\t/**\n\t * Potential optimisation: round these numbers so they are less specific\n\t * when we compare past and current ad positions. This may result in fewer\n\t * calls to Bridget to update ad positions.\n\t */\n\treturn {\n\t\tx: elementRect.left + scrollLeft,\n\t\ty: elementRect.top + scrollTop,\n\t\twidth: elementRect.width,\n\t\theight: elementRect.height,\n\t};\n};\n\nconst positionsEqual = (a: BridgetRect, b: BridgetRect): boolean =>\n\ta.height === b.height && a.width === b.width && a.x === b.x && a.y === b.y;\n\nconst calculateAdPositions = (adSlots: HTMLDivElement[]): BridgetAdSlot[] =>\n\tadSlots.map(\n\t\t(slot, index) =>\n\t\t\tnew BridgetAdSlot({\n\t\t\t\trect: calculateAdPosition(slot),\n\t\t\t\tisSquare: index === 0,\n\t\t\t}),\n\t);\n\nconst adsHaveMoved = (\n\toldPositions: BridgetAdSlot[],\n\tnewPositions: BridgetAdSlot[],\n): boolean =>\n\tnewPositions.some((newPosition, index) => {\n\t\tconst oldPositionRect = oldPositions[index]?.rect;\n\n\t\tif (isUndefined(oldPositionRect)) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn !positionsEqual(newPosition.rect, oldPositionRect);\n\t\t}\n\t});\n\nconst updateAds = (positions: BridgetAdSlot[]) =>\n\tgetCommercialClient()\n\t\t.updateAdverts(positions)\n\t\t.catch(() => console.error('Error updating adverts'));\n\nconst debounceUpdateAds = libDebounce(updateAds, 100, { leading: true });\n\n/* ********* AD PORTALS ********* \\\n * AD POSITIONS IN RIGHT COLUMN\n * If we're on a screen bigger than the `rightAlignFrom` prop (defaults to desktop)\n * We attempt to find the right aligned ad placeholder\n * If we find it, we create a single portal for the right aligned adverts\n * And include the individual adverts inside it (spaced out using flexbox)\n * .________._________________.________.\n * |        |_________________|        |\n * |        |_________________|########|\n * |        |_________________|        |\n * |        |_________________|        |\n * |        |_________________|########|\n * |________|_________________|________|\n *\n *\n * INLINE ADVERTS\n * If we're on a screen smaller than the `rightAlignFrom` prop (defaults to desktop)\n * Or we are unable to find the right aligned ad placeholder\n * We fall back to the inline ad placeholders\n * And we create individual portals for each inline advert\n * .________________.\n * |________________|\n * |################|\n * |________________|\n * |________________|\n * |################|\n * .________________.\n *\n */\n\nexport const AdPortals = ({\n\trightAlignFrom = 'desktop',\n}: {\n\t// In most cases, we want to try to display ads in the right column from desktop upwards.\n\t// For blogs, we want right aligned from wide upwards.\n\trightAlignFrom?: Breakpoint;\n}) => {\n\t// Server-rendered placeholder elements for inline ad slots to be inserted into (below desktop breakpoint)\n\tconst [adPlaceholders, setAdPlaceholders] = useState<Element[]>([]);\n\t// Server-rendered placeholder elements for right aligned ad slots to be inserted into (above desktop breakpoint)\n\tconst [rightAdPlaceholder, setRightAdPlaceholder] = useState<Element>();\n\t// References to client-side rendered ad slots.\n\tconst adSlots = useRef<HTMLDivElement[]>([]);\n\t// Reset list of ad slot references, they're re-populated during rendering\n\tadSlots.current = [];\n\t// Positions of client-side rendered ad slots.\n\tconst adPositions = useRef<BridgetAdSlot[]>([]);\n\t// The height of the body element.\n\tconst bodyHeight = useRef(0);\n\tconst tryRightAligned = useMatchMedia(\n\t\t`(min-width: ${breakpoints[rightAlignFrom]}px)`,\n\t);\n\n\t/**\n\t * Setup Ads\n\t *\n\t * After first render, and only after first render, check if the user has\n\t * the premium tier. If not, set up ads by looking for ad placeholder\n\t * elements in the page and storing them. These will be used to render\n\t * client-side ad slots.\n\t */\n\tuseEffect(() => {\n\t\tvoid getUserClient()\n\t\t\t.isPremium()\n\t\t\t.then((isPremium) => {\n\t\t\t\tif (!isPremium) {\n\t\t\t\t\tsetAdPlaceholders(\n\t\t\t\t\t\tArray.from(\n\t\t\t\t\t\t\tdocument.getElementsByClassName(adPlaceholderClass),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tsetRightAdPlaceholder(\n\t\t\t\t\t\tdocument.getElementsByClassName(\n\t\t\t\t\t\t\trightAdsPlaceholderClass,\n\t\t\t\t\t\t)[0],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => console.error('Error setting up ads'));\n\t}, []);\n\n\t/**\n\t * Insert Ads\n\t *\n\t * Once the list of ad placeholders is available, the last render should\n\t * have populated the client-side ad slots. We can use references to those\n\t * ad slots to calculate their positions, and pass these to the native\n\t * layer so that it can insert ads. If the number of ad slots doesn't match\n\t * the number of placeholders, then the ad slot references haven't been set\n\t * up correctly and we shouldn't try to insert or update ads.\n\t *\n\t * Update Ads\n\t *\n\t * Ask the native layer to update the positions of the adverts whenever the\n\t * body element's height changes, because this typically means the ad slot\n\t * positions will have changed. To minimise the number of calls to the\n\t * native layer we:\n\t * - Check the new ad positions against the previous ones to make sure\n\t * they've changed.\n\t * - Debounce any calls to the Bridget `updateAdverts` method.\n\t */\n\tuseEffect(() => {\n\t\tlet resizeObserver: ResizeObserver | undefined = undefined;\n\n\t\tif (\n\t\t\tadPlaceholders.length !== 0 &&\n\t\t\tadPlaceholders.length === adSlots.current.length\n\t\t) {\n\t\t\tadPositions.current = calculateAdPositions(adSlots.current);\n\t\t\tbodyHeight.current = document.body.clientHeight;\n\t\t\tvoid getCommercialClient()\n\t\t\t\t.insertAdverts(adPositions.current)\n\t\t\t\t.catch(() => console.error('Error inserting ads'));\n\n\t\t\tresizeObserver = new ResizeObserver((entries) => {\n\t\t\t\tif (\n\t\t\t\t\t!isUndefined(entries[0]) &&\n\t\t\t\t\tentries[0].target.clientHeight !== bodyHeight.current\n\t\t\t\t) {\n\t\t\t\t\tbodyHeight.current = entries[0].target.clientHeight;\n\t\t\t\t\tconst newAdPositions = calculateAdPositions(\n\t\t\t\t\t\tadSlots.current,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (adsHaveMoved(adPositions.current, newAdPositions)) {\n\t\t\t\t\t\tvoid debounceUpdateAds(newAdPositions);\n\t\t\t\t\t\tadPositions.current = newAdPositions;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tresizeObserver.observe(document.body);\n\n\t\t\t/**\n\t\t\t *  Observe the rightAdPlaceholder which contains most viewed, which may render after the\n\t\t\t *  ad portals have been set up (pushing down the ad slots)\n\t\t\t **/\n\t\t\tif (tryRightAligned && rightAdPlaceholder) {\n\t\t\t\tresizeObserver.observe(rightAdPlaceholder);\n\t\t\t}\n\t\t}\n\n\t\treturn () => resizeObserver?.disconnect();\n\t}, [adPlaceholders, rightAdPlaceholder, tryRightAligned]);\n\n\tconst renderAdSlot = (id: string, index: number) => (\n\t\t<AdSlot\n\t\t\tkey={id}\n\t\t\tisFirstAdSlot={index === 0}\n\t\t\tref={(node) => {\n\t\t\t\tif (node !== null) {\n\t\t\t\t\tadSlots.current = [...adSlots.current, node];\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n\n\tif (tryRightAligned && rightAdPlaceholder) {\n\t\treturn createPortal(\n\t\t\t<>\n\t\t\t\t{adPlaceholders.map((ad, index) => renderAdSlot(ad.id, index))}\n\t\t\t</>,\n\t\t\trightAdPlaceholder,\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{adPlaceholders.map((ad, index) =>\n\t\t\t\tcreatePortal(renderAdSlot(ad.id, index), ad),\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import type {\n\tInt64,\n\tIThriftField,\n\tIThriftList,\n\tIThriftMap,\n\tIThriftMessage,\n\tIThriftSet,\n\tIThriftStruct,\n\tTTransport,\n\tTType,\n} from '@creditkarma/thrift-server-core';\nimport { MessageType, TProtocol } from '@creditkarma/thrift-server-core';\n\nexport abstract class TProtocolDecorator extends TProtocol {\n\tprivate concreteProtocol: TProtocol;\n\n\tconstructor(protocol: TProtocol) {\n\t\tsuper(protocol.getTransport());\n\t\tthis.concreteProtocol = protocol;\n\t}\n\n\tgetTransport(): TTransport {\n\t\treturn this.concreteProtocol.getTransport();\n\t}\n\tflush(): Buffer {\n\t\treturn this.concreteProtocol.flush();\n\t}\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\treturn this.concreteProtocol.writeMessageBegin(name, type, seqid);\n\t}\n\twriteMessageEnd(): void {\n\t\treturn this.concreteProtocol.writeMessageEnd();\n\t}\n\twriteStructBegin(name: string): void {\n\t\treturn this.concreteProtocol.writeStructBegin(name);\n\t}\n\twriteStructEnd(): void {\n\t\treturn this.concreteProtocol.writeStructEnd();\n\t}\n\twriteFieldBegin(name: string, type: TType, id: number): void {\n\t\treturn this.concreteProtocol.writeFieldBegin(name, type, id);\n\t}\n\twriteFieldEnd(): void {\n\t\treturn this.concreteProtocol.writeFieldEnd();\n\t}\n\twriteFieldStop(): void {\n\t\treturn this.concreteProtocol.writeFieldStop();\n\t}\n\twriteMapBegin(keyType: TType, valueType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeMapBegin(keyType, valueType, size);\n\t}\n\twriteMapEnd(): void {\n\t\treturn this.concreteProtocol.writeMapEnd();\n\t}\n\twriteListBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeListBegin(elementType, size);\n\t}\n\twriteListEnd(): void {\n\t\treturn this.concreteProtocol.writeListEnd();\n\t}\n\twriteSetBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeSetBegin(elementType, size);\n\t}\n\twriteSetEnd(): void {\n\t\treturn this.concreteProtocol.writeSetEnd();\n\t}\n\twriteBool(bool: boolean): void {\n\t\treturn this.concreteProtocol.writeBool(bool);\n\t}\n\twriteByte(b: number): void {\n\t\treturn this.concreteProtocol.writeByte(b);\n\t}\n\twriteI16(i16: number): void {\n\t\treturn this.concreteProtocol.writeI16(i16);\n\t}\n\twriteI32(i32: number): void {\n\t\treturn this.concreteProtocol.writeI32(i32);\n\t}\n\twriteI64(i64: number | Int64): void {\n\t\treturn this.concreteProtocol.writeI64(i64);\n\t}\n\twriteDouble(dbl: number): void {\n\t\treturn this.concreteProtocol.writeDouble(dbl);\n\t}\n\twriteString(arg: string): void {\n\t\treturn this.concreteProtocol.writeString(arg);\n\t}\n\twriteBinary(arg: string | Buffer): void {\n\t\treturn this.concreteProtocol.writeBinary(arg);\n\t}\n\treadMessageBegin(): IThriftMessage {\n\t\treturn this.concreteProtocol.readMessageBegin();\n\t}\n\treadMessageEnd(): void {\n\t\treturn this.concreteProtocol.readMessageEnd();\n\t}\n\treadStructBegin(): IThriftStruct {\n\t\treturn this.concreteProtocol.readStructBegin();\n\t}\n\treadStructEnd(): void {\n\t\treturn this.concreteProtocol.readStructEnd();\n\t}\n\treadFieldBegin(): IThriftField {\n\t\treturn this.concreteProtocol.readFieldBegin();\n\t}\n\treadFieldEnd(): void {\n\t\treturn this.concreteProtocol.readFieldEnd();\n\t}\n\treadMapBegin(): IThriftMap {\n\t\treturn this.concreteProtocol.readMapBegin();\n\t}\n\treadMapEnd(): void {\n\t\treturn this.concreteProtocol.readMapEnd();\n\t}\n\treadListBegin(): IThriftList {\n\t\treturn this.concreteProtocol.readListBegin();\n\t}\n\treadListEnd(): void {\n\t\treturn this.concreteProtocol.readListEnd();\n\t}\n\treadSetBegin(): IThriftSet {\n\t\treturn this.concreteProtocol.readSetBegin();\n\t}\n\treadSetEnd(): void {\n\t\treturn this.concreteProtocol.readSetEnd();\n\t}\n\treadBool(): boolean {\n\t\treturn this.concreteProtocol.readBool();\n\t}\n\treadByte(): number {\n\t\treturn this.concreteProtocol.readByte();\n\t}\n\treadI16(): number {\n\t\treturn this.concreteProtocol.readI16();\n\t}\n\treadI32(): number {\n\t\treturn this.concreteProtocol.readI32();\n\t}\n\treadI64(): Int64 {\n\t\treturn this.concreteProtocol.readI64();\n\t}\n\treadDouble(): number {\n\t\treturn this.concreteProtocol.readDouble();\n\t}\n\treadBinary(): Buffer {\n\t\treturn this.concreteProtocol.readBinary();\n\t}\n\treadString(): string {\n\t\treturn this.concreteProtocol.readString();\n\t}\n\tskip(type: TType): void {\n\t\treturn this.concreteProtocol.skip(type);\n\t}\n}\n\nexport class TMultiplexedProtocol extends TProtocolDecorator {\n\tstatic readonly separator = ':';\n\treadonly serviceName: string;\n\n\tconstructor(protocol: TProtocol, serviceName: string) {\n\t\tsuper(protocol);\n\t\tthis.serviceName = serviceName;\n\t}\n\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\tif (type === MessageType.CALL || type === MessageType.ONEWAY) {\n\t\t\tsuper.writeMessageBegin(\n\t\t\t\tthis.serviceName + TMultiplexedProtocol.separator + name,\n\t\t\t\ttype,\n\t\t\t\tseqid,\n\t\t\t);\n\t\t} else {\n\t\t\tsuper.writeMessageBegin(name, type, seqid);\n\t\t}\n\t}\n}\n","import type {\n\tIClientConstructor,\n\tIProtocolConstructor,\n\tITransportConstructor,\n\tProtocolType,\n\tThriftClient,\n\tTransportType,\n\tTTransport,\n} from '@creditkarma/thrift-server-core';\nimport {\n\tgetProtocol,\n\tgetTransport,\n\tTApplicationException,\n\tTApplicationExceptionType,\n\tThriftConnection,\n} from '@creditkarma/thrift-server-core';\nimport { TMultiplexedProtocol } from './protocols';\n\ndeclare global {\n\tinterface Window {\n\t\tnativeConnections?: Record<string, NativeConnection>;\n\t\tandroid?: {\n\t\t\tpostMessage: (data: string, connectionId: string) => void;\n\t\t};\n\t\twebkit?: {\n\t\t\tmessageHandlers: {\n\t\t\t\tiOSWebViewMessage: {\n\t\t\t\t\tpostMessage: (nativeMessage: NativeMessage) => void;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n}\n\nexport interface NativeMessage {\n\tdata: string;\n\tconnectionId: string;\n}\n\ninterface PromiseResponse {\n\tresolve: (response: Buffer) => void;\n\treject: (error: Error) => void;\n\ttimeoutId: NodeJS.Timeout;\n}\n\nconst ACTION_TIMEOUT_MS = 30000;\n\nfunction sendNativeMessage(nativeMessage: NativeMessage): void {\n\tif (window.android) {\n\t\twindow.android.postMessage(\n\t\t\tnativeMessage.data,\n\t\t\tnativeMessage.connectionId,\n\t\t);\n\t} else if (window.webkit) {\n\t\twindow.webkit.messageHandlers.iOSWebViewMessage.postMessage(\n\t\t\tnativeMessage,\n\t\t);\n\t} else {\n\t\tconsole.warn('No native APIs available');\n\t}\n}\n\nlet uid = 1;\nconst getUniqueConnectionId = () => `connection-${uid++}`;\n\nexport class NativeConnection extends ThriftConnection {\n\tconnectionId = getUniqueConnectionId();\n\tpromises: PromiseResponse[] = [];\n\toutBuffer: NativeMessage[] = [];\n\n\tconstructor(\n\t\tTransport: ITransportConstructor,\n\t\tProtocol: IProtocolConstructor,\n\t) {\n\t\tsuper(Transport, Protocol);\n\t\tif (typeof window !== 'undefined') {\n\t\t\twindow.nativeConnections = window.nativeConnections ?? {};\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treset(oldConnectionId: string): void {\n\t\tif (oldConnectionId === this.connectionId && window.nativeConnections) {\n\t\t\tconsole.warn('Reseting connection ' + oldConnectionId);\n\t\t\tdelete window.nativeConnections[this.connectionId];\n\t\t\tfor (const promise of this.promises) {\n\t\t\t\tpromise.reject(\n\t\t\t\t\tnew TApplicationException(\n\t\t\t\t\t\tTApplicationExceptionType.UNKNOWN,\n\t\t\t\t\t\t'Timeout error',\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.promises = [];\n\t\t\tthis.connectionId = getUniqueConnectionId();\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treceive(message: NativeMessage): void {\n\t\tconst resolver = this.promises.shift();\n\t\tif (resolver) {\n\t\t\tclearTimeout(resolver.timeoutId);\n\t\t\tconst data = Buffer.from(message.data, 'base64');\n\t\t\tresolver.resolve(data);\n\t\t}\n\t\tthis.sendNextMessage();\n\t}\n\n\tprivate sendNextMessage(): void {\n\t\tconst message = this.outBuffer.shift();\n\t\tif (message) {\n\t\t\tconsole.log('Sending next message');\n\t\t\tsendNativeMessage(message);\n\t\t}\n\t}\n\n\tsend(dataToSend: Buffer): Promise<Buffer> {\n\t\tconst id = this.connectionId;\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias -- Reassign this\n\t\tconst connection = this;\n\t\treturn new Promise<Buffer>(function (res, rej): void {\n\t\t\tconnection.promises.push({\n\t\t\t\tresolve: res,\n\t\t\t\treject: rej,\n\t\t\t\ttimeoutId: setTimeout(function () {\n\t\t\t\t\tconnection.reset(id);\n\t\t\t\t}, ACTION_TIMEOUT_MS),\n\t\t\t});\n\t\t\tconst message: NativeMessage = {\n\t\t\t\tdata: dataToSend.toString('base64'),\n\t\t\t\tconnectionId: id,\n\t\t\t};\n\t\t\tif (connection.promises.length === 1) {\n\t\t\t\tconsole.log('Sending message immediately');\n\t\t\t\tsendNativeMessage(message);\n\t\t\t} else {\n\t\t\t\tconsole.log('Queing message because others in flight');\n\t\t\t\tconnection.outBuffer.push(message);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function createAppClient<TClient extends ThriftClient<void>>(\n\tServiceClient: IClientConstructor<TClient, void>,\n\ttransport: TransportType = 'buffered',\n\tprotocol: ProtocolType = 'compact',\n): TClient {\n\tclass NamedMultiplexedProtocol extends TMultiplexedProtocol {\n\t\tconstructor(tTransport: TTransport) {\n\t\t\tconst Protocol = getProtocol(protocol);\n\t\t\tsuper(new Protocol(tTransport), ServiceClient.serviceName ?? '');\n\t\t}\n\t}\n\tconst connection = new NativeConnection(\n\t\tgetTransport(transport),\n\t\tNamedMultiplexedProtocol,\n\t);\n\treturn new ServiceClient(connection);\n}\n","import * as Acquisitions from '@guardian/bridget/Acquisitions';\nimport * as Analytics from '@guardian/bridget/Analytics';\nimport * as Commercial from '@guardian/bridget/Commercial';\nimport * as Discussion from '@guardian/bridget/Discussion';\nimport * as Environment from '@guardian/bridget/Environment';\nimport * as Gallery from '@guardian/bridget/Gallery';\nimport * as Interaction from '@guardian/bridget/Interaction';\nimport * as Metrics from '@guardian/bridget/Metrics';\nimport * as Navigation from '@guardian/bridget/Navigation';\nimport * as Newsletters from '@guardian/bridget/Newsletters';\nimport * as Notifications from '@guardian/bridget/Notifications';\nimport * as Tag from '@guardian/bridget/Tag';\nimport * as User from '@guardian/bridget/User';\nimport * as Video from '@guardian/bridget/Videos';\nimport { isUndefined } from '@guardian/libs';\nimport { createAppClient } from './thrift/nativeConnection';\n\nlet environmentClient: Environment.Client<void> | undefined = undefined;\nexport const getEnvironmentClient = (): Environment.Client<void> => {\n\tif (isUndefined(environmentClient)) {\n\t\tenvironmentClient = createAppClient<Environment.Client<void>>(\n\t\t\tEnvironment.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn environmentClient;\n};\n\nlet commercialClient: Commercial.Client<void> | undefined = undefined;\nexport const getCommercialClient = (): Commercial.Client<void> => {\n\tif (isUndefined(commercialClient)) {\n\t\tcommercialClient = createAppClient<Commercial.Client<void>>(\n\t\t\tCommercial.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn commercialClient;\n};\n\nlet acquisitionsClient: Acquisitions.Client<void> | undefined = undefined;\nexport const getAcquisitionsClient = (): Acquisitions.Client<void> => {\n\tif (!acquisitionsClient) {\n\t\tacquisitionsClient = createAppClient<Acquisitions.Client<void>>(\n\t\t\tAcquisitions.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn acquisitionsClient;\n};\n\nlet notificationsClient: Notifications.Client<void> | undefined = undefined;\nexport const getNotificationsClient = (): Notifications.Client<void> => {\n\tif (!notificationsClient) {\n\t\tnotificationsClient = createAppClient<Notifications.Client<void>>(\n\t\t\tNotifications.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn notificationsClient;\n};\n\nlet tagClient: Tag.Client<void> | undefined = undefined;\nexport const getTagClient = (): Tag.Client<void> => {\n\tif (!tagClient) {\n\t\ttagClient = createAppClient<Tag.Client<void>>(\n\t\t\tTag.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn tagClient;\n};\n\nlet userClient: User.Client<void> | undefined = undefined;\nexport const getUserClient = (): User.Client<void> => {\n\tif (!userClient) {\n\t\tuserClient = createAppClient<User.Client<void>>(\n\t\t\tUser.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn userClient;\n};\nlet galleryClient: Gallery.Client<void> | undefined = undefined;\nexport const getGalleryClient = (): Gallery.Client<void> => {\n\tif (!galleryClient) {\n\t\tgalleryClient = createAppClient<Gallery.Client<void>>(\n\t\t\tGallery.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn galleryClient;\n};\nlet videoClient: Video.Client<void> | undefined = undefined;\nexport const getVideoClient = (): Video.Client<void> => {\n\tif (!videoClient) {\n\t\tvideoClient = createAppClient<Video.Client<void>>(\n\t\t\tVideo.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn videoClient;\n};\nlet metricsClient: Metrics.Client<void> | undefined = undefined;\nexport const getMetricsClient = (): Metrics.Client<void> => {\n\tif (!metricsClient) {\n\t\tmetricsClient = createAppClient<Metrics.Client<void>>(\n\t\t\tMetrics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn metricsClient;\n};\nlet analyticsClient: Analytics.Client<void> | undefined = undefined;\nexport const getAnalyticsClient = (): Analytics.Client<void> => {\n\tif (!analyticsClient) {\n\t\tanalyticsClient = createAppClient<Analytics.Client<void>>(\n\t\t\tAnalytics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn analyticsClient;\n};\n\nlet navigationClient: Navigation.Client<void> | undefined = undefined;\nexport const getNavigationClient = (): Navigation.Client<void> => {\n\tif (!navigationClient) {\n\t\tnavigationClient = createAppClient<Navigation.Client<void>>(\n\t\t\tNavigation.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn navigationClient;\n};\n\nlet newslettersClient: Newsletters.Client<void> | undefined = undefined;\nexport const getNewslettersClient = (): Newsletters.Client<void> => {\n\tif (!newslettersClient) {\n\t\tnewslettersClient = createAppClient<Newsletters.Client<void>>(\n\t\t\tNewsletters.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn newslettersClient;\n};\n\nlet discussionClient: Discussion.Client<void> | undefined = undefined;\nexport const getDiscussionClient = (): Discussion.Client<void> => {\n\tif (!discussionClient) {\n\t\tdiscussionClient = createAppClient<Discussion.Client<void>>(\n\t\t\tDiscussion.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn discussionClient;\n};\n\nlet interactionClient: Interaction.Client<void> | undefined = undefined;\nexport const getInteractionClient = (): Interaction.Client<void> => {\n\tif (!interactionClient) {\n\t\tinteractionClient = createAppClient<Interaction.Client<void>>(\n\t\t\tInteraction.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn interactionClient;\n};\n","import { useEffect, useState, useSyncExternalStore } from 'react';\n\n/**\n * Stores constructed media queries by their query string, so they don't have\n * to be recreated on each render. Also allows multiple components to use the\n * same media query.\n */\nconst cachedQueries = new Map<string, MediaQueryList>();\n\nconst removeMediaRulePrefix = (query: string): string =>\n\tquery.replace('@media', '').trim();\n\n/**\n * A custom hook to test the provided media query. Will return a `boolean`\n * signifying whether the media query currently matches, and will trigger a\n * re-render whenever the match status changes in either direction;\n * e.g. from `true` to `false`, or from `false` to `true`.\n *\n * @param {string} query for use with `window.matchMedia`\n * @returns {boolean} whether the media query currently matches\n */\nconst useMatchMedia = (query: string): boolean => {\n\tconst [mediaQuery, setMediaQuery] = useState(cachedQueries.get(query));\n\n\tuseEffect(() => {\n\t\tif (mediaQuery) return;\n\t\tcachedQueries.set(query, window.matchMedia(query));\n\t\tsetMediaQuery(cachedQueries.get(query));\n\t}, [mediaQuery, query]);\n\n\t/** @see https://react.dev/reference/react/useSyncExternalStore */\n\treturn useSyncExternalStore(\n\t\t(callback) => {\n\t\t\tmediaQuery?.addEventListener('change', callback);\n\n\t\t\treturn () => {\n\t\t\t\tmediaQuery?.removeEventListener('change', callback);\n\t\t\t};\n\t\t},\n\t\t() => !!mediaQuery?.matches,\n\t\t() => false, // we cannot have media queries on the server\n\t);\n};\n\nexport { removeMediaRulePrefix, useMatchMedia };\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n","const breakpoints = {\n  desktop: 980,\n  leftCol: 1140,\n  mobile: 320,\n  mobileLandscape: 480,\n  mobileMedium: 375,\n  phablet: 660,\n  tablet: 740,\n  wide: 1300\n};\n\nexport { breakpoints };\n","import { breakpoints } from '../__generated__/breakpoints.js';\n\nconst smidgen = 0.1;\nconst minWidth = (from2) => `@media (min-width: ${`${from2}px`})`;\nconst maxWidth = (until2) => `@media (max-width: ${`${until2 - smidgen}px`})`;\nconst minWidthMaxWidth = (from2, until2) => `@media (min-width: ${`${from2}px`}) and (max-width: ${`${until2 - smidgen}px`})`;\nconst from = {\n  mobile: minWidth(breakpoints.mobile),\n  mobileMedium: minWidth(breakpoints.mobileMedium),\n  mobileLandscape: minWidth(breakpoints.mobileLandscape),\n  phablet: minWidth(breakpoints.phablet),\n  tablet: minWidth(breakpoints.tablet),\n  desktop: minWidth(breakpoints.desktop),\n  leftCol: minWidth(breakpoints.leftCol),\n  wide: minWidth(breakpoints.wide)\n};\nconst until = {\n  mobile: maxWidth(breakpoints.mobile),\n  mobileMedium: maxWidth(breakpoints.mobileMedium),\n  mobileLandscape: maxWidth(breakpoints.mobileLandscape),\n  phablet: maxWidth(breakpoints.phablet),\n  tablet: maxWidth(breakpoints.tablet),\n  desktop: maxWidth(breakpoints.desktop),\n  leftCol: maxWidth(breakpoints.leftCol),\n  wide: maxWidth(breakpoints.wide)\n};\nconst between = {\n  mobile: {\n    and: {\n      mobileMedium: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileMedium\n      ),\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileMedium: {\n    and: {\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobileMedium,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileLandscape: {\n    and: {\n      phablet: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.phablet\n      ),\n      tablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n      desktop: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.desktop\n      ),\n      leftCol: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.leftCol\n      ),\n      wide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide)\n    }\n  },\n  phablet: {\n    and: {\n      tablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide)\n    }\n  },\n  tablet: {\n    and: {\n      desktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide)\n    }\n  },\n  desktop: {\n    and: {\n      leftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide)\n    }\n  },\n  leftCol: {\n    and: {\n      wide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide)\n    }\n  }\n};\n\nexport { between, from, until };\n"],"names":["reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","g","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","isObject","value","type","toNumber","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","cancel","clearTimeout","flush","rightAdsPlaceholderClass","adPlaceholderClass","rightAdsStyles","css","RightAdsPlaceholder","div","className","styles","remSpace","palette","until","phablet","adLabelsStyles","textSans14","adSlotStyles","adSlotSquareStyles","AdSlot","forwardRef","ref","isFirstAdSlot","aside","p","calculateAdPosition","element","elementRect","getBoundingClientRect","scrollLeft","document","scrollingElement","body","scrollTop","x","left","y","top","width","height","calculateAdPositions","adSlots","map","slot","index","BridgetAdSlot","rect","isSquare","debounceUpdateAds","libDebounce","positions","getCommercialClient","updateAdverts","catch","console","error","AdPortals","rightAlignFrom","adPlaceholders","setAdPlaceholders","useState","rightAdPlaceholder","setRightAdPlaceholder","useRef","current","adPositions","bodyHeight","tryRightAligned","useMatchMedia","breakpoints","useEffect","getUserClient","isPremium","then","Array","from","getElementsByClassName","resizeObserver","length","clientHeight","insertAdverts","ResizeObserver","entries","isUndefined","target","newAdPositions","oldPositions","some","newPosition","oldPositionRect","a","b","observe","disconnect","renderAdSlot","id","node","createPortal","ad","TProtocolDecorator","TProtocol","getTransport","concreteProtocol","writeMessageBegin","name","seqid","writeMessageEnd","writeStructBegin","writeStructEnd","writeFieldBegin","writeFieldEnd","writeFieldStop","writeMapBegin","keyType","valueType","size","writeMapEnd","writeListBegin","elementType","writeListEnd","writeSetBegin","writeSetEnd","writeBool","bool","writeByte","writeI16","i16","writeI32","i32","writeI64","i64","writeDouble","dbl","writeString","arg","writeBinary","readMessageBegin","readMessageEnd","readStructBegin","readStructEnd","readFieldBegin","readFieldEnd","readMapBegin","readMapEnd","readListBegin","readListEnd","readSetBegin","readSetEnd","readBool","readByte","readI16","readI32","readI64","readDouble","readBinary","readString","skip","constructor","protocol","super","TMultiplexedProtocol","MessageType","CALL","ONEWAY","serviceName","separator","sendNativeMessage","nativeMessage","window","android","postMessage","data","connectionId","webkit","messageHandlers","iOSWebViewMessage","warn","uid","getUniqueConnectionId","NativeConnection","ThriftConnection","reset","oldConnectionId","nativeConnections","promise","promises","reject","TApplicationException","TApplicationExceptionType","UNKNOWN","receive","message","resolver","shift","timeoutId","Buffer","resolve","sendNextMessage","outBuffer","log","send","dataToSend","connection","Promise","res","rej","push","Transport","Protocol","createAppClient","ServiceClient","transport","tTransport","getProtocol","environmentClient","getEnvironmentClient","Environment","Client","commercialClient","Commercial","acquisitionsClient","getAcquisitionsClient","Acquisitions","notificationsClient","getNotificationsClient","Notifications","tagClient","getTagClient","Tag","userClient","User","galleryClient","getGalleryClient","Gallery","videoClient","getVideoClient","Video","analyticsClient","getAnalyticsClient","Analytics","navigationClient","getNavigationClient","Navigation","discussionClient","getDiscussionClient","Discussion","interactionClient","getInteractionClient","Interaction","cachedQueries","Map","removeMediaRulePrefix","query","trim","mediaQuery","setMediaQuery","get","set","matchMedia","useSyncExternalStore","callback","addEventListener","removeEventListener","matches","colour","desktop","leftCol","mobile","mobileLandscape","mobileMedium","tablet","wide","minWidth","from2","maxWidth","until2","minWidthMaxWidth","between","and"],"sourceRoot":""}