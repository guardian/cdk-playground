{"version":3,"file":"contributions-liveblog-epic.client.web.legacy.b085c63898557cd43f4a.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/marketing/epics/ContributionsLiveblogEpic.tsx","webpack://@guardian/dotcom-rendering/./src/lib/fetchEmail.ts","webpack://@guardian/dotcom-rendering/./src/lib/getIdapiUserData.ts","webpack://@guardian/dotcom-rendering/./src/lib/useIsInView.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n/**\n * @file\n * This file was migrated from:\n * https://github.com/guardian/support-dotcom-components/blob/9c3eae7cb0b159db4a1c40679d6b37710b0bb937/packages/modules/src/modules/epics/ContributionsLiveblogEpic.tsx\n */\nimport { css } from '@emotion/react';\nimport { article17, from, headlineBold34, palette, space, } from '@guardian/source/foundations';\nimport { Ticker } from '@guardian/source-development-kitchen/react-components';\nimport { containsNonArticleCountPlaceholder, replaceNonArticleCountPlaceholders, } from '@guardian/support-dotcom-components';\nimport { useEffect } from 'react';\nimport { useIsInView } from '../../../lib/useIsInView';\nimport { replaceArticleCount } from '../lib/replaceArticleCount';\nimport { createInsertEventFromTracking, createViewEventFromTracking, } from '../lib/tracking';\nimport { logEpicView } from '../lib/viewLog';\nimport { ContributionsEpicNewsletterSignup } from './ContributionsEpicNewsletterSignup';\nimport { ContributionsEpicCtasContainer } from './ctas/ContributionsEpicCtasContainer';\n// Hard-coded AB TEST - picking up ab test name and variant name from the tracking object\n// then applying a different colour if it matches, or the default colour if it doesn't.\nconst getBackgroundColour = (isInTestVariant) => {\n    return isInTestVariant ? '#E2E3BF' : palette.neutral[100];\n};\nconst getHeadingBackgroundColour = (isInTestVariant) => {\n    return isInTestVariant ? '#051D32' : palette.brandAlt[400];\n};\nconst getHeadingColour = (isInTestVariant) => {\n    return isInTestVariant ? '#FFFFFF' : palette.neutral[7];\n};\nconst container = (tracking, isInTestVariant) => css `\n\tpadding: 6px 10px 28px 10px;\n\tborder-top: 1px solid ${palette.brandAlt[400]};\n\tborder-bottom: 1px solid ${palette.neutral[86]};\n\n\tbackground: ${getBackgroundColour(isInTestVariant)};\n\n\tborder: 1px solid ${palette.neutral[0]};\n\n\t* {\n\t\t::selection {\n\t\t\tbackground: ${palette.brandAlt[400]};\n\t\t}\n\t}\n\n\t${from.tablet} {\n\t\tpadding-left: ${tracking.clientName === 'dcr' ? '60px' : '80px'};\n\t\tpadding-right: 20px;\n\t}\n`;\nconst textContainer = css `\n\t${article17};\n\n\tfont-size: 16px;\n\n\tp {\n\t\tmargin: 0;\n\t}\n\n\t& > p + p {\n\t\tmargin-top: ${space[3]}px;\n\t}\n\n\t${from.tablet} {\n\t\t& > p + p {\n\t\t\tmargin-top: ${space[4]}px;\n\t\t}\n\t}\n`;\nconst yellowHeading = (tracking, isInTestVariant) => css `\n\t${headlineBold34};\n\tfont-size: 28px;\n\tcolor: ${getHeadingColour(isInTestVariant)};\n\tbackground-color: ${getHeadingBackgroundColour(isInTestVariant)};\n\tborder-top: 1px solid ${palette.neutral[0]};\n\tborder-left: 1px solid ${palette.neutral[0]};\n\tborder-right: 1px solid ${palette.neutral[0]};\n\n\tpadding: 8px 10px 12px 10px;\n\t${from.tablet} {\n\t\tpadding-left: ${tracking.clientName === 'dcr' ? '60px' : '80px'};\n\t\tpadding-right: 20px;\n\t}\n`;\nconst tickerContainer = css `\n\tmargin-top: ${space[5]}px;\n`;\nconst defaultTickerStylingSettings = {\n    filledProgressColour: '#C41C1C',\n    progressBarBackgroundColour: '#D9A78E',\n    headlineColour: '#000000',\n    totalColour: '#C41C1C',\n    goalColour: '#000000',\n};\nconst LiveblogEpicBodyParagraph = ({ paragraph, numArticles }) => {\n    const elements = replaceArticleCount(paragraph, numArticles, 'epic');\n    return _jsx(\"p\", { children: elements });\n};\nconst LiveblogEpicBody = ({ numArticles, paragraphs, }) => {\n    return (_jsx(\"div\", { css: textContainer, children: paragraphs.map((paragraph) => (_jsx(LiveblogEpicBodyParagraph, { paragraph: paragraph, numArticles: numArticles }, paragraph))) }));\n};\nexport const ContributionsLiveblogEpic = ({ variant, countryCode, articleCounts, tracking, submitComponentEvent, onReminderOpen, fetchEmail, }) => {\n    const { newsletterSignup, tickerSettings } = variant;\n    const isColourInTestVariant = tracking.abTestName.includes('_LB_EPIC_BG_COLOUR') &&\n        tracking.abTestVariant === 'VARIANT';\n    const [hasBeenSeen, setNode] = useIsInView({\n        debounce: true,\n    });\n    useEffect(() => {\n        if (hasBeenSeen) {\n            // For epic view count\n            logEpicView(tracking.abTestName);\n            // For ophan\n            if (submitComponentEvent) {\n                submitComponentEvent(createViewEventFromTracking(tracking, tracking.campaignCode));\n            }\n        }\n    }, [hasBeenSeen, submitComponentEvent, tracking]);\n    useEffect(() => {\n        if (submitComponentEvent) {\n            submitComponentEvent(createInsertEventFromTracking(tracking, tracking.campaignCode));\n        }\n    }, [submitComponentEvent, tracking]);\n    const cleanParagraphs = variant.paragraphs.map((paragraph) => replaceNonArticleCountPlaceholders(paragraph, countryCode));\n    const cleanHeading = replaceNonArticleCountPlaceholders(variant.heading) ||\n        'Support the Guardian';\n    if (cleanParagraphs.some(containsNonArticleCountPlaceholder) ||\n        containsNonArticleCountPlaceholder(cleanHeading)) {\n        return _jsx(_Fragment, {});\n    }\n    return (_jsxs(\"div\", { \"data-testid\": \"contributions-liveblog-epic\", ref: setNode, children: [!!cleanHeading && (_jsx(\"div\", { css: yellowHeading(tracking, isColourInTestVariant), children: cleanHeading })), _jsxs(\"section\", { css: container(tracking, isColourInTestVariant), children: [_jsx(LiveblogEpicBody, { paragraphs: cleanParagraphs, numArticles: articleCounts.forTargetedWeeks }), tickerSettings?.tickerData && (_jsx(\"div\", { css: tickerContainer, children: _jsx(Ticker, { currencySymbol: tickerSettings.currencySymbol, copy: {\n                                headline: tickerSettings.copy.countLabel,\n                            }, tickerData: tickerSettings.tickerData, tickerStylingSettings: defaultTickerStylingSettings, size: 'medium' }) })), newsletterSignup ? (_jsx(ContributionsEpicNewsletterSignup, { newsletterId: newsletterSignup.newsletterId, successDescription: newsletterSignup.successDescription, tracking: tracking })) : (_jsx(ContributionsEpicCtasContainer, { variant: variant, tracking: tracking, countryCode: countryCode, articleCounts: articleCounts, onReminderOpen: onReminderOpen, fetchEmail: fetchEmail, submitComponentEvent: submitComponentEvent, isColourInTestVariant: isColourInTestVariant }))] })] }));\n};\n","import { getIdApiUserData } from './getIdapiUserData';\nimport { eitherInOktaTestOrElse } from './identity';\nconst getEmail = async (ajaxUrl) => \n// TODO Okta: Remove either when at 100% in oktaVariant test, and just use idToken\neitherInOktaTestOrElse((authState) => authState.idToken?.claims.email, () => getIdApiUserData(ajaxUrl)\n    .then((data) => data.user?.primaryEmailAddress)\n    .catch((error) => {\n    window.guardian.modules.sentry.reportError(error, 'getEmail');\n    return undefined;\n}));\n/**\n * Attempts to fetch a signed in user's email address either from okta token or falling back to IdApi request.\n * Returns null if no email address is found or if the request times out after 1 second.\n * @param {string} idapiUrl - Idapi url available from window.guardian.config.page\n */\nexport const lazyFetchEmailWithTimeout = (idapiUrl) => () => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(null), 1000);\n        void getEmail(idapiUrl).then((email) => {\n            if (email) {\n                resolve(email);\n            }\n            else {\n                resolve(null);\n            }\n        });\n    });\n};\n","import { joinUrl } from '@guardian/libs';\nfunction checkForErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText ||\n            `getIdApiUserData | An api call returned HTTP status ${response.status}`);\n    }\n    return response;\n}\nconst callApi = (url) => {\n    return fetch(url, {\n        credentials: 'include',\n    })\n        .then(checkForErrors)\n        .then((response) => response.json());\n};\nconst cache = {};\nexport const getIdApiUserData = (ajaxUrl) => {\n    if (!cache.idapiUserMeResponse) {\n        const url = joinUrl(ajaxUrl, 'user/me');\n        cache.idapiUserMeResponse = callApi(url);\n    }\n    return cache.idapiUserMeResponse;\n};\nexport const getIdapiUserIdentifiers = (ajaxUrl) => {\n    if (!cache.idapiUserIdentifiersResponse) {\n        const url = joinUrl(ajaxUrl, 'user/me/identifiers');\n        cache.idapiUserIdentifiersResponse = callApi(url);\n    }\n    return cache.idapiUserIdentifiersResponse;\n};\n","import libDebounce from 'lodash.debounce';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n/**\n * Custom hook around the `IntersectionObserver`.\n *\n * @returns a tuple containing `[isInView, setNode]`\n */\nconst useIsInView = (options) => {\n    const [isInView, setIsInView] = useState(false);\n    const [node, setNode] = useState(options.node ?? null);\n    const observer = useRef(null);\n    const intersectionObserverCallback = useCallback(([entry]) => {\n        if (!entry)\n            return;\n        if (entry.isIntersecting) {\n            setIsInView(true);\n        }\n        else if (options.repeat) {\n            setIsInView(false);\n        }\n    }, [options.repeat]);\n    const intersectionCallback = options.debounce\n        ? libDebounce(intersectionObserverCallback, 200)\n        : intersectionObserverCallback;\n    useEffect(() => {\n        options.node && setNode(options.node);\n    }, [options.node]);\n    useEffect(() => {\n        if (!node)\n            return;\n        // Check for browser support https://caniuse.com/intersectionobserver\n        if (!('IntersectionObserver' in window))\n            return;\n        observer.current = new window.IntersectionObserver(intersectionCallback, options);\n        observer.current.observe(node);\n        return () => observer.current?.disconnect();\n    }, [node, options, intersectionCallback]);\n    useEffect(() => {\n        if (!options.repeat && isInView)\n            observer.current?.disconnect();\n    }, [isInView, options.repeat]);\n    return [isInView, setNode];\n};\nexport { useIsInView };\n","/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour) => `var(${colour})`;\n// ----- Exports ----- //\nexport { palette };\n"],"names":["container","tracking","isInTestVariant","css","palette","brandAlt","neutral","getBackgroundColour","from","tablet","clientName","textContainer","article17","space","yellowHeading","headlineBold34","getHeadingColour","getHeadingBackgroundColour","tickerContainer","defaultTickerStylingSettings","filledProgressColour","progressBarBackgroundColour","headlineColour","totalColour","goalColour","LiveblogEpicBodyParagraph","_ref","paragraph","numArticles","elements","replaceArticleCount","_jsx","children","LiveblogEpicBody","_ref2","paragraphs","map","ContributionsLiveblogEpic","_ref3","variant","countryCode","articleCounts","submitComponentEvent","onReminderOpen","fetchEmail","newsletterSignup","tickerSettings","isColourInTestVariant","abTestName","includes","abTestVariant","_useIsInView","useIsInView","debounce","_useIsInView2","_slicedToArray","hasBeenSeen","setNode","useEffect","logEpicView","createViewEventFromTracking","campaignCode","createInsertEventFromTracking","cleanParagraphs","replaceNonArticleCountPlaceholders","cleanHeading","heading","some","containsNonArticleCountPlaceholder","_Fragment","_jsxs","ref","forTargetedWeeks","tickerData","Ticker","currencySymbol","copy","headline","countLabel","tickerStylingSettings","size","ContributionsEpicNewsletterSignup","newsletterId","successDescription","ContributionsEpicCtasContainer","getEmail","_asyncToGenerator","_regeneratorRuntime","_callee","ajaxUrl","_context","prev","next","abrupt","eitherInOktaTestOrElse","authState","_authState$idToken","idToken","claims","email","getIdApiUserData","then","data","_data$user","user","primaryEmailAddress","catch","error","window","guardian","modules","sentry","reportError","stop","_x","apply","arguments","lazyFetchEmailWithTimeout","idapiUrl","Promise","resolve","setTimeout","checkForErrors","response","ok","Error","statusText","concat","status","callApi","url","fetch","credentials","json","cache","idapiUserMeResponse","joinUrl","getIdapiUserIdentifiers","idapiUserIdentifiersResponse","options","_options$node","_useState","useState","_useState2","isInView","setIsInView","_useState3","node","_useState4","observer","useRef","intersectionObserverCallback","useCallback","entry","isIntersecting","repeat","intersectionCallback","libDebounce","current","IntersectionObserver","observe","_observer$current","disconnect","_observer$current2","colour"],"sourceRoot":""}