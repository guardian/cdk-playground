{"version":3,"file":"LightboxHash-importable.client.web.legacy.18d985ad4c5363c82a6d.js","mappings":"sMAuBaA,EAAe,WAUxB,OATAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAOC,OAAOC,SAASF,KAC7B,GAAIA,EAAKG,WAAW,SAAU,EAC1BC,EAAAA,EAAAA,IAAI,SAAU,6EACd,IAAMC,EAAWL,EAAKM,UAAU,GAChCC,QAAQC,aAAa,CAAC,EAAG,GAAIP,OAAOC,SAASO,SAAWR,OAAOC,SAASQ,QACxEH,QAAQI,UAAU,CAAC,EAAG,GAAG,QAADC,OAAUP,GACtC,CACJ,GAAG,IACI,IACX,C","sources":["webpack://@guardian/dotcom-rendering/./src/components/LightboxHash.importable.tsx"],"sourcesContent":["import { log } from '@guardian/libs';\nimport { useEffect } from 'react';\n/**\n * This small snippet of javascript is executed at page load. It checks to\n * see if the url that was initially loaded contains a hash matching the `#img-`\n * pattern.\n *\n * If it finds one, it means the reader has clicked a link pointing directly at an\n * image so the lightbox will immediately open. But because we close the lightbox\n * by going back, we need to make sure we have an entry in the history state to\n * go back to, so we create one here.\n *\n * If we didn't do this then you'd end up back where you were when you pasted the\n * url into the browser and unable to access the article under the lightbox.\n *\n * ## Why does this need to be an Island?\n *\n * This behaviour is entirely client-side.\n *\n * ---\n *\n * Does not render **anything**.\n */\nexport const LightboxHash = () => {\n    useEffect(() => {\n        const hash = window.location.hash;\n        if (hash.startsWith('#img-')) {\n            log('dotcom', 'ðŸ’¡ An img hash was found on the url during page load, opening lightbox...');\n            const position = hash.substring(5);\n            history.replaceState({}, '', window.location.pathname + window.location.search);\n            history.pushState({}, '', `#img-${position}`);\n        }\n    }, []);\n    return null;\n};\n"],"names":["LightboxHash","useEffect","hash","window","location","startsWith","log","position","substring","history","replaceState","pathname","search","pushState","concat"],"sourceRoot":""}