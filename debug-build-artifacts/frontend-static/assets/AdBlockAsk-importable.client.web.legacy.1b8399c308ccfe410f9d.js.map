{"version":3,"file":"AdBlockAsk-importable.client.web.legacy.1b8399c308ccfe410f9d.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/static/icons/arrow-right.svg","webpack://@guardian/dotcom-rendering/./src/components/AdBlockAsk.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useAdBlockAsk.ts","webpack://@guardian/dotcom-rendering/./src/lib/assert-unreachable.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAB.ts","webpack://@guardian/dotcom-rendering/./src/lib/detect-adblock.ts","webpack://@guardian/dotcom-rendering/./src/lib/useDetectAdBlock.ts"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgArrowRight = function SvgArrowRight(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.8 14.6l-7.6-7.6-.7.7 5.5 6.6h-14v1.5h14l-5.5 6.6.7.7 7.6-7.6v-.9\"\n  })));\n};\nexport default SvgArrowRight;","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { headlineMedium24, palette, textSans14, textSans15, textSans17, } from '@guardian/source/foundations';\nimport { assertUnreachable } from '../lib/assert-unreachable';\nimport { useAdblockAsk } from '../lib/useAdBlockAsk';\nimport ArrowRightIcon from '../static/icons/arrow-right.svg';\nimport { useConfig } from './ConfigContext';\nconst linkStyles = css `\n\tbackground: ${palette.brandAlt[400]};\n\tborder-radius: 16px;\n\tbox-sizing: border-box;\n\tcolor: ${palette.neutral[7]};\n\t${textSans17};\n\tfont-weight: 700;\n\ttext-decoration: none;\n\n\tfloat: left;\n\tline-height: 18px;\n\tposition: relative;\n\theight: 32px;\n\tpadding: 6px 34px 0 12px;\n\n\tsvg {\n\t\tfill: currentColor;\n\t\tposition: absolute;\n\t\tright: 3px;\n\t\ttop: 50%;\n\t\theight: 32px;\n\t\twidth: 32px;\n\t\ttransform: translate(0, -50%);\n\t\ttransition: transform 0.3s ease-in-out;\n\t}\n\n\t:hover svg {\n\t\ttransform: translate(3px, -50%);\n\t}\n`;\nconst adBlockAskH2Styles = css `\n\t${headlineMedium24}\n\tcolor: ${palette.brandAlt[400]};\n\tfont-weight: bold;\n`;\nconst adBlockAskTextStyles = {\n    leaderboard: css `\n\t\tmargin-top: 8px;\n\t\t${textSans14};\n\t\tcolor: ${palette.neutral[100]};\n\t`,\n    mpu: css `\n\t\tmargin-top: 16px;\n\t\t${textSans15};\n\t\tcolor: ${palette.neutral[100]};\n\t`,\n};\nconst HandsLogo = ({ styles }) => {\n    const { assetOrigin } = useConfig();\n    const src = `${assetOrigin}static/frontend/logos/hands.png`;\n    return _jsx(\"img\", { src: src, alt: \"Guardian logo held up by hands\", css: styles });\n};\nconst SupportButton = ({ href }) => (_jsxs(\"a\", { css: linkStyles, href: href, children: [\"Support us \", _jsx(ArrowRightIcon, {})] }));\nexport const Copy = ({ size }) => {\n    return (_jsxs(_Fragment, { children: [_jsx(\"h2\", { css: adBlockAskH2Styles, children: \"Using an adblocker?\" }), _jsx(\"p\", { css: adBlockAskTextStyles[size], children: \"We value your readership - but we lose vital revenue by not being able to show you ads. With no billionaire owner bankrolling our reporting, could you support us? It\\u2019s quick and any amount helps. Thanks!\" })] }));\n};\nexport const AdBlockAskLeaderboard = ({ supportButtonHref, }) => {\n    return (_jsxs(\"div\", { css: css `\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t\twidth: 728px;\n\t\t\t\theight: 114px;\n\t\t\t\tbackground-color: ${palette.sport[300]};\n\t\t\t\tmargin: 0 auto;\n\t\t\t`, children: [_jsx(HandsLogo, { styles: css `\n\t\t\t\t\tflex: 0 0 auto;\n\t\t\t\t\tmargin: auto 8px -6px 8px;\n\t\t\t\t\twidth: 81px;\n\t\t\t\t\theight: 48px;\n\t\t\t\t` }), _jsx(\"div\", { css: css `\n\t\t\t\t\tborder-left: 1px solid rgba(255, 255, 255, 0.2);\n\t\t\t\t\tpadding-left: 8px;\n\t\t\t\t\tpadding-top: 8px;\n\t\t\t\t\tmargin-right: 12px;\n\t\t\t\t\tmargin-bottom: 12px;\n\t\t\t\t`, children: _jsx(Copy, { size: \"leaderboard\" }) }), _jsx(\"div\", { css: css `\n\t\t\t\t\twidth: auto;\n\t\t\t\t\tflex: 0 0 auto;\n\t\t\t\t\tmargin: auto 12px 12px 0;\n\t\t\t\t\tposition: relative;\n\t\t\t\t`, children: _jsx(SupportButton, { href: supportButtonHref }) })] }));\n};\nexport const AdBlockAskMPU = ({ supportButtonHref, }) => {\n    return (_jsxs(\"div\", { css: css `\n\t\t\t\twidth: 300px;\n\t\t\t\theight: 274px;\n\t\t\t\tbackground-color: ${palette.sport[300]};\n\t\t\t\tpadding: 12px;\n\t\t\t\tposition: relative;\n\t\t\t`, children: [_jsx(Copy, { size: \"mpu\" }), _jsx(\"div\", { css: css `\n\t\t\t\t\tmargin-top: 56px;\n\t\t\t\t`, children: _jsx(SupportButton, { href: supportButtonHref }) }), _jsx(\"div\", { children: _jsx(HandsLogo, { styles: css `\n\t\t\t\t\t\twidth: 128px;\n\t\t\t\t\t\theight: 68px;\n\t\t\t\t\t\tbackground-position: right bottom;\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tbottom: 0;\n\t\t\t\t\t\tright: 0;\n\t\t\t\t\t` }) })] }));\n};\nexport const AdBlockAsk = ({ size, slotId, shouldHideReaderRevenue, isPaidContent, }) => {\n    const showAdBlockAsk = useAdblockAsk({\n        slotId,\n        shouldHideReaderRevenue,\n        isPaidContent,\n    });\n    if (!showAdBlockAsk) {\n        return null;\n    }\n    const supportButtonHref = `https://support.theguardian.com/contribute?${new URLSearchParams({\n        utm_campaign: 'shady_pie',\n        utm_source: 'GUARDIAN_WEB',\n        utm_medium: 'ACQUISITIONS_OTHER',\n        utm_content: 'shady_pie',\n        utm_term: 'control',\n    }).toString()}`;\n    switch (size) {\n        case 'leaderboard': {\n            return (_jsx(AdBlockAskLeaderboard, { supportButtonHref: supportButtonHref }));\n        }\n        case 'mpu': {\n            return _jsx(AdBlockAskMPU, { supportButtonHref: supportButtonHref });\n        }\n        default: {\n            return assertUnreachable(size);\n        }\n    }\n};\n","import { EventTimer } from '@guardian/commercial';\nimport { getConsentFor, onConsentChange } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { adFreeDataIsPresent } from '../client/userFeatures/user-features-lib';\nimport { useAB } from './useAB';\nimport { useDetectAdBlock } from './useDetectAdBlock';\nconst useIsInAdBlockAskVariant = () => {\n    const abTestAPI = useAB()?.api;\n    const isInVariant = !!abTestAPI?.isUserInVariant('AdBlockAsk', 'variant');\n    return isInVariant;\n};\nexport const useAdblockAsk = ({ slotId, shouldHideReaderRevenue, isPaidContent, }) => {\n    const isInVariant = useIsInAdBlockAskVariant();\n    const adBlockerDetected = useDetectAdBlock();\n    const [isAdFree, setIsAdFree] = useState(false);\n    const [hasConsentForGoogletag, setHasConsentForGoogletag] = useState(false);\n    const canDisplayAdBlockAsk = !shouldHideReaderRevenue &&\n        !isPaidContent &&\n        !isAdFree &&\n        hasConsentForGoogletag;\n    useEffect(() => {\n        onConsentChange((consentState) => {\n            if (consentState.tcfv2) {\n                return setHasConsentForGoogletag(getConsentFor('googletag', consentState));\n            }\n            setHasConsentForGoogletag(true);\n        });\n    }, []);\n    useEffect(() => {\n        setIsAdFree(adFreeDataIsPresent());\n    }, []);\n    useEffect(() => {\n        // Only perform the detection check in the variant of the AB test, if we haven't already detected an ad-blocker and the reader/content is eligible for displaying such a message\n        if (isInVariant) {\n            EventTimer.get().setProperty('didDisplayAdBlockAsk', false);\n            if (adBlockerDetected && canDisplayAdBlockAsk) {\n                // Some ad-blockers will remove slots from the DOM, while others don't\n                // This clean-up ensures that any space we've reserved for an ad is removed,\n                // in order to properly layout the ask.\n                document\n                    .getElementById(slotId)\n                    ?.closest('.ad-slot-container')\n                    ?.remove();\n                EventTimer.get().setProperty('didDisplayAdBlockAsk', true);\n            }\n        }\n    }, [isInVariant, adBlockerDetected, slotId, canDisplayAdBlockAsk]);\n    return adBlockerDetected && canDisplayAdBlockAsk && isInVariant;\n};\n","/**\n * A function that asserts it should never be called\n *\n * Useful for checking exhaustiveness of switch cases\n *\n * @see https://tinytip.co/tips/ts-switch-assert-unreachable/\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars -- We don't actually use the value\nexport const assertUnreachable = (value) => {\n    throw new Error('This should be unreachable');\n};\n","import { mutate } from 'swr';\nimport useSWRImmutable from 'swr/immutable';\nconst apiPromise = new Promise(() => { });\nconst key = 'ab-tests';\n/**\n * A hook which returns the AB Test Api when available,\n * or undefined otherwise.\n *\n * Leverages an immutable SWR to satisfy all requests to the\n * AB Core. As soon as the tests are available, all instances of\n * the useAB hook will render.\n */\nexport const useAB = () => {\n    const { data } = useSWRImmutable(key, () => apiPromise);\n    return data;\n};\nexport const setABTests = ({ api, participations }) => {\n    void mutate(key, { api, participations }, false);\n};\n","// cache the promise so we only make the requests once\nlet detectByRequests;\n/**\n * Make a HEAD request to a URL that is typically blocked by ad-blockers\n */\nconst requestDoubleclick = async (timeoutMs) => {\n    try {\n        const response = await fetch('https://www3.doubleclick.net', {\n            method: 'HEAD',\n            mode: 'no-cors',\n            cache: 'no-store',\n            signal: AbortSignal.timeout(timeoutMs),\n        });\n        // A redirect is another clue we may be being ad-blocked\n        if (response.redirected) {\n            return false;\n        }\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n};\n/**\n * Make a HEAD request to a URL that should succeed, even when using an\n * ad-blocker\n */\nconst requestGuardian = async (timeoutMs) => {\n    try {\n        await fetch('https://www.theguardian.com', {\n            method: 'HEAD',\n            mode: 'no-cors',\n            cache: 'no-store',\n            signal: AbortSignal.timeout(timeoutMs),\n        });\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n};\n/**\n * Attempt to detect presence of an ad-blocker\n *\n * This implementation of this is likely to be tweaked before launching the test\n * proper\n */\nexport const detectByRequestsOnce = async () => {\n    if (detectByRequests) {\n        return detectByRequests;\n    }\n    detectByRequests = Promise.all([\n        requestDoubleclick(1000),\n        /**\n         * We set this request with a much smaller timeout than the one we\n         * expect to be ad-blocked. This should reduce the chance that request\n         * fails and this one succeeds due to poor network connectivity\n         */\n        requestGuardian(250),\n    ]).then(([doubleclickSuccess, guardianSuccess]) => !doubleclickSuccess && guardianSuccess);\n    return detectByRequests;\n};\n","import { getConsentFor, onConsentChange } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { detectByRequestsOnce } from './detect-adblock';\nexport const useDetectAdBlock = () => {\n    const [adBlockerDetected, setAdBlockerDetected] = useState(false);\n    const [hasConsentForGoogletag, setHasConsentForGoogletag] = useState(false);\n    useEffect(() => {\n        onConsentChange((consentState) => {\n            if (consentState.tcfv2) {\n                return setHasConsentForGoogletag(getConsentFor('googletag', consentState));\n            }\n            setHasConsentForGoogletag(true);\n        });\n    }, []);\n    useEffect(() => {\n        const makeRequest = async () => {\n            if (hasConsentForGoogletag) {\n                const detectByRequests = await detectByRequestsOnce();\n                console.log('AdBlocker detected:', detectByRequests);\n                setAdBlockerDetected(detectByRequests);\n            }\n        };\n        void makeRequest();\n    }, [hasConsentForGoogletag]);\n    return adBlockerDetected;\n};\n"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","props","xmlns","width","height","viewBox","d","linkStyles","css","palette","brandAlt","neutral","textSans17","adBlockAskH2Styles","headlineMedium24","adBlockAskTextStyles","leaderboard","textSans14","mpu","textSans15","HandsLogo","_ref6","styles","assetOrigin","useConfig","src","concat","_jsx","alt","SupportButton","_ref7","href","_jsxs","children","ArrowRightIcon","Copy","_ref8","size","_Fragment","_ref3","name","_ref4","_ref5","AdBlockAskLeaderboard","_ref9","supportButtonHref","sport","_ref","_ref2","AdBlockAskMPU","_ref10","AdBlockAsk","_ref11","_useAB","abTestAPI","slotId","shouldHideReaderRevenue","isPaidContent","isInVariant","useAB","api","isUserInVariant","adBlockerDetected","useDetectAdBlock","_useState","useState","_useState2","_slicedToArray","isAdFree","setIsAdFree","_useState3","_useState4","hasConsentForGoogletag","setHasConsentForGoogletag","canDisplayAdBlockAsk","useEffect","onConsentChange","consentState","tcfv2","getConsentFor","adFreeDataIsPresent","_document$getElementB","EventTimer","get","setProperty","document","getElementById","closest","remove","useAdblockAsk","URLSearchParams","utm_campaign","utm_source","utm_medium","utm_content","utm_term","toString","assertUnreachable","value","Error","apiPromise","Promise","key","useSWRImmutable","data","setABTests","participations","mutate","detectByRequests","requestDoubleclick","_asyncToGenerator","_regeneratorRuntime","_callee","timeoutMs","_context","prev","next","fetch","method","mode","cache","signal","AbortSignal","timeout","sent","redirected","abrupt","t0","stop","_x","requestGuardian","_callee2","_context2","_x2","detectByRequestsOnce","_callee3","_context3","all","then","doubleclickSuccess","guardianSuccess","setAdBlockerDetected","makeRequest","console","log"],"sourceRoot":""}