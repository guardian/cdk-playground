{"version":3,"file":"InstagramBlockComponent-importable.client.web.5cd7a07078272b7ffd28.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/client/updateIframeHeight.tsx","webpack://@guardian/dotcom-rendering/./src/components/ClickToView.tsx","webpack://@guardian/dotcom-rendering/./src/components/InstagramBlockComponent.importable.tsx","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgCheckmark.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/button/Button.js"],"sourcesContent":["type HeightEventType = { source: { name: string } };\n\ntype Message = {\n\ttype: string;\n\tvalue: string;\n};\n\nexport const updateIframeHeight = (\n\tqueryString: `iframe${string}`,\n): Promise<void> => {\n\tconst iframes = [\n\t\t...document.querySelectorAll<HTMLIFrameElement>(queryString),\n\t];\n\n\tif (iframes.length === 0) return Promise.resolve();\n\n\twindow.addEventListener('message', (event) => {\n\t\tconst iframe = iframes.find((i) => {\n\t\t\ttry {\n\t\t\t\treturn i.name === (event as HeightEventType).source.name;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tif (iframe) {\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- weâ€™re in a try-catch\n\t\t\t\tconst message = JSON.parse(event.data) as Message;\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\tcase 'set-height':\n\t\t\t\t\t\tiframe.height = message.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\t});\n\n\tfor (const iframe of iframes) {\n\t\tconst src = (iframe.getAttribute('srcdoc') ?? '')\n\t\t\t.replace(/<gu-script>/g, '<script>')\n\t\t\t.replace(/<\\/gu-script>/g, '<' + '/script>');\n\t\tiframe.setAttribute('srcdoc', src);\n\t}\n\n\treturn Promise.resolve();\n};\n","import { css } from '@emotion/react';\nimport {\n\tspace,\n\ttextSans15,\n\ttextSans17,\n\ttextSansBold17,\n\ttextSansBold20,\n} from '@guardian/source/foundations';\nimport { Button, SvgCheckmark } from '@guardian/source/react-components';\nimport { useState } from 'react';\nimport { palette } from '../palette';\nimport type { RoleType } from '../types/content';\n\ntype Props = {\n\tchildren: React.ReactNode;\n\trole?: RoleType;\n\tonAccept?: () => void;\n\tisTracking: boolean;\n\tisMainMedia?: boolean;\n\tsource?: string;\n\tsourceDomain?: string;\n};\n\nconst roleTextSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn textSans17;\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\tcase 'thumbnail': {\n\t\t\treturn textSans15;\n\t\t}\n\t}\n};\n\nconst roleHeadlineSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn textSansBold20;\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\tcase 'thumbnail': {\n\t\t\treturn textSansBold17;\n\t\t}\n\t}\n};\n\nconst roleButtonSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn 'default';\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\t\treturn 'small';\n\t\tcase 'thumbnail': {\n\t\t\treturn 'xsmall';\n\t\t}\n\t}\n};\n\nconst roleButtonText = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase':\n\t\tcase 'halfWidth':\n\t\tcase 'supporting': {\n\t\t\treturn 'Allow and continue';\n\t\t}\n\t\tcase 'thumbnail': {\n\t\t\treturn 'Allow';\n\t\t}\n\t}\n};\n\nconst buttonCss = css`\n\tbackground-color: ${palette('--click-to-view-button')};\n\tcolor: ${palette('--click-to-view-button-text')};\n\n\t:hover,\n\t:focus {\n\t\tbackground-color: ${palette('--click-to-view-button-hover')};\n\t}\n`;\n\nconst shouldDisplayOverlay = ({\n\tisTracking,\n\tisOverlayClicked,\n\tisMainMedia,\n}: {\n\tisTracking: boolean;\n\tisOverlayClicked: boolean;\n\tisMainMedia?: boolean;\n}) => {\n\tif (!!isMainMedia || !isTracking) {\n\t\treturn false;\n\t}\n\tif (isOverlayClicked) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport const ClickToView = ({\n\tchildren,\n\trole = 'inline',\n\tonAccept,\n\tisTracking,\n\tisMainMedia,\n\tsource,\n\tsourceDomain = 'unknown',\n}: Props) => {\n\tconst [isOverlayClicked, setIsOverlayClicked] = useState<boolean>(false);\n\n\tconst handleClick = () => {\n\t\tsetIsOverlayClicked(true);\n\t\tif (onAccept) {\n\t\t\tsetTimeout(() => onAccept());\n\t\t}\n\t};\n\n\tconst textSize = roleTextSize(role);\n\n\tif (\n\t\tshouldDisplayOverlay({\n\t\t\tisTracking,\n\t\t\tisOverlayClicked,\n\t\t\tisMainMedia,\n\t\t})\n\t) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tcss={css`\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbackground: ${palette('--click-to-view-background')};\n\t\t\t\t\tborder: 1px solid ${palette('--click-to-view-border')};\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tpadding: ${space[1]}px ${space[6]}px ${space[3]}px;\n\t\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t\t`}\n\t\t\t\tdata-component={`click-to-view:${sourceDomain}`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${roleHeadlineSize(role)}\n\t\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{source\n\t\t\t\t\t\t? `Allow ${source} content?`\n\t\t\t\t\t\t: 'Allow content provided by a third party?'}\n\t\t\t\t</div>\n\t\t\t\t<p\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${textSize}\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{source ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tThis article includes content provided by {source}.\n\t\t\t\t\t\t\tWe ask for your permission before anything is\n\t\t\t\t\t\t\tloaded, as they may be using cookies and other\n\t\t\t\t\t\t\ttechnologies. To view this content,{' '}\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\tclick &apos;Allow and continue&apos;\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tThis article includes content hosted on{' '}\n\t\t\t\t\t\t\t{sourceDomain}. We ask for your permission before\n\t\t\t\t\t\t\tanything is loaded, as the provider may be using\n\t\t\t\t\t\t\tcookies and other technologies. To view this\n\t\t\t\t\t\t\tcontent,{' '}\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\tclick &apos;Allow and continue&apos;\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\tmargin-top: ${space[5]}px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tpriority=\"primary\"\n\t\t\t\t\t\tsize={roleButtonSize(role)}\n\t\t\t\t\t\ticon={<SvgCheckmark />}\n\t\t\t\t\t\ticonSide=\"left\"\n\t\t\t\t\t\tonClick={() => handleClick()}\n\t\t\t\t\t\tdata-testid=\"click-to-view-button\"\n\t\t\t\t\t\tdata-link-name=\"allow-button\"\n\t\t\t\t\t\tcssOverrides={buttonCss}\n\t\t\t\t\t>\n\t\t\t\t\t\t{roleButtonText(role)}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <>{children}</>;\n};\n","import { css } from '@emotion/react';\nimport { updateIframeHeight } from '../client/updateIframeHeight';\nimport type { InstagramBlockElement } from '../types/content';\nimport { ClickToView } from './ClickToView';\n\nconst fullWidthStyles = css`\n\twidth: 100%;\n`;\n\n/**\n * Note the iframe created in this component is dependent on the embedIFrame function being\n * called to be size correctly.\n * src/client/embedIframe/embedIframe.ts\n */\ntype Props = {\n\telement: InstagramBlockElement;\n\tindex: number;\n\tisMainMedia: boolean;\n};\nexport const InstagramBlockComponent = ({\n\telement,\n\tindex,\n\tisMainMedia,\n}: Props) => {\n\treturn (\n\t\t<ClickToView\n\t\t\trole={element.role}\n\t\t\tisTracking={element.isThirdPartyTracking}\n\t\t\tisMainMedia={isMainMedia}\n\t\t\tsource={element.source}\n\t\t\tsourceDomain={element.sourceDomain}\n\t\t\tonAccept={() =>\n\t\t\t\tupdateIframeHeight(`iframe[name=\"instagram-embed-${index}\"]`)\n\t\t\t}\n\t\t>\n\t\t\t<iframe\n\t\t\t\tcss={fullWidthStyles}\n\t\t\t\tclassName=\"js-embed__iframe\"\n\t\t\t\tname={`instagram-embed-${index}`}\n\t\t\t\tdata-testid=\"instagram-embed\"\n\t\t\t\ttitle={`Instagram Post ${index}`}\n\t\t\t\tsrcDoc={`${element.html}\n\t\t\t<script src=\"https://interactive.guim.co.uk/libs/iframe-messenger/iframeMessenger.js\"></script>\n\t\t\t<gu-script>iframeMessenger.enableAutoResize();</gu-script>`}\n\t\t\t/>\n\t\t</ClickToView>\n\t);\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden } from '../../../foundations/accessibility/visually-hidden.js';\nimport { iconSize } from '../../../foundations/__generated__/size.js';\n\nconst Svg = ({ size, theme }) => /* @__PURE__ */ jsx(\n  \"svg\",\n  {\n    width: size ? iconSize[size] : void 0,\n    height: void 0,\n    viewBox: \"-3 -3 30 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: false,\n    \"aria-hidden\": true,\n    children: /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        d: \"M3.011 11.884 2 12.894l5.057 7.08h.48L22 5.006l-1.011-.986L7.537 16.207z\",\n        fill: theme?.fill\n      }\n    )\n  }\n);\nconst SvgCheckmark = ({\n  size,\n  theme,\n  isAnnouncedByScreenReader = false\n}) => /* @__PURE__ */ jsxs(Fragment, { children: [\n  /* @__PURE__ */ jsx(Svg, { size, theme }),\n  isAnnouncedByScreenReader ? /* @__PURE__ */ jsx(\n    \"span\",\n    {\n      css: css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`,\n      children: \"Checkmark\"\n    }\n  ) : \"\"\n] });\n\nexport { SvgCheckmark };\n","import { jsx } from '@emotion/react/jsx-runtime';\nimport { buttonContents } from './shared.js';\nimport { buttonStyles } from './styles.js';\n\nconst Button = ({\n  priority,\n  size,\n  icon: iconSvg,\n  iconSide,\n  hideLabel,\n  nudgeIcon,\n  type = \"button\",\n  isLoading = false,\n  loadingAnnouncement = \"Loading\",\n  cssOverrides,\n  children,\n  theme,\n  ...props\n}) => /* @__PURE__ */ jsx(\n  \"button\",\n  {\n    css: buttonStyles({\n      size,\n      priority,\n      icon: iconSvg,\n      hideLabel,\n      iconSide,\n      nudgeIcon,\n      cssOverrides,\n      isLoading,\n      theme\n    }),\n    type,\n    \"aria-live\": \"polite\",\n    \"aria-label\": isLoading ? loadingAnnouncement : void 0,\n    ...props,\n    children: buttonContents({\n      hideLabel,\n      iconSvg,\n      isLoading,\n      children\n    })\n  }\n);\n\nexport { Button };\n"],"names":["updateIframeHeight","queryString","iframes","document","querySelectorAll","length","Promise","resolve","window","addEventListener","event","iframe","find","i","name","source","e","message","JSON","parse","data","type","height","value","src","getAttribute","replace","setAttribute","roleHeadlineSize","role","textSansBold20","textSansBold17","roleButtonSize","roleButtonText","buttonCss","css","palette","ClickToView","children","onAccept","isTracking","isMainMedia","sourceDomain","isOverlayClicked","setIsOverlayClicked","useState","textSize","textSans17","textSans15","roleTextSize","shouldDisplayOverlay","div","space","data-component","p","strong","Button","priority","size","icon","SvgCheckmark","iconSide","onClick","setTimeout","data-testid","data-link-name","cssOverrides","fullWidthStyles","InstagramBlockComponent","element","index","isThirdPartyTracking","className","title","srcDoc","html","colour","Svg","theme","jsx","width","iconSize","viewBox","xmlns","focusable","fillRule","clipRule","d","fill","isAnnouncedByScreenReader","jsxs","Fragment","visuallyHidden","iconSvg","hideLabel","nudgeIcon","isLoading","loadingAnnouncement","props","buttonStyles","buttonContents"],"sourceRoot":""}