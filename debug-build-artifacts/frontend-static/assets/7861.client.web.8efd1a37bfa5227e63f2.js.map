{"version":3,"file":"7861.client.web.8efd1a37bfa5227e63f2.js","mappings":"oMAGA,MAAMA,EAAiB,8BAEVC,EAAwB,KACpC,MAAMC,EAAkC,IACpCC,SAASC,iBACX,6BAIF,GAA0B,IAAtBF,EAAWG,OAAc,OAAOC,QAAQC,UAK5C,IAAK,MAAMC,KAAUN,EAAY,C,IAChCM,EAAoB,QAApBA,EAAAA,EAAOC,qBAAPD,IAAAA,GAAAA,EAAsBE,YAAY,SAAUV,EAC7C,CA2CA,OAzCAW,OAAOC,iBAAiB,WAAYC,IACnC,GAAIA,EAAMC,SAAWd,EAAgB,OAErC,MAAMe,EAA+Bb,EAAWc,QAAQC,IACvD,IACC,GAAwB,OAApBA,EAAER,eAA2C,OAAjBI,EAAMK,OACrC,OAAOD,EAAER,gBAAkBI,EAAMK,MAEnC,CAAE,MAAOC,GACR,OAAO,CACR,CACA,OAAO,CAAK,IAEb,GAAuB,IAAnBJ,EAAQV,OACX,IACC,MAAMe,EAAmBC,KAAKC,MAAMT,EAAMU,MAC1C,KAAKC,EAAAA,EAAAA,GAASJ,IAAoC,iBAAjBA,EAAQK,KACxC,OAGD,GACM,eADEL,EAAQK,KAEd,IAAK,MAAMjB,KAAUO,EACpB,GAA6B,iBAAlBK,EAAQM,MAClBlB,EAAOmB,OAAS,GAAiB,OAAdP,EAAQM,YACrB,GAA6B,iBAAlBN,EAAQM,MAAoB,CAC7C,MAAMA,EAAQE,SAASR,EAAQM,MAAO,IAClCG,OAAOC,UAAUJ,KACpBlB,EAAOmB,OAAS,GAAS,OAAND,GAErB,CAKJ,CAAE,MAAOP,GAET,CACD,IAGMb,QAAQC,SAAS,C","sources":["webpack://@guardian/dotcom-rendering/./src/client/newsletterEmbedIframe.ts"],"sourcesContent":["import { isObject } from '@guardian/libs';\n\n/* No trailing slash! */\nconst guardianOrigin = 'https://www.theguardian.com';\n\nexport const newsletterEmbedIframe = (): Promise<void> => {\n\tconst allIframes: HTMLIFrameElement[] = [\n\t\t...document.querySelectorAll<HTMLIFrameElement>(\n\t\t\t'iframe.email-sub__iframe',\n\t\t),\n\t];\n\n\tif (allIframes.length === 0) return Promise.resolve();\n\n\t// Tell the iframes to resize once this script is loaded\n\t// Otherwise, earlier resize events might be missed\n\t// So we don't have to load this script as a priority on each load\n\tfor (const iframe of allIframes) {\n\t\tiframe.contentWindow?.postMessage('resize', guardianOrigin);\n\t}\n\n\twindow.addEventListener('message', (event) => {\n\t\tif (event.origin !== guardianOrigin) return;\n\n\t\tconst iframes: HTMLIFrameElement[] = allIframes.filter((i) => {\n\t\t\ttry {\n\t\t\t\tif (i.contentWindow !== null && event.source !== null) {\n\t\t\t\t\treturn i.contentWindow === event.source;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\tif (iframes.length !== 0) {\n\t\t\ttry {\n\t\t\t\tconst message: unknown = JSON.parse(event.data);\n\t\t\t\tif (!isObject(message) || typeof message.type !== 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\tcase 'set-height':\n\t\t\t\t\t\tfor (const iframe of iframes) {\n\t\t\t\t\t\t\tif (typeof message.value === 'number') {\n\t\t\t\t\t\t\t\tiframe.height = `${message.value}`;\n\t\t\t\t\t\t\t} else if (typeof message.value === 'string') {\n\t\t\t\t\t\t\t\tconst value = parseInt(message.value, 10);\n\t\t\t\t\t\t\t\tif (Number.isInteger(value)) {\n\t\t\t\t\t\t\t\t\tiframe.height = `${value}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\t});\n\n\treturn Promise.resolve();\n};\n"],"names":["guardianOrigin","newsletterEmbedIframe","allIframes","document","querySelectorAll","length","Promise","resolve","iframe","contentWindow","postMessage","window","addEventListener","event","origin","iframes","filter","i","source","e","message","JSON","parse","data","isObject","type","value","height","parseInt","Number","isInteger"],"sourceRoot":""}