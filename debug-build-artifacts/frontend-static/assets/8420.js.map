{"version":3,"file":"8420.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAMA,aAAe,MAAU,UAClCC,KAAKC,MAAM,EAAEC,MAAM,4DACnB,KAAM,CAAEC,OAAO,CAAEC,eAAe,CAAEC,gBAAgB,CAAEC,UAAU,CAAEC,UAAU,CAAEC,MAAM,CAAEC,eAAe,CAAE,CAAGT,KACxG,GAAI,CAAEU,0BAA0B,CAAE,CAAGV,KACrC,GAAI,CAACU,2BAA4B,CAC7B,KAAM,CAAEC,oCAAoC,CAAE,CAAG,MAAM,iIAA6B,CACpFD,2BAA6BC,qCAAqC,CAC9D,GAAGX,KAAKY,YAAY,CACpBC,yBAA0Bb,KAAKC,MAAM,CACrCa,mBAAoBd,KAAKc,kBAAkB,EAC5Cd,KAAKe,aAAa,CACzB,CACA,OAAOL,2BAA2B,CAC9BM,QAASb,QACTc,gBAAiBb,iBAAmB,CAAC,mBAAmB,EAAEc,KAAKC,GAAG,GAAG,CAAC,CACtEC,iBAAkBf,iBAClBgB,WAAYf,WACZgB,WAAYf,WACZgB,OAAQf,OACRgB,gBAAiBf,eACrB,EACJ,CAAE;;AClBF,MAAMkB,eAAiB,8BACvB,MAAMC,aAAe,eACrB,MAAMC,sBAAwB,uBAC9B,CAAO,MAAMC,cAAgB,CAAC9B,KAAO,CAAC,CAAC,GAAK,UACxCA,KAAKC,MAAM,EAAEC,MAAM,6DACnB,MAAM6B,qBAAuB/B,MAAM+B,sBAAwBC,QAAQC,GAAG,CAACN,eAAe,CACtF,MAAMxB,QAAUH,MAAMG,SAAW6B,QAAQC,GAAG,CAACL,aAAa,CAC1D,MAAMxB,gBAAkBJ,MAAMI,iBAAmB4B,QAAQC,GAAG,CAACJ,sBAAsB,CACnF,GAAI,CAACE,sBAAwB,CAAC5B,QAAS,CACnC,MAAM,IAAIsB,wCAAwBA,CAAC,2CAA4C,CAC3ExB,OAAQD,KAAKC,MAAM,EAE3B,CACA,OAAOF,YAAYA,CAAC,CAChB,GAAGC,IAAI,CACPK,iBAAkBqB,6BAAYA,CAACK,qBAAsB,CAAEG,SAAU,OAAQ,GACzE/B,QACAC,eACJ,IACJ,CAAE","sources":["webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+credential-provider-web-identity@3.621.0_@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+credential-provider-web-identity@3.621.0_@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@aws-sdk+credential-provider-web-identity@3.621.0_@aws-sdk+client-sts@3.621.0/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/index.js"],"sourcesContent":["export const fromWebToken = (init) => async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromWebToken\");\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds } = init;\n    let { roleAssumerWithWebIdentity } = init;\n    if (!roleAssumerWithWebIdentity) {\n        const { getDefaultRoleAssumerWithWebIdentity } = await import(\"@aws-sdk/client-sts\");\n        roleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity({\n            ...init.clientConfig,\n            credentialProviderLogger: init.logger,\n            parentClientConfig: init.parentClientConfig,\n        }, init.clientPlugins);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { readFileSync } from \"fs\";\nimport { fromWebToken } from \"./fromWebToken\";\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nexport const fromTokenFile = (init = {}) => async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromTokenFile\");\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new CredentialsProviderError(\"Web identity configuration not specified\", {\n            logger: init.logger,\n        });\n    }\n    return fromWebToken({\n        ...init,\n        webIdentityToken: readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n","export * from \"./fromTokenFile\";\nexport * from \"./fromWebToken\";\n"],"names":["fromWebToken","init","logger","debug","roleArn","roleSessionName","webIdentityToken","providerId","policyArns","policy","durationSeconds","roleAssumerWithWebIdentity","getDefaultRoleAssumerWithWebIdentity","clientConfig","credentialProviderLogger","parentClientConfig","clientPlugins","RoleArn","RoleSessionName","Date","now","WebIdentityToken","ProviderId","PolicyArns","Policy","DurationSeconds","CredentialsProviderError","readFileSync","ENV_TOKEN_FILE","ENV_ROLE_ARN","ENV_ROLE_SESSION_NAME","fromTokenFile","webIdentityTokenFile","process","env","encoding"],"sourceRoot":""}