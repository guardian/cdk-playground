{"version":3,"file":"CardCommentCount-importable.client.web.99760b04c5db5617bdab.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/static/icons/comment.svg","webpack://@guardian/dotcom-rendering/./src/components/CardCommentCount.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/formatCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/transparentColour.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCommentCount.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/accessibility/visually-hidden.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/mq/mq.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgComment = function SvgComment(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 0l1 1v7l-1 1H7l-2 3H4V9H2L1 8V1l1-1h11z\"\n  })));\n};\nexport default SvgComment;","import { css } from '@emotion/react';\nimport {\n\tbetween,\n\ttextSansBold12,\n\tvisuallyHidden,\n} from '@guardian/source/foundations';\nimport { formatCount } from '../lib/formatCount';\nimport { useCommentCount } from '../lib/useCommentCount';\nimport { palette as themePalette } from '../palette';\nimport CommentIcon from '../static/icons/comment.svg';\nimport type { DCRContainerPalette } from '../types/front';\nimport { ContainerOverrides } from './ContainerOverrides';\n\ntype Props = {\n\tcontainerPalette?: DCRContainerPalette;\n\tdiscussionApiUrl: string;\n\tdiscussionId: string;\n\tisDynamo?: true;\n\t/** Optional override of default comment count colour */\n\tcolour?: string;\n};\n\nconst containerStyles = (colour: string) => css`\n\tdisplay: flex;\n\tflex-direction: row;\n\t${textSansBold12};\n\t/**\n\t * Typography preset styles should not be overridden.\n\t * This has been done because the styles do not directly map to the new presets.\n\t * Please speak to your team's designer and update this to use a more appropriate preset.\n\t */\n\tline-height: 1.15;\n\tmargin-top: -4px;\n\tcolor: ${colour};\n`;\n\nconst svgStyles = (colour: string) => css`\n\tsvg {\n\t\tmargin-bottom: -5px;\n\t\theight: 14px;\n\t\twidth: 14px;\n\t\tmargin-right: 2px;\n\t\tfill: ${colour};\n\t}\n`;\n\nconst longStyles = css`\n\tdisplay: block;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: none;\n\t}\n`;\n\nconst shortStyles = css`\n\tdisplay: none;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: block;\n\t}\n`;\n\nexport const CardCommentCount = ({\n\tcontainerPalette,\n\tdiscussionApiUrl,\n\tdiscussionId,\n\tisDynamo,\n\tcolour = themePalette('--card-footer-text'),\n}: Props) => {\n\tconst count = useCommentCount(discussionApiUrl, discussionId);\n\n\tconst { long, short } = formatCount(count);\n\n\tconst getCommentCountColour = (): string => {\n\t\tif (isDynamo) {\n\t\t\treturn themePalette('--card-trail-text');\n\t\t} else {\n\t\t\treturn colour;\n\t\t}\n\t};\n\n\treturn (\n\t\t<ContainerOverrides containerPalette={containerPalette}>\n\t\t\t<div css={containerStyles(getCommentCountColour())}>\n\t\t\t\t<div css={svgStyles(getCommentCountColour())}>\n\t\t\t\t\t<CommentIcon />\n\t\t\t\t</div>\n\t\t\t\t<div css={longStyles}>{long}</div>\n\t\t\t\t<div css={shortStyles} aria-hidden=\"true\">\n\t\t\t\t\t{short}\n\t\t\t\t</div>\n\t\t\t\t<span\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{' '}\n\t\t\t\t\tcomments\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</ContainerOverrides>\n\t);\n};\n","import { isUndefined } from '@guardian/libs';\n\nexport const formatCount = (\n\tcount?: number,\n): { short: string; long: string } => {\n\tif (isUndefined(count)) return { short: '…', long: '…' };\n\tif (count === 0) return { short: '0', long: '0' };\n\n\tconst countAsInteger = Math.floor(count);\n\tconst displayCountLong = Intl.NumberFormat('en-GB').format(countAsInteger);\n\tconst displayCountShort =\n\t\tcountAsInteger > 10000\n\t\t\t? `${Math.round(countAsInteger / 1000)}k`\n\t\t\t: countAsInteger.toString();\n\n\treturn {\n\t\tshort: displayCountShort,\n\t\tlong: displayCountLong,\n\t};\n};\n","const getColour = (string: string) => {\n\tswitch (string.length) {\n\t\tcase 2:\n\t\t\treturn parseInt(string, 16);\n\t\tcase 1:\n\t\t\treturn parseInt(string + string, 16);\n\t\tdefault:\n\t\t\treturn 127;\n\t}\n};\n\nconst fallback = 'rgba(127, 127, 127, 0.5)';\n\n/**\n * Transforms a hex colour to a transparent one of the same colour.\n *\n * The alternative [#RRGGBBAA notation is not well supported][caniuse],\n * so we used the more widely supported rgba() notation.\n *\n * [caniuse]: https://caniuse.com/css-rrggbbaa\n *\n * @param colour the hex string, e.g. #C70000\n * @param opacity optional opacity 0-1. Defaults to 0.5 (50%)\n * @returns an functional colour string, e.g. rgba(199, 0, 0, 0.5)\n */\nexport const transparentColour = (\n\tcolour: string,\n\topacity = 0.5,\n): `rgba(${number}, ${number}, ${number}, ${number})` => {\n\t// if we have an invalid string,\n\tif (!colour.startsWith('#') || ![4, 7].includes(colour.length)) {\n\t\treturn fallback;\n\t}\n\n\tconst hex = colour.length === 7 ? 2 : 1;\n\n\tconst r = getColour(colour.slice(1, 1 + hex));\n\tconst g = getColour(colour.slice(1 + hex, 1 + hex * 2));\n\tconst b = getColour(colour.slice(1 + hex * 2, 1 + hex * 3));\n\n\tif ([r, g, b].some(Number.isNaN)) return fallback;\n\n\treturn `rgba(${r}, ${g}, ${b}, ${opacity})`;\n};\n","import { isNonNullable, isObject } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { useApi } from './useApi';\n\n/**\n * **Build an initial set of discussions**\n *\n * Setting this attribute helps build an initial set of discussion IDs.\n * Without it, there is a risk that each new usage of `useCommentCount`\n * leads to a distinct request to the discussion API\n */\nexport const DISCUSSION_ID_DATA_ATTRIBUTE = 'data-discussion-id';\n\n/**\n * We only want to create this set on a client, never on the server\n */\nlet uniqueDiscussionIds: Set<string> | undefined;\n\n/**\n * Create an initial set of IDs by reading what is in the DOM\n */\nconst getInitialIds = () =>\n\t[...document.querySelectorAll(`[${DISCUSSION_ID_DATA_ATTRIBUTE}]`)]\n\t\t.map((element) => element.getAttribute(DISCUSSION_ID_DATA_ATTRIBUTE))\n\t\t.filter(isNonNullable);\n\nexport const useCommentCount = (\n\tdiscussionApiUrl: string,\n\tshortUrl: string,\n): number | undefined => {\n\t// A falsy value prevents fetching: https://swr.vercel.app/docs/conditional-fetching#conditional\n\tconst [url, setUrl] = useState<string>();\n\n\tuseEffect(() => {\n\t\tuniqueDiscussionIds ??= new Set(getInitialIds());\n\t\tuniqueDiscussionIds.add(shortUrl);\n\n\t\tconst getCommentCountUrl = `${discussionApiUrl}/getCommentCounts?${new URLSearchParams(\n\t\t\t{\n\t\t\t\t'short-urls': [...uniqueDiscussionIds]\n\t\t\t\t\t.sort() // ensures identical sets produce the same query parameter\n\t\t\t\t\t.join(','),\n\t\t\t},\n\t\t).toString()}`;\n\n\t\tsetUrl(getCommentCountUrl);\n\t}, [discussionApiUrl, shortUrl]);\n\n\tconst { data } = useApi(url);\n\n\t/**\n\t * As per the endpoint, but let’s parse it\n\t * @see https://github.com/guardian/discussion-api/blob/73e805641f509c79d12f207aeb50c3f1fb58c886/discussion-api/src/main/scala/com.gu.discussion.api/repository/Discussion.scala#L233\n\t */\n\tconst count = isObject(data) ? data[shortUrl] : undefined;\n\treturn typeof count === 'number' ? count : undefined;\n};\n\n/** Ensure that we reduce the number of requests to get comment counts */\nexport const addDiscussionIds = (ids: string[]): void => {\n\tif (!uniqueDiscussionIds) return;\n\tfor (const id of ids) {\n\t\tuniqueDiscussionIds.add(id);\n\t}\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n","const breakpoints = {\n  desktop: 980,\n  leftCol: 1140,\n  mobile: 320,\n  mobileLandscape: 480,\n  mobileMedium: 375,\n  phablet: 660,\n  tablet: 740,\n  wide: 1300\n};\n\nexport { breakpoints };\n","const visuallyHidden = `\n\tposition: absolute;\n\toverflow: hidden; /* gets rid of horizontal scrollbar that appears in some circumstances */\n\twhite-space: nowrap; /* The white-space property forces the content to render on one line. */\n\twidth: 1px;  /* ensures content is announced by VoiceOver. */\n\theight: 1px; /* ensures content is announced by VoiceOver. */\n\tmargin: -1px; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tpadding: 0; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tborder: 0;\n\tclip: rect(1px, 1px, 1px, 1px); /* clip removes any visible trace of the element */\n\t-webkit-clip-path: inset(50%); /* clip removes any visible trace of the element */\n\tclip-path: inset(50%); /* clip removes any visible trace of the element */\n`;\n\nexport { visuallyHidden };\n","import { breakpoints } from '../__generated__/breakpoints.js';\n\nconst smidgen = 0.1;\nconst minWidth = (from2) => `@media (min-width: ${`${from2}px`})`;\nconst maxWidth = (until2) => `@media (max-width: ${`${until2 - smidgen}px`})`;\nconst minWidthMaxWidth = (from2, until2) => `@media (min-width: ${`${from2}px`}) and (max-width: ${`${until2 - smidgen}px`})`;\nconst from = {\n  mobile: minWidth(breakpoints.mobile),\n  mobileMedium: minWidth(breakpoints.mobileMedium),\n  mobileLandscape: minWidth(breakpoints.mobileLandscape),\n  phablet: minWidth(breakpoints.phablet),\n  tablet: minWidth(breakpoints.tablet),\n  desktop: minWidth(breakpoints.desktop),\n  leftCol: minWidth(breakpoints.leftCol),\n  wide: minWidth(breakpoints.wide)\n};\nconst until = {\n  mobile: maxWidth(breakpoints.mobile),\n  mobileMedium: maxWidth(breakpoints.mobileMedium),\n  mobileLandscape: maxWidth(breakpoints.mobileLandscape),\n  phablet: maxWidth(breakpoints.phablet),\n  tablet: maxWidth(breakpoints.tablet),\n  desktop: maxWidth(breakpoints.desktop),\n  leftCol: maxWidth(breakpoints.leftCol),\n  wide: maxWidth(breakpoints.wide)\n};\nconst between = {\n  mobile: {\n    and: {\n      mobileMedium: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileMedium\n      ),\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileMedium: {\n    and: {\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobileMedium,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileLandscape: {\n    and: {\n      phablet: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.phablet\n      ),\n      tablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n      desktop: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.desktop\n      ),\n      leftCol: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.leftCol\n      ),\n      wide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide)\n    }\n  },\n  phablet: {\n    and: {\n      tablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide)\n    }\n  },\n  tablet: {\n    and: {\n      desktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide)\n    }\n  },\n  desktop: {\n    and: {\n      leftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide)\n    }\n  },\n  leftCol: {\n    and: {\n      wide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide)\n    }\n  }\n};\n\nexport { between, from, until };\n"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","props","width","height","viewBox","d","containerStyles","colour","css","textSansBold12","svgStyles","longStyles","between","leftCol","and","wide","shortStyles","CardCommentCount","containerPalette","discussionApiUrl","discussionId","isDynamo","themePalette","count","useCommentCount","long","short","formatCount","getCommentCountColour","ContainerOverrides","div","CommentIcon","aria-hidden","span","visuallyHidden","isUndefined","countAsInteger","Math","floor","displayCountLong","Intl","NumberFormat","format","round","toString","getColour","string","parseInt","fallback","transparentColour","opacity","startsWith","includes","hex","slice","g","b","some","Number","isNaN","DISCUSSION_ID_DATA_ATTRIBUTE","uniqueDiscussionIds","shortUrl","url","setUrl","useState","useEffect","Set","document","querySelectorAll","map","element","getAttribute","filter","isNonNullable","add","getCommentCountUrl","URLSearchParams","sort","join","data","useApi","isObject","undefined","addDiscussionIds","ids","id","palette","breakpoints","desktop","mobile","mobileLandscape","mobileMedium","phablet","tablet","minWidth","from2","maxWidth","until2","minWidthMaxWidth","from","until"],"sourceRoot":""}