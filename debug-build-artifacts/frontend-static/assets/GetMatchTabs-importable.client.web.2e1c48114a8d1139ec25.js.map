{"version":3,"file":"GetMatchTabs-importable.client.web.2e1c48114a8d1139ec25.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/MatchTabs.tsx","webpack://@guardian/dotcom-rendering/./src/components/GetMatchTabs.importable.tsx","webpack://@guardian/dotcom-rendering/./src/components/Placeholder.tsx","webpack://@guardian/dotcom-rendering/./src/lib/articleFormat.ts","webpack://@guardian/dotcom-rendering/./src/lib/useApi.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport { headlineMedium17, space } from '@guardian/source/foundations';\nimport { ArticleDesign, type ArticleFormat } from '../lib/articleFormat';\nimport { palette as themePalette } from '../palette';\n\ntype Props = {\n\tminByMinUrl?: string;\n\treportUrl?: string;\n\tformat: ArticleFormat;\n};\n\nconst thinGreySolid = `1px solid ${themePalette('--match-tab-border')}`;\n\nconst GreyBorder = () => (\n\t<div\n\t\tcss={css`\n\t\t\tborder-left: ${thinGreySolid};\n\t\t\tmargin-left: ${space[1]}px;\n\t\t\twidth: ${space[2]}px;\n\t\t`}\n\t/>\n);\n\nconst tabsContainer = css`\n\tdisplay: flex;\n\tposition: relative;\n\tborder-bottom: ${thinGreySolid};\n`;\n\nconst tab = css`\n\tflex-basis: 50%;\n\theight: 40px;\n\tborder-top: 3px solid ${themePalette('--match-tab-border')};\n`;\n\nconst activeTab = css`\n\tborder-top: 3px solid ${themePalette('--match-tab-border-active')};\n`;\n\nconst tabLink = css`\n\tcolor: ${themePalette('--match-tab-border-active')};\n\tdisplay: block;\n\ttext-decoration: none;\n\t&:hover {\n\t\tbackground-color: ${themePalette('--article-background')};\n\t}\n`;\n\nconst tabLabel = css`\n\t${headlineMedium17};\n\tbackground: transparent;\n\tpadding: 6px 8px 0;\n\ttext-align: left;\n\tfont-weight: 600;\n\tmin-height: 36px;\n\tdisplay: block;\n\twidth: 100%;\n`;\n\nexport const MatchTabs = ({ minByMinUrl, reportUrl, format }: Props) => (\n\t<div>\n\t\t<ul css={tabsContainer}>\n\t\t\t<li\n\t\t\t\tcss={[\n\t\t\t\t\ttab,\n\t\t\t\t\tformat.design === ArticleDesign.MatchReport && activeTab,\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<a href={reportUrl} data-link-name=\"report\" css={tabLink}>\n\t\t\t\t\t<span css={tabLabel}>Report</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t<GreyBorder />\n\t\t\t<li\n\t\t\t\tcss={[\n\t\t\t\t\ttab,\n\t\t\t\t\t(format.design === ArticleDesign.DeadBlog ||\n\t\t\t\t\t\tformat.design === ArticleDesign.LiveBlog) &&\n\t\t\t\t\t\tactiveTab,\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<a href={minByMinUrl} data-link-name=\"Min-by-min\" css={tabLink}>\n\t\t\t\t\t<span css={tabLabel}>Min-by-min</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n);\n","import type { ArticleFormat } from '../lib/articleFormat';\nimport { useApi } from '../lib/useApi';\nimport { MatchTabs } from './MatchTabs';\nimport { Placeholder } from './Placeholder';\n\ntype Props = {\n\tmatchUrl: string;\n\tformat: ArticleFormat;\n};\n\nconst Loading = () => <Placeholder height={40} />;\n\n/**\n * ## Why does this need to be an Island?\n *\n * Data is fetched from an API on the client-side.\n *\n * ---\n *\n * (No visual story exists)\n */\nexport const GetMatchTabs = ({ matchUrl, format }: Props) => {\n\tconst { data, error, loading } = useApi<{\n\t\treportUrl?: string;\n\t\tminByMinUrl?: string;\n\t}>(matchUrl, { errorRetryCount: 1 });\n\n\tif (loading) return <Loading />;\n\tif (error) {\n\t\t// Send the error to Sentry and then prevent the element from rendering\n\t\twindow.guardian.modules.sentry.reportError(error, 'match-tabs');\n\n\t\treturn null;\n\t}\n\tif (data?.minByMinUrl && data.reportUrl) {\n\t\treturn (\n\t\t\t<MatchTabs\n\t\t\t\tminByMinUrl={data.minByMinUrl}\n\t\t\t\treportUrl={data.reportUrl}\n\t\t\t\tformat={format}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import { css, keyframes } from '@emotion/react';\nimport { isUndefined } from '@guardian/libs';\nimport { palette, space } from '@guardian/source/foundations';\n\nconst BACKGROUND_COLOUR = palette.neutral[93];\n\ntype Props = {\n\theight: number;\n\trootId?: string;\n\twidth?: number;\n\tspaceBelow?: 1 | 2 | 3 | 4 | 5 | 6 | 9;\n\tspaceLeft?: 1 | 2 | 3 | 4 | 5 | 6 | 9;\n\tshouldShimmer?: boolean;\n\tbackgroundColor?: string;\n};\n\nconst shimmer = keyframes`\n  0% {\n    background-position: -1500px 0;\n  }\n  100% {\n    background-position: 1500px 0;\n  }\n`;\n\nconst shimmerStyles = (backgroundColor: string) => css`\n\tanimation: ${shimmer} 2s infinite linear;\n\tbackground: linear-gradient(\n\t\tto right,\n\t\t${backgroundColor} 4%,\n\t\twhite 25%,\n\t\t${backgroundColor} 36%\n\t);\n\tbackground-size: 1500px 100%;\n`;\n\nexport const Placeholder = ({\n\theight,\n\trootId,\n\twidth,\n\tspaceBelow,\n\tspaceLeft,\n\tshouldShimmer = true,\n\tbackgroundColor = BACKGROUND_COLOUR,\n}: Props) => (\n\t<div\n\t\tid={rootId}\n\t\tcss={css`\n\t\t\tflex-grow: 1;\n\t\t`}\n\t\tdata-name=\"placeholder\"\n\t>\n\t\t<div\n\t\t\tcss={css`\n\t\t\t\tmin-height: ${height}px;\n\t\t\t\twidth: ${!isUndefined(width) ? `${width}px` : '100%'};\n\t\t\t\tmargin-bottom: ${spaceBelow && space[spaceBelow]}px;\n\t\t\t\tmargin-left: ${spaceLeft && space[spaceLeft]}px;\n\t\t\t\tbackground-color: ${backgroundColor};\n\n\t\t\t\t${shouldShimmer && shimmerStyles(backgroundColor)}\n\t\t\t`}\n\t\t/>\n\t</div>\n);\n","import { isString } from '@guardian/libs';\nimport type { FEDesign, FEDisplay, FEFormat, FETheme } from '../types/frontend';\n\nexport enum ArticleDesign {\n\tStandard,\n\tPicture,\n\tGallery,\n\tAudio,\n\tVideo,\n\tReview,\n\tAnalysis,\n\tExplainer,\n\tComment,\n\tLetter,\n\tFeature,\n\tLiveBlog,\n\tDeadBlog,\n\tRecipe,\n\tMatchReport,\n\tInterview,\n\tEditorial,\n\tQuiz,\n\tInteractive,\n\tPhotoEssay,\n\tObituary,\n\tCorrection,\n\tFullPageInteractive,\n\tNewsletterSignup,\n\tTimeline,\n\tProfile,\n}\n\nexport enum ArticleDisplay {\n\tStandard,\n\tImmersive,\n\tShowcase,\n\tNumberedList,\n}\n\nexport enum Pillar {\n\tNews = 0,\n\tOpinion = 1,\n\tSport = 2,\n\tCulture = 3,\n\tLifestyle = 4,\n}\n\nexport enum ArticleSpecial {\n\tSpecialReport = 5,\n\tLabs = 6,\n\tSpecialReportAlt = 7,\n}\n\nexport type ArticleTheme = Pillar | ArticleSpecial;\n\nexport interface ArticleFormat {\n\ttheme: ArticleTheme;\n\tdesign: ArticleDesign;\n\tdisplay: ArticleDisplay;\n}\n\n/**\n * NOTE: Immersive Opinion pieces are not supported,\n * i.e. when `CommentDesign` and `ImmersiveDisplay` are used jointly.\n */\nexport const decideDesign = ({ design }: Partial<FEFormat>): ArticleDesign => {\n\tswitch (design) {\n\t\tcase 'ArticleDesign':\n\t\t\treturn ArticleDesign.Standard;\n\t\tcase 'PictureDesign':\n\t\t\treturn ArticleDesign.Picture;\n\t\tcase 'GalleryDesign':\n\t\t\treturn ArticleDesign.Gallery;\n\t\tcase 'AudioDesign':\n\t\t\treturn ArticleDesign.Audio;\n\t\tcase 'VideoDesign':\n\t\t\treturn ArticleDesign.Video;\n\t\tcase 'ReviewDesign':\n\t\t\treturn ArticleDesign.Review;\n\t\tcase 'AnalysisDesign':\n\t\t\treturn ArticleDesign.Analysis;\n\t\tcase 'CommentDesign':\n\t\t\treturn ArticleDesign.Comment;\n\t\tcase 'LetterDesign':\n\t\t\treturn ArticleDesign.Letter;\n\t\tcase 'FeatureDesign':\n\t\t\treturn ArticleDesign.Feature;\n\t\tcase 'LiveBlogDesign':\n\t\t\treturn ArticleDesign.LiveBlog;\n\t\tcase 'DeadBlogDesign':\n\t\t\treturn ArticleDesign.DeadBlog;\n\t\tcase 'RecipeDesign':\n\t\t\treturn ArticleDesign.Recipe;\n\t\tcase 'MatchReportDesign':\n\t\t\treturn ArticleDesign.MatchReport;\n\t\tcase 'InterviewDesign':\n\t\t\treturn ArticleDesign.Interview;\n\t\tcase 'EditorialDesign':\n\t\t\treturn ArticleDesign.Editorial;\n\t\tcase 'QuizDesign':\n\t\t\treturn ArticleDesign.Quiz;\n\t\tcase 'InteractiveDesign':\n\t\t\treturn ArticleDesign.Interactive;\n\t\tcase 'PhotoEssayDesign':\n\t\t\treturn ArticleDesign.PhotoEssay;\n\t\tcase 'ObituaryDesign':\n\t\t\treturn ArticleDesign.Obituary;\n\t\tcase 'FullPageInteractiveDesign':\n\t\t\treturn ArticleDesign.FullPageInteractive;\n\t\tcase 'NewsletterSignupDesign':\n\t\t\treturn ArticleDesign.NewsletterSignup;\n\t\tcase 'ExplainerDesign':\n\t\t\treturn ArticleDesign.Explainer;\n\t\tcase 'TimelineDesign':\n\t\t\treturn ArticleDesign.Timeline;\n\t\tcase 'ProfileDesign':\n\t\t\treturn ArticleDesign.Profile;\n\t\tdefault:\n\t\t\treturn ArticleDesign.Standard;\n\t}\n};\n\nconst decideDisplay = ({\n\tdisplay,\n\tdesign,\n}: Partial<FEFormat>): ArticleDisplay => {\n\tswitch (display) {\n\t\tcase 'StandardDisplay':\n\t\t\treturn ArticleDisplay.Standard;\n\t\tcase 'ImmersiveDisplay':\n\t\t\t// Temporary hack until we can handle Immersive Comment pieces\n\t\t\treturn design === 'CommentDesign'\n\t\t\t\t? ArticleDisplay.Standard\n\t\t\t\t: ArticleDisplay.Immersive;\n\t\tcase 'ShowcaseDisplay':\n\t\t\treturn ArticleDisplay.Showcase;\n\t\tcase 'NumberedListDisplay':\n\t\t\treturn ArticleDisplay.NumberedList;\n\t\tdefault:\n\t\t\treturn ArticleDisplay.Standard;\n\t}\n};\n\nexport const decideTheme = ({ theme }: Partial<FEFormat>): ArticleTheme => {\n\tswitch (theme) {\n\t\tcase 'NewsPillar':\n\t\t\treturn Pillar.News;\n\t\tcase 'OpinionPillar':\n\t\t\treturn Pillar.Opinion;\n\t\tcase 'SportPillar':\n\t\t\treturn Pillar.Sport;\n\t\tcase 'CulturePillar':\n\t\t\treturn Pillar.Culture;\n\t\tcase 'LifestylePillar':\n\t\t\treturn Pillar.Lifestyle;\n\t\tcase 'SpecialReportTheme':\n\t\t\treturn ArticleSpecial.SpecialReport;\n\t\tcase 'SpecialReportAltTheme':\n\t\t\treturn ArticleSpecial.SpecialReportAlt;\n\t\tcase 'Labs':\n\t\t\treturn ArticleSpecial.Labs;\n\t\tdefault:\n\t\t\treturn Pillar.News;\n\t}\n};\n\nexport const decideFormat = (format: Partial<FEFormat>): ArticleFormat => ({\n\tdesign: decideDesign(format),\n\tdisplay: decideDisplay(format),\n\ttheme: decideTheme(format),\n});\n\nexport const getThemeNameAsString = (format: ArticleFormat): string => {\n\tconst themeName = Pillar[format.theme] ?? ArticleSpecial[format.theme];\n\tif (!themeName) throw new Error('Unknown theme');\n\treturn themeName;\n};\n\n/**\n * We need a type guard because TypeScript enums are (confusingly)\n * returning both strings and numbers.\n */\nconst isTheme = (theme: string | ArticleTheme): theme is ArticleTheme =>\n\t!isString(theme);\n\nconst isDesign = (design: string | ArticleDesign): design is ArticleDesign =>\n\t!isString(design);\n\nexport const getAllThemes = ({\n\tdisplay,\n\tdesign,\n}: {\n\tdisplay: ArticleDisplay;\n\tdesign: ArticleDesign;\n}): Array<ArticleFormat> =>\n\tObject.values({ ...Pillar, ...ArticleSpecial })\n\t\t.filter(isTheme)\n\t\t.map((theme) => ({\n\t\t\ttheme,\n\t\t\tdisplay,\n\t\t\tdesign,\n\t\t}));\n\nexport const getAllDesigns = ({\n\tdisplay,\n\ttheme,\n}: {\n\tdisplay: ArticleDisplay;\n\ttheme: ArticleTheme;\n}): Array<ArticleFormat> =>\n\tObject.values({ ...ArticleDesign })\n\t\t.filter(isDesign)\n\t\t.map((design) => ({\n\t\t\ttheme,\n\t\t\tdisplay,\n\t\t\tdesign,\n\t\t}));\n\nconst designToFEDesign = (design: ArticleDesign): FEDesign => {\n\tswitch (design) {\n\t\tcase ArticleDesign.Standard:\n\t\t// Correction doesn't exist in `FEFormat`.\n\t\tcase ArticleDesign.Correction:\n\t\t\treturn 'ArticleDesign';\n\t\tcase ArticleDesign.Picture:\n\t\t\treturn 'PictureDesign';\n\t\tcase ArticleDesign.Gallery:\n\t\t\treturn 'GalleryDesign';\n\t\tcase ArticleDesign.Audio:\n\t\t\treturn 'AudioDesign';\n\t\tcase ArticleDesign.Video:\n\t\t\treturn 'VideoDesign';\n\t\tcase ArticleDesign.Review:\n\t\t\treturn 'ReviewDesign';\n\t\tcase ArticleDesign.Analysis:\n\t\t\treturn 'AnalysisDesign';\n\t\tcase ArticleDesign.Explainer:\n\t\t\treturn 'ExplainerDesign';\n\t\tcase ArticleDesign.Comment:\n\t\t\treturn 'CommentDesign';\n\t\tcase ArticleDesign.Letter:\n\t\t\treturn 'LetterDesign';\n\t\tcase ArticleDesign.Feature:\n\t\t\treturn 'FeatureDesign';\n\t\tcase ArticleDesign.LiveBlog:\n\t\t\treturn 'LiveBlogDesign';\n\t\tcase ArticleDesign.DeadBlog:\n\t\t\treturn 'DeadBlogDesign';\n\t\tcase ArticleDesign.Recipe:\n\t\t\treturn 'RecipeDesign';\n\t\tcase ArticleDesign.MatchReport:\n\t\t\treturn 'MatchReportDesign';\n\t\tcase ArticleDesign.Interview:\n\t\t\treturn 'InterviewDesign';\n\t\tcase ArticleDesign.Editorial:\n\t\t\treturn 'EditorialDesign';\n\t\tcase ArticleDesign.Quiz:\n\t\t\treturn 'QuizDesign';\n\t\tcase ArticleDesign.Interactive:\n\t\t\treturn 'InteractiveDesign';\n\t\tcase ArticleDesign.PhotoEssay:\n\t\t\treturn 'PhotoEssayDesign';\n\t\tcase ArticleDesign.Obituary:\n\t\t\treturn 'ObituaryDesign';\n\t\tcase ArticleDesign.FullPageInteractive:\n\t\t\treturn 'FullPageInteractiveDesign';\n\t\tcase ArticleDesign.NewsletterSignup:\n\t\t\treturn 'NewsletterSignupDesign';\n\t\tcase ArticleDesign.Timeline:\n\t\t\treturn 'TimelineDesign';\n\t\tcase ArticleDesign.Profile:\n\t\t\treturn 'ProfileDesign';\n\t}\n};\n\nconst displayToFEDisplay = (display: ArticleDisplay): FEDisplay => {\n\tswitch (display) {\n\t\tcase ArticleDisplay.Standard:\n\t\t\treturn 'StandardDisplay';\n\t\tcase ArticleDisplay.Immersive:\n\t\t\treturn 'ImmersiveDisplay';\n\t\tcase ArticleDisplay.Showcase:\n\t\t\treturn 'ShowcaseDisplay';\n\t\tcase ArticleDisplay.NumberedList:\n\t\t\treturn 'NumberedListDisplay';\n\t}\n};\n\nconst themeToFETheme = (theme: ArticleTheme): FETheme => {\n\tswitch (theme) {\n\t\tcase Pillar.News:\n\t\t\treturn 'NewsPillar';\n\t\tcase Pillar.Opinion:\n\t\t\treturn 'OpinionPillar';\n\t\tcase Pillar.Sport:\n\t\t\treturn 'SportPillar';\n\t\tcase Pillar.Culture:\n\t\t\treturn 'CulturePillar';\n\t\tcase Pillar.Lifestyle:\n\t\t\treturn 'LifestylePillar';\n\t\tcase ArticleSpecial.SpecialReport:\n\t\t\treturn 'SpecialReportTheme';\n\t\tcase ArticleSpecial.Labs:\n\t\t\treturn 'Labs';\n\t\tcase ArticleSpecial.SpecialReportAlt:\n\t\t\treturn 'SpecialReportAltTheme';\n\t}\n};\n\nexport const formatToFEFormat = ({\n\tdesign,\n\tdisplay,\n\ttheme,\n}: ArticleFormat): FEFormat => ({\n\tdesign: designToFEDesign(design),\n\tdisplay: displayToFEDisplay(display),\n\ttheme: themeToFETheme(theme),\n});\n\n/**\n * Creates a string representation of {@linkcode ArticleFormat}. Useful for\n * logging, storybook UI etc.\n *\n * @param format An {@linkcode ArticleFormat}\n * @returns A string representation of `ArticleFormat`\n */\nexport const formatToString = ({\n\tdesign,\n\tdisplay,\n\ttheme,\n}: ArticleFormat): string =>\n\t[\n\t\t`${ArticleDesign[design]} Design`,\n\t\t`${ArticleDisplay[display]} Display`,\n\t\t`and ${Pillar[theme] ?? ArticleSpecial[theme]} Theme`,\n\t].join(', ');\n","import { isUndefined } from '@guardian/libs';\nimport type { SWRConfiguration } from 'swr';\nimport useSWR from 'swr';\n\nfunction checkForErrors(response: Response) {\n\tif (!response.ok) {\n\t\tthrow Error(\n\t\t\tresponse.statusText ||\n\t\t\t\t`useApi | An api call returned HTTP status ${response.status}`,\n\t\t);\n\t}\n\treturn response;\n}\n\n/** **NOTE:** no parsing is done on the response, the type is merely asserted */\nconst fetcher =\n\t<T>(init?: RequestInit) =>\n\t(url: string): Promise<T> =>\n\t\tfetch(url, init)\n\t\t\t.then(checkForErrors)\n\t\t\t.then((res) => res.json());\n\ntype ApiResponse<T, E> = {\n\tloading: boolean;\n\tdata?: T;\n\terror?: E;\n};\n\n/**\n * A custom hook to make a GET request using the given url using the SWR lib (https://swr.vercel.app/).\n *\n * @template T assert the expected response type\n * @template E assert the potential error type\n * @param {string} url - The API endpoint. Falsy values will prevent any network requests\n * @param {SWRConfiguration<Data,Err>} options - The SWR config object - https://swr.vercel.app/docs/api#options\n * @param {RequestInit} init - The fetch init object - https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * @returns {ApiResponse<Data, Err>}\n * */\nexport const useApi = <Data = unknown, Err = Error>(\n\turl: string = '',\n\toptions?: SWRConfiguration<Data, Err>,\n\tinit?: RequestInit,\n): ApiResponse<Data, Err> => {\n\tconst { data, error } = useSWR<Data, Err>(url, fetcher(init), options);\n\n\treturn {\n\t\tdata,\n\t\terror,\n\t\tloading: !!url && isUndefined(error) && isUndefined(data),\n\t};\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n"],"names":["thinGreySolid","themePalette","GreyBorder","div","css","space","tabsContainer","tab","activeTab","tabLink","tabLabel","headlineMedium17","MatchTabs","minByMinUrl","reportUrl","format","ul","li","design","ArticleDesign","MatchReport","a","href","data-link-name","span","DeadBlog","LiveBlog","Loading","Placeholder","height","GetMatchTabs","matchUrl","data","error","loading","useApi","errorRetryCount","window","guardian","modules","sentry","reportError","BACKGROUND_COLOUR","palette","neutral","shimmer","keyframes","shimmerStyles","backgroundColor","rootId","width","spaceBelow","spaceLeft","shouldShimmer","id","data-name","isUndefined","ArticleDisplay","Pillar","ArticleSpecial","decideDesign","decideDisplay","display","decideTheme","theme","decideFormat","checkForErrors","response","ok","Error","statusText","status","url","options","init","useSWR","fetch","then","res","json","fetcher","colour"],"sourceRoot":""}