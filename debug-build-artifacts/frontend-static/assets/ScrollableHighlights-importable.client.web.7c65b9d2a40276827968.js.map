{"version":3,"file":"ScrollableHighlights-importable.client.web.7c65b9d2a40276827968.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/Avatar.tsx","webpack://@guardian/dotcom-rendering/./src/components/Card/components/CardLink.tsx","webpack://@guardian/dotcom-rendering/./src/components/CardPicture.tsx","webpack://@guardian/dotcom-rendering/./src/components/MediaMeta.tsx","webpack://@guardian/dotcom-rendering/./src/components/Masthead/HighlightsCard.tsx","webpack://@guardian/dotcom-rendering/./src/components/ScrollableHighlights.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/cardHelpers.ts","webpack://@guardian/dotcom-rendering/./src/lib/getSourceImageUrl_temp_fix.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgAudio.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgCamera.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgVideo.js"],"sourcesContent":["import { css } from '@emotion/react';\nimport { Fragment } from 'react';\nimport { getSourceImageUrl } from '../lib/getSourceImageUrl_temp_fix';\nimport { palette } from '../palette';\nimport { generateSources, getFallbackSource } from './Picture';\n\nconst picture = css`\n\theight: 100%;\n\twidth: 100%;\n\toverflow: hidden;\n\tmin-width: 60px;\n`;\n\nconst round = css`\n\tborder-radius: 100%;\n\tbackground-color: ${palette('--avatar-background')};\n`;\n\nconst img = css`\n\tobject-fit: cover;\n\theight: 100%;\n\twidth: 100%;\n`;\n\n/**\n * Used on `picture` and `img` to prevent having a line-height,\n * as these elements are which are `inline` by default.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#styling_with_css\n */\nconst block = css`\n\tdisplay: block;\n`;\n\n/**\n * Defines the possible shapes for the Avatar component.\n * - 'cutout': The avatar has a flat bottom and no background fill.\n * - 'round': The avatar is a round cutout with a filled background.\n */\ntype AvatarShape = 'cutout' | 'round';\n\n/**\n * Props for the Avatar component.\n *\n * @property {string} src - The source URL of the avatar image.\n * @property {string} alt - The alternative text for the avatar image.\n * @property {AvatarShape} [shape='round'] - Determines the avatar design shape.  The default is 'round'.\n */\ntype Props = {\n\tsrc: string;\n\talt: string;\n\tshape?: AvatarShape;\n};\n\nexport const Avatar = ({ src, alt, shape = 'round' }: Props) => {\n\tconst sources = generateSources(getSourceImageUrl(src), [\n\t\t{ breakpoint: 320, width: 75 },\n\t\t{ breakpoint: 740, width: 140 },\n\t]);\n\n\t/**\n\t * The assumption here is readers on devices that do not support srcset\n\t * are likely to be on poor network connections so we're going\n\t * to fallback to the smallest image at low resolution.\n\t *\n\t * Sources are ordered in `descendingByBreakpoint` order,\n\t * so the last one is the smallest.\n\t */\n\tconst fallbackSource = getFallbackSource(sources);\n\n\treturn (\n\t\t<picture\n\t\t\t// data-size={imageSize}\n\t\t\tcss={[block, picture, shape === 'round' && round]}\n\t\t>\n\t\t\t{sources.map((source) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment key={source.breakpoint}>\n\t\t\t\t\t\t{/* High resolution (HDPI) sources*/}\n\t\t\t\t\t\t<source\n\t\t\t\t\t\t\tsrcSet={source.hiResUrl}\n\t\t\t\t\t\t\tmedia={`(min-width: ${source.breakpoint}px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: ${source.breakpoint}px) and (min-resolution: 120dpi)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* Low resolution (MDPI) source*/}\n\t\t\t\t\t\t<source\n\t\t\t\t\t\t\tsrcSet={source.lowResUrl}\n\t\t\t\t\t\t\tmedia={`(min-width: ${source.breakpoint}px)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t})}\n\n\t\t\t<img alt={alt} src={fallbackSource.lowResUrl} css={[block, img]} />\n\t\t</picture>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { focusHalo } from '@guardian/source/foundations';\nimport { getZIndex } from '../../../lib/getZIndex';\n\nconst fauxLinkStyles = css`\n\tposition: absolute;\n\tz-index: ${getZIndex('card-link')};\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbackground-color: transparent;\n\n\t:focus {\n\t\t${focusHalo};\n\t}\n`;\n\ntype Props = {\n\tlinkTo: string;\n\theadlineText: string;\n\tdataLinkName?: string;\n\tisExternalLink: boolean;\n};\n\nconst InternalLink = ({\n\tlinkTo,\n\theadlineText,\n\tdataLinkName,\n}: {\n\tlinkTo: string;\n\theadlineText: string;\n\tdataLinkName?: string;\n}) => {\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/anchor-has-content -- we have an aria-label attribute describing the content\n\t\t<a\n\t\t\thref={linkTo}\n\t\t\tcss={fauxLinkStyles}\n\t\t\tdata-link-name={dataLinkName}\n\t\t\taria-label={headlineText}\n\t\t/>\n\t);\n};\n\nconst ExternalLink = ({\n\tlinkTo,\n\theadlineText,\n\tdataLinkName,\n}: {\n\tlinkTo: string;\n\theadlineText: string;\n\tdataLinkName?: string;\n}) => {\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/anchor-has-content -- we have an aria-label attribute describing the content\n\t\t<a\n\t\t\thref={linkTo}\n\t\t\tcss={fauxLinkStyles}\n\t\t\tdata-link-name={dataLinkName}\n\t\t\taria-label={headlineText + ' (opens in new tab)'}\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noreferrer\"\n\t\t/>\n\t);\n};\n\nexport const CardLink = ({\n\tlinkTo,\n\theadlineText,\n\tdataLinkName = 'article', //this makes sense if the link is to an article, but should this say something like \"external\" if it's an external link? are there any other uses/alternatives?\n\tisExternalLink,\n}: Props) => {\n\treturn (\n\t\t<>\n\t\t\t{isExternalLink && (\n\t\t\t\t<ExternalLink\n\t\t\t\t\tlinkTo={linkTo}\n\t\t\t\t\theadlineText={headlineText}\n\t\t\t\t\tdataLinkName={dataLinkName}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{!isExternalLink && (\n\t\t\t\t<InternalLink\n\t\t\t\t\tlinkTo={linkTo}\n\t\t\t\t\theadlineText={headlineText}\n\t\t\t\t\tdataLinkName={dataLinkName}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { breakpoints, space } from '@guardian/source/foundations';\nimport type { ImgHTMLAttributes } from 'react';\nimport React from 'react';\nimport type { AspectRatio } from '../types/front';\nimport type { ImageSizeType } from './Card/components/ImageWrapper';\nimport type { ImageWidthType } from './Picture';\nimport { generateSources, getFallbackSource } from './Picture';\n\nexport type Loading = NonNullable<ImgHTMLAttributes<unknown>['loading']>;\n\ntype Props = {\n\timageSize: ImageSizeType;\n\tmainImage: string;\n\tloading: Loading;\n\talt?: string;\n\troundedCorners?: boolean;\n\tisCircular?: boolean;\n\taspectRatio?: AspectRatio;\n};\n\n/**\n * **WIP – Some size may be unaccounted for**\n *\n * Currently, this only handles the five (5) image sizes of `ImageSizeType`.\n *\n * This method should cover all use cases with a lot more precision once\n * implemented thoroughly\n */\nconst decideImageWidths = (\n\timageSize: ImageSizeType,\n): [ImageWidthType, ...ImageWidthType[]] => {\n\tswitch (imageSize) {\n\t\t// @TODO missing image size option\n\t\t// case 'tiny':\n\t\t// \treturn [\n\t\t// \t\t{ breakpoint: breakpoints.mobile, width: 120 },\n\t\t// \t\t{ breakpoint: breakpoints.tablet, width: 130 },\n\t\t// \t\t{ breakpoint: breakpoints.desktop, width: 140 },\n\t\t// \t];\n\n\t\tcase 'carousel':\n\t\t\treturn [{ breakpoint: breakpoints.mobile, width: 220 }];\n\n\t\tcase 'small':\n\t\t\treturn [\n\t\t\t\t{ breakpoint: breakpoints.mobile, width: 120 },\n\t\t\t\t{ breakpoint: breakpoints.tablet, width: 160 },\n\t\t\t\t{ breakpoint: breakpoints.desktop, width: 220 },\n\t\t\t];\n\n\t\tcase 'medium':\n\t\t\treturn [\n\t\t\t\t{ breakpoint: breakpoints.mobile, width: 240 },\n\t\t\t\t{ breakpoint: breakpoints.tablet, width: 330 },\n\t\t\t\t{ breakpoint: breakpoints.desktop, width: 460 },\n\t\t\t];\n\n\t\tcase 'large':\n\t\t\treturn [\n\t\t\t\t{ breakpoint: breakpoints.mobile, width: 360 },\n\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 480 },\n\t\t\t\t{ breakpoint: breakpoints.tablet, width: 500 },\n\t\t\t\t{ breakpoint: breakpoints.desktop, width: 700 },\n\t\t\t];\n\n\t\tcase 'jumbo':\n\t\t\treturn [\n\t\t\t\t{ breakpoint: breakpoints.mobile, width: 360 },\n\t\t\t\t{ breakpoint: breakpoints.mobileLandscape, width: 480 },\n\t\t\t\t{ breakpoint: breakpoints.tablet, width: 680 },\n\t\t\t\t{ breakpoint: breakpoints.desktop, width: 940 },\n\t\t\t];\n\n\t\tcase 'feature':\n\t\t\treturn [\n\t\t\t\t{ breakpoint: breakpoints.mobile, width: 325 },\n\t\t\t\t{ breakpoint: breakpoints.tablet, width: 220 },\n\t\t\t\t{ breakpoint: breakpoints.desktop, width: 300 },\n\t\t\t];\n\t\tcase 'feature-large':\n\t\t\treturn [\n\t\t\t\t{ breakpoint: breakpoints.mobile, width: 325 },\n\t\t\t\t{ breakpoint: breakpoints.tablet, width: 337 },\n\t\t\t\t{ breakpoint: breakpoints.desktop, width: 460 },\n\t\t\t];\n\t}\n};\n\n/**\n * Used on `picture` and `img` to prevent having a line-height,\n * as these elements are which are `inline` by default.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#styling_with_css\n *\n */\nconst block = css`\n\tdisplay: block;\n`;\n\nconst getAspectRatioPadding = (aspectRatio?: AspectRatio): string => {\n\tswitch (aspectRatio) {\n\t\tcase '5:4':\n\t\t\treturn '80%';\n\t\tcase '4:5':\n\t\t\treturn '125%';\n\t\tcase '1:1':\n\t\t\treturn '100%';\n\t\tcase '5:3':\n\t\tdefault:\n\t\t\treturn '60%';\n\t}\n};\n/**\n * On fronts, Fairground cards have an image ration of 5:4.\n * This is due to replace the existing card ratio of 5:3\n * For now, we are keeping both ratios.\n */\nconst decideAspectRatioStyles = (aspectRatio?: AspectRatio) => {\n\tconst paddingRatio = getAspectRatioPadding(aspectRatio);\n\treturn css`\n\t\tpadding-top: ${paddingRatio};\n\t\tposition: relative;\n\t\t& > * {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t}\n\t`;\n};\n\nconst borderRadius = css`\n\t& > * {\n\t\tborder-radius: ${space[2]}px;\n\t}\n`;\n\nconst circularStyles = css`\n\tborder-radius: 100%;\n\tobject-fit: cover;\n\theight: 100%;\n\twidth: 100%;\n`;\n\nexport const CardPicture = ({\n\tmainImage,\n\talt,\n\timageSize,\n\tloading,\n\troundedCorners,\n\tisCircular,\n\taspectRatio,\n}: Props) => {\n\tconst sources = generateSources(\n\t\tmainImage,\n\t\tdecideImageWidths(imageSize),\n\t\taspectRatio,\n\t);\n\n\tconst fallbackSource = getFallbackSource(sources);\n\n\treturn (\n\t\t<picture\n\t\t\tdata-size={imageSize}\n\t\t\tcss={[\n\t\t\t\tblock,\n\t\t\t\tdecideAspectRatioStyles(aspectRatio),\n\t\t\t\troundedCorners && borderRadius,\n\t\t\t\tisCircular && circularStyles,\n\t\t\t]}\n\t\t>\n\t\t\t{sources.map((source) => {\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment key={source.breakpoint}>\n\t\t\t\t\t\t{/* High resolution (HDPI) sources*/}\n\t\t\t\t\t\t<source\n\t\t\t\t\t\t\tsrcSet={source.hiResUrl}\n\t\t\t\t\t\t\tmedia={`(min-width: ${source.breakpoint}px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: ${source.breakpoint}px) and (min-resolution: 120dpi)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* Low resolution (MDPI) source*/}\n\t\t\t\t\t\t<source\n\t\t\t\t\t\t\tsrcSet={source.lowResUrl}\n\t\t\t\t\t\t\tmedia={`(min-width: ${source.breakpoint}px)`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t\t})}\n\n\t\t\t<img\n\t\t\t\talt={alt ?? ''}\n\t\t\t\tsrc={fallbackSource.lowResUrl}\n\t\t\t\tcss={[block, isCircular && circularStyles]}\n\t\t\t\tloading={loading}\n\t\t\t\tdata-chromatic=\"ignore\"\n\t\t\t/>\n\t\t</picture>\n\t);\n};\n","import { css } from '@emotion/react';\nimport {\n\tSvgAudio,\n\tSvgCamera,\n\tSvgVideo,\n} from '@guardian/source/react-components';\nimport { palette as themePalette } from '../palette';\nimport type { MediaType } from '../types/layout';\n\ntype Props = {\n\tmediaType: MediaType;\n\thasKicker: boolean;\n};\n\nconst iconWrapperStyles = (hasKicker: boolean) => css`\n\twidth: 24px;\n\theight: 24px;\n\t/* We’re using the text colour for the icon badge */\n\tbackground-color: ${hasKicker\n\t\t? themePalette('--card-kicker-text')\n\t\t: themePalette('--card-footer-text')};\n\tborder-radius: 50%;\n\tdisplay: inline-block;\n\n\t> svg {\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tmargin-top: 2px;\n\t\tdisplay: block;\n\t\tfill: ${themePalette('--card-media-icon')};\n\t}\n`;\n\nconst wrapperStyles = css`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-top: 4px;\n`;\n\nexport const Icon = ({ mediaType }: { mediaType: MediaType }) => {\n\tswitch (mediaType) {\n\t\tcase 'Gallery':\n\t\t\treturn <SvgCamera />;\n\t\tcase 'Video':\n\t\t\treturn <SvgVideo />;\n\t\tcase 'Audio':\n\t\t\treturn <SvgAudio />;\n\t}\n};\n\nconst MediaIcon = ({\n\tmediaType,\n\thasKicker,\n}: {\n\tmediaType: MediaType;\n\thasKicker: boolean;\n}) => {\n\treturn (\n\t\t<span css={iconWrapperStyles(hasKicker)}>\n\t\t\t<Icon mediaType={mediaType} />\n\t\t</span>\n\t);\n};\n\nexport const MediaMeta = ({ mediaType, hasKicker }: Props) => {\n\treturn (\n\t\t<div css={wrapperStyles}>\n\t\t\t<MediaIcon mediaType={mediaType} hasKicker={hasKicker} />\n\t\t</div>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { between, from, until } from '@guardian/source/foundations';\nimport { ArticleDesign, type ArticleFormat } from '../../lib/articleFormat';\nimport { isMediaCard } from '../../lib/cardHelpers';\nimport { palette } from '../../palette';\nimport type { DCRFrontImage } from '../../types/front';\nimport type { MainMedia } from '../../types/mainMedia';\nimport { Avatar } from '../Avatar';\nimport { CardLink } from '../Card/components/CardLink';\nimport { CardHeadline } from '../CardHeadline';\nimport type { Loading } from '../CardPicture';\nimport { CardPicture } from '../CardPicture';\nimport { FormatBoundary } from '../FormatBoundary';\nimport { Icon } from '../MediaMeta';\n\nexport type HighlightsCardProps = {\n\tlinkTo: string;\n\tformat: ArticleFormat;\n\theadlineText: string;\n\tshowQuotedHeadline: boolean;\n\timage?: DCRFrontImage;\n\timageLoading?: Loading;\n\tavatarUrl?: string;\n\tmainMedia?: MainMedia;\n\tkickerText?: string;\n\tdataLinkName: string;\n\tbyline?: string;\n\tisExternalLink: boolean;\n};\n\nconst gridContainer = css`\n\tdisplay: grid;\n\tbackground-color: ${palette('--highlights-container-background')};\n\t/** Relative positioning is required to absolutely\n\tposition the card link overlay */\n\tposition: relative;\n\tgap: 8px;\n\tgrid-template-areas:\n\t\t'headline \theadline'\n\t\t'media-icon image';\n\n\t/* Applied word-break: break-word to prevent text overflow\n\tand ensure long words break onto the next line.\n\tThis is important since the highlights card can only take up a set portion\n\tof the screen to allow for the peeping card on mobile and grid layout\n\ton larger breakpoints, and the image has a fixed width on all breakpoints. */\n\tword-break: break-word;\n\t${until.mobileMedium} {\n\t\tmin-height: 174px;\n\t}\n\n\t${between.mobileMedium.and.desktop} {\n\t\tmin-height: 194px;\n\t\theight: 100%;\n\t}\n\n\t${from.tablet} {\n\t\theight: 100%;\n\t\twidth: 160px;\n\t}\n\n\t${from.desktop} {\n\t\twidth: 300px;\n\t\tgrid-template-areas:\n\t\t\t'headline \timage'\n\t\t\t'media-icon image';\n\t}\n`;\n\nconst headline = css`\n\tgrid-area: headline;\n`;\n\nconst mediaIcon = css`\n\tgrid-area: media-icon;\n\talign-self: end;\n\twidth: 24px;\n\theight: 24px;\n\t/* We’re using the text colour for the icon badge */\n\tbackground-color: ${palette('--highlights-card-headline')};\n\tborder-radius: 50%;\n\tdisplay: inline-block;\n\n\t> svg {\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tmargin-top: 2px;\n\t\tdisplay: block;\n\t\tfill: ${palette('--highlights-container-background')};\n\t}\n`;\n\nconst imageArea = css`\n\tgrid-area: image;\n\theight: 106px;\n\twidth: 106px;\n\talign-self: end;\n\tposition: relative;\n\t${from.desktop} {\n\t\theight: 112px;\n\t\twidth: 112px;\n\t}\n`;\n\nconst hoverStyles = css`\n\t:hover .image-overlay {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tborder-radius: 100%;\n\t\tbackground-color: ${palette('--card-background-hover')};\n\t}\n\n\t/* Only underline the headline element we want to target (not kickers/sublink headlines) */\n\t:hover .card-headline .show-underline {\n\t\ttext-decoration: underline;\n\t}\n`;\n\nexport const HighlightsCard = ({\n\tlinkTo,\n\tformat,\n\theadlineText,\n\tshowQuotedHeadline,\n\timage,\n\timageLoading = 'lazy',\n\tavatarUrl,\n\tmainMedia,\n\tkickerText,\n\tdataLinkName,\n\tbyline,\n\tisExternalLink,\n}: HighlightsCardProps) => {\n\tconst showMediaIcon = isMediaCard(format);\n\n\treturn (\n\t\t<FormatBoundary format={format}>\n\t\t\t<div css={[gridContainer, hoverStyles]}>\n\t\t\t\t<CardLink\n\t\t\t\t\tlinkTo={linkTo}\n\t\t\t\t\theadlineText={headlineText}\n\t\t\t\t\tdataLinkName={dataLinkName}\n\t\t\t\t\tisExternalLink={isExternalLink}\n\t\t\t\t/>\n\n\t\t\t\t<div css={headline}>\n\t\t\t\t\t<CardHeadline\n\t\t\t\t\t\theadlineText={headlineText}\n\t\t\t\t\t\tformat={format}\n\t\t\t\t\t\tfontSizes={{\n\t\t\t\t\t\t\tdesktop: 'xsmall',\n\t\t\t\t\t\t\ttablet: 'xxsmall',\n\t\t\t\t\t\t\tmobileMedium: 'xxsmall',\n\t\t\t\t\t\t\tmobile: 'tiny',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tshowPulsingDot={\n\t\t\t\t\t\t\tformat.design === ArticleDesign.LiveBlog\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkickerText={kickerText}\n\t\t\t\t\t\tisExternalLink={isExternalLink}\n\t\t\t\t\t\tshowQuotes={showQuotedHeadline}\n\t\t\t\t\t\theadlineColour={palette('--highlights-card-headline')}\n\t\t\t\t\t\tkickerColour={palette('--highlights-card-kicker-text')}\n\t\t\t\t\t\tisBetaContainer={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{!!mainMedia && showMediaIcon && (\n\t\t\t\t\t<div css={mediaIcon}>\n\t\t\t\t\t\t<Icon mediaType={mainMedia.type} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<div css={imageArea}>\n\t\t\t\t\t{(avatarUrl && (\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tsrc={avatarUrl}\n\t\t\t\t\t\t\talt={byline ?? ''}\n\t\t\t\t\t\t\tshape=\"cutout\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)) ??\n\t\t\t\t\t\t(image && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<CardPicture\n\t\t\t\t\t\t\t\t\timageSize=\"medium\"\n\t\t\t\t\t\t\t\t\tmainImage={image.src}\n\t\t\t\t\t\t\t\t\talt={image.altText}\n\t\t\t\t\t\t\t\t\tloading={imageLoading}\n\t\t\t\t\t\t\t\t\tisCircular={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* This image overlay is styled when the CardLink is hovered */}\n\t\t\t\t\t\t\t\t<div className=\"image-overlay\"> </div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</FormatBoundary>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { from, space, until } from '@guardian/source/foundations';\nimport {\n\tButton,\n\tHide,\n\tSvgChevronLeftSingle,\n\tSvgChevronRightSingle,\n} from '@guardian/source/react-components';\nimport { useEffect, useRef, useState } from 'react';\nimport { submitComponentEvent } from '../client/ophan/ophan';\nimport { palette } from '../palette';\nimport type { DCRFrontCard } from '../types/front';\nimport { HighlightsCard } from './Masthead/HighlightsCard';\n\ntype Props = { trails: DCRFrontCard[] };\n\nconst containerStyles = css`\n\t${from.tablet} {\n\t\tpadding: 0 ${space[5]}px;\n\t}\n\t${from.wide} {\n\t\tpadding-right: 100px;\n\t}\n`;\n\nconst carouselStyles = css`\n\tdisplay: grid;\n\tgrid-auto-columns: 1fr;\n\tgrid-auto-flow: column;\n\toverflow-x: auto;\n\toverflow-y: hidden;\n\tscroll-snap-type: x mandatory;\n\tscroll-behavior: smooth;\n\toverscroll-behavior-x: contain;\n\toverscroll-behavior-y: auto;\n\t${until.tablet} {\n\t\tscroll-padding-left: 10px;\n\t}\n\t${from.tablet} {\n\t\tscroll-padding-left: 120px;\n\t}\n\t${from.desktop} {\n\t\tscroll-padding-left: 240px;\n\t}\n\t${from.leftCol} {\n\t\tscroll-padding-left: 80px;\n\t}\n\n\t${from.wide} {\n\t\tscroll-padding-left: 240px;\n\t}\n\t/**\n\t* Hide scrollbars\n\t* See: https://stackoverflow.com/a/38994837\n\t*/\n\t::-webkit-scrollbar {\n\t\tdisplay: none; /* Safari and Chrome */\n\t}\n\tscrollbar-width: none; /* Firefox */\n\tposition: relative;\n`;\n\nconst itemStyles = css`\n\tscroll-snap-align: start;\n\tgrid-area: span 1;\n\tposition: relative;\n\tmargin: ${space[3]}px 10px;\n\t:first-child {\n\t\t${from.tablet} {\n\t\t\tmargin-left: 0px;\n\t\t}\n\n\t\t/**\n\t\t* From left col we add space to the left margin to the first\n\t\t* child so that the first card in the carousel aligns\n\t\t* with the start of the pages content in the grid.\n\t\t*/\n\n\t\t${from.leftCol} {\n\t\t\tpadding-left: 160px; /** 160 === 2 columns and 2 column gaps  */\n\t\t}\n\t\t${from.wide} {\n\t\t\tpadding-left: 0;\n\t\t\tmargin-left: 240px; /** 240 === 3 columns and 3 column gaps  */\n\t\t}\n\t}\n`;\n\nconst verticalLineStyles = css`\n\t:not(:last-child)::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tright: -10px;\n\t\twidth: 1px;\n\t\tbackground-color: ${palette('--card-border-top')};\n\t\ttransform: translateX(-50%);\n\t}\n`;\n\nconst buttonStyles = css`\n\tz-index: 1;\n`;\n\nconst buttonOverlayStyles = css`\n\twidth: 60px;\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tposition: absolute;\n\ttop: 0;\n\tpointer-events: all;\n`;\n\nconst previousButtonFadeStyles = css`\n\tleft: ${space[5]}px;\n\tbackground: linear-gradient(\n\t\tto right,\n\t\t${palette('--highlights-container-start-fade')} 0%,\n\t\t${palette('--highlights-container-mid-fade')} 60%,\n\t\t${palette('--highlights-container-end-fade')} 100%\n\t);\n`;\n\nconst nextButtonFadeStyles = css`\n\tright: ${space[5]}px;\n\tjustify-content: flex-end;\n\tbackground: linear-gradient(\n\t\tto left,\n\t\t${palette('--highlights-container-start-fade')} 0px,\n\t\t${palette('--highlights-container-mid-fade')} 60%,\n\t\t${palette('--highlights-container-end-fade')} 100%\n\t);\n`;\n/**\n * Generates CSS styles for a grid layout used in a carousel.\n *\n * @param {number} totalCards - The total number of cards in the carousel.\n * @returns {string} - The CSS styles for the grid layout.\n */\nconst generateCarouselColumnStyles = (totalCards: number) => {\n\tconst peepingCardWidth = space[8];\n\n\treturn css`\n\t\t${until.mobileMedium} {\n\t\t\tgrid-template-columns: repeat(${totalCards}, 70%) max(30%);\n\t\t}\n\n\t\t${from.mobileMedium} {\n\t\t\tgrid-template-columns: repeat(\n\t\t\t\t${totalCards},\n\t\t\t\tcalc((100% - ${peepingCardWidth}px) / 2)\n\t\t\t);\n\t\t}\n\n\t\t${from.tablet} {\n\t\t\tgrid-template-columns: repeat(${totalCards}, 1fr);\n\t\t}\n\t`;\n};\n\nexport const ScrollableHighlights = ({ trails }: Props) => {\n\tconst carouselRef = useRef<HTMLOListElement | null>(null);\n\tconst carouselLength = trails.length;\n\tconst imageLoading = 'eager';\n\tconst [showPreviousButton, setShowPreviousButton] = useState(false);\n\tconst [showNextButton, setShowNextButton] = useState(true);\n\n\tconst scrollTo = (direction: 'left' | 'right') => {\n\t\tif (!carouselRef.current) return;\n\n\t\tconst cardWidth =\n\t\t\tcarouselRef.current.querySelector('li')?.offsetWidth ?? 0;\n\t\tconst offset = direction === 'left' ? -cardWidth : cardWidth;\n\t\tcarouselRef.current.scrollBy({\n\t\t\tleft: offset,\n\t\t\tbehavior: 'smooth',\n\t\t});\n\t};\n\n\t/**\n\t * Updates the visibility of the navigation buttons based on the carousel's scroll position.\n\t *\n\t * This function checks the current scroll position of the carousel and sets the visibility\n\t * of the previous and next buttons accordingly. The previous button is shown if the carousel\n\t * is scrolled to the right of the start, and the next button is shown if the carousel is not\n\t * fully scrolled to the end.\n\t */\n\tconst updateButtonVisibilityOnScroll = () => {\n\t\tconst carouselElement = carouselRef.current;\n\t\tif (!carouselElement) return;\n\n\t\tconst scrollLeft = carouselElement.scrollLeft;\n\t\tconst maxScrollLeft =\n\t\t\tcarouselElement.scrollWidth - carouselElement.clientWidth;\n\n\t\tsetShowPreviousButton(scrollLeft > 0);\n\t\tsetShowNextButton(scrollLeft < maxScrollLeft);\n\t};\n\n\tuseEffect(() => {\n\t\tconst carouselElement = carouselRef.current;\n\t\tif (!carouselElement) return;\n\n\t\tcarouselElement.addEventListener(\n\t\t\t'scroll',\n\t\t\tupdateButtonVisibilityOnScroll,\n\t\t);\n\n\t\treturn () => {\n\t\t\tcarouselElement.removeEventListener(\n\t\t\t\t'scroll',\n\t\t\t\tupdateButtonVisibilityOnScroll,\n\t\t\t);\n\t\t};\n\t}, []);\n\tuseEffect(() => {\n\t\tvoid submitComponentEvent(\n\t\t\t{\n\t\t\t\tabTest: {\n\t\t\t\t\tname: 'masthead-with-highlights',\n\t\t\t\t\tvariant: 'inTest',\n\t\t\t\t},\n\t\t\t\tcomponent: {\n\t\t\t\t\tcomponentType: 'CAROUSEL',\n\t\t\t\t\tid: 'home-highlights',\n\t\t\t\t},\n\t\t\t\taction: 'INSERT',\n\t\t\t},\n\t\t\t'Web',\n\t\t);\n\t}, []);\n\n\treturn (\n\t\t<div css={containerStyles}>\n\t\t\t<ol\n\t\t\t\tdata-component=\"home-highlights\"\n\t\t\t\tref={carouselRef}\n\t\t\t\tcss={[\n\t\t\t\t\tcarouselStyles,\n\t\t\t\t\tgenerateCarouselColumnStyles(carouselLength),\n\t\t\t\t]}\n\t\t\t\tdata-heatphan-type=\"carousel\"\n\t\t\t>\n\t\t\t\t{trails.map((trail) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={trail.url}\n\t\t\t\t\t\t\tcss={[itemStyles, verticalLineStyles]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<HighlightsCard\n\t\t\t\t\t\t\t\tformat={trail.format}\n\t\t\t\t\t\t\t\theadlineText={trail.headline}\n\t\t\t\t\t\t\t\tkickerText={trail.kickerText}\n\t\t\t\t\t\t\t\tavatarUrl={trail.avatarUrl}\n\t\t\t\t\t\t\t\tbyline={trail.byline}\n\t\t\t\t\t\t\t\timage={trail.image}\n\t\t\t\t\t\t\t\timageLoading={imageLoading}\n\t\t\t\t\t\t\t\tlinkTo={trail.url}\n\t\t\t\t\t\t\t\tdataLinkName={trail.dataLinkName}\n\t\t\t\t\t\t\t\tisExternalLink={trail.isExternalLink}\n\t\t\t\t\t\t\t\tshowQuotedHeadline={trail.showQuotedHeadline}\n\t\t\t\t\t\t\t\tmainMedia={trail.mainMedia}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ol>\n\n\t\t\t<Hide until={'tablet'}>\n\t\t\t\t{showPreviousButton && (\n\t\t\t\t\t<div css={[buttonOverlayStyles, previousButtonFadeStyles]}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcssOverrides={buttonStyles}\n\t\t\t\t\t\t\thideLabel={true}\n\t\t\t\t\t\t\ticonSide=\"left\"\n\t\t\t\t\t\t\ticon={<SvgChevronLeftSingle />}\n\t\t\t\t\t\t\tonClick={() => scrollTo('left')}\n\t\t\t\t\t\t\taria-label=\"Move highlight stories backwards\"\n\t\t\t\t\t\t\tdata-link-name=\"highlights container left chevron\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{showNextButton && (\n\t\t\t\t\t<div css={[buttonOverlayStyles, nextButtonFadeStyles]}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcssOverrides={buttonStyles}\n\t\t\t\t\t\t\thideLabel={true}\n\t\t\t\t\t\t\ticonSide=\"left\"\n\t\t\t\t\t\t\ticon={<SvgChevronRightSingle />}\n\t\t\t\t\t\t\tonClick={() => scrollTo('right')}\n\t\t\t\t\t\t\taria-label=\"Move highlight stories forwards\"\n\t\t\t\t\t\t\tdata-link-name=\"highlights container right chevron\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Hide>\n\t\t</div>\n\t);\n};\n","import type { DCRContainerPalette } from '../types/front';\nimport { ArticleDesign, type ArticleFormat } from './articleFormat';\n\nexport const isMediaCard = (format: ArticleFormat): boolean => {\n\tswitch (format.design) {\n\t\tcase ArticleDesign.Gallery:\n\t\tcase ArticleDesign.Audio:\n\t\tcase ArticleDesign.Video: {\n\t\t\treturn true;\n\t\t}\n\t\tdefault: {\n\t\t\treturn false;\n\t\t}\n\t}\n};\n\nexport const cardHasDarkBackground = (\n\tformat: ArticleFormat,\n\tcontainerPalette?: DCRContainerPalette,\n): boolean => {\n\tswitch (containerPalette) {\n\t\t// Special palettes with dark background colours on containers\n\t\tcase 'BreakingPalette':\n\t\tcase 'SombrePalette':\n\t\tcase 'InvestigationPalette':\n\t\tcase 'SombreAltPalette':\n\t\t\treturn true;\n\n\t\t// Special palettes with light background colours on containers\n\t\tcase 'Branded':\n\t\tcase 'EventAltPalette':\n\t\tcase 'EventPalette':\n\t\tcase 'LongRunningAltPalette':\n\t\tcase 'LongRunningPalette':\n\t\tcase 'SpecialReportAltPalette':\n\t\t\treturn false;\n\n\t\t// Special palettes which act more like standard containers\n\t\tcase 'MediaPalette':\n\t\tcase 'PodcastPalette':\n\t\t// If no containerPalette provided, card is in a standard container\n\t\tcase undefined: {\n\t\t\treturn false;\n\t\t}\n\t}\n};\n","/**\n * Temporary fix\n * =============\n *\n * Find the master URL for an image if has already been signed upstream.\n *\n * DCR can handle generating a signed image URL with `generateImageURL`,\n * so this method extracts source URLS from fully signed ones. _e.g.:_\n *\n * - from\n *   `https://i.guim.co.uk/img/media/c56c6217f8fa306d89320cc7915161203b5017b1/0_166_5000_3002/master/5000.jpg?width=300&quality=85&auto=format&fit=max&s=0d205d08639b4ad6e1b86758ab451abb`\n * \t to\n *   `https://media.guim.co.uk/img/media/c56c6217f8fa306d89320cc7915161203b5017b1/0_166_5000_3002/master/5000.jpg`\n *\n * - from\n *   `https://i.guim.co.uk/img/uploads/2017/10/06/George-Monbiot,-L.png?width=173&quality=85&auto=format&fit=max&s=be5b0d3f3aa55682e4930057fc3929a3`\n *   to\n *   `https://uploads.guim.co.uk/2017/10/06/George-Monbiot,-L.png`\n *\n * @deprecated Favour updating image paths sent from frontend to sources\n */\nexport const getSourceImageUrl = (source: string): string => {\n\tconst url = new URL(source);\n\n\tconst buckets = ['/img/media/', '/img/static/', '/img/uploads/'] as const;\n\tconst prefix = buckets.find((bucket) => url.pathname.startsWith(bucket));\n\n\tif (url.hostname === 'i.guim.co.uk' && prefix) {\n\t\tconst path = url.pathname.replace(prefix, '');\n\t\tswitch (prefix) {\n\t\t\tcase '/img/media/':\n\t\t\t\treturn `https://media.guim.co.uk/${path}`;\n\t\t\tcase '/img/static/':\n\t\t\t\treturn `https://static.guim.co.uk/${path}`;\n\t\t\tcase '/img/uploads/':\n\t\t\t\treturn `https://uploads.guim.co.uk/${path}`;\n\t\t}\n\t}\n\n\treturn source;\n};\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden } from '../../../foundations/accessibility/visually-hidden.js';\nimport { iconSize } from '../../../foundations/__generated__/size.js';\n\nconst Svg = ({ size, theme }) => /* @__PURE__ */ jsx(\n  \"svg\",\n  {\n    width: size ? iconSize[size] : void 0,\n    height: void 0,\n    viewBox: \"-3 -3 30 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: false,\n    \"aria-hidden\": true,\n    children: /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        d: \"M2 15.75h3.75L11 21h1V3h-1L5.75 8.25H2l-1 1v5.5zM21.3 12c0 2.7-.925 5.175-2.5 7.175l.55.525A9.9 9.9 0 0 0 23 12c0-3.125-1.425-5.9-3.65-7.725l-.55.525c1.575 2 2.5 4.475 2.5 7.2m-5.2 0q0 2.362-1.275 4.2l.65.65C16.75 15.575 17.5 13.9 17.5 12c0-1.925-.75-3.6-2.025-4.875l-.65.65C15.675 9 16.1 10.425 16.1 12\",\n        fill: theme?.fill\n      }\n    )\n  }\n);\nconst SvgAudio = ({\n  size,\n  theme,\n  isAnnouncedByScreenReader = false\n}) => /* @__PURE__ */ jsxs(Fragment, { children: [\n  /* @__PURE__ */ jsx(Svg, { size, theme }),\n  isAnnouncedByScreenReader ? /* @__PURE__ */ jsx(\n    \"span\",\n    {\n      css: css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`,\n      children: \"Audio\"\n    }\n  ) : \"\"\n] });\n\nexport { SvgAudio };\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden } from '../../../foundations/accessibility/visually-hidden.js';\nimport { iconSize } from '../../../foundations/__generated__/size.js';\n\nconst Svg = ({ size, theme }) => /* @__PURE__ */ jsx(\n  \"svg\",\n  {\n    width: size ? iconSize[size] : void 0,\n    height: void 0,\n    viewBox: \"-3 -3 30 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: false,\n    \"aria-hidden\": true,\n    children: /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        d: \"M23 6.5v10.975l-1.475 1.55H2.5L1 17.55V6.5L2.5 5h4.975l2.5-2.5H14L16.5 5h5.025zm-11 9.75c2.5 0 4.525-2 4.525-4.475 0-2.5-2.025-4.5-4.525-4.5s-4.5 2-4.5 4.5c0 2.475 2 4.475 4.5 4.475\",\n        fill: theme?.fill\n      }\n    )\n  }\n);\nconst SvgCamera = ({\n  size,\n  theme,\n  isAnnouncedByScreenReader = false\n}) => /* @__PURE__ */ jsxs(Fragment, { children: [\n  /* @__PURE__ */ jsx(Svg, { size, theme }),\n  isAnnouncedByScreenReader ? /* @__PURE__ */ jsx(\n    \"span\",\n    {\n      css: css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`,\n      children: \"Camera\"\n    }\n  ) : \"\"\n] });\n\nexport { SvgCamera };\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden } from '../../../foundations/accessibility/visually-hidden.js';\nimport { iconSize } from '../../../foundations/__generated__/size.js';\n\nconst Svg = ({ size, theme }) => /* @__PURE__ */ jsx(\n  \"svg\",\n  {\n    width: size ? iconSize[size] : void 0,\n    height: void 0,\n    viewBox: \"-3 -3 30 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: false,\n    \"aria-hidden\": true,\n    children: /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        d: \"M3 5 1 7v10l2 2h11.5V5zm18.5.5-5 5v3l5 5H23v-13z\",\n        fill: theme?.fill\n      }\n    )\n  }\n);\nconst SvgVideo = ({\n  size,\n  theme,\n  isAnnouncedByScreenReader = false\n}) => /* @__PURE__ */ jsxs(Fragment, { children: [\n  /* @__PURE__ */ jsx(Svg, { size, theme }),\n  isAnnouncedByScreenReader ? /* @__PURE__ */ jsx(\n    \"span\",\n    {\n      css: css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`,\n      children: \"Video\"\n    }\n  ) : \"\"\n] });\n\nexport { SvgVideo };\n"],"names":["picture","css","round","palette","img","block","Avatar","src","alt","shape","sources","generateSources","getSourceImageUrl","breakpoint","width","fallbackSource","getFallbackSource","map","source","Fragment","srcSet","hiResUrl","media","lowResUrl","fauxLinkStyles","getZIndex","focusHalo","InternalLink","linkTo","headlineText","dataLinkName","a","href","data-link-name","aria-label","ExternalLink","target","rel","CardLink","isExternalLink","decideAspectRatioStyles","aspectRatio","paddingRatio","getAspectRatioPadding","borderRadius","space","circularStyles","CardPicture","mainImage","imageSize","loading","roundedCorners","isCircular","breakpoints","mobile","tablet","desktop","mobileLandscape","decideImageWidths","data-size","React","data-chromatic","iconWrapperStyles","hasKicker","themePalette","wrapperStyles","Icon","mediaType","SvgCamera","SvgVideo","SvgAudio","MediaIcon","span","MediaMeta","div","gridContainer","until","mobileMedium","between","and","from","headline","mediaIcon","imageArea","hoverStyles","HighlightsCard","format","showQuotedHeadline","image","imageLoading","avatarUrl","mainMedia","kickerText","byline","showMediaIcon","isMediaCard","FormatBoundary","CardHeadline","fontSizes","showPulsingDot","design","ArticleDesign","LiveBlog","showQuotes","headlineColour","kickerColour","isBetaContainer","type","altText","className","containerStyles","wide","carouselStyles","leftCol","itemStyles","verticalLineStyles","buttonStyles","buttonOverlayStyles","previousButtonFadeStyles","nextButtonFadeStyles","generateCarouselColumnStyles","totalCards","peepingCardWidth","ScrollableHighlights","trails","carouselRef","useRef","carouselLength","length","showPreviousButton","setShowPreviousButton","useState","showNextButton","setShowNextButton","scrollTo","direction","current","cardWidth","querySelector","offsetWidth","offset","scrollBy","left","behavior","updateButtonVisibilityOnScroll","carouselElement","scrollLeft","maxScrollLeft","scrollWidth","clientWidth","useEffect","addEventListener","removeEventListener","submitComponentEvent","abTest","name","variant","component","componentType","id","action","ol","data-component","ref","data-heatphan-type","trail","li","url","Hide","Button","cssOverrides","hideLabel","iconSide","icon","SvgChevronLeftSingle","onClick","size","SvgChevronRightSingle","Gallery","Audio","Video","cardHasDarkBackground","containerPalette","undefined","URL","prefix","find","bucket","pathname","startsWith","hostname","path","replace","Svg","theme","jsx","iconSize","height","viewBox","xmlns","focusable","children","fillRule","clipRule","d","fill","isAnnouncedByScreenReader","jsxs","visuallyHidden"],"sourceRoot":""}