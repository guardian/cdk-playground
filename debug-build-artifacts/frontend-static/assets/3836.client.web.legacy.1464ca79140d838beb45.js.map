{"version":3,"file":"3836.client.web.legacy.1464ca79140d838beb45.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/FollowButtons.tsx","webpack://@guardian/dotcom-rendering/./src/lib/thrift/protocols.ts","webpack://@guardian/dotcom-rendering/./src/lib/thrift/nativeConnection.ts","webpack://@guardian/dotcom-rendering/./src/lib/bridgetApi.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { space, textSans15 } from '@guardian/source/foundations';\nimport { SvgCheckmark, SvgNotificationsOff, SvgNotificationsOn, SvgPlus, } from '@guardian/source/react-components';\nimport { palette } from '../palette';\nconst FollowIcon = ({ isFollowing, iconIsFollowing, iconIsNotFollowing, }) => (_jsx(\"div\", { css: css `\n\t\t\tdisplay: flex;\n\t\t\tmargin: 0;\n\t\t\tmargin-right: ${space[1]}px;\n\n\t\t\tborder-radius: 100%;\n\t\t\tborder: 1px solid ${palette('--follow-icon-fill')};\n\n\t\t\tsvg {\n\t\t\t\tmargin: 1px;\n\t\t\t}\n\t\t`, style: {\n        backgroundColor: isFollowing\n            ? palette('--follow-icon-fill')\n            : undefined,\n        fill: isFollowing\n            ? palette('--follow-icon-background')\n            : palette('--follow-icon-fill'),\n    }, children: isFollowing ? iconIsFollowing : iconIsNotFollowing }));\nconst buttonStyles = (withExtraBottomMargin) => css `\n\t${textSans15}\n\tcolor: ${palette('--follow-text')};\n\tbackground: none;\n\tborder: none;\n\tdisplay: block;\n\tmargin-left: 0;\n\tmin-height: ${space[6]}px;\n\tpadding: 0;\n\ttext-align: left;\n\t${withExtraBottomMargin && `margin-bottom: ${space[2]}px;`}\n`;\nconst containerStyles = css `\n\tdisplay: flex;\n\talign-items: center;\n\tcolumn-gap: 0.2em;\n`;\nconst notificationsTextSpan = ({ isFollowing, }) => (_jsxs(\"span\", { children: [\"Notifications \", isFollowing ? 'on' : 'off'] }));\nconst tagTextSpan = ({ isFollowing, displayName, }) => (_jsxs(\"span\", { children: [isFollowing ? 'Following' : 'Follow', \" \", displayName] }));\nexport const FollowNotificationsButton = ({ isFollowing, onClickHandler, withExtraBottomMargin = false, }) => {\n    return (_jsx(\"button\", { onClick: onClickHandler, type: \"button\", css: [buttonStyles(withExtraBottomMargin)], children: _jsxs(\"span\", { css: containerStyles, children: [_jsx(FollowIcon, { isFollowing: isFollowing, iconIsFollowing: _jsx(SvgNotificationsOn, { size: \"xsmall\" }), iconIsNotFollowing: _jsx(SvgNotificationsOff, { size: \"xsmall\" }) }), notificationsTextSpan({ isFollowing })] }) }));\n};\nexport const FollowTagButton = ({ isFollowing, displayName = '', onClickHandler, withExtraBottomMargin = false, }) => {\n    return (_jsx(\"button\", { onClick: onClickHandler, type: \"button\", css: [buttonStyles(withExtraBottomMargin)], children: _jsxs(\"span\", { css: containerStyles, children: [_jsx(FollowIcon, { isFollowing: isFollowing, iconIsFollowing: _jsx(SvgCheckmark, { size: \"xsmall\" }), iconIsNotFollowing: _jsx(SvgPlus, { size: \"xsmall\" }) }), tagTextSpan({ isFollowing, displayName })] }) }));\n};\n","import { MessageType, TProtocol } from '@creditkarma/thrift-server-core';\nexport class TProtocolDecorator extends TProtocol {\n    concreteProtocol;\n    constructor(protocol) {\n        super(protocol.getTransport());\n        this.concreteProtocol = protocol;\n    }\n    getTransport() {\n        return this.concreteProtocol.getTransport();\n    }\n    flush() {\n        return this.concreteProtocol.flush();\n    }\n    writeMessageBegin(name, type, seqid) {\n        return this.concreteProtocol.writeMessageBegin(name, type, seqid);\n    }\n    writeMessageEnd() {\n        return this.concreteProtocol.writeMessageEnd();\n    }\n    writeStructBegin(name) {\n        return this.concreteProtocol.writeStructBegin(name);\n    }\n    writeStructEnd() {\n        return this.concreteProtocol.writeStructEnd();\n    }\n    writeFieldBegin(name, type, id) {\n        return this.concreteProtocol.writeFieldBegin(name, type, id);\n    }\n    writeFieldEnd() {\n        return this.concreteProtocol.writeFieldEnd();\n    }\n    writeFieldStop() {\n        return this.concreteProtocol.writeFieldStop();\n    }\n    writeMapBegin(keyType, valueType, size) {\n        return this.concreteProtocol.writeMapBegin(keyType, valueType, size);\n    }\n    writeMapEnd() {\n        return this.concreteProtocol.writeMapEnd();\n    }\n    writeListBegin(elementType, size) {\n        return this.concreteProtocol.writeListBegin(elementType, size);\n    }\n    writeListEnd() {\n        return this.concreteProtocol.writeListEnd();\n    }\n    writeSetBegin(elementType, size) {\n        return this.concreteProtocol.writeSetBegin(elementType, size);\n    }\n    writeSetEnd() {\n        return this.concreteProtocol.writeSetEnd();\n    }\n    writeBool(bool) {\n        return this.concreteProtocol.writeBool(bool);\n    }\n    writeByte(b) {\n        return this.concreteProtocol.writeByte(b);\n    }\n    writeI16(i16) {\n        return this.concreteProtocol.writeI16(i16);\n    }\n    writeI32(i32) {\n        return this.concreteProtocol.writeI32(i32);\n    }\n    writeI64(i64) {\n        return this.concreteProtocol.writeI64(i64);\n    }\n    writeDouble(dbl) {\n        return this.concreteProtocol.writeDouble(dbl);\n    }\n    writeString(arg) {\n        return this.concreteProtocol.writeString(arg);\n    }\n    writeBinary(arg) {\n        return this.concreteProtocol.writeBinary(arg);\n    }\n    readMessageBegin() {\n        return this.concreteProtocol.readMessageBegin();\n    }\n    readMessageEnd() {\n        return this.concreteProtocol.readMessageEnd();\n    }\n    readStructBegin() {\n        return this.concreteProtocol.readStructBegin();\n    }\n    readStructEnd() {\n        return this.concreteProtocol.readStructEnd();\n    }\n    readFieldBegin() {\n        return this.concreteProtocol.readFieldBegin();\n    }\n    readFieldEnd() {\n        return this.concreteProtocol.readFieldEnd();\n    }\n    readMapBegin() {\n        return this.concreteProtocol.readMapBegin();\n    }\n    readMapEnd() {\n        return this.concreteProtocol.readMapEnd();\n    }\n    readListBegin() {\n        return this.concreteProtocol.readListBegin();\n    }\n    readListEnd() {\n        return this.concreteProtocol.readListEnd();\n    }\n    readSetBegin() {\n        return this.concreteProtocol.readSetBegin();\n    }\n    readSetEnd() {\n        return this.concreteProtocol.readSetEnd();\n    }\n    readBool() {\n        return this.concreteProtocol.readBool();\n    }\n    readByte() {\n        return this.concreteProtocol.readByte();\n    }\n    readI16() {\n        return this.concreteProtocol.readI16();\n    }\n    readI32() {\n        return this.concreteProtocol.readI32();\n    }\n    readI64() {\n        return this.concreteProtocol.readI64();\n    }\n    readDouble() {\n        return this.concreteProtocol.readDouble();\n    }\n    readBinary() {\n        return this.concreteProtocol.readBinary();\n    }\n    readString() {\n        return this.concreteProtocol.readString();\n    }\n    skip(type) {\n        return this.concreteProtocol.skip(type);\n    }\n}\nexport class TMultiplexedProtocol extends TProtocolDecorator {\n    static separator = ':';\n    serviceName;\n    constructor(protocol, serviceName) {\n        super(protocol);\n        this.serviceName = serviceName;\n    }\n    writeMessageBegin(name, type, seqid) {\n        if (type === MessageType.CALL || type === MessageType.ONEWAY) {\n            super.writeMessageBegin(this.serviceName + TMultiplexedProtocol.separator + name, type, seqid);\n        }\n        else {\n            super.writeMessageBegin(name, type, seqid);\n        }\n    }\n}\n","import { getProtocol, getTransport, TApplicationException, TApplicationExceptionType, ThriftConnection, } from '@creditkarma/thrift-server-core';\nimport { TMultiplexedProtocol } from './protocols';\nconst ACTION_TIMEOUT_MS = 30000;\nfunction sendNativeMessage(nativeMessage) {\n    if (window.android) {\n        window.android.postMessage(nativeMessage.data, nativeMessage.connectionId);\n    }\n    else if (window.webkit) {\n        window.webkit.messageHandlers.iOSWebViewMessage.postMessage(nativeMessage);\n    }\n    else {\n        console.warn('No native APIs available');\n    }\n}\nlet uid = 1;\nconst getUniqueConnectionId = () => `connection-${uid++}`;\nexport class NativeConnection extends ThriftConnection {\n    connectionId = getUniqueConnectionId();\n    promises = [];\n    outBuffer = [];\n    constructor(Transport, Protocol) {\n        super(Transport, Protocol);\n        if (typeof window !== 'undefined') {\n            window.nativeConnections = window.nativeConnections ?? {};\n            window.nativeConnections[this.connectionId] = this;\n        }\n    }\n    reset(oldConnectionId) {\n        if (oldConnectionId === this.connectionId && window.nativeConnections) {\n            console.warn('Reseting connection ' + oldConnectionId);\n            delete window.nativeConnections[this.connectionId];\n            for (const promise of this.promises) {\n                promise.reject(new TApplicationException(TApplicationExceptionType.UNKNOWN, 'Timeout error'));\n            }\n            this.promises = [];\n            this.connectionId = getUniqueConnectionId();\n            window.nativeConnections[this.connectionId] = this;\n        }\n    }\n    receive(message) {\n        const resolver = this.promises.shift();\n        if (resolver) {\n            clearTimeout(resolver.timeoutId);\n            const data = Buffer.from(message.data, 'base64');\n            resolver.resolve(data);\n        }\n        this.sendNextMessage();\n    }\n    sendNextMessage() {\n        const message = this.outBuffer.shift();\n        if (message) {\n            console.log('Sending next message');\n            sendNativeMessage(message);\n        }\n    }\n    send(dataToSend) {\n        const id = this.connectionId;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias -- Reassign this\n        const connection = this;\n        return new Promise(function (res, rej) {\n            connection.promises.push({\n                resolve: res,\n                reject: rej,\n                timeoutId: setTimeout(function () {\n                    connection.reset(id);\n                }, ACTION_TIMEOUT_MS),\n            });\n            const message = {\n                data: dataToSend.toString('base64'),\n                connectionId: id,\n            };\n            if (connection.promises.length === 1) {\n                console.log('Sending message immediately');\n                sendNativeMessage(message);\n            }\n            else {\n                console.log('Queing message because others in flight');\n                connection.outBuffer.push(message);\n            }\n        });\n    }\n}\nexport function createAppClient(ServiceClient, transport = 'buffered', protocol = 'compact') {\n    class NamedMultiplexedProtocol extends TMultiplexedProtocol {\n        constructor(tTransport) {\n            const Protocol = getProtocol(protocol);\n            super(new Protocol(tTransport), ServiceClient.serviceName ?? '');\n        }\n    }\n    const connection = new NativeConnection(getTransport(transport), NamedMultiplexedProtocol);\n    return new ServiceClient(connection);\n}\n","import * as Acquisitions from '@guardian/bridget/Acquisitions';\nimport * as Analytics from '@guardian/bridget/Analytics';\nimport * as Commercial from '@guardian/bridget/Commercial';\nimport * as Discussion from '@guardian/bridget/Discussion';\nimport * as Environment from '@guardian/bridget/Environment';\nimport * as Gallery from '@guardian/bridget/Gallery';\nimport * as Interaction from '@guardian/bridget/Interaction';\nimport * as Metrics from '@guardian/bridget/Metrics';\nimport * as Navigation from '@guardian/bridget/Navigation';\nimport * as Newsletters from '@guardian/bridget/Newsletters';\nimport * as Notifications from '@guardian/bridget/Notifications';\nimport * as Tag from '@guardian/bridget/Tag';\nimport * as User from '@guardian/bridget/User';\nimport * as Video from '@guardian/bridget/Videos';\nimport { isUndefined } from '@guardian/libs';\nimport { createAppClient } from './thrift/nativeConnection';\nlet environmentClient = undefined;\nexport const getEnvironmentClient = () => {\n    if (isUndefined(environmentClient)) {\n        environmentClient = createAppClient(Environment.Client, 'buffered', 'compact');\n    }\n    return environmentClient;\n};\nlet commercialClient = undefined;\nexport const getCommercialClient = () => {\n    if (isUndefined(commercialClient)) {\n        commercialClient = createAppClient(Commercial.Client, 'buffered', 'compact');\n    }\n    return commercialClient;\n};\nlet acquisitionsClient = undefined;\nexport const getAcquisitionsClient = () => {\n    if (!acquisitionsClient) {\n        acquisitionsClient = createAppClient(Acquisitions.Client, 'buffered', 'compact');\n    }\n    return acquisitionsClient;\n};\nlet notificationsClient = undefined;\nexport const getNotificationsClient = () => {\n    if (!notificationsClient) {\n        notificationsClient = createAppClient(Notifications.Client, 'buffered', 'compact');\n    }\n    return notificationsClient;\n};\nlet tagClient = undefined;\nexport const getTagClient = () => {\n    if (!tagClient) {\n        tagClient = createAppClient(Tag.Client, 'buffered', 'compact');\n    }\n    return tagClient;\n};\nlet userClient = undefined;\nexport const getUserClient = () => {\n    if (!userClient) {\n        userClient = createAppClient(User.Client, 'buffered', 'compact');\n    }\n    return userClient;\n};\nlet galleryClient = undefined;\nexport const getGalleryClient = () => {\n    if (!galleryClient) {\n        galleryClient = createAppClient(Gallery.Client, 'buffered', 'compact');\n    }\n    return galleryClient;\n};\nlet videoClient = undefined;\nexport const getVideoClient = () => {\n    if (!videoClient) {\n        videoClient = createAppClient(Video.Client, 'buffered', 'compact');\n    }\n    return videoClient;\n};\nlet metricsClient = undefined;\nexport const getMetricsClient = () => {\n    if (!metricsClient) {\n        metricsClient = createAppClient(Metrics.Client, 'buffered', 'compact');\n    }\n    return metricsClient;\n};\nlet analyticsClient = undefined;\nexport const getAnalyticsClient = () => {\n    if (!analyticsClient) {\n        analyticsClient = createAppClient(Analytics.Client, 'buffered', 'compact');\n    }\n    return analyticsClient;\n};\nlet navigationClient = undefined;\nexport const getNavigationClient = () => {\n    if (!navigationClient) {\n        navigationClient = createAppClient(Navigation.Client, 'buffered', 'compact');\n    }\n    return navigationClient;\n};\nlet newslettersClient = undefined;\nexport const getNewslettersClient = () => {\n    if (!newslettersClient) {\n        newslettersClient = createAppClient(Newsletters.Client, 'buffered', 'compact');\n    }\n    return newslettersClient;\n};\nlet discussionClient = undefined;\nexport const getDiscussionClient = () => {\n    if (!discussionClient) {\n        discussionClient = createAppClient(Discussion.Client, 'buffered', 'compact');\n    }\n    return discussionClient;\n};\nlet interactionClient = undefined;\nexport const getInteractionClient = () => {\n    if (!interactionClient) {\n        interactionClient = createAppClient(Interaction.Client, 'buffered', 'compact');\n    }\n    return interactionClient;\n};\n","/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour) => `var(${colour})`;\n// ----- Exports ----- //\nexport { palette };\n"],"names":["FollowIcon","_ref","isFollowing","iconIsFollowing","iconIsNotFollowing","_jsx","css","space","palette","style","backgroundColor","undefined","fill","children","buttonStyles","withExtraBottomMargin","textSans15","concat","containerStyles","name","styles","notificationsTextSpan","_ref2","_jsxs","tagTextSpan","_ref3","displayName","FollowNotificationsButton","_ref4","onClickHandler","_ref4$withExtraBottom","onClick","type","SvgNotificationsOn","size","SvgNotificationsOff","FollowTagButton","_ref5","_ref5$displayName","_ref5$withExtraBottom","SvgCheckmark","SvgPlus","TMultiplexedProtocol","_TProtocolDecorator2","protocol","serviceName","_this2","_classCallCheck","_callSuper","_defineProperty","_inherits","_createClass","key","value","seqid","MessageType","CALL","ONEWAY","_superPropGet","this","separator","_TProtocol","TProtocolDecorator","_this","getTransport","concreteProtocol","flush","writeMessageBegin","writeMessageEnd","writeStructBegin","writeStructEnd","id","writeFieldBegin","writeFieldEnd","writeFieldStop","keyType","valueType","writeMapBegin","writeMapEnd","elementType","writeListBegin","writeListEnd","writeSetBegin","writeSetEnd","bool","writeBool","b","writeByte","i16","writeI16","i32","writeI32","i64","writeI64","dbl","writeDouble","arg","writeString","writeBinary","readMessageBegin","readMessageEnd","readStructBegin","readStructEnd","readFieldBegin","readFieldEnd","readMapBegin","readMapEnd","readListBegin","readListEnd","readSetBegin","readSetEnd","readBool","readByte","readI16","readI32","readI64","readDouble","readBinary","readString","skip","TProtocol","sendNativeMessage","nativeMessage","window","android","postMessage","data","connectionId","webkit","messageHandlers","iOSWebViewMessage","console","warn","uid","getUniqueConnectionId","NativeConnection","_ThriftConnection","Transport","Protocol","_window$nativeConnect","nativeConnections","oldConnectionId","_step","_iterator","_createForOfIteratorHelper","promises","s","n","done","reject","TApplicationException","TApplicationExceptionType","UNKNOWN","err","e","f","message","resolver","shift","clearTimeout","timeoutId","Buffer","from","resolve","sendNextMessage","outBuffer","log","dataToSend","connection","Promise","res","rej","push","setTimeout","reset","toString","length","ThriftConnection","createAppClient","ServiceClient","transport","arguments","NamedMultiplexedProtocol","_TMultiplexedProtocol","tTransport","_ServiceClient$servic","getProtocol","environmentClient","getEnvironmentClient","isUndefined","Environment","Client","commercialClient","getCommercialClient","Commercial","acquisitionsClient","getAcquisitionsClient","Acquisitions","notificationsClient","getNotificationsClient","Notifications","tagClient","getTagClient","Tag","userClient","getUserClient","User","galleryClient","getGalleryClient","Gallery","videoClient","getVideoClient","Video","analyticsClient","getAnalyticsClient","Analytics","navigationClient","getNavigationClient","Navigation","discussionClient","getDiscussionClient","Discussion","interactionClient","getInteractionClient","Interaction","colour"],"sourceRoot":""}