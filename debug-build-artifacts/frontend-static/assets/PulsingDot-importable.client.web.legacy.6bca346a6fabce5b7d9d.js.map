{"version":3,"file":"PulsingDot-importable.client.web.legacy.6bca346a6fabce5b7d9d.js","mappings":"gPAIMA,EAAY,SAACC,GAAM,OAAKC,EAAAA,EAAAA,KAAG,SACvBD,GAAUA,EAAM,8LAapBE,GAAYC,EAAAA,EAAAA,WAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wGAMrBC,GAAUL,EAAAA,EAAAA,KAAG,yDAEJC,EAAS,kBAUXK,EAAa,SAAHC,GAAoB,IAAdR,EAAMQ,EAANR,OACzBS,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GASlC,OARAI,EAAAA,EAAAA,YAAU,WAKN,IAAMC,EAAsBC,EAAAA,EAAQC,MAAMC,IAAI,4CAC9CL,GAAuC,IAAxBE,EACnB,GAAG,KACII,EAAAA,EAAAA,KAAK,OAAQ,CAAEnB,IAAK,CAACF,EAAUC,GAASa,GAAeP,IAClE,C,kBC/CA,SAASD,EAAuBgB,EAAGC,GACjC,OAAOA,IAAMA,EAAID,EAAEE,MAAM,IAAKC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAG,CACrEM,IAAK,CACHC,MAAOJ,OAAOC,OAAOH,MAG3B,C","sources":["webpack://@guardian/dotcom-rendering/./src/components/PulsingDot.importable.tsx","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css, keyframes } from '@emotion/react';\nimport { storage } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nconst dotStyles = (colour) => css `\n\tcolor: ${colour && colour};\n\t:before {\n\t\tborder-radius: 62.5rem;\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\tbackground-color: currentColor;\n\t\twidth: 0.75em;\n\t\theight: 0.75em;\n\t\tcontent: '';\n\t\tmargin-right: 0.1875rem;\n\t\tvertical-align: initial;\n\t}\n`;\nconst livePulse = keyframes `\n    0% {opacity: 1;}\n    10% {opacity: .25;}\n    40% {opacity: 1;}\n    100% {opacity: 1;}\n`;\nconst animate = css `\n\t@media not (prefers-reduced-motion: reduce) {\n\t\tanimation: ${livePulse} 1s infinite;\n\t}\n`;\n/**\n * Used for indicating an article is updating live\n *\n * ## Why does this need to be an Island?\n *\n * We want to respect userâ€™s flashing elements preferences\n */\nexport const PulsingDot = ({ colour }) => {\n    const [shouldFlash, setShouldFlash] = useState(false);\n    useEffect(() => {\n        /**\n         * `flashingPreference` is `null` if no preference exists and explicitly\n         * `false` when the reader has said they don't want flashing\n         */\n        const flashingPreferences = storage.local.get('gu.prefs.accessibility.flashing-elements');\n        setShouldFlash(flashingPreferences !== false);\n    }, []);\n    return _jsx(\"span\", { css: [dotStyles(colour), shouldFlash && animate] });\n};\n","function _taggedTemplateLiteral(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nexport { _taggedTemplateLiteral as default };"],"names":["dotStyles","colour","css","livePulse","keyframes","_templateObject","_taggedTemplateLiteral","animate","PulsingDot","_ref","_useState","useState","_useState2","_slicedToArray","shouldFlash","setShouldFlash","useEffect","flashingPreferences","storage","local","get","_jsx","e","t","slice","Object","freeze","defineProperties","raw","value"],"sourceRoot":""}