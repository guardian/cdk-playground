{"version":3,"file":"LiveBlogEpic-importable.client.web.legacy.f8574b8278612d51d013.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/LiveBlogEpic.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useSDC.ts","webpack://@guardian/dotcom-rendering/./src/lib/articleCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/lib/dailyArticleCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAuthStatus.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCountryCode.ts"],"sourcesContent":["import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { getCookie, isUndefined, log, storage } from '@guardian/libs';\nimport { space } from '@guardian/source/foundations';\nimport { getEpicViewLog } from '@guardian/support-dotcom-components';\nimport React, { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { submitComponentEvent } from '../client/ophan/ophan';\nimport { useArticleCounts } from '../lib/articleCount';\nimport { shouldHideSupportMessaging, useHasOptedOutOfArticleCount, } from '../lib/contributions';\nimport { useIsSignedIn } from '../lib/useAuthStatus';\nimport { useCountryCode } from '../lib/useCountryCode';\nimport { useSDCLiveblogEpic } from '../lib/useSDC';\nimport { useConfig } from './ConfigContext';\nconst useEpic = ({ name }) => {\n    // Using state here to store the Epic component that gets imported allows\n    // us to render it with React (instead of inserting it into the dom manually)\n    const [Epic, setEpic] = useState();\n    useEffect(() => {\n        import(\n        /* webpackChunkName: \"contributions-liveblog-epic\" */ `./marketing/epics/ContributionsLiveblogEpic`)\n            .then((epicModule) => {\n            // @ts-expect-error -- currently the type of the props in the response is too general\n            setEpic(() => epicModule.ContributionsLiveblogEpic);\n        })\n            .catch((err) => {\n            const msg = `Error importing LiveBlog epic: ${String(err)}`;\n            window.guardian.modules.sentry.reportError(new Error(msg), 'liveblog-epic');\n        });\n    }, [name]);\n    return { Epic };\n};\nconst useMvtId = (isDev = false) => {\n    const [mvtId, setMvtId] = useState(0);\n    useEffect(() => {\n        const cookie = getCookie({ name: 'GU_mvt_id', shouldMemoize: true });\n        if (cookie === null)\n            return;\n        const id = Number(cookie) || 0;\n        setMvtId(id);\n    }, [isDev]);\n    return mvtId;\n};\n/**\n * usePayload\n *\n * takes a series of CAPI values, reads consent, the users country, some cookie\n * values and then constructs a config object with `tracking` and `targeting`\n * properties\n *\n * @returns the payload object required to make the POST request to contributions\n */\nconst usePayload = ({ shouldHideReaderRevenue, sectionId, isPaidContent, tags, pageId, }) => {\n    const articleCounts = useArticleCounts(pageId, tags, 'LiveBlog');\n    const hasOptedOutOfArticleCount = useHasOptedOutOfArticleCount();\n    const countryCode = useCountryCode('liveblog-epic');\n    const mvtId = useMvtId();\n    const isSignedIn = useIsSignedIn();\n    if (isSignedIn === 'Pending')\n        return;\n    const hideSupportMessagingForUser = shouldHideSupportMessaging(isSignedIn);\n    if (hideSupportMessagingForUser === 'Pending')\n        return;\n    if (articleCounts === 'Pending')\n        return;\n    if (hasOptedOutOfArticleCount === 'Pending')\n        return;\n    log('dotcom', 'LiveBlogEpic has consent state');\n    if (!countryCode)\n        return;\n    log('dotcom', 'LiveBlogEpic has countryCode');\n    return {\n        tracking: {\n            ophanPageId: window.guardian.config.ophan.pageViewId,\n            platformId: 'GUARDIAN_WEB',\n            clientName: 'dcr',\n            referrerUrl: window.location.origin + window.location.pathname,\n        },\n        targeting: {\n            contentType: 'LiveBlog',\n            sectionId,\n            shouldHideReaderRevenue,\n            isMinuteArticle: true,\n            isPaidContent,\n            tags,\n            showSupportMessaging: !hideSupportMessagingForUser,\n            mvtId,\n            countryCode,\n            epicViewLog: getEpicViewLog(storage.local),\n            weeklyArticleHistory: articleCounts?.weeklyArticleHistory,\n            hasOptedOutOfArticleCount,\n            url: window.location.origin + window.location.pathname,\n        },\n    };\n};\n/**\n * Render\n *\n * Dynamically imports and renders a given module\n *\n * @param props\n * @param props.name tring - The name of the component\n * @param props.props object - The props of the component\n * @returns The resulting react component\n */\nconst Render = ({ name, props, }) => {\n    const { Epic } = useEpic({ name });\n    if (isUndefined(Epic))\n        return null;\n    log('dotcom', 'LiveBlogEpic has the Epic');\n    return (_jsx(\"aside\", { css: css `\n\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t`, children: _jsx(Epic, { ...props }) }));\n};\n/**\n * Using the payload, make a fetch request to contributions service\n *\n * @param payload - unknown\n * @param contributionsServiceUrl - string\n */\nconst Fetch = ({ payload, contributionsServiceUrl, }) => {\n    const response = useSDCLiveblogEpic(contributionsServiceUrl, payload);\n    const { renderingTarget } = useConfig();\n    // If we didn't get a module in response (or we're still waiting) do nothing. If\n    // no epic should be shown the response is equal to {}, hence the Object.keys\n    if (!response?.data || Object.keys(response).length === 0) {\n        return null;\n    }\n    log('dotcom', 'LiveBlogEpic has a module');\n    // Add submitComponentEvent function to props to enable Ophan tracking in the component\n    const props = {\n        ...response.data.module.props,\n        submitComponentEvent: (componentEvent) => submitComponentEvent(componentEvent, renderingTarget),\n    };\n    // Take any returned module and render it\n    return _jsx(Render, { name: response.data.module.name, props: props });\n};\nfunction insertAfter(referenceNode, newNode) {\n    referenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\n}\n/**\n * LiveBlogEpic is the support epic which appears in-between blocks in blogs\n *\n * There are three main steps to create this epic:\n *\n * 1. usePayload - Build the payload. The config object we send to contributions\n * 2. Fetch - POST the payload to the contributions endpoint\n * 3. Render - Take the props and name data we got in response to our fetch and dynamically import\n *    and render the Epic component using it\n *\n * ## Why does this need to be an Island?\n *\n * All behaviour is client-side.\n *\n * ---\n *\n * (No visual story exist)\n */\nexport const LiveBlogEpic = ({ sectionId, shouldHideReaderRevenue, isPaidContent, tags, contributionsServiceUrl, pageId, keywordIds, }) => {\n    log('dotcom', 'LiveBlogEpic started');\n    // First construct the payload\n    const payload = usePayload({\n        shouldHideReaderRevenue,\n        sectionId,\n        isPaidContent,\n        tags,\n        pageId,\n        keywordIds,\n    });\n    if (!payload)\n        return null;\n    /**\n     * Here we decide where to insert the epic.\n     *\n     * If the url contains a permalink then we\n     * want to insert it immediately after that block to prevent any CLS issues.\n     *\n     * Otherwise, we choose a random position near the top of the blog\n     */\n    const epicPlaceholder = document.createElement('article');\n    if (window.location.href.includes('#block-')) {\n        // Because we're using a permalink there's a possibility the epic will render in\n        // view. To prevent confusing layout shift we initially hide the message so that\n        // we can reveal (animate in) it once it has been rendered\n        epicPlaceholder.classList.add('pending');\n        const blockId = window.location.hash.slice(1);\n        const blockLinkedTo = document.getElementById(blockId);\n        if (blockLinkedTo) {\n            insertAfter(blockLinkedTo, epicPlaceholder);\n        }\n        epicPlaceholder.classList.add('reveal');\n        epicPlaceholder.classList.remove('pending');\n    }\n    else {\n        // This is a simple page load so we simply insert the epic somewhere near the top\n        // of the blog\n        const randomPosition = Math.floor(Math.random() * 3) + 1; // 1, 2 or 3\n        const aBlockNearTheTop = document.querySelectorAll('article.block')[randomPosition];\n        if (aBlockNearTheTop) {\n            insertAfter(aBlockNearTheTop, epicPlaceholder);\n        }\n    }\n    return createPortal(_jsx(Fetch, { payload: payload, contributionsServiceUrl: contributionsServiceUrl }), epicPlaceholder);\n};\n","import { getBanner, getEpic, getLiveblogEpic, } from '@guardian/support-dotcom-components';\nimport useSWRImmutable from 'swr/immutable';\nconst useSDC = (key, fetcher) => {\n    const { data, error } = useSWRImmutable(key, fetcher, {\n        revalidateOnFocus: false,\n    });\n    if (error) {\n        window.guardian.modules.sentry.reportError(error, 'rr-epic');\n    }\n    return data;\n};\nexport const useSDCEpic = (baseUrl, payload) => useSDC('epic', () => getEpic(baseUrl, payload));\nexport const useSDCLiveblogEpic = (baseUrl, payload) => useSDC('liveblog-epic', () => getLiveblogEpic(baseUrl, payload));\nexport const useSDCBanner = (baseUrl, payload) => useSDC('banner', () => getBanner(baseUrl, payload));\n","import { storage } from '@guardian/libs';\nimport { getWeeklyArticleHistory, incrementWeeklyArticleCount, } from '@guardian/support-dotcom-components';\nimport { useEffect, useState } from 'react';\nimport { hasOptedOutOfWeeklyArticleCount } from '../lib/contributions';\nimport { getDailyArticleCount, incrementDailyArticleCount, } from '../lib/dailyArticleCount';\nexport const shouldIncrementArticleCount = (contentType) => {\n    // See https://github.com/guardian/frontend/blob/9c8707d894c858dd17de1c7c1499f6b91f5287bc/common/app/model/DotcomContentType.scala#L29\n    return [\n        'article',\n        'liveblog',\n        'gallery',\n        'video',\n        'interactive',\n        'audio',\n    ].includes(contentType.toLowerCase());\n};\n/**\n * This function is used to get the daily article counts.\n * It will increment the count if the contentType is listed in the shouldIncrementArticleCount function.\n * This will return and increment the dailyArticleCount for unconsented and consented users.\n *\n * @param {string} contentType\n * @return {*}  {(DailyArticleHistory | undefined)}\n */\nexport const getDailyArticleCounts = (contentType) => {\n    if (!window.guardian.dailyArticleCount) {\n        if (shouldIncrementArticleCount(contentType)) {\n            incrementDailyArticleCount();\n        }\n        window.guardian.dailyArticleCount = getDailyArticleCount();\n    }\n    return window.guardian.dailyArticleCount;\n};\n/**\n * This function is used to get the weekly article counts\n * It will increment the count if the contentType is listed in the shouldIncrementArticleCount function.\n * This will return and increment the weeklyArticleCount for only consented users.\n *\n * @param {string} pageId\n * @param {TagType[]} tags\n * @param {string} contentType\n * @return {*}  {(Promise<WeeklyArticleHistory | undefined>)}\n */\nexport const getWeeklyArticleCounts = async (pageId, tags, contentType) => {\n    if (await hasOptedOutOfWeeklyArticleCount())\n        return undefined;\n    if (!window.guardian.weeklyArticleCount) {\n        if (shouldIncrementArticleCount(contentType)) {\n            // hasOptedOut needs to be done before we check if articleCount is set in the window\n            // This is because a potential race condition where one invocation of getArticleCounts\n            // is waiting for hasOptedOut another invocation might receive it and increment the article count.\n            const keywordAndToneTagIds = tags\n                .filter((tag) => ['tone', 'keyword'].includes(tag.type.toLowerCase()))\n                .map((tag) => tag.id);\n            incrementWeeklyArticleCount(storage.local, pageId, keywordAndToneTagIds);\n        }\n        window.guardian.weeklyArticleCount = getWeeklyArticleHistory(storage.local);\n    }\n    return window.guardian.weeklyArticleCount;\n};\nexport const getArticleCounts = async (pageId, tags, contentType) => {\n    getDailyArticleCounts(contentType);\n    await getWeeklyArticleCounts(pageId, tags, contentType);\n    return {\n        dailyArticleHistory: window.guardian.dailyArticleCount ?? [],\n        weeklyArticleHistory: window.guardian.weeklyArticleCount ?? [],\n    };\n};\nexport const useArticleCounts = (pageId, tags, contentType) => {\n    const [articleCounts, setArticleCounts] = useState('Pending');\n    useEffect(() => {\n        getArticleCounts(pageId, tags, contentType)\n            .then(setArticleCounts)\n            .catch(() => setArticleCounts(undefined));\n    }, [contentType, pageId, tags]);\n    return articleCounts;\n};\n","import { getCookie, isUndefined, onConsentChange, storage, } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\n// User Attributes API cookies (created on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n// Support Frontend cookie (created when a contribution is made)\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE = 'gu.contributions.contrib-timestamp';\n//  Local storage keys\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_KEY = 'gu.noRRBanner';\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n// Returns true if we should hide support messaging because the user is a supporter.\n// Checks the cookie that is set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nexport const hasSupporterCookie = (isSignedIn) => {\n    const cookie = getCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE });\n    switch (cookie) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            /**\n             * If cookie is not present but user is signed in, we do not want to show any messaging.\n             * This is because of a race condition on the first page view after signing in, where\n             * we may be awaiting the response from the API to find out if they're a supporter.\n             */\n            if (isSignedIn) {\n                return 'Pending';\n            }\n            else {\n                return false;\n            }\n    }\n};\n// looks at the SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (set by support-frontend when making one-off contribution)\n// and returns a Unix epoch int of the date if it exists.\nexport const getLastOneOffContributionTimestamp = () => {\n    // Support cookies - expects Unix epoch\n    const contributionDateFromSupport = getCookie({\n        name: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n    });\n    if (!contributionDateFromSupport) {\n        return undefined;\n    }\n    // Parse dates into common a number\n    const parsedDateFromSupport = contributionDateFromSupport\n        ? parseInt(contributionDateFromSupport, 10)\n        : 0;\n    return parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\nconst dateDiffDays = (from, to) => {\n    const oneDayMs = 1000 * 60 * 60 * 24;\n    const diffMs = to - from;\n    return Math.floor(diffMs / oneDayMs);\n};\nconst AskPauseDays = 90;\nexport const isRecentOneOffContributor = () => {\n    const lastContributionDate = getLastOneOffContributionTimestamp();\n    if (!isUndefined(lastContributionDate)) {\n        const now = Date.now();\n        return dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n    }\n    return false;\n};\nexport const shouldHideSupportMessaging = (isSignedIn) => {\n    const hasCookie = hasSupporterCookie(isSignedIn);\n    if (hasCookie === 'Pending') {\n        return 'Pending';\n    }\n    else {\n        return hasCookie || isRecentOneOffContributor();\n    }\n};\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\nexport const hasArticleCountOptOutCookie = () => getCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\nconst removeWeeklyArticleCountsFromLocalStorage = () => storage.local.remove(WEEKLY_ARTICLE_COUNT_KEY);\nexport const hasCmpConsentForWeeklyArticleCount = () => {\n    return new Promise((resolve) => {\n        if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n            resolve(true);\n        }\n        onConsentChange(({ usnat, tcfv2, aus }) => {\n            if (usnat ?? aus) {\n                resolve(true);\n            }\n            else if (tcfv2) {\n                const hasRequiredConsents = REQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every((consent) => tcfv2.consents[consent]);\n                if (!hasRequiredConsents) {\n                    removeWeeklyArticleCountsFromLocalStorage();\n                }\n                resolve(hasRequiredConsents);\n            }\n        });\n    });\n};\nexport const hasOptedOutOfArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\nexport const hasOptedOutOfWeeklyArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = () => {\n    const [hasOptedOut, setHasOptedOut] = useState('Pending');\n    useEffect(() => {\n        hasOptedOutOfArticleCount()\n            .then(setHasOptedOut)\n            .catch(() => setHasOptedOut(true));\n    }, []);\n    return hasOptedOut;\n};\nexport const hasCmpConsentForBrowserId = () => new Promise((resolve) => {\n    if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n        resolve(true);\n    }\n    onConsentChange(({ usnat, tcfv2, aus }) => {\n        if (usnat ?? aus) {\n            resolve(true);\n        }\n        else if (tcfv2) {\n            const hasRequiredConsents = REQUIRED_CONSENTS_FOR_BROWSER_ID.every((consent) => tcfv2.consents[consent]);\n            resolve(hasRequiredConsents);\n        }\n    });\n});\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = () => !!storage.local.get(NO_RR_BANNER_KEY);\nexport const setLocalNoBannerCachePeriod = (now = Date.now()) => storage.local.set(NO_RR_BANNER_KEY, true, now + twentyMins);\n// Returns true if banner was closed in the last hour\nconst ONE_HOUR_IN_MS = 1000 * 60 * 60;\nexport const recentlyClosedBanner = (lastClosedAt, now = Date.now()) => {\n    if (lastClosedAt) {\n        return now - new Date(lastClosedAt).getTime() < ONE_HOUR_IN_MS;\n    }\n    return false;\n};\nexport const getContributionsServiceUrl = (config) => process.env.SDC_URL ?? config.contributionsServiceUrl;\nexport const getPurchaseInfo = () => {\n    const purchaseInfoRaw = getCookie({\n        name: 'GU_CO_COMPLETE',\n        shouldMemoize: true,\n    });\n    if (!purchaseInfoRaw) {\n        return undefined;\n    }\n    let purchaseInfo;\n    try {\n        purchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n    }\n    catch { } // eslint-disable-line no-empty -- silently handle error\n    return purchaseInfo;\n};\n","import { isObject, storage } from '@guardian/libs';\nexport const DailyArticleCountKey = 'gu.history.dailyArticleCount';\nconst isValidHistory = (history) => Array.isArray(history) &&\n    history.every((daily) => isObject(daily) &&\n        'day' in daily &&\n        'count' in daily &&\n        typeof daily.day === 'number' &&\n        typeof daily.count === 'number');\n// Returns undefined if no daily article count in local storage\nexport const getDailyArticleCount = () => {\n    try {\n        const dailyCount = storage.local.get(DailyArticleCountKey);\n        if (!isValidHistory(dailyCount)) {\n            throw new Error('Invalid gu.history.dailyArticleCount value');\n        }\n        return dailyCount;\n    }\n    catch (e) {\n        // error parsing the string, so remove the key\n        storage.local.remove(DailyArticleCountKey);\n        return undefined;\n    }\n};\nexport const getToday = () => Math.floor(Date.now() / 86_400_000);\nexport const incrementDailyArticleCount = () => {\n    // get the daily article count from local storage\n    const dailyArticleCount = getDailyArticleCount() ?? [];\n    // calculate days since unix epoch for today date\n    const today = getToday();\n    // check if latest day is today and increment if so\n    if (dailyArticleCount[0]?.day === today) {\n        dailyArticleCount[0].count += 1;\n    }\n    else {\n        // else set new day\n        dailyArticleCount.unshift({ day: today, count: 1 });\n        // remove any days older than 60\n        const cutOff = today - 60;\n        const firstOldDayIndex = dailyArticleCount.findIndex((dailyCount) => dailyCount.day && dailyCount.day < cutOff);\n        if (firstOldDayIndex > 0) {\n            dailyArticleCount.splice(firstOldDayIndex);\n        }\n    }\n    // set the latest article count\n    storage.local.set(DailyArticleCountKey, dailyArticleCount);\n};\n","import { useEffect, useState } from 'react';\nimport { eitherInOktaTestOrElse, getSignedInStatusWithCookies, getSignedInStatusWithOkta, } from './identity';\n/**\n * A hook to find out if a user is signed in.\n * Returns `'Pending'` until status is known.\n * Always returns `'Pending'` during server-side rendering.\n * */\nexport const useIsSignedIn = () => {\n    const authStatus = useAuthStatus();\n    switch (authStatus.kind) {\n        case 'Pending':\n            return 'Pending';\n        case 'SignedInWithCookies':\n        case 'SignedInWithOkta':\n            return true;\n        case 'SignedOutWithCookies':\n        case 'SignedOutWithOkta':\n            return false;\n    }\n};\nexport const useAuthStatus = () => {\n    const [authStatus, setAuthStatus] = useState({\n        kind: 'Pending',\n    });\n    useEffect(() => {\n        eitherInOktaTestOrElse((oktaAuthState) => {\n            setAuthStatus(getSignedInStatusWithOkta(oktaAuthState));\n        }, () => setAuthStatus(getSignedInStatusWithCookies())).catch((error) => {\n            console.error(error);\n        });\n    }, []);\n    return authStatus;\n};\n","import { isNonNullable } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getLocaleCode } from './getCountryCode';\nexport const useCountryCode = (feature) => {\n    const [countryCode, setCountryCode] = useState();\n    useEffect(() => {\n        getLocaleCode()\n            .then((cc) => {\n            if (isNonNullable(cc))\n                setCountryCode(cc);\n        })\n            .catch((e) => {\n            const msg = `Error fetching country code: ${String(e)}`;\n            window.guardian.modules.sentry.reportError(new Error(msg), feature);\n        });\n    }, [feature]);\n    return countryCode;\n};\n"],"names":["Render","_ref3","name","props","_useEpic","_ref","_useState","useState","_useState2","_slicedToArray","Epic","setEpic","useEffect","then","epicModule","ContributionsLiveblogEpic","catch","err","msg","concat","String","window","guardian","modules","sentry","reportError","Error","useEpic","isUndefined","log","_jsx","css","space","children","_objectSpread","Fetch","_ref4","payload","response","baseUrl","key","fetcher","getLiveblogEpic","_useSWRImmutable","useSWRImmutable","revalidateOnFocus","data","error","useSDCLiveblogEpic","contributionsServiceUrl","renderingTarget","useConfig","Object","keys","length","module","submitComponentEvent","componentEvent","insertAfter","referenceNode","newNode","_referenceNode$parent","parentNode","insertBefore","nextSibling","LiveBlogEpic","_ref5","sectionId","shouldHideReaderRevenue","isPaidContent","tags","pageId","keywordIds","_ref2","articleCounts","useArticleCounts","hasOptedOutOfArticleCount","useHasOptedOutOfArticleCount","countryCode","useCountryCode","mvtId","isDev","arguments","undefined","_useState3","_useState4","setMvtId","cookie","getCookie","shouldMemoize","id","Number","useMvtId","isSignedIn","useIsSignedIn","hideSupportMessagingForUser","shouldHideSupportMessaging","tracking","ophanPageId","config","ophan","pageViewId","platformId","clientName","referrerUrl","location","origin","pathname","targeting","contentType","isMinuteArticle","showSupportMessaging","epicViewLog","getEpicViewLog","storage","local","weeklyArticleHistory","url","usePayload","epicPlaceholder","document","createElement","href","includes","classList","add","blockId","hash","slice","blockLinkedTo","getElementById","remove","randomPosition","Math","floor","random","aBlockNearTheTop","querySelectorAll","createPortal","shouldIncrementArticleCount","toLowerCase","getDailyArticleCounts","dailyArticleCount","incrementDailyArticleCount","getDailyArticleCount","getWeeklyArticleCounts","_asyncToGenerator","_regeneratorRuntime","_callee","keywordAndToneTagIds","_context","prev","next","hasOptedOutOfWeeklyArticleCount","sent","abrupt","weeklyArticleCount","filter","tag","type","map","incrementWeeklyArticleCount","getWeeklyArticleHistory","stop","_x","_x2","_x3","apply","getArticleCounts","_callee2","_window$guardian$dail","_window$guardian$week","_context2","dailyArticleHistory","_x4","_x5","_x6","setArticleCounts","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_KEY","diffMs","lastContributionDate","hasCookie","hasSupporterCookie","contributionDateFromSupport","parseInt","getLastOneOffContributionTimestamp","Date","now","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasArticleCountOptOutCookie","hasCmpConsentForWeeklyArticleCount","Promise","resolve","onConsentChange","usnat","tcfv2","aus","hasRequiredConsents","every","consent","consents","hasCmpConsent","hasOptedOut","setHasOptedOut","hasCmpConsentForBrowserId","withinLocalNoBannerCachePeriod","get","setLocalNoBannerCachePeriod","set","recentlyClosedBanner","lastClosedAt","getTime","getPurchaseInfo","purchaseInfoRaw","purchaseInfo","JSON","parse","decodeURIComponent","_unused","DailyArticleCountKey","dailyCount","history","Array","isArray","daily","isObject","day","count","e","getToday","_getDailyArticleCount","_dailyArticleCount$","today","unshift","cutOff","firstOldDayIndex","findIndex","splice","useAuthStatus","kind","authStatus","setAuthStatus","eitherInOktaTestOrElse","oktaAuthState","getSignedInStatusWithOkta","getSignedInStatusWithCookies","console","feature","setCountryCode","getLocaleCode","cc","isNonNullable"],"sourceRoot":""}