{"version":3,"file":"readerRevenueDevUtils.client.web.cb3c4e4cbef2d2c27ce5.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/lib/readerRevenueDevUtils.ts"],"sourcesContent":["import {\n\tgetCookie,\n\tisUndefined,\n\tonConsentChange,\n\tstorage,\n} from '@guardian/libs';\nimport type { HeaderPayload } from '@guardian/support-dotcom-components/dist/dotcom/types';\nimport { useEffect, useState } from 'react';\nimport type { ArticleDeprecated } from '../types/article';\nimport type { DCRFrontType } from '../types/front';\nimport type { DCRNewslettersPageType } from '../types/newslettersPage';\nimport type { DCRTagPageType } from '../types/tagPage';\n\n// User Attributes API cookies (created on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n\n// Support Frontend cookie (created when a contribution is made)\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE =\n\t'gu.contributions.contrib-timestamp';\n\n//  Local storage keys\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_KEY = 'gu.noRRBanner';\n\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n\n// Returns true if we should hide support messaging because the user is a supporter.\n// Checks the cookie that is set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nexport const hasSupporterCookie = (\n\tisSignedIn: boolean,\n): boolean | 'Pending' => {\n\tconst cookie = getCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE });\n\tswitch (cookie) {\n\t\tcase 'true':\n\t\t\treturn true;\n\t\tcase 'false':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\t/**\n\t\t\t * If cookie is not present but user is signed in, we do not want to show any messaging.\n\t\t\t * This is because of a race condition on the first page view after signing in, where\n\t\t\t * we may be awaiting the response from the API to find out if they're a supporter.\n\t\t\t */\n\t\t\tif (isSignedIn) {\n\t\t\t\treturn 'Pending';\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t}\n};\n\n// looks at the SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (set by support-frontend when making one-off contribution)\n// and returns a Unix epoch int of the date if it exists.\nexport const getLastOneOffContributionTimestamp = (): number | undefined => {\n\t// Support cookies - expects Unix epoch\n\tconst contributionDateFromSupport = getCookie({\n\t\tname: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\t});\n\n\tif (!contributionDateFromSupport) {\n\t\treturn undefined;\n\t}\n\n\t// Parse dates into common a number\n\tconst parsedDateFromSupport = contributionDateFromSupport\n\t\t? parseInt(contributionDateFromSupport, 10)\n\t\t: 0;\n\n\treturn parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\n\nconst dateDiffDays = (from: number, to: number): number => {\n\tconst oneDayMs = 1000 * 60 * 60 * 24;\n\tconst diffMs = to - from;\n\treturn Math.floor(diffMs / oneDayMs);\n};\n\nconst AskPauseDays = 90;\n\nexport const isRecentOneOffContributor = (): boolean => {\n\tconst lastContributionDate = getLastOneOffContributionTimestamp();\n\tif (!isUndefined(lastContributionDate)) {\n\t\tconst now = Date.now();\n\t\treturn dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n\t}\n\n\treturn false;\n};\n\nexport const shouldHideSupportMessaging = (\n\tisSignedIn: boolean,\n): boolean | 'Pending' => {\n\tconst hasCookie = hasSupporterCookie(isSignedIn);\n\tif (hasCookie === 'Pending') {\n\t\treturn 'Pending';\n\t} else {\n\t\treturn hasCookie || isRecentOneOffContributor();\n\t}\n};\n\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\n\nexport const hasArticleCountOptOutCookie = (): boolean =>\n\tgetCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\n\nconst removeWeeklyArticleCountsFromLocalStorage = () =>\n\tstorage.local.remove(WEEKLY_ARTICLE_COUNT_KEY);\n\nexport const hasCmpConsentForWeeklyArticleCount = (): Promise<boolean> => {\n\treturn new Promise((resolve) => {\n\t\tif (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n\t\t\tresolve(true);\n\t\t}\n\t\tonConsentChange(({ usnat, tcfv2, aus }) => {\n\t\t\tif (usnat ?? aus) {\n\t\t\t\tresolve(true);\n\t\t\t} else if (tcfv2) {\n\t\t\t\tconst hasRequiredConsents =\n\t\t\t\t\tREQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every(\n\t\t\t\t\t\t(consent) => tcfv2.consents[consent],\n\t\t\t\t\t);\n\n\t\t\t\tif (!hasRequiredConsents) {\n\t\t\t\t\tremoveWeeklyArticleCountsFromLocalStorage();\n\t\t\t\t}\n\t\t\t\tresolve(hasRequiredConsents);\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const hasOptedOutOfArticleCount = async (): Promise<boolean> => {\n\tconst hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n\treturn !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n\nexport const hasOptedOutOfWeeklyArticleCount = async (): Promise<boolean> => {\n\tconst hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n\treturn !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = (): boolean | 'Pending' => {\n\tconst [hasOptedOut, setHasOptedOut] = useState<boolean | 'Pending'>(\n\t\t'Pending',\n\t);\n\n\tuseEffect(() => {\n\t\thasOptedOutOfArticleCount()\n\t\t\t.then(setHasOptedOut)\n\t\t\t.catch(() => setHasOptedOut(true));\n\t}, []);\n\n\treturn hasOptedOut;\n};\n\nexport const hasCmpConsentForBrowserId = (): Promise<boolean> =>\n\tnew Promise((resolve) => {\n\t\tif (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n\t\t\tresolve(true);\n\t\t}\n\t\tonConsentChange(({ usnat, tcfv2, aus }) => {\n\t\t\tif (usnat ?? aus) {\n\t\t\t\tresolve(true);\n\t\t\t} else if (tcfv2) {\n\t\t\t\tconst hasRequiredConsents =\n\t\t\t\t\tREQUIRED_CONSENTS_FOR_BROWSER_ID.every(\n\t\t\t\t\t\t(consent) => tcfv2.consents[consent],\n\t\t\t\t\t);\n\t\t\t\tresolve(hasRequiredConsents);\n\t\t\t}\n\t\t});\n\t});\n\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = (): boolean =>\n\t!!storage.local.get(NO_RR_BANNER_KEY);\n\nexport const setLocalNoBannerCachePeriod = (now: number = Date.now()): void =>\n\tstorage.local.set(NO_RR_BANNER_KEY, true, now + twentyMins);\n\n// Returns true if banner was closed in the last hour\nconst ONE_HOUR_IN_MS = 1000 * 60 * 60;\nexport const recentlyClosedBanner = (\n\tlastClosedAt?: string,\n\tnow = Date.now(),\n): boolean => {\n\tif (lastClosedAt) {\n\t\treturn now - new Date(lastClosedAt).getTime() < ONE_HOUR_IN_MS;\n\t}\n\treturn false;\n};\n\nexport const getContributionsServiceUrl = (\n\tconfig:\n\t\t| ArticleDeprecated\n\t\t| DCRFrontType\n\t\t| DCRTagPageType\n\t\t| DCRNewslettersPageType,\n): string => process.env.SDC_URL ?? config.contributionsServiceUrl;\n\ntype PurchaseInfo = HeaderPayload['targeting']['purchaseInfo'];\nexport const getPurchaseInfo = (): PurchaseInfo => {\n\tconst purchaseInfoRaw = getCookie({\n\t\tname: 'GU_CO_COMPLETE',\n\t\tshouldMemoize: true,\n\t});\n\n\tif (!purchaseInfoRaw) {\n\t\treturn undefined;\n\t}\n\n\tlet purchaseInfo: PurchaseInfo;\n\n\ttry {\n\t\tpurchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n\t} catch {} // eslint-disable-line no-empty -- silently handle error\n\n\treturn purchaseInfo;\n};\n","import { getCookie, removeCookie, setCookie, storage } from '@guardian/libs';\nimport {\n\tHIDE_SUPPORT_MESSAGING_COOKIE,\n\tRECURRING_CONTRIBUTOR_COOKIE,\n\tSUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n} from './contributions';\nimport { getLocaleCode } from './getCountryCode';\n\nconst readerRevenueCookies = [\n\tHIDE_SUPPORT_MESSAGING_COOKIE,\n\tRECURRING_CONTRIBUTOR_COOKIE,\n\tSUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n];\n\nconst clearEpicViewLog = (): void =>\n\tstorage.local.remove('gu.contributions.views');\n\nconst clearBannerLastClosedAt = (): void => {\n\tstorage.local.remove('gu.prefs.engagementBannerLastClosedAt');\n\tstorage.local.remove('gu.prefs.subscriptionBannerLastClosedAt');\n\tstorage.local.remove('gu.prefs.abandonedBasketLastClosedAt');\n\tstorage.local.remove('gu.noRRBannerTimestamp');\n};\n\nconst fakeOneOffContributor = (): void =>\n\tsetCookie({\n\t\tname: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\t\tvalue: Date.now().toString(),\n\t});\n\nconst MULTIVARIATE_ID_COOKIE = 'GU_mvt_id';\nconst MAX_CLIENT_MVT_ID = 1000000;\nconst incrementMvtCookie = (): void => {\n\tconst mvtId = parseInt(\n\t\tgetCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10',\n\t\t10,\n\t);\n\tif (mvtId) {\n\t\tif (mvtId === MAX_CLIENT_MVT_ID) {\n\t\t\t// Wrap back to 1 if it would exceed the max\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: '1' });\n\t\t} else {\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId + 1}` });\n\t\t}\n\t}\n};\nconst decrementMvtCookie = (): void => {\n\tconst mvtId = parseInt(\n\t\tgetCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10',\n\t\t10,\n\t);\n\tif (mvtId) {\n\t\tif (mvtId === 0) {\n\t\t\t// Wrap back to max if it would be less than 0\n\t\t\tsetCookie({\n\t\t\t\tname: MULTIVARIATE_ID_COOKIE,\n\t\t\t\tvalue: MAX_CLIENT_MVT_ID.toString(),\n\t\t\t});\n\t\t} else {\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId - 1}` });\n\t\t}\n\t}\n};\n\nconst clearCommonReaderRevenueStateAndReload = (\n\tasExistingSupporter: boolean,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tif (shouldHideReaderRevenue) {\n\t\talert(\n\t\t\t'This page has \"Prevent membership/contribution appeals\" ticked in Composer. Please try a different page',\n\t\t);\n\t\treturn;\n\t}\n\n\tfor (const cookie of readerRevenueCookies) removeCookie({ name: cookie });\n\tclearEpicViewLog();\n\n\tif (asExistingSupporter) {\n\t\tfakeOneOffContributor();\n\t}\n\n\twindow.location.reload();\n};\n\nconst showMeTheEpic = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showMeTheBanner = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tenableCmp();\n\tclearBannerLastClosedAt();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst enableCmp = (): void => {\n\tremoveCookie({ name: 'gu-cmp-disabled' });\n};\n\nconst showNextVariant = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tincrementMvtCookie();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showPreviousVariant = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tdecrementMvtCookie();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst changeGeolocation = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tgetLocaleCode()\n\t\t.then((current) => {\n\t\t\tconst geo = window.prompt(\n\t\t\t\t`Enter two-letter geolocation code (e.g. GB, US, AU). Current is ${\n\t\t\t\t\tcurrent ?? 'null'\n\t\t\t\t}.`,\n\t\t\t);\n\t\t\tif (geo === 'UK') {\n\t\t\t\talert(\n\t\t\t\t\t`'UK' is not a valid geolocation - please use 'GB' instead!`,\n\t\t\t\t);\n\t\t\t} else if (geo) {\n\t\t\t\tstorage.local.set('gu.geo.override', geo);\n\t\t\t\tclearCommonReaderRevenueStateAndReload(\n\t\t\t\t\tasExistingSupporter,\n\t\t\t\t\tshouldHideReaderRevenue,\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.error(`changeGeolocation - error: ${String(e)}`);\n\t\t});\n};\n\ntype ReaderRevenueDevUtil = (\n\tasExistingSupporter: boolean,\n\tshouldHideReaderRevenue: boolean,\n) => void;\nexport interface ReaderRevenueDevUtils {\n\tchangeGeolocation: ReaderRevenueDevUtil;\n\tshowMeTheEpic: ReaderRevenueDevUtil;\n\tshowMeTheBanner: ReaderRevenueDevUtil;\n\tshowNextVariant: ReaderRevenueDevUtil;\n\tshowPreviousVariant: ReaderRevenueDevUtil;\n}\n\nconst getForcedVariant = (type: 'epic' | 'banner'): string | null => {\n\t// eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unnecessary-condition -- Safety in global,\n\tif (URLSearchParams) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\tconst value = params.get(`force-${type}`);\n\t\tif (value) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport {\n\tchangeGeolocation,\n\tshowMeTheEpic,\n\tshowMeTheBanner,\n\tshowNextVariant,\n\tshowPreviousVariant,\n\tgetForcedVariant,\n};\n"],"names":["HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_KEY","shouldHideSupportMessaging","isSignedIn","hasCookie","getCookie","name","hasSupporterCookie","lastContributionDate","contributionDateFromSupport","parseInt","undefined","getLastOneOffContributionTimestamp","isUndefined","from","to","diffMs","Date","now","Math","floor","dateDiffDays","isRecentOneOffContributor","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasArticleCountOptOutCookie","hasCmpConsentForWeeklyArticleCount","Promise","resolve","shouldMemoize","onConsentChange","usnat","tcfv2","aus","hasRequiredConsents","every","consent","consents","storage","local","remove","hasOptedOutOfArticleCount","async","hasOptedOutOfWeeklyArticleCount","useHasOptedOutOfArticleCount","hasOptedOut","setHasOptedOut","useState","useEffect","then","catch","hasCmpConsentForBrowserId","withinLocalNoBannerCachePeriod","get","setLocalNoBannerCachePeriod","set","recentlyClosedBanner","lastClosedAt","getTime","getPurchaseInfo","purchaseInfoRaw","purchaseInfo","JSON","parse","decodeURIComponent","readerRevenueCookies","MULTIVARIATE_ID_COOKIE","MAX_CLIENT_MVT_ID","clearCommonReaderRevenueStateAndReload","asExistingSupporter","shouldHideReaderRevenue","alert","cookie","removeCookie","setCookie","value","toString","window","location","reload","showMeTheEpic","showMeTheBanner","enableCmp","showNextVariant","mvtId","incrementMvtCookie","showPreviousVariant","decrementMvtCookie","changeGeolocation","getLocaleCode","current","geo","prompt","e","console","error","String","getForcedVariant","type","URLSearchParams","search"],"sourceRoot":""}