{"version":3,"file":"ScrollableHighlights-importable.client.web.legacy.1ae9c5d839ee9e40ad75.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/Avatar.tsx","webpack://@guardian/dotcom-rendering/./src/components/MediaMeta.tsx","webpack://@guardian/dotcom-rendering/./src/components/Masthead/HighlightsCard.tsx","webpack://@guardian/dotcom-rendering/./src/components/ScrollableHighlights.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/getSourceImageUrl_temp_fix.ts"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { Fragment } from 'react';\nimport { getSourceImageUrl } from '../lib/getSourceImageUrl_temp_fix';\nimport { palette } from '../palette';\nimport { generateSources, getFallbackSource } from './Picture';\nconst picture = css `\n\theight: 100%;\n\twidth: 100%;\n\toverflow: hidden;\n\tmin-width: 60px;\n`;\nconst round = css `\n\tborder-radius: 100%;\n\tbackground-color: ${palette('--avatar-background')};\n`;\nconst img = css `\n\tobject-fit: cover;\n\theight: 100%;\n\twidth: 100%;\n`;\n/**\n * Used on `picture` and `img` to prevent having a line-height,\n * as these elements are which are `inline` by default.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#styling_with_css\n */\nconst block = css `\n\tdisplay: block;\n`;\nexport const Avatar = ({ src, alt, shape = 'round' }) => {\n    const sources = generateSources(getSourceImageUrl(src), [\n        { breakpoint: 320, width: 75 },\n        { breakpoint: 740, width: 140 },\n    ]);\n    /**\n     * The assumption here is readers on devices that do not support srcset\n     * are likely to be on poor network connections so we're going\n     * to fallback to the smallest image at low resolution.\n     *\n     * Sources are ordered in `descendingByBreakpoint` order,\n     * so the last one is the smallest.\n     */\n    const fallbackSource = getFallbackSource(sources);\n    return (_jsxs(\"picture\", { \n        // data-size={imageSize}\n        css: [block, picture, shape === 'round' && round], children: [sources.map((source) => {\n                return (_jsxs(Fragment, { children: [_jsx(\"source\", { srcSet: source.hiResUrl, media: `(min-width: ${source.breakpoint}px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: ${source.breakpoint}px) and (min-resolution: 120dpi)` }), _jsx(\"source\", { srcSet: source.lowResUrl, media: `(min-width: ${source.breakpoint}px)` })] }, source.breakpoint));\n            }), _jsx(\"img\", { alt: alt, src: fallbackSource.lowResUrl, css: [block, img] })] }));\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { SvgAudio, SvgCamera, SvgVideo, } from '@guardian/source/react-components';\nimport { palette as themePalette } from '../palette';\nconst iconWrapperStyles = (hasKicker) => css `\n\twidth: 24px;\n\theight: 24px;\n\t/* We’re using the text colour for the icon badge */\n\tbackground-color: ${hasKicker\n    ? themePalette('--card-kicker-text')\n    : themePalette('--card-footer-text')};\n\tborder-radius: 50%;\n\tdisplay: inline-block;\n\n\t> svg {\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tmargin-top: 2px;\n\t\tdisplay: block;\n\t\tfill: ${themePalette('--card-media-icon')};\n\t}\n`;\nconst wrapperStyles = css `\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-top: 4px;\n`;\nexport const Icon = ({ mediaType }) => {\n    switch (mediaType) {\n        case 'Gallery':\n            return _jsx(SvgCamera, {});\n        case 'Video':\n            return _jsx(SvgVideo, {});\n        case 'Audio':\n            return _jsx(SvgAudio, {});\n    }\n};\nconst MediaIcon = ({ mediaType, hasKicker, }) => {\n    return (_jsx(\"span\", { css: iconWrapperStyles(hasKicker), children: _jsx(Icon, { mediaType: mediaType }) }));\n};\nexport const MediaMeta = ({ mediaType, hasKicker }) => {\n    return (_jsx(\"div\", { css: wrapperStyles, children: _jsx(MediaIcon, { mediaType: mediaType, hasKicker: hasKicker }) }));\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { between, from, until } from '@guardian/source/foundations';\nimport { ArticleDesign } from '../../lib/articleFormat';\nimport { isMediaCard } from '../../lib/cardHelpers';\nimport { palette } from '../../palette';\nimport { Avatar } from '../Avatar';\nimport { CardLink } from '../Card/components/CardLink';\nimport { CardHeadline } from '../CardHeadline';\nimport { CardPicture } from '../CardPicture';\nimport { FormatBoundary } from '../FormatBoundary';\nimport { Icon } from '../MediaMeta';\nconst gridContainer = css `\n\tdisplay: grid;\n\tbackground-color: ${palette('--highlights-container-background')};\n\t/** Relative positioning is required to absolutely\n\tposition the card link overlay */\n\tposition: relative;\n\tgap: 8px;\n\tgrid-template-areas:\n\t\t'headline \theadline'\n\t\t'media-icon image';\n\n\t/* Applied word-break: break-word to prevent text overflow\n\tand ensure long words break onto the next line.\n\tThis is important since the highlights card can only take up a set portion\n\tof the screen to allow for the peeping card on mobile and grid layout\n\ton larger breakpoints, and the image has a fixed width on all breakpoints. */\n\tword-break: break-word;\n\t${until.mobileMedium} {\n\t\tmin-height: 174px;\n\t}\n\n\t${between.mobileMedium.and.desktop} {\n\t\tmin-height: 194px;\n\t\theight: 100%;\n\t}\n\n\t${from.tablet} {\n\t\theight: 100%;\n\t\twidth: 160px;\n\t}\n\n\t${from.desktop} {\n\t\twidth: 300px;\n\t\tgrid-template-areas:\n\t\t\t'headline \timage'\n\t\t\t'media-icon image';\n\t}\n`;\nconst headline = css `\n\tgrid-area: headline;\n`;\nconst mediaIcon = css `\n\tgrid-area: media-icon;\n\talign-self: end;\n\twidth: 24px;\n\theight: 24px;\n\t/* We’re using the text colour for the icon badge */\n\tbackground-color: ${palette('--highlights-card-headline')};\n\tborder-radius: 50%;\n\tdisplay: inline-block;\n\n\t> svg {\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tmargin-top: 2px;\n\t\tdisplay: block;\n\t\tfill: ${palette('--highlights-container-background')};\n\t}\n`;\nconst imageArea = css `\n\tgrid-area: image;\n\theight: 106px;\n\twidth: 106px;\n\talign-self: end;\n\tposition: relative;\n\t${from.desktop} {\n\t\theight: 112px;\n\t\twidth: 112px;\n\t}\n`;\nconst hoverStyles = css `\n\t:hover .image-overlay {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tborder-radius: 100%;\n\t\tbackground-color: ${palette('--card-background-hover')};\n\t}\n\n\t/* Only underline the headline element we want to target (not kickers/sublink headlines) */\n\t:hover .card-headline .show-underline {\n\t\ttext-decoration: underline;\n\t}\n`;\nexport const HighlightsCard = ({ linkTo, format, headlineText, showQuotedHeadline, image, imageLoading = 'lazy', avatarUrl, mainMedia, kickerText, dataLinkName, byline, isExternalLink, }) => {\n    const showMediaIcon = isMediaCard(format);\n    return (_jsx(FormatBoundary, { format: format, children: _jsxs(\"div\", { css: [gridContainer, hoverStyles], children: [_jsx(CardLink, { linkTo: linkTo, headlineText: headlineText, dataLinkName: dataLinkName, isExternalLink: isExternalLink }), _jsx(\"div\", { css: headline, children: _jsx(CardHeadline, { headlineText: headlineText, format: format, fontSizes: {\n                            desktop: 'xsmall',\n                            tablet: 'xxsmall',\n                            mobileMedium: 'xxsmall',\n                            mobile: 'tiny',\n                        }, showPulsingDot: format.design === ArticleDesign.LiveBlog, kickerText: kickerText, isExternalLink: isExternalLink, showQuotes: showQuotedHeadline, headlineColour: palette('--highlights-card-headline'), kickerColour: palette('--highlights-card-kicker-text'), isBetaContainer: true }) }), !!mainMedia && showMediaIcon && (_jsx(\"div\", { css: mediaIcon, children: _jsx(Icon, { mediaType: mainMedia.type }) })), _jsx(\"div\", { css: imageArea, children: (avatarUrl && (_jsx(Avatar, { src: avatarUrl, alt: byline ?? '', shape: \"cutout\" }))) ??\n                        (image && (_jsxs(_Fragment, { children: [_jsx(CardPicture, { imageSize: \"medium\", mainImage: image.src, alt: image.altText, loading: imageLoading, isCircular: true }), _jsx(\"div\", { className: \"image-overlay\", children: \" \" })] }))) })] }) }));\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { from, space, until } from '@guardian/source/foundations';\nimport { Button, Hide, SvgChevronLeftSingle, SvgChevronRightSingle, } from '@guardian/source/react-components';\nimport { useEffect, useRef, useState } from 'react';\nimport { submitComponentEvent } from '../client/ophan/ophan';\nimport { palette } from '../palette';\nimport { HighlightsCard } from './Masthead/HighlightsCard';\nconst containerStyles = css `\n\t${from.tablet} {\n\t\tpadding: 0 ${space[5]}px;\n\t}\n\t${from.wide} {\n\t\tpadding-right: 100px;\n\t}\n`;\nconst carouselStyles = css `\n\tdisplay: grid;\n\tgrid-auto-columns: 1fr;\n\tgrid-auto-flow: column;\n\toverflow-x: auto;\n\toverflow-y: hidden;\n\tscroll-snap-type: x mandatory;\n\tscroll-behavior: smooth;\n\toverscroll-behavior-x: contain;\n\toverscroll-behavior-y: auto;\n\t${until.tablet} {\n\t\tscroll-padding-left: 10px;\n\t}\n\t${from.tablet} {\n\t\tscroll-padding-left: 120px;\n\t}\n\t${from.desktop} {\n\t\tscroll-padding-left: 240px;\n\t}\n\t${from.leftCol} {\n\t\tscroll-padding-left: 80px;\n\t}\n\n\t${from.wide} {\n\t\tscroll-padding-left: 240px;\n\t}\n\t/**\n\t* Hide scrollbars\n\t* See: https://stackoverflow.com/a/38994837\n\t*/\n\t::-webkit-scrollbar {\n\t\tdisplay: none; /* Safari and Chrome */\n\t}\n\tscrollbar-width: none; /* Firefox */\n\tposition: relative;\n`;\nconst itemStyles = css `\n\tscroll-snap-align: start;\n\tgrid-area: span 1;\n\tposition: relative;\n\tmargin: ${space[3]}px 10px;\n\t:first-child {\n\t\t${from.tablet} {\n\t\t\tmargin-left: 0px;\n\t\t}\n\n\t\t/**\n\t\t* From left col we add space to the left margin to the first\n\t\t* child so that the first card in the carousel aligns\n\t\t* with the start of the pages content in the grid.\n\t\t*/\n\n\t\t${from.leftCol} {\n\t\t\tpadding-left: 160px; /** 160 === 2 columns and 2 column gaps  */\n\t\t}\n\t\t${from.wide} {\n\t\t\tpadding-left: 0;\n\t\t\tmargin-left: 240px; /** 240 === 3 columns and 3 column gaps  */\n\t\t}\n\t}\n`;\nconst verticalLineStyles = css `\n\t:not(:last-child)::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tright: -10px;\n\t\twidth: 1px;\n\t\tbackground-color: ${palette('--card-border-top')};\n\t\ttransform: translateX(-50%);\n\t}\n`;\nconst buttonStyles = css `\n\tz-index: 1;\n`;\nconst buttonOverlayStyles = css `\n\twidth: 60px;\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tposition: absolute;\n\ttop: 0;\n\tpointer-events: all;\n`;\nconst previousButtonFadeStyles = css `\n\tleft: ${space[5]}px;\n\tbackground: linear-gradient(\n\t\tto right,\n\t\t${palette('--highlights-container-start-fade')} 0%,\n\t\t${palette('--highlights-container-mid-fade')} 60%,\n\t\t${palette('--highlights-container-end-fade')} 100%\n\t);\n`;\nconst nextButtonFadeStyles = css `\n\tright: ${space[5]}px;\n\tjustify-content: flex-end;\n\tbackground: linear-gradient(\n\t\tto left,\n\t\t${palette('--highlights-container-start-fade')} 0px,\n\t\t${palette('--highlights-container-mid-fade')} 60%,\n\t\t${palette('--highlights-container-end-fade')} 100%\n\t);\n`;\n/**\n * Generates CSS styles for a grid layout used in a carousel.\n *\n * @param {number} totalCards - The total number of cards in the carousel.\n * @returns {string} - The CSS styles for the grid layout.\n */\nconst generateCarouselColumnStyles = (totalCards) => {\n    const peepingCardWidth = space[8];\n    return css `\n\t\t${until.mobileMedium} {\n\t\t\tgrid-template-columns: repeat(${totalCards}, 70%) max(30%);\n\t\t}\n\n\t\t${from.mobileMedium} {\n\t\t\tgrid-template-columns: repeat(\n\t\t\t\t${totalCards},\n\t\t\t\tcalc((100% - ${peepingCardWidth}px) / 2)\n\t\t\t);\n\t\t}\n\n\t\t${from.tablet} {\n\t\t\tgrid-template-columns: repeat(${totalCards}, 1fr);\n\t\t}\n\t`;\n};\nexport const ScrollableHighlights = ({ trails }) => {\n    const carouselRef = useRef(null);\n    const carouselLength = trails.length;\n    const imageLoading = 'eager';\n    const [showPreviousButton, setShowPreviousButton] = useState(false);\n    const [showNextButton, setShowNextButton] = useState(true);\n    const scrollTo = (direction) => {\n        if (!carouselRef.current)\n            return;\n        const cardWidth = carouselRef.current.querySelector('li')?.offsetWidth ?? 0;\n        const offset = direction === 'left' ? -cardWidth : cardWidth;\n        carouselRef.current.scrollBy({\n            left: offset,\n            behavior: 'smooth',\n        });\n    };\n    /**\n     * Updates the visibility of the navigation buttons based on the carousel's scroll position.\n     *\n     * This function checks the current scroll position of the carousel and sets the visibility\n     * of the previous and next buttons accordingly. The previous button is shown if the carousel\n     * is scrolled to the right of the start, and the next button is shown if the carousel is not\n     * fully scrolled to the end.\n     */\n    const updateButtonVisibilityOnScroll = () => {\n        const carouselElement = carouselRef.current;\n        if (!carouselElement)\n            return;\n        const scrollLeft = carouselElement.scrollLeft;\n        const maxScrollLeft = carouselElement.scrollWidth - carouselElement.clientWidth;\n        setShowPreviousButton(scrollLeft > 0);\n        setShowNextButton(scrollLeft < maxScrollLeft);\n    };\n    useEffect(() => {\n        const carouselElement = carouselRef.current;\n        if (!carouselElement)\n            return;\n        carouselElement.addEventListener('scroll', updateButtonVisibilityOnScroll);\n        return () => {\n            carouselElement.removeEventListener('scroll', updateButtonVisibilityOnScroll);\n        };\n    }, []);\n    useEffect(() => {\n        void submitComponentEvent({\n            abTest: {\n                name: 'masthead-with-highlights',\n                variant: 'inTest',\n            },\n            component: {\n                componentType: 'CAROUSEL',\n                id: 'home-highlights',\n            },\n            action: 'INSERT',\n        }, 'Web');\n    }, []);\n    return (_jsxs(\"div\", { css: containerStyles, children: [_jsx(\"ol\", { \"data-component\": \"home-highlights\", ref: carouselRef, css: [\n                    carouselStyles,\n                    generateCarouselColumnStyles(carouselLength),\n                ], \"data-heatphan-type\": \"carousel\", children: trails.map((trail) => {\n                    return (_jsx(\"li\", { css: [itemStyles, verticalLineStyles], children: _jsx(HighlightsCard, { format: trail.format, headlineText: trail.headline, kickerText: trail.kickerText, avatarUrl: trail.avatarUrl, byline: trail.byline, image: trail.image, imageLoading: imageLoading, linkTo: trail.url, dataLinkName: trail.dataLinkName, isExternalLink: trail.isExternalLink, showQuotedHeadline: trail.showQuotedHeadline, mainMedia: trail.mainMedia }) }, trail.url));\n                }) }), _jsxs(Hide, { until: 'tablet', children: [showPreviousButton && (_jsx(\"div\", { css: [buttonOverlayStyles, previousButtonFadeStyles], children: _jsx(Button, { cssOverrides: buttonStyles, hideLabel: true, iconSide: \"left\", icon: _jsx(SvgChevronLeftSingle, {}), onClick: () => scrollTo('left'), \"aria-label\": \"Move highlight stories backwards\", \"data-link-name\": \"highlights container left chevron\", size: \"small\" }) })), showNextButton && (_jsx(\"div\", { css: [buttonOverlayStyles, nextButtonFadeStyles], children: _jsx(Button, { cssOverrides: buttonStyles, hideLabel: true, iconSide: \"left\", icon: _jsx(SvgChevronRightSingle, {}), onClick: () => scrollTo('right'), \"aria-label\": \"Move highlight stories forwards\", \"data-link-name\": \"highlights container right chevron\", size: \"small\" }) }))] })] }));\n};\n","/**\n * Temporary fix\n * =============\n *\n * Find the master URL for an image if has already been signed upstream.\n *\n * DCR can handle generating a signed image URL with `generateImageURL`,\n * so this method extracts source URLS from fully signed ones. _e.g.:_\n *\n * - from\n *   `https://i.guim.co.uk/img/media/c56c6217f8fa306d89320cc7915161203b5017b1/0_166_5000_3002/master/5000.jpg?width=300&quality=85&auto=format&fit=max&s=0d205d08639b4ad6e1b86758ab451abb`\n * \t to\n *   `https://media.guim.co.uk/img/media/c56c6217f8fa306d89320cc7915161203b5017b1/0_166_5000_3002/master/5000.jpg`\n *\n * - from\n *   `https://i.guim.co.uk/img/uploads/2017/10/06/George-Monbiot,-L.png?width=173&quality=85&auto=format&fit=max&s=be5b0d3f3aa55682e4930057fc3929a3`\n *   to\n *   `https://uploads.guim.co.uk/2017/10/06/George-Monbiot,-L.png`\n *\n * @deprecated Favour updating image paths sent from frontend to sources\n */\nexport const getSourceImageUrl = (source) => {\n    const url = new URL(source);\n    const buckets = ['/img/media/', '/img/static/', '/img/uploads/'];\n    const prefix = buckets.find((bucket) => url.pathname.startsWith(bucket));\n    if (url.hostname === 'i.guim.co.uk' && prefix) {\n        const path = url.pathname.replace(prefix, '');\n        switch (prefix) {\n            case '/img/media/':\n                return `https://media.guim.co.uk/${path}`;\n            case '/img/static/':\n                return `https://static.guim.co.uk/${path}`;\n            case '/img/uploads/':\n                return `https://uploads.guim.co.uk/${path}`;\n        }\n    }\n    return source;\n};\n"],"names":["picture","name","styles","round","css","palette","img","block","Avatar","_ref","src","alt","_ref$shape","shape","sources","generateSources","getSourceImageUrl","breakpoint","width","fallbackSource","getFallbackSource","_jsxs","children","map","source","Fragment","_jsx","srcSet","hiResUrl","media","concat","lowResUrl","iconWrapperStyles","hasKicker","themePalette","wrapperStyles","Icon","mediaType","SvgCamera","SvgVideo","SvgAudio","MediaIcon","_ref2","MediaMeta","_ref3","gridContainer","until","mobileMedium","between","and","desktop","from","tablet","headline","mediaIcon","imageArea","hoverStyles","HighlightsCard","linkTo","format","headlineText","showQuotedHeadline","image","_ref$imageLoading","imageLoading","avatarUrl","mainMedia","kickerText","dataLinkName","byline","isExternalLink","showMediaIcon","isMediaCard","FormatBoundary","CardLink","CardHeadline","fontSizes","mobile","showPulsingDot","design","ArticleDesign","LiveBlog","showQuotes","headlineColour","kickerColour","isBetaContainer","type","_Fragment","CardPicture","imageSize","mainImage","altText","loading","isCircular","className","containerStyles","space","wide","carouselStyles","leftCol","itemStyles","verticalLineStyles","buttonStyles","buttonOverlayStyles","previousButtonFadeStyles","nextButtonFadeStyles","ScrollableHighlights","totalCards","peepingCardWidth","trails","carouselRef","useRef","carouselLength","length","_useState","useState","_useState2","_slicedToArray","showPreviousButton","setShowPreviousButton","_useState3","_useState4","showNextButton","setShowNextButton","scrollTo","direction","_carouselRef$current$","_carouselRef$current$2","current","cardWidth","querySelector","offsetWidth","offset","scrollBy","left","behavior","updateButtonVisibilityOnScroll","carouselElement","scrollLeft","maxScrollLeft","scrollWidth","clientWidth","useEffect","addEventListener","removeEventListener","submitComponentEvent","abTest","variant","component","componentType","id","action","ref","trail","url","Hide","Button","cssOverrides","hideLabel","iconSide","icon","SvgChevronLeftSingle","onClick","size","SvgChevronRightSingle","URL","prefix","find","bucket","pathname","startsWith","hostname","path","replace"],"sourceRoot":""}