{"version":3,"file":"CommentCount-importable.client.web.legacy.94534540f7907eb42197.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/static/icons/comment.svg","webpack://@guardian/dotcom-rendering/./src/components/CommentCount.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/formatCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/useApi.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCommentCount.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/mq/mq.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgComment = function SvgComment(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 0l1 1v7l-1 1H7l-2 3H4V9H2L1 8V1l1-1h11z\"\n  })));\n};\nexport default SvgComment;","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { isUndefined } from '@guardian/libs';\nimport { between, textSans17, until } from '@guardian/source/foundations';\nimport { formatCount } from '../lib/formatCount';\nimport { useCommentCount } from '../lib/useCommentCount';\nimport { palette as themePalette } from '../palette';\nimport CommentIcon from '../static/icons/comment.svg';\nconst containerStyles = css `\n\tdisplay: flex;\n\talign-self: flex-end;\n\tflex-direction: column;\n\t${textSans17};\n\tfont-weight: bold;\n\tcolor: ${themePalette('--comment-count-fill')};\n\tpadding-top: 5px;\n\n\t${until.desktop} {\n\t\tcolor: ${themePalette('--comment-count-mobile-fill')};\n\t}\n`;\nconst iconContainerStyles = css `\n\theight: 15px;\n\tmargin: 0;\n\ttext-align: right;\n\tmargin-bottom: -2px;\n\tsvg {\n\t\theight: 18px;\n\t\twidth: 18px;\n\t}\n`;\nconst iconStyles = css `\n\tfill: ${themePalette('--comment-count-fill')};\n\t${until.desktop} {\n\t\tfill: ${themePalette('--comment-count-mobile-fill')};\n\t}\n`;\nconst longStyles = css `\n\tdisplay: block;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: none;\n\t}\n`;\nconst shortStyles = css `\n\tdisplay: none;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: block;\n\t}\n`;\nconst linkStyles = css `\n\tcolor: inherit;\n\ttext-decoration: none;\n\t:hover {\n\t\ttext-decoration: underline;\n\t}\n\t:visited {\n\t\tcolor: inherit;\n\t}\n`;\n/**\n * Shows the number of comments at the top of an article.\n *\n * ## Why does this need to be an Island?\n *\n * Fetches the count from the discussion API.\n *\n * ---\n *\n * [`Count` on Chromatic](https://www.chromatic.com/component?appId=63e251470cfbe61776b0ef19&csfId=components-counts&buildNumber=2967)\n */\nexport const CommentCount = ({ discussionApiUrl, shortUrlId }) => {\n    const commentCount = useCommentCount(discussionApiUrl, shortUrlId);\n    // If the comment count is 0 we still want to display it\n    if (isUndefined(commentCount))\n        return null;\n    const { short, long } = formatCount(commentCount);\n    return (_jsx(\"data\", { css: containerStyles, \"data-testid\": \"comment-counts\", value: `${long} comments on this article`, children: _jsxs(\"a\", { href: \"#comments\", css: linkStyles, \"aria-label\": `${short} Comments`, children: [_jsx(\"div\", { css: iconContainerStyles, children: _jsx(CommentIcon, { css: iconStyles }) }), _jsx(\"div\", { \"data-testid\": \"long-comment-count\", css: longStyles, \"aria-hidden\": \"true\", children: long }), _jsx(\"div\", { \"data-testid\": \"short-comment-count\", css: shortStyles, \"aria-hidden\": \"true\", children: short })] }) }));\n};\n","import { isUndefined } from '@guardian/libs';\nexport const formatCount = (count) => {\n    if (isUndefined(count))\n        return { short: '…', long: '…' };\n    if (count === 0)\n        return { short: '0', long: '0' };\n    const countAsInteger = Math.floor(count);\n    const displayCountLong = Intl.NumberFormat('en-GB').format(countAsInteger);\n    const displayCountShort = countAsInteger > 10000\n        ? `${Math.round(countAsInteger / 1000)}k`\n        : countAsInteger.toString();\n    return {\n        short: displayCountShort,\n        long: displayCountLong,\n    };\n};\n","import { isUndefined } from '@guardian/libs';\nimport useSWR from 'swr';\nfunction checkForErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText ||\n            `useApi | An api call returned HTTP status ${response.status}`);\n    }\n    return response;\n}\n/** **NOTE:** no parsing is done on the response, the type is merely asserted */\nconst fetcher = (init) => (url) => fetch(url, init)\n    .then(checkForErrors)\n    .then((res) => res.json());\n/**\n * A custom hook to make a GET request using the given url using the SWR lib (https://swr.vercel.app/).\n *\n * @template T assert the expected response type\n * @template E assert the potential error type\n * @param {string} url - The API endpoint. Falsy values will prevent any network requests\n * @param {SWRConfiguration<Data,Err>} options - The SWR config object - https://swr.vercel.app/docs/api#options\n * @param {RequestInit} init - The fetch init object - https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * @returns {ApiResponse<Data, Err>}\n * */\nexport const useApi = (url = '', options, init) => {\n    const { data, error } = useSWR(url, fetcher(init), options);\n    return {\n        data,\n        error,\n        loading: !!url && isUndefined(error) && isUndefined(data),\n    };\n};\n","import { isNonNullable, isObject } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { useApi } from './useApi';\n/**\n * **Build an initial set of discussions**\n *\n * Setting this attribute helps build an initial set of discussion IDs.\n * Without it, there is a risk that each new usage of `useCommentCount`\n * leads to a distinct request to the discussion API\n */\nexport const DISCUSSION_ID_DATA_ATTRIBUTE = 'data-discussion-id';\n/**\n * We only want to create this set on a client, never on the server\n */\nlet uniqueDiscussionIds;\n/**\n * Create an initial set of IDs by reading what is in the DOM\n */\nconst getInitialIds = () => [...document.querySelectorAll(`[${DISCUSSION_ID_DATA_ATTRIBUTE}]`)]\n    .map((element) => element.getAttribute(DISCUSSION_ID_DATA_ATTRIBUTE))\n    .filter(isNonNullable);\nexport const useCommentCount = (discussionApiUrl, shortUrl) => {\n    // A falsy value prevents fetching: https://swr.vercel.app/docs/conditional-fetching#conditional\n    const [url, setUrl] = useState();\n    useEffect(() => {\n        uniqueDiscussionIds ??= new Set(getInitialIds());\n        uniqueDiscussionIds.add(shortUrl);\n        const getCommentCountUrl = `${discussionApiUrl}/getCommentCounts?${new URLSearchParams({\n            'short-urls': [...uniqueDiscussionIds]\n                .sort() // ensures identical sets produce the same query parameter\n                .join(','),\n        }).toString()}`;\n        setUrl(getCommentCountUrl);\n    }, [discussionApiUrl, shortUrl]);\n    const { data } = useApi(url);\n    /**\n     * As per the endpoint, but let’s parse it\n     * @see https://github.com/guardian/discussion-api/blob/73e805641f509c79d12f207aeb50c3f1fb58c886/discussion-api/src/main/scala/com.gu.discussion.api/repository/Discussion.scala#L233\n     */\n    const count = isObject(data) ? data[shortUrl] : undefined;\n    return typeof count === 'number' ? count : undefined;\n};\n/** Ensure that we reduce the number of requests to get comment counts */\nexport const addDiscussionIds = (ids) => {\n    if (!uniqueDiscussionIds)\n        return;\n    for (const id of ids) {\n        uniqueDiscussionIds.add(id);\n    }\n};\n","/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour) => `var(${colour})`;\n// ----- Exports ----- //\nexport { palette };\n","const breakpoints = {\n    desktop: 980,\n    leftCol: 1140,\n    mobile: 320,\n    mobileLandscape: 480,\n    mobileMedium: 375,\n    phablet: 660,\n    tablet: 740,\n    wide: 1300\n};\nexport { breakpoints };\n","import { breakpoints } from '../__generated__/breakpoints.js';\nconst smidgen = 0.1;\nconst minWidth = (from2) => `@media (min-width: ${`${from2}px`})`;\nconst maxWidth = (until2) => `@media (max-width: ${`${until2 - smidgen}px`})`;\nconst minWidthMaxWidth = (from2, until2) => `@media (min-width: ${`${from2}px`}) and (max-width: ${`${until2 - smidgen}px`})`;\nconst from = {\n    mobile: minWidth(breakpoints.mobile),\n    mobileMedium: minWidth(breakpoints.mobileMedium),\n    mobileLandscape: minWidth(breakpoints.mobileLandscape),\n    phablet: minWidth(breakpoints.phablet),\n    tablet: minWidth(breakpoints.tablet),\n    desktop: minWidth(breakpoints.desktop),\n    leftCol: minWidth(breakpoints.leftCol),\n    wide: minWidth(breakpoints.wide)\n};\nconst until = {\n    mobile: maxWidth(breakpoints.mobile),\n    mobileMedium: maxWidth(breakpoints.mobileMedium),\n    mobileLandscape: maxWidth(breakpoints.mobileLandscape),\n    phablet: maxWidth(breakpoints.phablet),\n    tablet: maxWidth(breakpoints.tablet),\n    desktop: maxWidth(breakpoints.desktop),\n    leftCol: maxWidth(breakpoints.leftCol),\n    wide: maxWidth(breakpoints.wide)\n};\nconst between = {\n    mobile: {\n        and: {\n            mobileMedium: minWidthMaxWidth(breakpoints.mobile, breakpoints.mobileMedium),\n            mobileLandscape: minWidthMaxWidth(breakpoints.mobile, breakpoints.mobileLandscape),\n            phablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n            tablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n            desktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n        }\n    },\n    mobileMedium: {\n        and: {\n            mobileLandscape: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.mobileLandscape),\n            phablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n            tablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n            desktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n        }\n    },\n    mobileLandscape: {\n        and: {\n            phablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.phablet),\n            tablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n            desktop: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide)\n        }\n    },\n    phablet: {\n        and: {\n            tablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n            desktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide)\n        }\n    },\n    tablet: {\n        and: {\n            desktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n            leftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide)\n        }\n    },\n    desktop: {\n        and: {\n            leftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n            wide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide)\n        }\n    },\n    leftCol: {\n        and: {\n            wide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide)\n        }\n    }\n};\nexport { between, from, until };\n"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","props","width","height","viewBox","d","containerStyles","css","textSans17","themePalette","until","desktop","iconContainerStyles","name","styles","iconStyles","longStyles","between","leftCol","and","wide","shortStyles","linkStyles","CommentCount","_ref","discussionApiUrl","shortUrlId","commentCount","useCommentCount","isUndefined","_formatCount","formatCount","short","long","_jsx","value","concat","children","_jsxs","href","CommentIcon","count","countAsInteger","Math","floor","displayCountLong","Intl","NumberFormat","format","round","toString","checkForErrors","response","ok","Error","statusText","status","useApi","url","undefined","options","init","_useSWR","useSWR","fetch","then","res","json","fetcher","data","error","loading","uniqueDiscussionIds","DISCUSSION_ID_DATA_ATTRIBUTE","shortUrl","_useState","useState","_useState2","_slicedToArray","setUrl","useEffect","_uniqueDiscussionIds","Set","_toConsumableArray","document","querySelectorAll","map","element","getAttribute","filter","isNonNullable","add","getCommentCountUrl","URLSearchParams","sort","join","isObject","addDiscussionIds","ids","_step","_iterator","_createForOfIteratorHelper","s","done","id","err","f","palette","colour","breakpoints","mobile","mobileLandscape","mobileMedium","phablet","tablet","minWidth","from2","maxWidth","until2","minWidthMaxWidth","from"],"sourceRoot":""}