{"version":3,"file":"170.client.web.legacy.d6da82d5261208d0eee8.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/lib/articleCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/braze/forceBrazeMessage.ts","webpack://@guardian/dotcom-rendering/./src/lib/braze/taylorReport.ts","webpack://@guardian/dotcom-rendering/./src/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/lib/dailyArticleCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/fetchEmail.ts","webpack://@guardian/dotcom-rendering/./src/lib/getIdapiUserData.ts","webpack://@guardian/dotcom-rendering/./src/lib/getZIndex.ts","webpack://@guardian/dotcom-rendering/./src/lib/messagePicker.ts","webpack://@guardian/dotcom-rendering/./src/lib/setAutomat.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAB.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAuthStatus.ts","webpack://@guardian/dotcom-rendering/./src/lib/hasCurrentBrazeUser.ts","webpack://@guardian/dotcom-rendering/./src/lib/getBrazeUuid.ts","webpack://@guardian/dotcom-rendering/./src/lib/braze/checkBrazeDependencies.ts","webpack://@guardian/dotcom-rendering/./src/lib/braze/initialiseAppboy.ts","webpack://@guardian/dotcom-rendering/./src/lib/braze/hasRequiredConsents.ts","webpack://@guardian/dotcom-rendering/./src/lib/braze/buildBrazeMessaging.ts","webpack://@guardian/dotcom-rendering/./src/lib/useBraze.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCountryCode.ts","webpack://@guardian/dotcom-rendering/./src/lib/useIsInView.ts","webpack://@guardian/dotcom-rendering/./src/lib/useOnce.ts"],"sourcesContent":["import { storage } from '@guardian/libs';\nimport { getWeeklyArticleHistory, incrementWeeklyArticleCount, } from '@guardian/support-dotcom-components';\nimport { useEffect, useState } from 'react';\nimport { hasOptedOutOfWeeklyArticleCount } from '../lib/contributions';\nimport { getDailyArticleCount, incrementDailyArticleCount, } from '../lib/dailyArticleCount';\nexport const shouldIncrementArticleCount = (contentType) => {\n    // See https://github.com/guardian/frontend/blob/9c8707d894c858dd17de1c7c1499f6b91f5287bc/common/app/model/DotcomContentType.scala#L29\n    return [\n        'article',\n        'liveblog',\n        'gallery',\n        'video',\n        'interactive',\n        'audio',\n    ].includes(contentType.toLowerCase());\n};\n/**\n * This function is used to get the daily article counts.\n * It will increment the count if the contentType is listed in the shouldIncrementArticleCount function.\n * This will return and increment the dailyArticleCount for unconsented and consented users.\n *\n * @param {string} contentType\n * @return {*}  {(DailyArticleHistory | undefined)}\n */\nexport const getDailyArticleCounts = (contentType) => {\n    if (!window.guardian.dailyArticleCount) {\n        if (shouldIncrementArticleCount(contentType)) {\n            incrementDailyArticleCount();\n        }\n        window.guardian.dailyArticleCount = getDailyArticleCount();\n    }\n    return window.guardian.dailyArticleCount;\n};\n/**\n * This function is used to get the weekly article counts\n * It will increment the count if the contentType is listed in the shouldIncrementArticleCount function.\n * This will return and increment the weeklyArticleCount for only consented users.\n *\n * @param {string} pageId\n * @param {TagType[]} tags\n * @param {string} contentType\n * @return {*}  {(Promise<WeeklyArticleHistory | undefined>)}\n */\nexport const getWeeklyArticleCounts = async (pageId, tags, contentType) => {\n    if (await hasOptedOutOfWeeklyArticleCount())\n        return undefined;\n    if (!window.guardian.weeklyArticleCount) {\n        if (shouldIncrementArticleCount(contentType)) {\n            // hasOptedOut needs to be done before we check if articleCount is set in the window\n            // This is because a potential race condition where one invocation of getArticleCounts\n            // is waiting for hasOptedOut another invocation might receive it and increment the article count.\n            const keywordAndToneTagIds = tags\n                .filter((tag) => ['tone', 'keyword'].includes(tag.type.toLowerCase()))\n                .map((tag) => tag.id);\n            incrementWeeklyArticleCount(storage.local, pageId, keywordAndToneTagIds);\n        }\n        window.guardian.weeklyArticleCount = getWeeklyArticleHistory(storage.local);\n    }\n    return window.guardian.weeklyArticleCount;\n};\nexport const getArticleCounts = async (pageId, tags, contentType) => {\n    getDailyArticleCounts(contentType);\n    await getWeeklyArticleCounts(pageId, tags, contentType);\n    return {\n        dailyArticleHistory: window.guardian.dailyArticleCount ?? [],\n        weeklyArticleHistory: window.guardian.weeklyArticleCount ?? [],\n    };\n};\nexport const useArticleCounts = (pageId, tags, contentType) => {\n    const [articleCounts, setArticleCounts] = useState('Pending');\n    useEffect(() => {\n        getArticleCounts(pageId, tags, contentType)\n            .then(setArticleCounts)\n            .catch(() => setArticleCounts(undefined));\n    }, [contentType, pageId, tags]);\n    return articleCounts;\n};\n","const FORCE_BRAZE_ALLOWLIST = [\n    'preview.gutools.co.uk',\n    'preview.code.dev-gutools.co.uk',\n    process.env.HOSTNAME ?? 'localhost',\n    'm.thegulocal.com',\n];\nexport const getBrazeMetaFromUrlFragment = () => {\n    if (window.location.hash) {\n        // This is intended for use on development domains for preview purposes.\n        // It won't run in PROD.\n        const key = 'force-braze-message';\n        const hashString = window.location.hash;\n        if (hashString.includes(key)) {\n            if (!FORCE_BRAZE_ALLOWLIST.includes(window.location.hostname)) {\n                console.log(`${key} is not supported on this domain`);\n                return null;\n            }\n            const forcedMessage = hashString.slice(hashString.indexOf(`${key}=`) + key.length + 1, hashString.length);\n            try {\n                const dataFromBraze = JSON.parse(decodeURIComponent(forcedMessage));\n                return {\n                    dataFromBraze,\n                    logImpressionWithBraze: () => { },\n                    logButtonClickWithBraze: () => { },\n                };\n            }\n            catch (e) {\n                const error = e;\n                // Parsing failed. Log a message and fall through.\n                console.log(`There was an error with ${key}: `, error.message);\n            }\n        }\n    }\n    return null;\n};\n","const tagId = 'news/series/cotton-capital';\nexport const suppressForTaylorReport = (tags) => window.guardian.config.switches.brazeTaylorReport === true &&\n    !tags.find((tag) => tag.id === tagId);\n","import { getCookie, isUndefined, onConsentChange, storage, } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\n// User Attributes API cookies (created on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n// Support Frontend cookie (created when a contribution is made)\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE = 'gu.contributions.contrib-timestamp';\n//  Local storage keys\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_KEY = 'gu.noRRBanner';\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n// Returns true if we should hide support messaging because the user is a supporter.\n// Checks the cookie that is set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nexport const hasSupporterCookie = (isSignedIn) => {\n    const cookie = getCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE });\n    switch (cookie) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        default:\n            /**\n             * If cookie is not present but user is signed in, we do not want to show any messaging.\n             * This is because of a race condition on the first page view after signing in, where\n             * we may be awaiting the response from the API to find out if they're a supporter.\n             */\n            if (isSignedIn) {\n                return 'Pending';\n            }\n            else {\n                return false;\n            }\n    }\n};\n// looks at the SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (set by support-frontend when making one-off contribution)\n// and returns a Unix epoch int of the date if it exists.\nexport const getLastOneOffContributionTimestamp = () => {\n    // Support cookies - expects Unix epoch\n    const contributionDateFromSupport = getCookie({\n        name: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n    });\n    if (!contributionDateFromSupport) {\n        return undefined;\n    }\n    // Parse dates into common a number\n    const parsedDateFromSupport = contributionDateFromSupport\n        ? parseInt(contributionDateFromSupport, 10)\n        : 0;\n    return parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\nconst dateDiffDays = (from, to) => {\n    const oneDayMs = 1000 * 60 * 60 * 24;\n    const diffMs = to - from;\n    return Math.floor(diffMs / oneDayMs);\n};\nconst AskPauseDays = 90;\nexport const isRecentOneOffContributor = () => {\n    const lastContributionDate = getLastOneOffContributionTimestamp();\n    if (!isUndefined(lastContributionDate)) {\n        const now = Date.now();\n        return dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n    }\n    return false;\n};\nexport const shouldHideSupportMessaging = (isSignedIn) => {\n    const hasCookie = hasSupporterCookie(isSignedIn);\n    if (hasCookie === 'Pending') {\n        return 'Pending';\n    }\n    else {\n        return hasCookie || isRecentOneOffContributor();\n    }\n};\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\nexport const hasArticleCountOptOutCookie = () => getCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\nconst removeWeeklyArticleCountsFromLocalStorage = () => storage.local.remove(WEEKLY_ARTICLE_COUNT_KEY);\nexport const hasCmpConsentForWeeklyArticleCount = () => {\n    return new Promise((resolve) => {\n        if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n            resolve(true);\n        }\n        onConsentChange(({ usnat, tcfv2, aus }) => {\n            if (usnat ?? aus) {\n                resolve(true);\n            }\n            else if (tcfv2) {\n                const hasRequiredConsents = REQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every((consent) => tcfv2.consents[consent]);\n                if (!hasRequiredConsents) {\n                    removeWeeklyArticleCountsFromLocalStorage();\n                }\n                resolve(hasRequiredConsents);\n            }\n        });\n    });\n};\nexport const hasOptedOutOfArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\nexport const hasOptedOutOfWeeklyArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForWeeklyArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = () => {\n    const [hasOptedOut, setHasOptedOut] = useState('Pending');\n    useEffect(() => {\n        hasOptedOutOfArticleCount()\n            .then(setHasOptedOut)\n            .catch(() => setHasOptedOut(true));\n    }, []);\n    return hasOptedOut;\n};\nexport const hasCmpConsentForBrowserId = () => new Promise((resolve) => {\n    if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n        resolve(true);\n    }\n    onConsentChange(({ usnat, tcfv2, aus }) => {\n        if (usnat ?? aus) {\n            resolve(true);\n        }\n        else if (tcfv2) {\n            const hasRequiredConsents = REQUIRED_CONSENTS_FOR_BROWSER_ID.every((consent) => tcfv2.consents[consent]);\n            resolve(hasRequiredConsents);\n        }\n    });\n});\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = () => !!storage.local.get(NO_RR_BANNER_KEY);\nexport const setLocalNoBannerCachePeriod = (now = Date.now()) => storage.local.set(NO_RR_BANNER_KEY, true, now + twentyMins);\n// Returns true if banner was closed in the last hour\nconst ONE_HOUR_IN_MS = 1000 * 60 * 60;\nexport const recentlyClosedBanner = (lastClosedAt, now = Date.now()) => {\n    if (lastClosedAt) {\n        return now - new Date(lastClosedAt).getTime() < ONE_HOUR_IN_MS;\n    }\n    return false;\n};\nexport const getContributionsServiceUrl = (config) => process.env.SDC_URL ?? config.contributionsServiceUrl;\nexport const getPurchaseInfo = () => {\n    const purchaseInfoRaw = getCookie({\n        name: 'GU_CO_COMPLETE',\n        shouldMemoize: true,\n    });\n    if (!purchaseInfoRaw) {\n        return undefined;\n    }\n    let purchaseInfo;\n    try {\n        purchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n    }\n    catch { } // eslint-disable-line no-empty -- silently handle error\n    return purchaseInfo;\n};\n","import { isObject, storage } from '@guardian/libs';\nexport const DailyArticleCountKey = 'gu.history.dailyArticleCount';\nconst isValidHistory = (history) => Array.isArray(history) &&\n    history.every((daily) => isObject(daily) &&\n        'day' in daily &&\n        'count' in daily &&\n        typeof daily.day === 'number' &&\n        typeof daily.count === 'number');\n// Returns undefined if no daily article count in local storage\nexport const getDailyArticleCount = () => {\n    try {\n        const dailyCount = storage.local.get(DailyArticleCountKey);\n        if (!isValidHistory(dailyCount)) {\n            throw new Error('Invalid gu.history.dailyArticleCount value');\n        }\n        return dailyCount;\n    }\n    catch (e) {\n        // error parsing the string, so remove the key\n        storage.local.remove(DailyArticleCountKey);\n        return undefined;\n    }\n};\nexport const getToday = () => Math.floor(Date.now() / 86_400_000);\nexport const incrementDailyArticleCount = () => {\n    // get the daily article count from local storage\n    const dailyArticleCount = getDailyArticleCount() ?? [];\n    // calculate days since unix epoch for today date\n    const today = getToday();\n    // check if latest day is today and increment if so\n    if (dailyArticleCount[0]?.day === today) {\n        dailyArticleCount[0].count += 1;\n    }\n    else {\n        // else set new day\n        dailyArticleCount.unshift({ day: today, count: 1 });\n        // remove any days older than 60\n        const cutOff = today - 60;\n        const firstOldDayIndex = dailyArticleCount.findIndex((dailyCount) => dailyCount.day && dailyCount.day < cutOff);\n        if (firstOldDayIndex > 0) {\n            dailyArticleCount.splice(firstOldDayIndex);\n        }\n    }\n    // set the latest article count\n    storage.local.set(DailyArticleCountKey, dailyArticleCount);\n};\n","import { getIdApiUserData } from './getIdapiUserData';\nimport { eitherInOktaTestOrElse } from './identity';\nconst getEmail = async (ajaxUrl) => \n// TODO Okta: Remove either when at 100% in oktaVariant test, and just use idToken\neitherInOktaTestOrElse((authState) => authState.idToken?.claims.email, () => getIdApiUserData(ajaxUrl)\n    .then((data) => data.user?.primaryEmailAddress)\n    .catch((error) => {\n    window.guardian.modules.sentry.reportError(error, 'getEmail');\n    return undefined;\n}));\n/**\n * Attempts to fetch a signed in user's email address either from okta token or falling back to IdApi request.\n * Returns null if no email address is found or if the request times out after 1 second.\n * @param {string} idapiUrl - Idapi url available from window.guardian.config.page\n */\nexport const lazyFetchEmailWithTimeout = (idapiUrl) => () => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(null), 1000);\n        void getEmail(idapiUrl).then((email) => {\n            if (email) {\n                resolve(email);\n            }\n            else {\n                resolve(null);\n            }\n        });\n    });\n};\n","import { joinUrl } from '@guardian/libs';\nfunction checkForErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText ||\n            `getIdApiUserData | An api call returned HTTP status ${response.status}`);\n    }\n    return response;\n}\nconst callApi = (url) => {\n    return fetch(url, {\n        credentials: 'include',\n    })\n        .then(checkForErrors)\n        .then((response) => response.json());\n};\nconst cache = {};\nexport const getIdApiUserData = (ajaxUrl) => {\n    if (!cache.idapiUserMeResponse) {\n        const url = joinUrl(ajaxUrl, 'user/me');\n        cache.idapiUserMeResponse = callApi(url);\n    }\n    return cache.idapiUserMeResponse;\n};\nexport const getIdapiUserIdentifiers = (ajaxUrl) => {\n    if (!cache.idapiUserIdentifiersResponse) {\n        const url = joinUrl(ajaxUrl, 'user/me/identifiers');\n        cache.idapiUserIdentifiersResponse = callApi(url);\n    }\n    return cache.idapiUserIdentifiersResponse;\n};\n","/**\n * How do I get a z-index for my new item?\n *\n * Decide a meaningful name for your item and then insert it\n * in the indices array below. The higher up your item visually,\n * then the higher it will be in the z-index stack,\n * 'higher' means _earlier_ in the array.\n *\n * Eg. stickyAdWrapper will be given a higher z-index than bodyArea\n *\n * Once inserted in the array, use getZIndex() to return the css\n *\n * Eg.\n *\n * import { getZIndex } from './getZIndex';\n *\n * const myCss = css`\n *    color: blue;\n *    z-index: ${getZIndex('TheGuardian')};\n * `;\n *\n * As new items are added, all z-indexes are adjusted\n */\nconst indices = [\n    // Modals will go here at the top\n    'lightbox',\n    'youTubeFullscreen',\n    // Sticky video and button need to be above everything\n    'sticky-video-button',\n    'sticky-video',\n    'banner',\n    'dropdown',\n    'burger',\n    'mastheadVeggieBurgerExpandedMobile',\n    'expanded-veggie-menu-wrapper',\n    'expanded-veggie-menu',\n    //header wrapper needs to be in line with veggie menus to ensure it stands above various banners\n    'fullPageInteractiveHeaderWrapper',\n    // Mobile sticky appears below banners\n    'mobileSticky',\n    // Headers with sticky ads\n    'stickyAdWrapperLabsHeader',\n    'stickyAdWrapper',\n    'stickyAdWrapperNav',\n    // My Account dropdown in masthead - needs to be below stickyAdWrapper\n    'mastheadMyAccountDropdown',\n    // Edition selector in masthead - needs to be below stickyAdWrapper\n    'mastheadEditionDropdown',\n    // Edition selector in nav - needs to be below stickyAdWrapper\n    'editionDropdown',\n    // The content displayed by the Details component\n    'summaryDetails',\n    // Liveblog toast\n    'toast',\n    // Onwards Carousel (Related content etc)\n    'onwardsCarousel',\n    // Search link should be above The Guardian svg\n    'myAccountDropdown',\n    'searchHeaderLink',\n    'TheGuardian',\n    // The edition switcher banner needs to be below the Edition selector\n    // and the myAccount dropdown in the nav\n    'editionSwitcherBanner',\n    // Overlay for expandable marketing card (currently US only)\n    'expandableMarketingCardOverlay',\n    // Sticky table of contents element\n    'tableOfContents',\n    // Article headline (should be above main media)\n    'articleHeadline',\n    'immersiveBlackBox',\n    // Body\n    'bodyArea',\n    'rightColumnArea',\n    // Main media\n    'mainMedia',\n    // Nested links in cards should sit above the main card link\n    // See: https://www.sarasoueidan.com/blog/nested-links/\n    'card-nested-link',\n    'card-link',\n];\nexport const getZIndex = (name) => {\n    const index = indices.indexOf(name);\n    if (index === -1)\n        return -1; // indexOf returns -1 if there is no match\n    return indices.length - index; // reverse the indices: last item gets 1\n};\n","import { isUndefined, startPerformanceMeasure } from '@guardian/libs';\nimport { getOphan } from '../client/ophan/ophan';\nconst recordMessageTimeoutInOphan = async (candidateId, slotName, renderingTarget) => {\n    const ophan = await getOphan(renderingTarget);\n    ophan.record({\n        // @ts-expect-error -- Type 'string' is not assignable to type 'ComponentV2'.\n        // the relevant team should remove this call as it is dropped by Ophan\n        // see https://github.com/guardian/dotcom-rendering/pull/11438 further context\n        component: `${slotName}-picker-timeout-dcr`,\n        value: candidateId,\n    });\n};\nconst timeoutify = (candidateConfig, slotName, renderingTarget) => {\n    let timer;\n    const canShow = () => new Promise((resolve) => {\n        const perfName = `messagePicker-canShow-${candidateConfig.candidate.id}`;\n        const { endPerformanceMeasure } = startPerformanceMeasure('tx', perfName);\n        if (candidateConfig.timeoutMillis !== null) {\n            timer = window.setTimeout(() => {\n                void recordMessageTimeoutInOphan(candidateConfig.candidate.id, slotName, renderingTarget);\n                resolve({ show: false });\n            }, candidateConfig.timeoutMillis);\n        }\n        candidateConfig.candidate\n            .canShow()\n            .then((result) => {\n            resolve(result);\n            const canShowTimeTaken = endPerformanceMeasure();\n            if (candidateConfig.reportTiming) {\n                void getOphan(renderingTarget).then((ophan) => {\n                    ophan.record({\n                        // @ts-expect-error -- the relevant team should remove this call as it is dropped by Ophan\n                        // see https://github.com/guardian/dotcom-rendering/pull/11438 further context\n                        component: perfName,\n                        value: canShowTimeTaken,\n                    });\n                });\n            }\n        })\n            .catch((e) => console.error(`timeoutify candidate - error: ${String(e)}`));\n    });\n    const cancelTimeout = () => !isUndefined(timer) && clearTimeout(timer);\n    return {\n        ...candidateConfig,\n        candidate: {\n            ...candidateConfig.candidate,\n            canShow,\n        },\n        cancelTimeout,\n    };\n};\nconst clearAllTimeouts = (messages) => messages.map((m) => m.cancelTimeout());\nconst defaultShow = () => null;\nexport const pickMessage = ({ candidates, name }, renderingTarget) => new Promise((resolve) => {\n    const candidateConfigsWithTimeout = candidates.map((c) => timeoutify(c, name, renderingTarget));\n    const results = candidateConfigsWithTimeout.map((candidateConfig) => ({\n        candidateConfig,\n        canShow: candidateConfig.candidate.canShow(),\n    }));\n    const winnerResult = results.reduce(async (winningMessageSoFar, { candidateConfig, canShow }) => {\n        if (await winningMessageSoFar) {\n            return winningMessageSoFar;\n        }\n        const result = await canShow;\n        candidateConfig.cancelTimeout();\n        if (result.show) {\n            return {\n                candidate: candidateConfig.candidate,\n                meta: result.meta,\n            };\n        }\n        return winningMessageSoFar;\n    }, Promise.resolve(null));\n    winnerResult\n        .then((winner) => {\n        clearAllTimeouts(candidateConfigsWithTimeout);\n        if (winner === null) {\n            resolve(defaultShow);\n        }\n        else {\n            const { candidate, meta } = winner;\n            resolve(() => candidate.show(meta));\n        }\n    })\n        .catch((e) => console.error(`pickMessage winner - error: ${String(e)}`));\n});\n","import * as emotionReact from '@emotion/react';\nimport * as emotionReactJsxRuntime from '@emotion/react/jsx-runtime';\nimport React from 'react';\nlet hasAutomatBeenSet = false;\nexport const setAutomat = () => {\n    if (!hasAutomatBeenSet) {\n        window.guardian.automat = {\n            emotionReact,\n            emotionReactJsxRuntime,\n            react: React,\n        };\n        hasAutomatBeenSet = true;\n    }\n};\n","import { mutate } from 'swr';\nimport useSWRImmutable from 'swr/immutable';\nconst apiPromise = new Promise(() => { });\nconst key = 'ab-tests';\n/**\n * A hook which returns the AB Test Api when available,\n * or undefined otherwise.\n *\n * Leverages an immutable SWR to satisfy all requests to the\n * AB Core. As soon as the tests are available, all instances of\n * the useAB hook will render.\n */\nexport const useAB = () => {\n    const { data } = useSWRImmutable(key, () => apiPromise);\n    return data;\n};\nexport const setABTests = ({ api, participations }) => {\n    void mutate(key, { api, participations }, false);\n};\n","import { useEffect, useState } from 'react';\nimport { eitherInOktaTestOrElse, getSignedInStatusWithCookies, getSignedInStatusWithOkta, } from './identity';\n/**\n * A hook to find out if a user is signed in.\n * Returns `'Pending'` until status is known.\n * Always returns `'Pending'` during server-side rendering.\n * */\nexport const useIsSignedIn = () => {\n    const authStatus = useAuthStatus();\n    switch (authStatus.kind) {\n        case 'Pending':\n            return 'Pending';\n        case 'SignedInWithCookies':\n        case 'SignedInWithOkta':\n            return true;\n        case 'SignedOutWithCookies':\n        case 'SignedOutWithOkta':\n            return false;\n    }\n};\nexport const useAuthStatus = () => {\n    const [authStatus, setAuthStatus] = useState({\n        kind: 'Pending',\n    });\n    useEffect(() => {\n        eitherInOktaTestOrElse((oktaAuthState) => {\n            setAuthStatus(getSignedInStatusWithOkta(oktaAuthState));\n        }, () => setAuthStatus(getSignedInStatusWithCookies())).catch((error) => {\n            console.error(error);\n        });\n    }, []);\n    return authStatus;\n};\n","import { storage } from '@guardian/libs';\nconst KEY = 'gu.brazeUserSet';\nconst hasCurrentBrazeUser = () => {\n    return storage.local.getRaw(KEY) === 'true';\n};\nconst setHasCurrentBrazeUser = () => {\n    storage.local.setRaw(KEY, 'true');\n};\nconst clearHasCurrentBrazeUser = () => {\n    storage.local.remove(KEY);\n};\nexport { hasCurrentBrazeUser, setHasCurrentBrazeUser, clearHasCurrentBrazeUser, };\n","import { getIdapiUserIdentifiers } from './getIdapiUserData';\nimport { eitherInOktaTestOrElse } from './identity';\nexport const getBrazeUuid = async (ajaxUrl) => \n// TODO Okta: Remove either when at 100% in oktaVariant test, and just use idToken\neitherInOktaTestOrElse((authState) => authState.idToken?.claims.braze_uuid, () => getIdapiUserIdentifiers(ajaxUrl)\n    .then((data) => data.brazeUuid)\n    .catch((error) => {\n    window.guardian.modules.sentry.reportError(error, 'getBrazeUuid');\n}));\n","import { getBrazeUuid } from '../getBrazeUuid';\nimport { hasRequiredConsents } from './hasRequiredConsents';\nconst buildFailureResponse = (name, value, data) => ({\n    isSuccessful: false,\n    failure: {\n        field: name,\n        data: value,\n    },\n    data,\n});\nconst buildDependencies = (isSignedIn, idApiUrl) => {\n    return [\n        {\n            name: 'apiKey',\n            value: Promise.resolve(window.guardian.config.page.brazeApiKey),\n        },\n        {\n            name: 'brazeSwitch',\n            value: Promise.resolve(window.guardian.config.switches.brazeSwitch),\n        },\n        {\n            name: 'brazeUuid',\n            value: isSignedIn ? getBrazeUuid(idApiUrl) : Promise.resolve(null),\n        },\n        {\n            name: 'consent',\n            value: hasRequiredConsents(),\n        },\n        {\n            name: 'isNotPaidContent',\n            value: Promise.resolve(!window.guardian.config.page.isPaidContent),\n        },\n    ];\n};\nconst checkBrazeDependencies = async (isSignedIn, idApiUrl) => {\n    const dependencies = buildDependencies(isSignedIn, idApiUrl);\n    const data = {};\n    // I think we could possibly clean this up a bit when we can use\n    // Promise.allSettled reliably (it's not available in our current Node\n    // version and polyfill.io doesn't have a polyfill yet).\n    for (const { name, value } of dependencies) {\n        try {\n            const result = await value;\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- TODO: Complex types, look into this further\n            if (result) {\n                data[name] = result;\n            }\n            else {\n                return buildFailureResponse(name, result, data);\n            }\n        }\n        catch (e) {\n            return buildFailureResponse(name, e instanceof Error ? e.message : e, data);\n        }\n    }\n    return {\n        isSuccessful: true,\n        data,\n    };\n};\nexport { checkBrazeDependencies };\n","import { isUndefined, log } from '@guardian/libs';\nconst SDK_OPTIONS = {\n    enableLogging: true,\n    noCookies: true,\n    baseUrl: 'https://sdk.fra-01.braze.eu/api/v3',\n    sessionTimeoutInSeconds: 1,\n    minimumIntervalBetweenTriggerActionsInSeconds: 0,\n    devicePropertyAllowlist: [],\n};\nconst initialiseAppboy = async (apiKey) => {\n    const importedAppboy = (await import(\n    /* webpackChunkName: \"braze-web-sdk-core\" */ '@braze/web-sdk-core'));\n    importedAppboy.setLogger((message) => log('tx', message));\n    importedAppboy.initialize(apiKey, SDK_OPTIONS);\n    return importedAppboy;\n};\nconst getInitialisedAppboy = (() => {\n    let cache;\n    return (apiKey) => {\n        if (isUndefined(cache)) {\n            cache = initialiseAppboy(apiKey);\n        }\n        return cache;\n    };\n})();\nexport { getInitialisedAppboy };\n","import { getConsentFor, onConsentChange } from '@guardian/libs';\nconst hasRequiredConsents = () => new Promise((resolve, reject) => {\n    onConsentChange((state) => {\n        try {\n            resolve(getConsentFor('braze', state));\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n});\nexport { hasRequiredConsents };\n","import { BrazeCards, BrazeMessages, canRenderBrazeMsg, LocalMessageCache, NullBrazeCards, NullBrazeMessages, } from '@guardian/braze-components/logic';\nimport { log, startPerformanceMeasure, storage } from '@guardian/libs';\nimport { getOphan } from '../../client/ophan/ophan';\nimport { clearHasCurrentBrazeUser, hasCurrentBrazeUser, setHasCurrentBrazeUser, } from '../hasCurrentBrazeUser';\nimport { checkBrazeDependencies } from './checkBrazeDependencies';\nimport { getInitialisedAppboy } from './initialiseAppboy';\nconst maybeWipeUserData = async (apiKey, brazeUuid, consent, brazeSwitch) => {\n    const hasCurrentBrazeUserValue = hasCurrentBrazeUser();\n    const userHasLoggedOut = !brazeUuid && hasCurrentBrazeUserValue;\n    const userHasRemovedConsent = !consent && hasCurrentBrazeUserValue;\n    const brazeHasBeenDisabled = !brazeSwitch && hasCurrentBrazeUserValue;\n    if (userHasLoggedOut || userHasRemovedConsent || brazeHasBeenDisabled) {\n        try {\n            if (apiKey) {\n                const appboy = await getInitialisedAppboy(apiKey);\n                appboy.wipeData();\n            }\n            LocalMessageCache.clear();\n            clearHasCurrentBrazeUser();\n        }\n        catch (error) {\n            window.guardian.modules.sentry.reportError(\n            // @ts-expect-error\n            error, 'braze-maybeWipeUserData');\n        }\n    }\n};\nexport const buildBrazeMessaging = async (idApiUrl, isSignedIn, renderingTarget) => {\n    if (!storage.local.isAvailable()) {\n        // we require local storage for using any message channel so that we know\n        // when to clear up user data from the device on logout\n        return {\n            brazeMessages: new NullBrazeMessages(),\n            brazeCards: new NullBrazeCards(),\n        };\n    }\n    const dependenciesResult = await checkBrazeDependencies(isSignedIn, idApiUrl);\n    if (!dependenciesResult.isSuccessful) {\n        const { failure, data } = dependenciesResult;\n        log('tx', `Not attempting to show Braze messages. Dependency ${failure.field} failed with ${String(failure.data)}.`);\n        await maybeWipeUserData(data.apiKey, data.brazeUuid, data.consent, data.brazeSwitch);\n        return {\n            brazeMessages: new NullBrazeMessages(),\n            brazeCards: new NullBrazeCards(),\n        };\n    }\n    try {\n        const { endPerformanceMeasure } = startPerformanceMeasure('tx', 'braze-sdk-load');\n        const appboy = await getInitialisedAppboy(dependenciesResult.data.apiKey);\n        const sdkLoadTimeTaken = endPerformanceMeasure();\n        const ophan = await getOphan(renderingTarget);\n        ophan.record({\n            // @ts-expect-error -- the relevant team should remove this call as it is dropped by Ophan\n            // see https://github.com/guardian/dotcom-rendering/pull/11438 further context\n            component: 'braze-sdk-load-timing',\n            value: sdkLoadTimeTaken,\n        });\n        const errorHandler = (error, desc) => {\n            window.guardian.modules.sentry.reportError(error, desc);\n        };\n        setHasCurrentBrazeUser();\n        appboy.changeUser(dependenciesResult.data.brazeUuid);\n        appboy.openSession();\n        const brazeCards = window.guardian.config.switches.brazeContentCards\n            ? new BrazeCards(appboy, errorHandler)\n            : new NullBrazeCards();\n        const brazeMessages = new BrazeMessages(appboy, LocalMessageCache, errorHandler, canRenderBrazeMsg);\n        return { brazeMessages, brazeCards };\n    }\n    catch {\n        return {\n            brazeMessages: new NullBrazeMessages(),\n            brazeCards: new NullBrazeCards(),\n        };\n    }\n};\n","import { NullBrazeCards, NullBrazeMessages, } from '@guardian/braze-components/logic';\nimport useSWRImmutable from 'swr/immutable';\nimport { buildBrazeMessaging } from './braze/buildBrazeMessaging';\nimport { useAuthStatus } from './useAuthStatus';\n/**\n * Returns brazeMessaging as BrazeMessagesInterface and BrazeCardsInterface\n *\n * BrazeMessages is used to show single-impression messages (like ad impressions).\n * In contrast, BrazeCards can provide persistent user notifications.\n *\n * We're using useSWRImmutable to ensure this call is only made once\n * [doc]: https://swr.vercel.app/docs/revalidation#disable-automatic-revalidations\n */\nexport const useBraze = (idApiUrl, renderingTarget) => {\n    const authStatus = useAuthStatus();\n    const isSignedIn = authStatus.kind === 'SignedInWithOkta' ||\n        authStatus.kind === 'SignedInWithCookies';\n    const { data, error } = useSWRImmutable(authStatus.kind !== 'Pending' ? 'braze-message' : null, () => buildBrazeMessaging(idApiUrl, isSignedIn, renderingTarget));\n    if (error) {\n        return {\n            brazeMessages: new NullBrazeMessages(),\n            brazeCards: new NullBrazeCards(),\n        };\n    }\n    return {\n        brazeMessages: data?.brazeMessages,\n        brazeCards: data?.brazeCards,\n    };\n};\n","import { isNonNullable } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getLocaleCode } from './getCountryCode';\nexport const useCountryCode = (feature) => {\n    const [countryCode, setCountryCode] = useState();\n    useEffect(() => {\n        getLocaleCode()\n            .then((cc) => {\n            if (isNonNullable(cc))\n                setCountryCode(cc);\n        })\n            .catch((e) => {\n            const msg = `Error fetching country code: ${String(e)}`;\n            window.guardian.modules.sentry.reportError(new Error(msg), feature);\n        });\n    }, [feature]);\n    return countryCode;\n};\n","import libDebounce from 'lodash.debounce';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n/**\n * Custom hook around the `IntersectionObserver`.\n *\n * @returns a tuple containing `[isInView, setNode]`\n */\nconst useIsInView = (options) => {\n    const [isInView, setIsInView] = useState(false);\n    const [node, setNode] = useState(options.node ?? null);\n    const observer = useRef(null);\n    const intersectionObserverCallback = useCallback(([entry]) => {\n        if (!entry)\n            return;\n        if (entry.isIntersecting) {\n            setIsInView(true);\n        }\n        else if (options.repeat) {\n            setIsInView(false);\n        }\n    }, [options.repeat]);\n    const intersectionCallback = options.debounce\n        ? libDebounce(intersectionObserverCallback, 200)\n        : intersectionObserverCallback;\n    useEffect(() => {\n        options.node && setNode(options.node);\n    }, [options.node]);\n    useEffect(() => {\n        if (!node)\n            return;\n        // Check for browser support https://caniuse.com/intersectionobserver\n        if (!('IntersectionObserver' in window))\n            return;\n        observer.current = new window.IntersectionObserver(intersectionCallback, options);\n        observer.current.observe(node);\n        return () => observer.current?.disconnect();\n    }, [node, options, intersectionCallback]);\n    useEffect(() => {\n        if (!options.repeat && isInView)\n            observer.current?.disconnect();\n    }, [isInView, options.repeat]);\n    return [isInView, setNode];\n};\nexport { useIsInView };\n","import { isUndefined } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\n/**\n * Ensures that the given task is only run once and only after all items in waitFor are defined\n * @param {Function} task - The task to execute once\n * @param {Array} waitFor - An array of variables that must be defined before the task is executed\n * */\nexport const useOnce = (task, waitFor) => {\n    const [alreadyRun, setAlreadyRun] = useState(false);\n    const isReady = waitFor.every((dep) => !isUndefined(dep));\n    useEffect(() => {\n        if (!alreadyRun && isReady) {\n            task();\n            setAlreadyRun(true);\n        }\n    }, [alreadyRun, isReady, task]);\n};\n"],"names":["shouldIncrementArticleCount","contentType","includes","toLowerCase","getDailyArticleCounts","window","guardian","dailyArticleCount","incrementDailyArticleCount","getDailyArticleCount","getWeeklyArticleCounts","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","pageId","tags","keywordAndToneTagIds","_context","prev","next","hasOptedOutOfWeeklyArticleCount","sent","abrupt","undefined","weeklyArticleCount","filter","tag","type","map","id","incrementWeeklyArticleCount","storage","local","getWeeklyArticleHistory","stop","_x","_x2","_x3","apply","arguments","getArticleCounts","_ref2","_callee2","_window$guardian$dail","_window$guardian$week","_context2","dailyArticleHistory","weeklyArticleHistory","_x4","_x5","_x6","useArticleCounts","_useState","useState","_useState2","_slicedToArray","articleCounts","setArticleCounts","useEffect","then","catch","FORCE_BRAZE_ALLOWLIST","getBrazeMetaFromUrlFragment","location","hash","key","hashString","hostname","console","log","concat","forcedMessage","slice","indexOf","length","dataFromBraze","JSON","parse","decodeURIComponent","logImpressionWithBraze","logButtonClickWithBraze","e","error","message","suppressForTaylorReport","config","switches","brazeTaylorReport","find","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_KEY","shouldHideSupportMessaging","isSignedIn","diffMs","lastContributionDate","hasCookie","getCookie","name","hasSupporterCookie","contributionDateFromSupport","parseInt","getLastOneOffContributionTimestamp","isUndefined","Date","now","Math","floor","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasArticleCountOptOutCookie","hasCmpConsentForWeeklyArticleCount","Promise","resolve","shouldMemoize","onConsentChange","usnat","tcfv2","aus","hasRequiredConsents","every","consent","consents","remove","hasOptedOutOfArticleCount","hasCmpConsent","_ref3","useHasOptedOutOfArticleCount","hasOptedOut","setHasOptedOut","hasCmpConsentForBrowserId","_ref4","withinLocalNoBannerCachePeriod","get","setLocalNoBannerCachePeriod","set","recentlyClosedBanner","lastClosedAt","getTime","getPurchaseInfo","purchaseInfoRaw","purchaseInfo","_unused","DailyArticleCountKey","dailyCount","history","Array","isArray","daily","isObject","day","count","Error","getToday","_getDailyArticleCount","_dailyArticleCount$","today","unshift","cutOff","firstOldDayIndex","findIndex","splice","getEmail","ajaxUrl","eitherInOktaTestOrElse","authState","_authState$idToken","idToken","claims","email","getIdApiUserData","data","_data$user","user","primaryEmailAddress","modules","sentry","reportError","lazyFetchEmailWithTimeout","idapiUrl","setTimeout","checkForErrors","response","ok","statusText","status","callApi","url","fetch","credentials","json","cache","idapiUserMeResponse","joinUrl","getIdapiUserIdentifiers","idapiUserIdentifiersResponse","indices","getZIndex","index","recordMessageTimeoutInOphan","candidateId","slotName","renderingTarget","getOphan","record","component","value","defaultShow","pickMessage","candidates","candidateConfigsWithTimeout","c","candidateConfig","timer","_objectSpread","candidate","canShow","perfName","endPerformanceMeasure","startPerformanceMeasure","timeoutMillis","show","result","canShowTimeTaken","reportTiming","ophan","String","cancelTimeout","clearTimeout","timeoutify","winnerResult","reduce","winningMessageSoFar","meta","winner","m","hasAutomatBeenSet","setAutomat","automat","emotionReact","emotionReactJsxRuntime","react","React","apiPromise","useAB","useSWRImmutable","setABTests","api","participations","mutate","useIsSignedIn","useAuthStatus","kind","authStatus","setAuthStatus","oktaAuthState","getSignedInStatusWithOkta","getSignedInStatusWithCookies","KEY","getBrazeUuid","braze_uuid","brazeUuid","buildFailureResponse","isSuccessful","failure","field","buildDependencies","idApiUrl","page","brazeApiKey","brazeSwitch","reject","state","getConsentFor","isPaidContent","checkBrazeDependencies","dependencies","_iterator","_step","_step$value","_createForOfIteratorHelper","s","n","done","t0","t1","f","finish","SDK_OPTIONS","enableLogging","noCookies","baseUrl","sessionTimeoutInSeconds","minimumIntervalBetweenTriggerActionsInSeconds","devicePropertyAllowlist","initialiseAppboy","apiKey","importedAppboy","setLogger","initialize","getInitialisedAppboy","maybeWipeUserData","hasCurrentBrazeUserValue","userHasRemovedConsent","brazeHasBeenDisabled","getRaw","wipeData","LocalMessageCache","clear","buildBrazeMessaging","dependenciesResult","_startPerformanceMeas","appboy","sdkLoadTimeTaken","errorHandler","brazeCards","brazeMessages","isAvailable","NullBrazeMessages","NullBrazeCards","desc","setRaw","changeUser","openSession","brazeContentCards","BrazeCards","BrazeMessages","canRenderBrazeMsg","_x7","useBraze","_useSWRImmutable","useCountryCode","feature","countryCode","setCountryCode","getLocaleCode","cc","isNonNullable","msg","useIsInView","options","_options$node","isInView","setIsInView","_useState3","node","_useState4","setNode","observer","useRef","intersectionObserverCallback","useCallback","entry","isIntersecting","repeat","intersectionCallback","debounce","libDebounce","current","IntersectionObserver","observe","_observer$current","disconnect","_observer$current2","useOnce","task","waitFor","alreadyRun","setAlreadyRun","isReady","dep"],"sourceRoot":""}