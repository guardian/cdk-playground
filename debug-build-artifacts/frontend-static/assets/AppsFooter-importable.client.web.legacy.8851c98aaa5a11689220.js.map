{"version":3,"file":"AppsFooter-importable.client.web.legacy.8851c98aaa5a11689220.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/AppsFooter.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/thrift/protocols.ts","webpack://@guardian/dotcom-rendering/./src/lib/thrift/nativeConnection.ts","webpack://@guardian/dotcom-rendering/./src/lib/bridgetApi.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { remSpace, textSans15 } from '@guardian/source/foundations';\nimport { ButtonLink } from '@guardian/source/react-components';\nimport { useEffect, useState } from 'react';\nimport { getNavigationClient, getUserClient } from '../lib/bridgetApi';\nimport { palette } from '../palette';\nconst year = new Date().getFullYear();\nconst footerStyles = css `\n\t${textSans15}\n\tpadding: ${remSpace[4]} ${remSpace[3]};\n\tbackground-color: ${palette('--apps-footer-background')};\n`;\nconst linkStyles = css `\n\t${textSans15};\n\tcolor: ${palette('--apps-footer-links-text')};\n\n\t:active,\n\t:hover {\n\t\tcolor: ${palette('--apps-footer-links-text-hover')};\n\t}\n`;\nconst PrivacySettings = ({ isCcpa, privacySettingsClickHandler, }) => {\n    if (isCcpa) {\n        return (_jsxs(_Fragment, { children: [_jsx(ButtonLink, { priority: \"secondary\", onClick: privacySettingsClickHandler, cssOverrides: linkStyles, children: \"California Residents - Do Not Sell\" }), \"\\u00A0\\u00B7\\u00A0\"] }));\n    }\n    else {\n        return (_jsxs(_Fragment, { children: [_jsx(ButtonLink, { priority: \"secondary\", onClick: privacySettingsClickHandler, cssOverrides: linkStyles, children: \"Privacy Settings\" }), \"\\u00A0\\u00B7\\u00A0\"] }));\n    }\n};\nexport const AppsFooter = () => {\n    const [isCcpa, setIsCcpa] = useState(false);\n    useEffect(() => {\n        void getUserClient()\n            .doesCcpaApply()\n            .then(setIsCcpa)\n            .catch(() => undefined);\n    }, []);\n    const privacyPolicyClickHandler = (e) => {\n        e.preventDefault();\n        void getNavigationClient()\n            .openPrivacyPolicy()\n            .catch(() => undefined);\n    };\n    const privacySettingsClickHandler = (e) => {\n        e.preventDefault();\n        void getNavigationClient()\n            .openPrivacySettings()\n            .catch(() => undefined);\n    };\n    return (_jsxs(\"div\", { css: footerStyles, children: [\"\\u00A9 \", year, \" Guardian News and Media Limited or its affiliated companies. All rights reserved. (dcar)\", _jsx(\"br\", {}), _jsx(PrivacySettings, { isCcpa: isCcpa, privacySettingsClickHandler: privacySettingsClickHandler }), _jsx(ButtonLink, { priority: \"secondary\", onClick: privacyPolicyClickHandler, cssOverrides: linkStyles, children: \"Privacy Policy\" })] }));\n};\n","import { MessageType, TProtocol } from '@creditkarma/thrift-server-core';\nexport class TProtocolDecorator extends TProtocol {\n    concreteProtocol;\n    constructor(protocol) {\n        super(protocol.getTransport());\n        this.concreteProtocol = protocol;\n    }\n    getTransport() {\n        return this.concreteProtocol.getTransport();\n    }\n    flush() {\n        return this.concreteProtocol.flush();\n    }\n    writeMessageBegin(name, type, seqid) {\n        return this.concreteProtocol.writeMessageBegin(name, type, seqid);\n    }\n    writeMessageEnd() {\n        return this.concreteProtocol.writeMessageEnd();\n    }\n    writeStructBegin(name) {\n        return this.concreteProtocol.writeStructBegin(name);\n    }\n    writeStructEnd() {\n        return this.concreteProtocol.writeStructEnd();\n    }\n    writeFieldBegin(name, type, id) {\n        return this.concreteProtocol.writeFieldBegin(name, type, id);\n    }\n    writeFieldEnd() {\n        return this.concreteProtocol.writeFieldEnd();\n    }\n    writeFieldStop() {\n        return this.concreteProtocol.writeFieldStop();\n    }\n    writeMapBegin(keyType, valueType, size) {\n        return this.concreteProtocol.writeMapBegin(keyType, valueType, size);\n    }\n    writeMapEnd() {\n        return this.concreteProtocol.writeMapEnd();\n    }\n    writeListBegin(elementType, size) {\n        return this.concreteProtocol.writeListBegin(elementType, size);\n    }\n    writeListEnd() {\n        return this.concreteProtocol.writeListEnd();\n    }\n    writeSetBegin(elementType, size) {\n        return this.concreteProtocol.writeSetBegin(elementType, size);\n    }\n    writeSetEnd() {\n        return this.concreteProtocol.writeSetEnd();\n    }\n    writeBool(bool) {\n        return this.concreteProtocol.writeBool(bool);\n    }\n    writeByte(b) {\n        return this.concreteProtocol.writeByte(b);\n    }\n    writeI16(i16) {\n        return this.concreteProtocol.writeI16(i16);\n    }\n    writeI32(i32) {\n        return this.concreteProtocol.writeI32(i32);\n    }\n    writeI64(i64) {\n        return this.concreteProtocol.writeI64(i64);\n    }\n    writeDouble(dbl) {\n        return this.concreteProtocol.writeDouble(dbl);\n    }\n    writeString(arg) {\n        return this.concreteProtocol.writeString(arg);\n    }\n    writeBinary(arg) {\n        return this.concreteProtocol.writeBinary(arg);\n    }\n    readMessageBegin() {\n        return this.concreteProtocol.readMessageBegin();\n    }\n    readMessageEnd() {\n        return this.concreteProtocol.readMessageEnd();\n    }\n    readStructBegin() {\n        return this.concreteProtocol.readStructBegin();\n    }\n    readStructEnd() {\n        return this.concreteProtocol.readStructEnd();\n    }\n    readFieldBegin() {\n        return this.concreteProtocol.readFieldBegin();\n    }\n    readFieldEnd() {\n        return this.concreteProtocol.readFieldEnd();\n    }\n    readMapBegin() {\n        return this.concreteProtocol.readMapBegin();\n    }\n    readMapEnd() {\n        return this.concreteProtocol.readMapEnd();\n    }\n    readListBegin() {\n        return this.concreteProtocol.readListBegin();\n    }\n    readListEnd() {\n        return this.concreteProtocol.readListEnd();\n    }\n    readSetBegin() {\n        return this.concreteProtocol.readSetBegin();\n    }\n    readSetEnd() {\n        return this.concreteProtocol.readSetEnd();\n    }\n    readBool() {\n        return this.concreteProtocol.readBool();\n    }\n    readByte() {\n        return this.concreteProtocol.readByte();\n    }\n    readI16() {\n        return this.concreteProtocol.readI16();\n    }\n    readI32() {\n        return this.concreteProtocol.readI32();\n    }\n    readI64() {\n        return this.concreteProtocol.readI64();\n    }\n    readDouble() {\n        return this.concreteProtocol.readDouble();\n    }\n    readBinary() {\n        return this.concreteProtocol.readBinary();\n    }\n    readString() {\n        return this.concreteProtocol.readString();\n    }\n    skip(type) {\n        return this.concreteProtocol.skip(type);\n    }\n}\nexport class TMultiplexedProtocol extends TProtocolDecorator {\n    static separator = ':';\n    serviceName;\n    constructor(protocol, serviceName) {\n        super(protocol);\n        this.serviceName = serviceName;\n    }\n    writeMessageBegin(name, type, seqid) {\n        if (type === MessageType.CALL || type === MessageType.ONEWAY) {\n            super.writeMessageBegin(this.serviceName + TMultiplexedProtocol.separator + name, type, seqid);\n        }\n        else {\n            super.writeMessageBegin(name, type, seqid);\n        }\n    }\n}\n","import { getProtocol, getTransport, TApplicationException, TApplicationExceptionType, ThriftConnection, } from '@creditkarma/thrift-server-core';\nimport { TMultiplexedProtocol } from './protocols';\nconst ACTION_TIMEOUT_MS = 30000;\nfunction sendNativeMessage(nativeMessage) {\n    if (window.android) {\n        window.android.postMessage(nativeMessage.data, nativeMessage.connectionId);\n    }\n    else if (window.webkit) {\n        window.webkit.messageHandlers.iOSWebViewMessage.postMessage(nativeMessage);\n    }\n    else {\n        console.warn('No native APIs available');\n    }\n}\nlet uid = 1;\nconst getUniqueConnectionId = () => `connection-${uid++}`;\nexport class NativeConnection extends ThriftConnection {\n    connectionId = getUniqueConnectionId();\n    promises = [];\n    outBuffer = [];\n    constructor(Transport, Protocol) {\n        super(Transport, Protocol);\n        if (typeof window !== 'undefined') {\n            window.nativeConnections = window.nativeConnections ?? {};\n            window.nativeConnections[this.connectionId] = this;\n        }\n    }\n    reset(oldConnectionId) {\n        if (oldConnectionId === this.connectionId && window.nativeConnections) {\n            console.warn('Reseting connection ' + oldConnectionId);\n            delete window.nativeConnections[this.connectionId];\n            for (const promise of this.promises) {\n                promise.reject(new TApplicationException(TApplicationExceptionType.UNKNOWN, 'Timeout error'));\n            }\n            this.promises = [];\n            this.connectionId = getUniqueConnectionId();\n            window.nativeConnections[this.connectionId] = this;\n        }\n    }\n    receive(message) {\n        const resolver = this.promises.shift();\n        if (resolver) {\n            clearTimeout(resolver.timeoutId);\n            const data = Buffer.from(message.data, 'base64');\n            resolver.resolve(data);\n        }\n        this.sendNextMessage();\n    }\n    sendNextMessage() {\n        const message = this.outBuffer.shift();\n        if (message) {\n            console.log('Sending next message');\n            sendNativeMessage(message);\n        }\n    }\n    send(dataToSend) {\n        const id = this.connectionId;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias -- Reassign this\n        const connection = this;\n        return new Promise(function (res, rej) {\n            connection.promises.push({\n                resolve: res,\n                reject: rej,\n                timeoutId: setTimeout(function () {\n                    connection.reset(id);\n                }, ACTION_TIMEOUT_MS),\n            });\n            const message = {\n                data: dataToSend.toString('base64'),\n                connectionId: id,\n            };\n            if (connection.promises.length === 1) {\n                console.log('Sending message immediately');\n                sendNativeMessage(message);\n            }\n            else {\n                console.log('Queing message because others in flight');\n                connection.outBuffer.push(message);\n            }\n        });\n    }\n}\nexport function createAppClient(ServiceClient, transport = 'buffered', protocol = 'compact') {\n    class NamedMultiplexedProtocol extends TMultiplexedProtocol {\n        constructor(tTransport) {\n            const Protocol = getProtocol(protocol);\n            super(new Protocol(tTransport), ServiceClient.serviceName ?? '');\n        }\n    }\n    const connection = new NativeConnection(getTransport(transport), NamedMultiplexedProtocol);\n    return new ServiceClient(connection);\n}\n","import * as Acquisitions from '@guardian/bridget/Acquisitions';\nimport * as Analytics from '@guardian/bridget/Analytics';\nimport * as Commercial from '@guardian/bridget/Commercial';\nimport * as Discussion from '@guardian/bridget/Discussion';\nimport * as Environment from '@guardian/bridget/Environment';\nimport * as Gallery from '@guardian/bridget/Gallery';\nimport * as Interaction from '@guardian/bridget/Interaction';\nimport * as Metrics from '@guardian/bridget/Metrics';\nimport * as Navigation from '@guardian/bridget/Navigation';\nimport * as Newsletters from '@guardian/bridget/Newsletters';\nimport * as Notifications from '@guardian/bridget/Notifications';\nimport * as Tag from '@guardian/bridget/Tag';\nimport * as User from '@guardian/bridget/User';\nimport * as Video from '@guardian/bridget/Videos';\nimport { isUndefined } from '@guardian/libs';\nimport { createAppClient } from './thrift/nativeConnection';\nlet environmentClient = undefined;\nexport const getEnvironmentClient = () => {\n    if (isUndefined(environmentClient)) {\n        environmentClient = createAppClient(Environment.Client, 'buffered', 'compact');\n    }\n    return environmentClient;\n};\nlet commercialClient = undefined;\nexport const getCommercialClient = () => {\n    if (isUndefined(commercialClient)) {\n        commercialClient = createAppClient(Commercial.Client, 'buffered', 'compact');\n    }\n    return commercialClient;\n};\nlet acquisitionsClient = undefined;\nexport const getAcquisitionsClient = () => {\n    if (!acquisitionsClient) {\n        acquisitionsClient = createAppClient(Acquisitions.Client, 'buffered', 'compact');\n    }\n    return acquisitionsClient;\n};\nlet notificationsClient = undefined;\nexport const getNotificationsClient = () => {\n    if (!notificationsClient) {\n        notificationsClient = createAppClient(Notifications.Client, 'buffered', 'compact');\n    }\n    return notificationsClient;\n};\nlet tagClient = undefined;\nexport const getTagClient = () => {\n    if (!tagClient) {\n        tagClient = createAppClient(Tag.Client, 'buffered', 'compact');\n    }\n    return tagClient;\n};\nlet userClient = undefined;\nexport const getUserClient = () => {\n    if (!userClient) {\n        userClient = createAppClient(User.Client, 'buffered', 'compact');\n    }\n    return userClient;\n};\nlet galleryClient = undefined;\nexport const getGalleryClient = () => {\n    if (!galleryClient) {\n        galleryClient = createAppClient(Gallery.Client, 'buffered', 'compact');\n    }\n    return galleryClient;\n};\nlet videoClient = undefined;\nexport const getVideoClient = () => {\n    if (!videoClient) {\n        videoClient = createAppClient(Video.Client, 'buffered', 'compact');\n    }\n    return videoClient;\n};\nlet metricsClient = undefined;\nexport const getMetricsClient = () => {\n    if (!metricsClient) {\n        metricsClient = createAppClient(Metrics.Client, 'buffered', 'compact');\n    }\n    return metricsClient;\n};\nlet analyticsClient = undefined;\nexport const getAnalyticsClient = () => {\n    if (!analyticsClient) {\n        analyticsClient = createAppClient(Analytics.Client, 'buffered', 'compact');\n    }\n    return analyticsClient;\n};\nlet navigationClient = undefined;\nexport const getNavigationClient = () => {\n    if (!navigationClient) {\n        navigationClient = createAppClient(Navigation.Client, 'buffered', 'compact');\n    }\n    return navigationClient;\n};\nlet newslettersClient = undefined;\nexport const getNewslettersClient = () => {\n    if (!newslettersClient) {\n        newslettersClient = createAppClient(Newsletters.Client, 'buffered', 'compact');\n    }\n    return newslettersClient;\n};\nlet discussionClient = undefined;\nexport const getDiscussionClient = () => {\n    if (!discussionClient) {\n        discussionClient = createAppClient(Discussion.Client, 'buffered', 'compact');\n    }\n    return discussionClient;\n};\nlet interactionClient = undefined;\nexport const getInteractionClient = () => {\n    if (!interactionClient) {\n        interactionClient = createAppClient(Interaction.Client, 'buffered', 'compact');\n    }\n    return interactionClient;\n};\n","/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour) => `var(${colour})`;\n// ----- Exports ----- //\nexport { palette };\n"],"names":["year","Date","getFullYear","footerStyles","css","textSans15","remSpace","palette","linkStyles","PrivacySettings","_ref","isCcpa","privacySettingsClickHandler","_jsxs","_Fragment","children","_jsx","ButtonLink","priority","onClick","cssOverrides","AppsFooter","_useState","useState","_useState2","_slicedToArray","setIsCcpa","useEffect","getUserClient","doesCcpaApply","then","catch","e","preventDefault","getNavigationClient","openPrivacySettings","openPrivacyPolicy","TMultiplexedProtocol","_TProtocolDecorator2","protocol","serviceName","_this2","_classCallCheck","_callSuper","_defineProperty","_inherits","_createClass","key","value","name","type","seqid","MessageType","CALL","ONEWAY","_superPropGet","this","separator","_TProtocol","TProtocolDecorator","_this","getTransport","concreteProtocol","flush","writeMessageBegin","writeMessageEnd","writeStructBegin","writeStructEnd","id","writeFieldBegin","writeFieldEnd","writeFieldStop","keyType","valueType","size","writeMapBegin","writeMapEnd","elementType","writeListBegin","writeListEnd","writeSetBegin","writeSetEnd","bool","writeBool","b","writeByte","i16","writeI16","i32","writeI32","i64","writeI64","dbl","writeDouble","arg","writeString","writeBinary","readMessageBegin","readMessageEnd","readStructBegin","readStructEnd","readFieldBegin","readFieldEnd","readMapBegin","readMapEnd","readListBegin","readListEnd","readSetBegin","readSetEnd","readBool","readByte","readI16","readI32","readI64","readDouble","readBinary","readString","skip","TProtocol","sendNativeMessage","nativeMessage","window","android","postMessage","data","connectionId","webkit","messageHandlers","iOSWebViewMessage","console","warn","uid","getUniqueConnectionId","concat","NativeConnection","_ThriftConnection","Transport","Protocol","_window$nativeConnect","nativeConnections","oldConnectionId","_step","_iterator","_createForOfIteratorHelper","promises","s","n","done","reject","TApplicationException","TApplicationExceptionType","UNKNOWN","err","f","message","resolver","shift","clearTimeout","timeoutId","Buffer","from","resolve","sendNextMessage","outBuffer","log","dataToSend","connection","Promise","res","rej","push","setTimeout","reset","toString","length","ThriftConnection","createAppClient","ServiceClient","transport","arguments","undefined","NamedMultiplexedProtocol","_TMultiplexedProtocol","tTransport","_ServiceClient$servic","getProtocol","environmentClient","getEnvironmentClient","isUndefined","Environment","Client","commercialClient","getCommercialClient","Commercial","acquisitionsClient","getAcquisitionsClient","Acquisitions","notificationsClient","getNotificationsClient","Notifications","tagClient","getTagClient","Tag","userClient","User","galleryClient","getGalleryClient","Gallery","videoClient","getVideoClient","Video","analyticsClient","getAnalyticsClient","Analytics","navigationClient","Navigation","discussionClient","getDiscussionClient","Discussion","interactionClient","getInteractionClient","Interaction","colour"],"sourceRoot":""}