{"version":3,"file":"3473.client.web.96269f348982eb6bcd36.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/CarouselNavigationButtons.tsx","webpack://@guardian/dotcom-rendering/./src/components/ScrollableCarousel.tsx","webpack://@guardian/dotcom-rendering/./src/lib/ophan-helpers.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/datetime/timeAgo.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgStar.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/__generated__/icons/SvgStarOutline.js"],"sourcesContent":["import { css } from '@emotion/react';\nimport { from, space } from '@guardian/source/foundations';\nimport type { ThemeButton } from '@guardian/source/react-components';\nimport {\n\tButton,\n\tSvgChevronLeftSingle,\n\tSvgChevronRightSingle,\n} from '@guardian/source/react-components';\nimport { palette } from '../palette';\n\ntype Props = {\n\tpreviousButtonEnabled: boolean;\n\tnextButtonEnabled: boolean;\n\tonClickPreviousButton: () => void;\n\tonClickNextButton: () => void;\n\tdataLinkNameNextButton: string;\n\tdataLinkNamePreviousButton: string;\n};\n\nconst themeButton: Partial<ThemeButton> = {\n\tborderTertiary: palette('--carousel-chevron-border'),\n\ttextTertiary: palette('--carousel-chevron'),\n\tbackgroundTertiaryHover: palette('--carousel-chevron-hover'),\n};\n\nconst themeButtonDisabled: Partial<ThemeButton> = {\n\tborderTertiary: palette('--carousel-chevron-border-disabled'),\n\ttextTertiary: palette('--carousel-chevron-disabled'),\n\tbackgroundTertiaryHover: 'transparent',\n};\n\nconst buttonStyles = css`\n\tdisplay: none;\n\t${from.tablet} {\n\t\tdisplay: flex;\n\t\tgap: ${space[1]}px;\n\t\tmargin-left: auto;\n\t}\n`;\n\n/**\n * Navigation buttons for use in a carousel-like component\n */\nexport const CarouselNavigationButtons = ({\n\tpreviousButtonEnabled,\n\tnextButtonEnabled,\n\tonClickPreviousButton,\n\tonClickNextButton,\n\tdataLinkNameNextButton,\n\tdataLinkNamePreviousButton,\n}: Props) => {\n\treturn (\n\t\t<div\n\t\t\taria-controls=\"carousel\"\n\t\t\taria-label=\"carousel arrows\"\n\t\t\tcss={buttonStyles}\n\t\t>\n\t\t\t<Button\n\t\t\t\thideLabel={true}\n\t\t\t\ticonSide=\"left\"\n\t\t\t\ticon={<SvgChevronLeftSingle />}\n\t\t\t\tonClick={onClickPreviousButton}\n\t\t\t\tpriority=\"tertiary\"\n\t\t\t\ttheme={\n\t\t\t\t\tpreviousButtonEnabled ? themeButton : themeButtonDisabled\n\t\t\t\t}\n\t\t\t\tsize=\"small\"\n\t\t\t\tdisabled={!previousButtonEnabled}\n\t\t\t\taria-label=\"previous\"\n\t\t\t\tvalue=\"previous\"\n\t\t\t\tdata-link-name={dataLinkNamePreviousButton}\n\t\t\t/>\n\n\t\t\t<Button\n\t\t\t\thideLabel={true}\n\t\t\t\ticonSide=\"left\"\n\t\t\t\ticon={<SvgChevronRightSingle />}\n\t\t\t\tonClick={onClickNextButton}\n\t\t\t\tpriority=\"tertiary\"\n\t\t\t\ttheme={nextButtonEnabled ? themeButton : themeButtonDisabled}\n\t\t\t\tsize=\"small\"\n\t\t\t\tdisabled={!nextButtonEnabled}\n\t\t\t\taria-label=\"next\"\n\t\t\t\tvalue=\"next\"\n\t\t\t\tdata-link-name={dataLinkNameNextButton}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import { css } from '@emotion/react';\nimport {\n\tbetween,\n\tfrom,\n\theadlineBold28Object,\n\tspace,\n\ttextSansBold17Object,\n} from '@guardian/source/foundations';\nimport { useEffect, useRef, useState } from 'react';\nimport { nestedOphanComponents } from '../lib/ophan-helpers';\nimport { palette } from '../palette';\nimport { CarouselNavigationButtons } from './CarouselNavigationButtons';\n\ntype Props = {\n\tchildren: React.ReactNode;\n\tcarouselLength: number;\n\tvisibleCardsOnMobile: number;\n\tvisibleCardsOnTablet: number;\n};\n\n/**\n * Primary and Secondary containers have different typographic styles for the\n * titles. We get the font size and line height values for these from the\n * typography presets so we can calculate the offset needed to align the\n * navigation buttons with the title on tablet and desktop.\n */\nconst primaryTitlePreset = headlineBold28Object;\nconst secondaryTitlePreset = textSansBold17Object;\n\n/**\n * Grid sizing values to calculate negative margin used to pull navigation\n * buttons outside of container into the outer grid column at wide breakpoint.\n */\nconst gridColumnWidth = 60;\nconst gridGap = 20;\nconst gridGapMobile = 10;\n\n/**\n * On mobile the carousel extends into the outer margins to use the full width\n * of the screen. From tablet onwards the carousel sits within the page grid.\n *\n * The FrontSection container adds a -10px negative margin to either side of\n * the content from tablet so we add the margins back to align the carousel with\n * the grid. From leftCol we retain FrontSection's -10px negative margin on the\n * left side so that the carousel extends into the the middle of the gutter\n * between the grid columns to meet the dividing line.\n */\nconst containerStyles = css`\n\tposition: relative;\n\tmargin-left: -${gridGapMobile}px;\n\tmargin-right: -${gridGapMobile}px;\n\t${from.mobileLandscape} {\n\t\tmargin-left: -${gridGap}px;\n\t\tmargin-right: -${gridGap}px;\n\t}\n\t${from.tablet} {\n\t\tmargin-left: ${gridGap / 2}px;\n\t\tmargin-right: ${gridGap / 2}px;\n\t}\n\t${from.leftCol} {\n\t\tmargin-left: 0;\n\t}\n`;\n\nconst containerWithNavigationStyles = css`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n\t${from.tablet} {\n\t\tgap: ${space[2]}px;\n\t}\n\n\t${from.wide} {\n\t\tflex-direction: row;\n\t\tgap: ${space[1]}px;\n\t}\n\n\t/**\n\t * From tablet, pull container up so navigation buttons align with title.\n\t * The margin is calculated from the front section title font size and line\n\t * height, and the default container spacing.\n\t *\n\t * From wide, the navigation buttons are pulled out of the main content area\n\t * into the right-hand column.\n\t *\n\t * Between leftCol and wide the top of the fixed dividing line is pushed\n\t * down so it starts below the navigation buttons and gap, and aligns with\n\t * the top of the carousel.\n\t */\n\t${between.tablet.and.leftCol} {\n\t\t[data-container-level='Primary'] & {\n\t\t\tmargin-top: calc(\n\t\t\t\t-${primaryTitlePreset.fontSize} * ${primaryTitlePreset.lineHeight} -\n\t\t\t\t\t${space[3]}px\n\t\t\t);\n\t\t}\n\t\t[data-container-level='Secondary'] & {\n\t\t\tmargin-top: calc(\n\t\t\t\t-${secondaryTitlePreset.fontSize} * ${secondaryTitlePreset.lineHeight} -\n\t\t\t\t\t${space[3]}px\n\t\t\t);\n\t\t}\n\t}\n\t${from.wide} {\n\t\tmargin-right: -${gridColumnWidth + gridGap / 2}px;\n\t}\n`;\n\nconst carouselStyles = css`\n\tdisplay: grid;\n\twidth: 100%;\n\tgrid-auto-columns: 1fr;\n\tgrid-auto-flow: column;\n\tgap: 20px;\n\toverflow-x: auto;\n\toverflow-y: hidden;\n\tscroll-snap-type: x mandatory;\n\tscroll-behavior: smooth;\n\toverscroll-behavior: contain auto;\n\t/**\n\t * Hide scrollbars\n\t * See: https://stackoverflow.com/a/38994837\n\t */\n\t::-webkit-scrollbar {\n\t\tdisplay: none; /* Safari and Chrome */\n\t}\n\tscrollbar-width: none; /* Firefox */\n\n\tpadding-left: ${gridGapMobile}px;\n\tpadding-right: ${gridGapMobile}px;\n\tscroll-padding-left: ${gridGapMobile}px;\n\t${from.mobileLandscape} {\n\t\tpadding-left: ${gridGap}px;\n\t\tpadding-right: ${gridGap}px;\n\t\tscroll-padding-left: ${gridGap}px;\n\t}\n\t${from.tablet} {\n\t\tpadding-left: 0;\n\t\tpadding-right: 0;\n\t\tscroll-padding-left: 0;\n\t}\n\t${from.leftCol} {\n\t\tpadding-left: ${gridGap / 2}px;\n\t\tscroll-padding-left: ${gridGap / 2}px;\n\t}\n`;\n\nconst itemStyles = css`\n\tdisplay: flex;\n\tscroll-snap-align: start;\n\tgrid-area: span 1;\n\tposition: relative;\n\t:not(:first-child)::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tleft: -10px;\n\t\twidth: 1px;\n\t\tbackground-color: ${palette('--card-border-top')};\n\t\ttransform: translateX(-50%);\n\t}\n`;\n\n/**\n * Generates CSS styles for a grid layout used in a carousel.\n *\n * @param {number} totalCards - The total number of cards in the carousel.\n * @param {number} visibleCardsOnMobile - Number of cards to show at once on mobile.\n * @param {number} visibleCardsOnTablet - Number of cards to show at once on tablet.\n * @returns {string} - The CSS styles for the grid layout.\n */\nconst generateCarouselColumnStyles = (\n\ttotalCards: number,\n\tvisibleCardsOnMobile: number,\n\tvisibleCardsOnTablet: number,\n) => {\n\tconst peepingCardWidth = space[8];\n\tconst cardGap = 20;\n\tconst offsetPeepingCardWidth =\n\t\tpeepingCardWidth / visibleCardsOnMobile + cardGap;\n\tconst offsetCardGap =\n\t\t(cardGap * (visibleCardsOnTablet - 1)) / visibleCardsOnTablet;\n\n\treturn css`\n\t\t/**\n\t\t * On mobile a 32px slice of the next card is shown to indicate there\n\t\t * are more cards that can be scrolled to. Extra padding is also added\n\t\t * to the left and right to align cards with the page grid as the\n\t\t * carousel extends into the outer margins on mobile.\n\t\t *\n\t\t * These values are divided by the number of visible cards and\n\t\t * subtracted from their width so they are shown at the correct size.\n\t\t */\n\t\tgrid-template-columns: repeat(\n\t\t\t${totalCards},\n\t\t\tcalc(\n\t\t\t\t(100% / ${visibleCardsOnMobile}) - ${offsetPeepingCardWidth}px +\n\t\t\t\t\t${gridGapMobile / visibleCardsOnMobile}px\n\t\t\t)\n\t\t);\n\t\t${from.mobileLandscape} {\n\t\t\tgrid-template-columns: repeat(\n\t\t\t\t${totalCards},\n\t\t\t\tcalc(\n\t\t\t\t\t(100% / ${visibleCardsOnMobile}) -\n\t\t\t\t\t\t${offsetPeepingCardWidth}px +\n\t\t\t\t\t\t${gridGap / visibleCardsOnMobile}px\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\t${from.tablet} {\n\t\t\tgrid-template-columns: repeat(\n\t\t\t\t${totalCards},\n\t\t\t\tcalc(${100 / visibleCardsOnTablet}% - ${offsetCardGap}px)\n\t\t\t);\n\t\t}\n\t`;\n};\n\n/**\n * A component used in the carousel fronts containers (e.g. small/medium/feature)\n */\nexport const ScrollableCarousel = ({\n\tchildren,\n\tcarouselLength,\n\tvisibleCardsOnMobile,\n\tvisibleCardsOnTablet,\n}: Props) => {\n\tconst carouselRef = useRef<HTMLOListElement | null>(null);\n\tconst [previousButtonEnabled, setPreviousButtonEnabled] = useState(false);\n\tconst [nextButtonEnabled, setNextButtonEnabled] = useState(true);\n\n\tconst showNavigation = carouselLength > visibleCardsOnTablet;\n\n\tconst scrollTo = (direction: 'left' | 'right') => {\n\t\tif (!carouselRef.current) return;\n\n\t\tconst cardWidth =\n\t\t\tcarouselRef.current.querySelector('li')?.offsetWidth ?? 0;\n\t\tconst offset = direction === 'left' ? -cardWidth : cardWidth;\n\t\tcarouselRef.current.scrollBy({\n\t\t\tleft: offset,\n\t\t\tbehavior: 'smooth',\n\t\t});\n\t};\n\n\t/**\n\t * Updates state of navigation buttons based on carousel's scroll position.\n\t *\n\t * This function checks the current scroll position of the carousel and sets\n\t * the styles of the previous and next buttons accordingly. The button state\n\t * is toggled when the midpoint of the first or last card has been scrolled\n\t * in or out of view.\n\t */\n\tconst updateButtonVisibilityOnScroll = () => {\n\t\tconst carouselElement = carouselRef.current;\n\t\tif (!carouselElement) return;\n\n\t\tconst scrollLeft = carouselElement.scrollLeft;\n\t\tconst maxScrollLeft =\n\t\t\tcarouselElement.scrollWidth - carouselElement.clientWidth;\n\t\tconst cardWidth = carouselElement.querySelector('li')?.offsetWidth ?? 0;\n\n\t\tsetPreviousButtonEnabled(scrollLeft > cardWidth / 2);\n\t\tsetNextButtonEnabled(scrollLeft < maxScrollLeft - cardWidth / 2);\n\t};\n\n\t/**\n\t * Throttle scroll events to optimise performance. As we're only using this\n\t * to toggle button state as the carousel is scrolled we don't need to\n\t * handle every event. This function ensures the callback is only called\n\t * once every 200ms, no matter how many scroll events are fired.\n\t */\n\tconst throttleEvent = (callback: () => void) => {\n\t\tlet isThrottled: boolean = false;\n\t\treturn function () {\n\t\t\tif (!isThrottled) {\n\t\t\t\tcallback();\n\t\t\t\tisThrottled = true;\n\t\t\t\tsetTimeout(() => (isThrottled = false), 200);\n\t\t\t}\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\t\tconst carouselElement = carouselRef.current;\n\t\tif (!carouselElement) return;\n\n\t\tcarouselElement.addEventListener(\n\t\t\t'scroll',\n\t\t\tthrottleEvent(updateButtonVisibilityOnScroll),\n\t\t);\n\n\t\treturn () => {\n\t\t\tcarouselElement.removeEventListener(\n\t\t\t\t'scroll',\n\t\t\t\tthrottleEvent(updateButtonVisibilityOnScroll),\n\t\t\t);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div\n\t\t\tcss={[\n\t\t\t\tcontainerStyles,\n\t\t\t\tshowNavigation && containerWithNavigationStyles,\n\t\t\t]}\n\t\t>\n\t\t\t<ol\n\t\t\t\tref={carouselRef}\n\t\t\t\tcss={[\n\t\t\t\t\tcarouselStyles,\n\t\t\t\t\tgenerateCarouselColumnStyles(\n\t\t\t\t\t\tcarouselLength,\n\t\t\t\t\t\tvisibleCardsOnMobile,\n\t\t\t\t\t\tvisibleCardsOnTablet,\n\t\t\t\t\t),\n\t\t\t\t]}\n\t\t\t\tdata-heatphan-type=\"carousel\"\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</ol>\n\n\t\t\t{showNavigation && (\n\t\t\t\t<CarouselNavigationButtons\n\t\t\t\t\tpreviousButtonEnabled={previousButtonEnabled}\n\t\t\t\t\tnextButtonEnabled={nextButtonEnabled}\n\t\t\t\t\tonClickPreviousButton={() => scrollTo('left')}\n\t\t\t\t\tonClickNextButton={() => scrollTo('right')}\n\t\t\t\t\tdataLinkNamePreviousButton={nestedOphanComponents(\n\t\t\t\t\t\t'carousel',\n\t\t\t\t\t\t'previous-button',\n\t\t\t\t\t)}\n\t\t\t\t\tdataLinkNameNextButton={nestedOphanComponents(\n\t\t\t\t\t\t'carousel',\n\t\t\t\t\t\t'next-button',\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nScrollableCarousel.Item = ({ children }: { children: React.ReactNode }) => (\n\t<li css={itemStyles}>{children}</li>\n);\n","export const nestedOphanComponents = (...components: string[]): string =>\n\tcomponents.join(' : ');\n","const units = {\n  second: 1e3,\n  minute: 6e4,\n  hour: 36e5,\n  day: 864e5\n};\nconst duration = ({\n  then,\n  now\n}) => {\n  const difference = now - then;\n  if (difference < units.minute) {\n    return { length: difference / units.second, unit: \"second\" };\n  } else if (difference < units.hour) {\n    return { length: difference / units.minute, unit: \"minute\" };\n  } else if (difference < units.day) {\n    return { length: difference / units.hour, unit: \"hour\" };\n  } else {\n    return { length: difference / units.day, unit: \"day\" };\n  }\n};\nconst isYesterday = (then, now) => {\n  const today = new Date(now);\n  const yesterday = new Date(now);\n  yesterday.setDate(today.getDate() - 1);\n  return new Date(then).toDateString() === yesterday.toDateString();\n};\nconst withTime = (date) => `${date.getHours()}.${date.getMinutes().toString().padStart(2, \"0\")}`;\nconst timeAgo = (epoch, options) => {\n  const then = epoch;\n  const now = options?.now ?? Date.now();\n  const verbose = options?.verbose ?? false;\n  const { length: rawLength, unit } = duration({ then, now });\n  const length = Math.round(rawLength);\n  if (length < 0) {\n    return false;\n  }\n  switch (unit) {\n    case \"second\": {\n      if (length > 55) {\n        return verbose ? \"1 minute ago\" : \"1m ago\";\n      } else if (length < 15) {\n        return \"now\";\n      } else if (!verbose) {\n        return `${length}s ago`;\n      } else {\n        return `${length} seconds ago`;\n      }\n    }\n    case \"minute\": {\n      if (length > 55) {\n        return verbose ? \"1 hour ago\" : \"1h ago\";\n      } else if (!verbose) {\n        return `${length}m ago`;\n      } else if (length == 1) {\n        return \"1 minute ago\";\n      } else {\n        return `${length} minutes ago`;\n      }\n    }\n    case \"hour\": {\n      if (!verbose) {\n        return `${length}h ago`;\n      } else if (length == 1) {\n        return \"1 hour ago\";\n      } else {\n        return `${length} hours ago`;\n      }\n    }\n    case \"day\": {\n      if (rawLength < (options?.daysUntilAbsolute ?? 7)) {\n        if (!verbose) {\n          return `${length}d ago`;\n        } else if (isYesterday(then, now)) {\n          return `Yesterday ${withTime(new Date(then))}`;\n        } else if (length == 1) {\n          return \"1 day ago\";\n        } else {\n          return `${length} days ago`;\n        }\n      }\n      return new Date(then).toLocaleString(\"en-GB\", {\n        day: \"numeric\",\n        month: verbose ? \"long\" : \"short\",\n        year: \"numeric\"\n      });\n    }\n  }\n};\n\nexport { duration, timeAgo };\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden } from '../../../foundations/accessibility/visually-hidden.js';\nimport { iconSize } from '../../../foundations/__generated__/size.js';\n\nconst Svg = ({ size, theme }) => /* @__PURE__ */ jsx(\n  \"svg\",\n  {\n    width: size ? iconSize[size] : void 0,\n    height: void 0,\n    viewBox: \"-3 -3 30 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: false,\n    \"aria-hidden\": true,\n    children: /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        d: \"m19.151 21.336-2.418-7.386L23 9.348l-.312-.989h-7.75L12.547 1h-1.092L9.087 8.36H1.312L1 9.347l6.267 4.602-2.366 7.386.806.624L12 17.357l6.293 4.603z\",\n        fill: theme?.fill\n      }\n    )\n  }\n);\nconst SvgStar = ({\n  size,\n  theme,\n  isAnnouncedByScreenReader = false\n}) => /* @__PURE__ */ jsxs(Fragment, { children: [\n  /* @__PURE__ */ jsx(Svg, { size, theme }),\n  isAnnouncedByScreenReader ? /* @__PURE__ */ jsx(\n    \"span\",\n    {\n      css: css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`,\n      children: \"Star\"\n    }\n  ) : \"\"\n] });\n\nexport { SvgStar };\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden } from '../../../foundations/accessibility/visually-hidden.js';\nimport { iconSize } from '../../../foundations/__generated__/size.js';\n\nconst Svg = ({ size, theme }) => /* @__PURE__ */ jsx(\n  \"svg\",\n  {\n    width: size ? iconSize[size] : void 0,\n    height: void 0,\n    viewBox: \"-3 -3 30 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: false,\n    \"aria-hidden\": true,\n    children: /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        d: \"m14.381 13.196 3.863-2.837h-4.758l-1.479-4.547-1.462 4.547H5.756l3.855 2.831-1.438 4.488L12 14.88l3.856 2.82zm4.77 8.14-.858.624L12 17.357 5.707 21.96l-.806-.624 2.366-7.386L1 9.348l.312-.989h7.775L11.454 1h1.092l2.393 7.36h7.749l.312.988-6.267 4.602z\",\n        fill: theme?.fill\n      }\n    )\n  }\n);\nconst SvgStarOutline = ({\n  size,\n  theme,\n  isAnnouncedByScreenReader = false\n}) => /* @__PURE__ */ jsxs(Fragment, { children: [\n  /* @__PURE__ */ jsx(Svg, { size, theme }),\n  isAnnouncedByScreenReader ? /* @__PURE__ */ jsx(\n    \"span\",\n    {\n      css: css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`,\n      children: \"Star outline\"\n    }\n  ) : \"\"\n] });\n\nexport { SvgStarOutline };\n"],"names":["themeButton","borderTertiary","palette","textTertiary","backgroundTertiaryHover","themeButtonDisabled","buttonStyles","css","from","tablet","space","CarouselNavigationButtons","previousButtonEnabled","nextButtonEnabled","onClickPreviousButton","onClickNextButton","dataLinkNameNextButton","dataLinkNamePreviousButton","div","aria-controls","aria-label","Button","hideLabel","iconSide","icon","SvgChevronLeftSingle","onClick","priority","theme","size","disabled","value","data-link-name","SvgChevronRightSingle","primaryTitlePreset","headlineBold28Object","secondaryTitlePreset","textSansBold17Object","gridGap","gridGapMobile","containerStyles","mobileLandscape","leftCol","containerWithNavigationStyles","wide","between","and","fontSize","lineHeight","gridColumnWidth","carouselStyles","itemStyles","generateCarouselColumnStyles","totalCards","visibleCardsOnMobile","visibleCardsOnTablet","offsetPeepingCardWidth","offsetCardGap","ScrollableCarousel","children","carouselLength","carouselRef","useRef","setPreviousButtonEnabled","useState","setNextButtonEnabled","showNavigation","scrollTo","direction","current","cardWidth","querySelector","offsetWidth","offset","scrollBy","left","behavior","updateButtonVisibilityOnScroll","carouselElement","scrollLeft","maxScrollLeft","scrollWidth","clientWidth","throttleEvent","callback","isThrottled","setTimeout","useEffect","addEventListener","removeEventListener","ol","ref","data-heatphan-type","nestedOphanComponents","Item","li","components","join","units","timeAgo","epoch","options","then","now","Date","verbose","length","rawLength","unit","difference","duration","Math","round","daysUntilAbsolute","today","yesterday","setDate","getDate","toDateString","isYesterday","date","getHours","getMinutes","toString","padStart","toLocaleString","day","month","year","Svg","jsx","width","iconSize","height","viewBox","xmlns","focusable","fillRule","clipRule","d","fill","SvgStar","isAnnouncedByScreenReader","jsxs","Fragment","visuallyHidden","SvgStarOutline"],"sourceRoot":""}