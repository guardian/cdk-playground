{"version":3,"file":"9242.client.web.01b1c4c39302e3c7e84e.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/SignedInAs.tsx","webpack://@guardian/dotcom-rendering/./src/lib/thrift/protocols.ts","webpack://@guardian/dotcom-rendering/./src/lib/thrift/nativeConnection.ts","webpack://@guardian/dotcom-rendering/./src/lib/bridgetApi.ts","webpack://@guardian/dotcom-rendering/./src/lib/identity-component-event.ts","webpack://@guardian/dotcom-rendering/./src/lib/querystring.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport { SignInScreenReason } from '@guardian/bridget/SignInScreenReason';\nimport { SignInScreenReferrer } from '@guardian/bridget/SignInScreenReferrer';\nimport {\n\theadlineBold20,\n\theadlineMedium17,\n\tpalette as sourcePalette,\n\tspace,\n\ttextSans12,\n\ttextSans15,\n\tuntil,\n} from '@guardian/source/foundations';\nimport { LinkButton } from '@guardian/source/react-components';\nimport { getUserClient } from '../lib/bridgetApi';\nimport type { UserProfile } from '../lib/discussion';\nimport { createAuthenticationEventParams } from '../lib/identity-component-event';\nimport { palette as themePalette } from '../palette';\nimport { useConfig } from './ConfigContext';\n\ntype Props = {\n\tcommentCount?: number;\n\tenableDiscussionSwitch: boolean;\n\tuser?: UserProfile;\n\tisClosedForComments?: boolean;\n};\n\nconst containerStyles = css`\n\tpadding-top: ${space[1]}px;\n\tpadding-bottom: ${space[1]}px;\n`;\n\nconst imageStyles = css`\n\tborder-radius: 70px;\n\twidth: 60px;\n\theight: 60px;\n\t${until.desktop} {\n\t\twidth: 36px;\n\t\theight: 36px;\n\t}\n`;\n\nconst imageWrapper = css`\n\tpadding-bottom: ${space[1]}px;\n\tpadding-right: ${space[2]}px;\n`;\n\nconst headingStyles = css`\n\t${headlineBold20};\n\tpadding-bottom: ${space[1]}px;\n`;\n\nconst textStyles = css`\n\t${textSans15}\n\t${until.desktop} {\n\t\t${textSans12}\n\t}\n\tcolor: ${sourcePalette.neutral[46]};\n\tpadding-bottom: ${space[1]}px;\n`;\n\nconst headlineStyles = css`\n\t${headlineMedium17}\n\tcolor: ${themePalette('--discussion-subdued')};\n\tpadding-bottom: ${space[1]}px;\n`;\n\nconst usernameStyles = css`\n\tfont-weight: 700;\n\tcolor: ${themePalette('--article-text')};\n`;\n\nconst linkStyles = css`\n\tcolor: ${themePalette('--sign-in-link')};\n\ttext-decoration: none;\n\tborder-bottom: 1px solid ${themePalette('--sign-in-link-underline')};\n\ttransition: border-color 0.15s ease-out;\n\t:hover {\n\t\tborder-color: ${themePalette('--sign-in-link')};\n\t}\n`;\n\nconst rowUntilDesktop = css`\n\tdisplay: flex;\n\tflex-direction: column;\n\t${until.desktop} {\n\t\tflex-direction: row;\n\t}\n`;\n\nconst Heading = ({ count }: { count?: number }) => {\n\treturn (\n\t\t<h2 css={headingStyles}>\n\t\t\tComments{' '}\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\tcolor: ${themePalette('--discussion-subdued')};\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t({count ?? '…'})\n\t\t\t</span>\n\t\t</h2>\n\t);\n};\n\nconst signIn = () =>\n\tvoid getUserClient()\n\t\t.signIn(\n\t\t\tSignInScreenReason.accessDiscussion,\n\t\t\tSignInScreenReferrer.accessDiscussion,\n\t\t)\n\t\t.catch(() => {\n\t\t\t// do nothing\n\t\t});\n\nconst appsStylesOverride = css`\n\tdisplay: inline;\n\tpadding: 0;\n\tmargin: 0;\n\ttext-decoration-color: ${themePalette('--sign-in-link-underline')};\n\twhite-space: inherit;\n\t/* stylelint-disable -- there’s no Source option for this look */\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tfont-size: inherit;\n\tline-height: inherit;\n\t/* stylelint-enable */\n\tvertical-align: inherit;\n`;\n\nconst SignInButton = ({\n\tchildren,\n\taction,\n}: {\n\tchildren: React.ReactNode;\n\taction: 'signin_to_comment' | 'register_to_comment';\n}) => {\n\tconst { renderingTarget } = useConfig();\n\n\treturn renderingTarget === 'Web' ? (\n\t\t<a\n\t\t\thref={`https://profile.theguardian.com/signin?INTCMP=DOTCOM_COMMENTS_SIGNIN&${createAuthenticationEventParams(\n\t\t\t\taction,\n\t\t\t)}`}\n\t\t\tcss={linkStyles}\n\t\t>\n\t\t\t{children}\n\t\t</a>\n\t) : (\n\t\t<LinkButton\n\t\t\tpriority=\"subdued\"\n\t\t\ttheme={{ textSubdued: themePalette('--sign-in-link') }}\n\t\t\tcssOverrides={appsStylesOverride}\n\t\t\tonClick={signIn}\n\t\t>\n\t\t\t{children}\n\t\t</LinkButton>\n\t);\n};\n\nexport const SignedInAs = ({\n\tcommentCount,\n\tenableDiscussionSwitch,\n\tuser,\n\tisClosedForComments,\n}: Props) => {\n\tconst isBanned = user?.privateFields && !user.privateFields.canPostComment;\n\n\tif (!enableDiscussionSwitch) {\n\t\t// Discussion is disabled sitewide and user is signed in\n\t\tif (user) {\n\t\t\treturn (\n\t\t\t\t<div css={containerStyles}>\n\t\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\t\tCommenting has been disabled at this time\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t// Discussion disabled sitewide and user logged out\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\tCommenting has been disabled at this time but you can still{' '}\n\t\t\t\t\t<SignInButton action=\"signin_to_comment\">\n\t\t\t\t\t\tsign in\n\t\t\t\t\t</SignInButton>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<SignInButton action=\"register_to_comment\">\n\t\t\t\t\t\tcreate your Guardian account\n\t\t\t\t\t</SignInButton>{' '}\n\t\t\t\t\tto join the discussion when it&apos;s back\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (isBanned) {\n\t\t// User is banned\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\tCommenting has been disabled for this account (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.theguardian.com/community-faqs#321a\"\n\t\t\t\t\t\tcss={linkStyles}\n\t\t\t\t\t>\n\t\t\t\t\t\twhy?\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\t)\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (user && isClosedForComments) {\n\t\t// The reader is logged in but the discussion is closed\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\tThis discussion is closed for comments\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (!user && isClosedForComments) {\n\t\t// The discussion is closed and the reader is not logged in\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\tThis discussion is now closed for comments but you can still{' '}\n\t\t\t\t\t<SignInButton action=\"signin_to_comment\">\n\t\t\t\t\t\tsign in\n\t\t\t\t\t</SignInButton>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<SignInButton action=\"register_to_comment\">\n\t\t\t\t\t\tcreate your Guardian account\n\t\t\t\t\t</SignInButton>{' '}\n\t\t\t\t\tto join the discussion next time\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (!user) {\n\t\t// The discussion is open but the reader is not logged in\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\t<SignInButton action=\"signin_to_comment\">\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</SignInButton>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<SignInButton action=\"register_to_comment\">\n\t\t\t\t\t\tcreate your Guardian account\n\t\t\t\t\t</SignInButton>{' '}\n\t\t\t\t\tto join the discussion\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Discussion open and user logged in\n\treturn (\n\t\t<div css={containerStyles}>\n\t\t\t<Heading count={commentCount} />\n\t\t\t<div css={rowUntilDesktop}>\n\t\t\t\t<div css={imageWrapper}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tuser.secureAvatarUrl ||\n\t\t\t\t\t\t\t'https://avatar.guim.co.uk/no-user-image.gif'\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt={user.displayName || 'Guardian User'}\n\t\t\t\t\t\tcss={imageStyles}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div css={textStyles}>\n\t\t\t\t\tSigned in as\n\t\t\t\t\t<div css={usernameStyles}>\n\t\t\t\t\t\t{user.displayName || 'Guardian User'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import type {\n\tInt64,\n\tIThriftField,\n\tIThriftList,\n\tIThriftMap,\n\tIThriftMessage,\n\tIThriftSet,\n\tIThriftStruct,\n\tTTransport,\n\tTType,\n} from '@creditkarma/thrift-server-core';\nimport { MessageType, TProtocol } from '@creditkarma/thrift-server-core';\n\nexport abstract class TProtocolDecorator extends TProtocol {\n\tprivate concreteProtocol: TProtocol;\n\n\tconstructor(protocol: TProtocol) {\n\t\tsuper(protocol.getTransport());\n\t\tthis.concreteProtocol = protocol;\n\t}\n\n\tgetTransport(): TTransport {\n\t\treturn this.concreteProtocol.getTransport();\n\t}\n\tflush(): Buffer {\n\t\treturn this.concreteProtocol.flush();\n\t}\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\treturn this.concreteProtocol.writeMessageBegin(name, type, seqid);\n\t}\n\twriteMessageEnd(): void {\n\t\treturn this.concreteProtocol.writeMessageEnd();\n\t}\n\twriteStructBegin(name: string): void {\n\t\treturn this.concreteProtocol.writeStructBegin(name);\n\t}\n\twriteStructEnd(): void {\n\t\treturn this.concreteProtocol.writeStructEnd();\n\t}\n\twriteFieldBegin(name: string, type: TType, id: number): void {\n\t\treturn this.concreteProtocol.writeFieldBegin(name, type, id);\n\t}\n\twriteFieldEnd(): void {\n\t\treturn this.concreteProtocol.writeFieldEnd();\n\t}\n\twriteFieldStop(): void {\n\t\treturn this.concreteProtocol.writeFieldStop();\n\t}\n\twriteMapBegin(keyType: TType, valueType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeMapBegin(keyType, valueType, size);\n\t}\n\twriteMapEnd(): void {\n\t\treturn this.concreteProtocol.writeMapEnd();\n\t}\n\twriteListBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeListBegin(elementType, size);\n\t}\n\twriteListEnd(): void {\n\t\treturn this.concreteProtocol.writeListEnd();\n\t}\n\twriteSetBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeSetBegin(elementType, size);\n\t}\n\twriteSetEnd(): void {\n\t\treturn this.concreteProtocol.writeSetEnd();\n\t}\n\twriteBool(bool: boolean): void {\n\t\treturn this.concreteProtocol.writeBool(bool);\n\t}\n\twriteByte(b: number): void {\n\t\treturn this.concreteProtocol.writeByte(b);\n\t}\n\twriteI16(i16: number): void {\n\t\treturn this.concreteProtocol.writeI16(i16);\n\t}\n\twriteI32(i32: number): void {\n\t\treturn this.concreteProtocol.writeI32(i32);\n\t}\n\twriteI64(i64: number | Int64): void {\n\t\treturn this.concreteProtocol.writeI64(i64);\n\t}\n\twriteDouble(dbl: number): void {\n\t\treturn this.concreteProtocol.writeDouble(dbl);\n\t}\n\twriteString(arg: string): void {\n\t\treturn this.concreteProtocol.writeString(arg);\n\t}\n\twriteBinary(arg: string | Buffer): void {\n\t\treturn this.concreteProtocol.writeBinary(arg);\n\t}\n\treadMessageBegin(): IThriftMessage {\n\t\treturn this.concreteProtocol.readMessageBegin();\n\t}\n\treadMessageEnd(): void {\n\t\treturn this.concreteProtocol.readMessageEnd();\n\t}\n\treadStructBegin(): IThriftStruct {\n\t\treturn this.concreteProtocol.readStructBegin();\n\t}\n\treadStructEnd(): void {\n\t\treturn this.concreteProtocol.readStructEnd();\n\t}\n\treadFieldBegin(): IThriftField {\n\t\treturn this.concreteProtocol.readFieldBegin();\n\t}\n\treadFieldEnd(): void {\n\t\treturn this.concreteProtocol.readFieldEnd();\n\t}\n\treadMapBegin(): IThriftMap {\n\t\treturn this.concreteProtocol.readMapBegin();\n\t}\n\treadMapEnd(): void {\n\t\treturn this.concreteProtocol.readMapEnd();\n\t}\n\treadListBegin(): IThriftList {\n\t\treturn this.concreteProtocol.readListBegin();\n\t}\n\treadListEnd(): void {\n\t\treturn this.concreteProtocol.readListEnd();\n\t}\n\treadSetBegin(): IThriftSet {\n\t\treturn this.concreteProtocol.readSetBegin();\n\t}\n\treadSetEnd(): void {\n\t\treturn this.concreteProtocol.readSetEnd();\n\t}\n\treadBool(): boolean {\n\t\treturn this.concreteProtocol.readBool();\n\t}\n\treadByte(): number {\n\t\treturn this.concreteProtocol.readByte();\n\t}\n\treadI16(): number {\n\t\treturn this.concreteProtocol.readI16();\n\t}\n\treadI32(): number {\n\t\treturn this.concreteProtocol.readI32();\n\t}\n\treadI64(): Int64 {\n\t\treturn this.concreteProtocol.readI64();\n\t}\n\treadDouble(): number {\n\t\treturn this.concreteProtocol.readDouble();\n\t}\n\treadBinary(): Buffer {\n\t\treturn this.concreteProtocol.readBinary();\n\t}\n\treadString(): string {\n\t\treturn this.concreteProtocol.readString();\n\t}\n\tskip(type: TType): void {\n\t\treturn this.concreteProtocol.skip(type);\n\t}\n}\n\nexport class TMultiplexedProtocol extends TProtocolDecorator {\n\tstatic readonly separator = ':';\n\treadonly serviceName: string;\n\n\tconstructor(protocol: TProtocol, serviceName: string) {\n\t\tsuper(protocol);\n\t\tthis.serviceName = serviceName;\n\t}\n\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\tif (type === MessageType.CALL || type === MessageType.ONEWAY) {\n\t\t\tsuper.writeMessageBegin(\n\t\t\t\tthis.serviceName + TMultiplexedProtocol.separator + name,\n\t\t\t\ttype,\n\t\t\t\tseqid,\n\t\t\t);\n\t\t} else {\n\t\t\tsuper.writeMessageBegin(name, type, seqid);\n\t\t}\n\t}\n}\n","import type {\n\tIClientConstructor,\n\tIProtocolConstructor,\n\tITransportConstructor,\n\tProtocolType,\n\tThriftClient,\n\tTransportType,\n\tTTransport,\n} from '@creditkarma/thrift-server-core';\nimport {\n\tgetProtocol,\n\tgetTransport,\n\tTApplicationException,\n\tTApplicationExceptionType,\n\tThriftConnection,\n} from '@creditkarma/thrift-server-core';\nimport { TMultiplexedProtocol } from './protocols';\n\ndeclare global {\n\tinterface Window {\n\t\tnativeConnections?: Record<string, NativeConnection>;\n\t\tandroid?: {\n\t\t\tpostMessage: (data: string, connectionId: string) => void;\n\t\t};\n\t\twebkit?: {\n\t\t\tmessageHandlers: {\n\t\t\t\tiOSWebViewMessage: {\n\t\t\t\t\tpostMessage: (nativeMessage: NativeMessage) => void;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n}\n\nexport interface NativeMessage {\n\tdata: string;\n\tconnectionId: string;\n}\n\ninterface PromiseResponse {\n\tresolve: (response: Buffer) => void;\n\treject: (error: Error) => void;\n\ttimeoutId: NodeJS.Timeout;\n}\n\nconst ACTION_TIMEOUT_MS = 30000;\n\nfunction sendNativeMessage(nativeMessage: NativeMessage): void {\n\tif (window.android) {\n\t\twindow.android.postMessage(\n\t\t\tnativeMessage.data,\n\t\t\tnativeMessage.connectionId,\n\t\t);\n\t} else if (window.webkit) {\n\t\twindow.webkit.messageHandlers.iOSWebViewMessage.postMessage(\n\t\t\tnativeMessage,\n\t\t);\n\t} else {\n\t\tconsole.warn('No native APIs available');\n\t}\n}\n\nlet uid = 1;\nconst getUniqueConnectionId = () => `connection-${uid++}`;\n\nexport class NativeConnection extends ThriftConnection {\n\tconnectionId = getUniqueConnectionId();\n\tpromises: PromiseResponse[] = [];\n\toutBuffer: NativeMessage[] = [];\n\n\tconstructor(\n\t\tTransport: ITransportConstructor,\n\t\tProtocol: IProtocolConstructor,\n\t) {\n\t\tsuper(Transport, Protocol);\n\t\tif (typeof window !== 'undefined') {\n\t\t\twindow.nativeConnections = window.nativeConnections ?? {};\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treset(oldConnectionId: string): void {\n\t\tif (oldConnectionId === this.connectionId && window.nativeConnections) {\n\t\t\tconsole.warn('Reseting connection ' + oldConnectionId);\n\t\t\tdelete window.nativeConnections[this.connectionId];\n\t\t\tfor (const promise of this.promises) {\n\t\t\t\tpromise.reject(\n\t\t\t\t\tnew TApplicationException(\n\t\t\t\t\t\tTApplicationExceptionType.UNKNOWN,\n\t\t\t\t\t\t'Timeout error',\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.promises = [];\n\t\t\tthis.connectionId = getUniqueConnectionId();\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treceive(message: NativeMessage): void {\n\t\tconst resolver = this.promises.shift();\n\t\tif (resolver) {\n\t\t\tclearTimeout(resolver.timeoutId);\n\t\t\tconst data = Buffer.from(message.data, 'base64');\n\t\t\tresolver.resolve(data);\n\t\t}\n\t\tthis.sendNextMessage();\n\t}\n\n\tprivate sendNextMessage(): void {\n\t\tconst message = this.outBuffer.shift();\n\t\tif (message) {\n\t\t\tconsole.log('Sending next message');\n\t\t\tsendNativeMessage(message);\n\t\t}\n\t}\n\n\tsend(dataToSend: Buffer): Promise<Buffer> {\n\t\tconst id = this.connectionId;\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias -- Reassign this\n\t\tconst connection = this;\n\t\treturn new Promise<Buffer>(function (res, rej): void {\n\t\t\tconnection.promises.push({\n\t\t\t\tresolve: res,\n\t\t\t\treject: rej,\n\t\t\t\ttimeoutId: setTimeout(function () {\n\t\t\t\t\tconnection.reset(id);\n\t\t\t\t}, ACTION_TIMEOUT_MS),\n\t\t\t});\n\t\t\tconst message: NativeMessage = {\n\t\t\t\tdata: dataToSend.toString('base64'),\n\t\t\t\tconnectionId: id,\n\t\t\t};\n\t\t\tif (connection.promises.length === 1) {\n\t\t\t\tconsole.log('Sending message immediately');\n\t\t\t\tsendNativeMessage(message);\n\t\t\t} else {\n\t\t\t\tconsole.log('Queing message because others in flight');\n\t\t\t\tconnection.outBuffer.push(message);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function createAppClient<TClient extends ThriftClient<void>>(\n\tServiceClient: IClientConstructor<TClient, void>,\n\ttransport: TransportType = 'buffered',\n\tprotocol: ProtocolType = 'compact',\n): TClient {\n\tclass NamedMultiplexedProtocol extends TMultiplexedProtocol {\n\t\tconstructor(tTransport: TTransport) {\n\t\t\tconst Protocol = getProtocol(protocol);\n\t\t\tsuper(new Protocol(tTransport), ServiceClient.serviceName ?? '');\n\t\t}\n\t}\n\tconst connection = new NativeConnection(\n\t\tgetTransport(transport),\n\t\tNamedMultiplexedProtocol,\n\t);\n\treturn new ServiceClient(connection);\n}\n","import * as Acquisitions from '@guardian/bridget/Acquisitions';\nimport * as Analytics from '@guardian/bridget/Analytics';\nimport * as Commercial from '@guardian/bridget/Commercial';\nimport * as Discussion from '@guardian/bridget/Discussion';\nimport * as Environment from '@guardian/bridget/Environment';\nimport * as Gallery from '@guardian/bridget/Gallery';\nimport * as Interaction from '@guardian/bridget/Interaction';\nimport * as Metrics from '@guardian/bridget/Metrics';\nimport * as Navigation from '@guardian/bridget/Navigation';\nimport * as Newsletters from '@guardian/bridget/Newsletters';\nimport * as Notifications from '@guardian/bridget/Notifications';\nimport * as Tag from '@guardian/bridget/Tag';\nimport * as User from '@guardian/bridget/User';\nimport * as Video from '@guardian/bridget/Videos';\nimport { isUndefined } from '@guardian/libs';\nimport { createAppClient } from './thrift/nativeConnection';\n\nlet environmentClient: Environment.Client<void> | undefined = undefined;\nexport const getEnvironmentClient = (): Environment.Client<void> => {\n\tif (isUndefined(environmentClient)) {\n\t\tenvironmentClient = createAppClient<Environment.Client<void>>(\n\t\t\tEnvironment.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn environmentClient;\n};\n\nlet commercialClient: Commercial.Client<void> | undefined = undefined;\nexport const getCommercialClient = (): Commercial.Client<void> => {\n\tif (isUndefined(commercialClient)) {\n\t\tcommercialClient = createAppClient<Commercial.Client<void>>(\n\t\t\tCommercial.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn commercialClient;\n};\n\nlet acquisitionsClient: Acquisitions.Client<void> | undefined = undefined;\nexport const getAcquisitionsClient = (): Acquisitions.Client<void> => {\n\tif (!acquisitionsClient) {\n\t\tacquisitionsClient = createAppClient<Acquisitions.Client<void>>(\n\t\t\tAcquisitions.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn acquisitionsClient;\n};\n\nlet notificationsClient: Notifications.Client<void> | undefined = undefined;\nexport const getNotificationsClient = (): Notifications.Client<void> => {\n\tif (!notificationsClient) {\n\t\tnotificationsClient = createAppClient<Notifications.Client<void>>(\n\t\t\tNotifications.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn notificationsClient;\n};\n\nlet tagClient: Tag.Client<void> | undefined = undefined;\nexport const getTagClient = (): Tag.Client<void> => {\n\tif (!tagClient) {\n\t\ttagClient = createAppClient<Tag.Client<void>>(\n\t\t\tTag.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn tagClient;\n};\n\nlet userClient: User.Client<void> | undefined = undefined;\nexport const getUserClient = (): User.Client<void> => {\n\tif (!userClient) {\n\t\tuserClient = createAppClient<User.Client<void>>(\n\t\t\tUser.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn userClient;\n};\nlet galleryClient: Gallery.Client<void> | undefined = undefined;\nexport const getGalleryClient = (): Gallery.Client<void> => {\n\tif (!galleryClient) {\n\t\tgalleryClient = createAppClient<Gallery.Client<void>>(\n\t\t\tGallery.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn galleryClient;\n};\nlet videoClient: Video.Client<void> | undefined = undefined;\nexport const getVideoClient = (): Video.Client<void> => {\n\tif (!videoClient) {\n\t\tvideoClient = createAppClient<Video.Client<void>>(\n\t\t\tVideo.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn videoClient;\n};\nlet metricsClient: Metrics.Client<void> | undefined = undefined;\nexport const getMetricsClient = (): Metrics.Client<void> => {\n\tif (!metricsClient) {\n\t\tmetricsClient = createAppClient<Metrics.Client<void>>(\n\t\t\tMetrics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn metricsClient;\n};\nlet analyticsClient: Analytics.Client<void> | undefined = undefined;\nexport const getAnalyticsClient = (): Analytics.Client<void> => {\n\tif (!analyticsClient) {\n\t\tanalyticsClient = createAppClient<Analytics.Client<void>>(\n\t\t\tAnalytics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn analyticsClient;\n};\n\nlet navigationClient: Navigation.Client<void> | undefined = undefined;\nexport const getNavigationClient = (): Navigation.Client<void> => {\n\tif (!navigationClient) {\n\t\tnavigationClient = createAppClient<Navigation.Client<void>>(\n\t\t\tNavigation.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn navigationClient;\n};\n\nlet newslettersClient: Newsletters.Client<void> | undefined = undefined;\nexport const getNewslettersClient = (): Newsletters.Client<void> => {\n\tif (!newslettersClient) {\n\t\tnewslettersClient = createAppClient<Newsletters.Client<void>>(\n\t\t\tNewsletters.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn newslettersClient;\n};\n\nlet discussionClient: Discussion.Client<void> | undefined = undefined;\nexport const getDiscussionClient = (): Discussion.Client<void> => {\n\tif (!discussionClient) {\n\t\tdiscussionClient = createAppClient<Discussion.Client<void>>(\n\t\t\tDiscussion.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn discussionClient;\n};\n\nlet interactionClient: Interaction.Client<void> | undefined = undefined;\nexport const getInteractionClient = (): Interaction.Client<void> => {\n\tif (!interactionClient) {\n\t\tinteractionClient = createAppClient<Interaction.Client<void>>(\n\t\t\tInteraction.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn interactionClient;\n};\n","import { constructQuery } from './querystring';\n\ntype AuthenticationComponentId =\n\t| 'amp_sidebar_signin'\n\t| 'guardian_signin_header'\n\t| 'signin_to_comment'\n\t| 'register_to_comment'\n\t| 'signin_to_reply_comment';\n\ntype AuthenticationEventParams = {\n\tcomponentType: string;\n\tcomponentId: AuthenticationComponentId;\n\tviewId?: string;\n};\n\nexport const createAuthenticationEventParams = (\n\tcomponentId: AuthenticationComponentId,\n\tpageViewId?: string,\n): string => {\n\tconst params: AuthenticationEventParams = {\n\t\tcomponentType: 'identityauthentication',\n\t\tcomponentId,\n\t};\n\n\tif (pageViewId) {\n\t\tparams.viewId = pageViewId;\n\t}\n\n\treturn `componentEventParams=${encodeURIComponent(constructQuery(params))}`;\n};\n","const constructQuery = (query: {\n\t[key: string]:\n\t\t| string\n\t\t| string[]\n\t\t| number\n\t\t| number[]\n\t\t| boolean\n\t\t| boolean[]\n\t\t| undefined;\n}): string =>\n\tObject.keys(query)\n\t\t.map((param: string) => {\n\t\t\tconst value = query[param] ?? 'undefined';\n\t\t\tconst queryValue = Array.isArray(value)\n\t\t\t\t? value.map((v) => encodeURIComponent(v)).join(',')\n\t\t\t\t: encodeURIComponent(value);\n\t\t\treturn `${param}=${queryValue}`;\n\t\t})\n\t\t.join('&');\n\nexport { constructQuery };\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n"],"names":["containerStyles","css","space","imageStyles","until","desktop","imageWrapper","headingStyles","headlineBold20","textStyles","textSans15","textSans12","sourcePalette","neutral","headlineStyles","headlineMedium17","themePalette","usernameStyles","linkStyles","rowUntilDesktop","Heading","count","h2","span","signIn","getUserClient","SignInScreenReason","accessDiscussion","SignInScreenReferrer","catch","appsStylesOverride","SignInButton","children","action","renderingTarget","useConfig","a","href","createAuthenticationEventParams","LinkButton","priority","theme","textSubdued","cssOverrides","onClick","SignedInAs","commentCount","enableDiscussionSwitch","user","isClosedForComments","isBanned","privateFields","canPostComment","div","img","src","secureAvatarUrl","alt","displayName","TProtocolDecorator","TProtocol","getTransport","this","concreteProtocol","flush","writeMessageBegin","name","type","seqid","writeMessageEnd","writeStructBegin","writeStructEnd","writeFieldBegin","id","writeFieldEnd","writeFieldStop","writeMapBegin","keyType","valueType","size","writeMapEnd","writeListBegin","elementType","writeListEnd","writeSetBegin","writeSetEnd","writeBool","bool","writeByte","b","writeI16","i16","writeI32","i32","writeI64","i64","writeDouble","dbl","writeString","arg","writeBinary","readMessageBegin","readMessageEnd","readStructBegin","readStructEnd","readFieldBegin","readFieldEnd","readMapBegin","readMapEnd","readListBegin","readListEnd","readSetBegin","readSetEnd","readBool","readByte","readI16","readI32","readI64","readDouble","readBinary","readString","skip","constructor","protocol","super","TMultiplexedProtocol","MessageType","CALL","ONEWAY","serviceName","separator","sendNativeMessage","nativeMessage","window","android","postMessage","data","connectionId","webkit","messageHandlers","iOSWebViewMessage","console","warn","uid","getUniqueConnectionId","NativeConnection","ThriftConnection","reset","oldConnectionId","nativeConnections","promise","promises","reject","TApplicationException","TApplicationExceptionType","UNKNOWN","receive","message","resolver","shift","clearTimeout","timeoutId","Buffer","from","resolve","sendNextMessage","outBuffer","log","send","dataToSend","connection","Promise","res","rej","push","setTimeout","toString","length","Transport","Protocol","createAppClient","ServiceClient","transport","tTransport","getProtocol","environmentClient","getEnvironmentClient","isUndefined","Environment","Client","commercialClient","getCommercialClient","Commercial","acquisitionsClient","getAcquisitionsClient","Acquisitions","notificationsClient","getNotificationsClient","Notifications","tagClient","getTagClient","Tag","userClient","User","galleryClient","getGalleryClient","Gallery","videoClient","getVideoClient","Video","analyticsClient","getAnalyticsClient","Analytics","navigationClient","getNavigationClient","Navigation","discussionClient","getDiscussionClient","Discussion","interactionClient","getInteractionClient","Interaction","componentId","pageViewId","params","componentType","viewId","encodeURIComponent","constructQuery","query","Object","keys","map","param","value","queryValue","Array","isArray","v","join","palette","colour"],"sourceRoot":""}