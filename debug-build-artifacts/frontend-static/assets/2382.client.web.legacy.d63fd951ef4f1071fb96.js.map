{"version":3,"file":"2382.client.web.legacy.d63fd951ef4f1071fb96.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/marketing/banners/utils/localStorage.ts","webpack://@guardian/dotcom-rendering/./src/components/marketing/banners/utils/withCloseable.tsx","webpack://@guardian/dotcom-rendering/./src/components/marketing/hooks/useEscapeShortcut.ts","webpack://@guardian/dotcom-rendering/./src/components/marketing/banners/common/BannerWrapper.tsx","webpack://@guardian/dotcom-rendering/./src/components/marketing/banners/signInPrompt/SignInPromptBanner.tsx"],"sourcesContent":["/**\n * @file\n * This file was migrated from:\n * https://github.com/guardian/support-dotcom-components/blob/0a2439b701586a7a2cc60dce10b4d96cf7a828db/packages/modules/src/modules/banners/localStorage.ts\n */\nimport { storage } from '@guardian/libs';\nconst setBannerClosedTimestamp = (name) => storage.local.set(`gu.prefs.${name}`, new Date().toISOString());\nconst bannerChannelToLastClosedMap = {\n    contributions: 'engagementBannerLastClosedAt',\n    subscriptions: 'subscriptionBannerLastClosedAt',\n    signIn: 'signInBannerLastClosedAt',\n    abandonedBasket: 'abandonedBasketLastClosedAt',\n};\nexport const setChannelClosedTimestamp = (channel) => {\n    setBannerClosedTimestamp(bannerChannelToLastClosedMap[channel]);\n};\n","import { jsx as _jsx, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { useState } from 'react';\nimport { useEscapeShortcut } from '../../hooks/useEscapeShortcut';\nimport { setChannelClosedTimestamp } from './localStorage';\nconst withCloseable = (CloseableBanner) => {\n    const Banner = (bannerProps) => {\n        const [isOpen, setIsOpen] = useState(true);\n        const onClose = () => {\n            setChannelClosedTimestamp(bannerProps.bannerChannel);\n            setIsOpen(false);\n            document.body.focus();\n        };\n        useEscapeShortcut(onClose);\n        return isOpen ? (_jsx(CloseableBanner, { onClose: onClose, ...bannerProps })) : (_jsx(_Fragment, {}));\n    };\n    return Banner;\n};\nexport { withCloseable };\n","/**\n * @file\n * This file was migrated from:\n * https://github.com/guardian/support-dotcom-components/blob/0a2439b701586a7a2cc60dce10b4d96cf7a828db/packages/modules/src/hooks/useEscapeShortcut.ts\n */\nimport { useEffect } from 'react';\n// Pass a function to run when the user hits the escape key\n// Useful for enabling a keyboard shortcut for dismissing banners\nexport function useEscapeShortcut(eventHandler) {\n    useEffect(() => {\n        function handleEscapeKeydown(event) {\n            // IE key name is 'Esc', because IE\n            const isEscapeKey = event.key === 'Escape' || event.key === 'Esc';\n            if (isEscapeKey) {\n                eventHandler(event);\n            }\n        }\n        window.addEventListener('keydown', handleEscapeKeydown);\n        return () => window.removeEventListener('keydown', handleEscapeKeydown);\n    }, [eventHandler]);\n}\n","import { jsx as _jsx, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\n/**\n * @file\n * This file was migrated from:\n * https://github.com/guardian/support-dotcom-components/blob/0a2439b701586a7a2cc60dce10b4d96cf7a828db/packages/modules/src/modules/banners/common/BannerWrapper.tsx\n */\nimport { bannerSchema, containsNonArticleCountPlaceholder, getReminderFields, replaceNonArticleCountPlaceholders, SecondaryCtaType, } from '@guardian/support-dotcom-components';\nimport { useEffect } from 'react';\nimport { useIsInView } from '../../../../lib/useIsInView';\nimport { replaceArticleCount } from '../../lib/replaceArticleCount';\nimport { addAbandonedBasketAndTrackingParamsToUrl, addRegionIdAndTrackingParamsToSupportUrl, addTrackingParamsToProfileUrl, createClickEventFromTracking, createInsertEventFromTracking, createViewEventFromTracking, isProfileUrl, } from '../../lib/tracking';\nimport { withCloseable } from '../utils/withCloseable';\nfunction getComponentIds(bannerId) {\n    return {\n        close: `${bannerId} : close`,\n        cta: `${bannerId} : cta`,\n        secondaryCta: `${bannerId} : secondary-cta`,\n        notNow: `${bannerId} : not now`,\n        signIn: `${bannerId} : sign in`,\n        reminderCta: `${bannerId} : reminder-cta`,\n        reminderSet: `${bannerId} : reminder-set`,\n        reminderClose: `${bannerId} : reminder-close`,\n    };\n}\nexport const getParagraphsOrMessageText = (paras, text) => {\n    const bodyCopy = [];\n    if (paras != null) {\n        bodyCopy.push(...paras);\n    }\n    else if (text != null) {\n        bodyCopy.push(text);\n    }\n    return bodyCopy;\n};\nconst withBannerData = (Banner, bannerId) => (bannerProps) => {\n    const { tracking, submitComponentEvent, onClose, content, mobileContent, countryCode, prices, fetchEmail, articleCounts, tickerSettings, isSupporter, separateArticleCount, separateArticleCountSettings, choiceCardAmounts, design, bannerChannel, abandonedBasket, } = bannerProps;\n    const [hasBeenSeen, setNode] = useIsInView({\n        debounce: true,\n        threshold: 0,\n    });\n    useEffect(() => {\n        if (hasBeenSeen && submitComponentEvent) {\n            submitComponentEvent(createViewEventFromTracking(tracking, tracking.campaignCode));\n        }\n    }, [hasBeenSeen, submitComponentEvent, tracking]);\n    useEffect(() => {\n        if (submitComponentEvent) {\n            submitComponentEvent(createInsertEventFromTracking(tracking, tracking.campaignCode));\n        }\n    }, [submitComponentEvent, tracking]);\n    const numArticles = articleCounts.forTargetedWeeks;\n    const cleanParagraphsOrMessageText = (paras, text) => {\n        const originalCopy = getParagraphsOrMessageText(paras, text);\n        return originalCopy.map((p) => replaceNonArticleCountPlaceholders(p, countryCode, prices).trim());\n    };\n    const finaliseParagraphs = (paras) => {\n        return paras.map((p) => replaceArticleCount(p, numArticles, 'banner'));\n    };\n    const paragraphsContainNonArticleCountPlaceholder = (paras) => paras.some((p) => containsNonArticleCountPlaceholder(p));\n    const componentIds = getComponentIds(bannerId);\n    // For safety, this function throws if not all placeholders are replaced\n    const buildRenderedContent = (bannerContent) => {\n        const buildEnrichedCta = (cta) => {\n            if (isProfileUrl(cta.baseUrl)) {\n                return {\n                    ctaUrl: addTrackingParamsToProfileUrl(cta.baseUrl, tracking),\n                    ctaText: cta.text,\n                };\n            }\n            if (bannerChannel === 'abandonedBasket' && abandonedBasket) {\n                return {\n                    ctaUrl: addAbandonedBasketAndTrackingParamsToUrl(cta.baseUrl, abandonedBasket, tracking),\n                    ctaText: cta.text,\n                };\n            }\n            return {\n                ctaUrl: addRegionIdAndTrackingParamsToSupportUrl(cta.baseUrl, tracking, numArticles, countryCode),\n                ctaText: cta.text,\n            };\n        };\n        const buildEnrichedSecondaryCta = (secondaryCta) => {\n            if (secondaryCta.type === SecondaryCtaType.Custom) {\n                return {\n                    type: SecondaryCtaType.Custom,\n                    cta: buildEnrichedCta(secondaryCta.cta),\n                };\n            }\n            return {\n                type: SecondaryCtaType.ContributionsReminder,\n                reminderFields: getReminderFields(countryCode),\n            };\n        };\n        const primaryCta = bannerContent.cta\n            ? buildEnrichedCta(bannerContent.cta)\n            : null;\n        const secondaryCta = bannerContent.secondaryCta\n            ? buildEnrichedSecondaryCta(bannerContent.secondaryCta)\n            : null;\n        const cleanHighlightedText = bannerContent.highlightedText &&\n            replaceNonArticleCountPlaceholders(bannerContent.highlightedText, countryCode, prices).trim();\n        const cleanHeading = replaceNonArticleCountPlaceholders(bannerContent.heading, countryCode, prices).trim();\n        const cleanParagraphs = cleanParagraphsOrMessageText(bannerContent.paragraphs, bannerContent.messageText);\n        const copyHasPlaceholder = paragraphsContainNonArticleCountPlaceholder(cleanParagraphs) ||\n            (!!cleanHighlightedText &&\n                containsNonArticleCountPlaceholder(cleanHighlightedText)) ||\n            (!!cleanHeading &&\n                containsNonArticleCountPlaceholder(cleanHeading));\n        const headingWithArticleCount = cleanHeading\n            ? replaceArticleCount(cleanHeading, numArticles, 'banner')\n            : null;\n        const highlightedTextWithArticleCount = cleanHighlightedText\n            ? replaceArticleCount(cleanHighlightedText, numArticles, 'banner')\n            : null;\n        if (copyHasPlaceholder) {\n            throw Error('Banner copy contains placeholders, abandoning.');\n        }\n        return {\n            highlightedText: highlightedTextWithArticleCount,\n            paragraphs: finaliseParagraphs(cleanParagraphs),\n            heading: headingWithArticleCount,\n            primaryCta,\n            secondaryCta,\n        };\n    };\n    const clickHandlerFor = (componentId, close) => {\n        return () => {\n            const componentClickEvent = createClickEventFromTracking(tracking, componentId);\n            if (submitComponentEvent) {\n                submitComponentEvent(componentClickEvent);\n            }\n            if (close) {\n                onClose();\n            }\n        };\n    };\n    const onCtaClick = clickHandlerFor(componentIds.cta, true);\n    const onSecondaryCtaClick = clickHandlerFor(componentIds.secondaryCta, true);\n    const onReminderCtaClick = clickHandlerFor(componentIds.reminderCta, false);\n    const onReminderSetClick = clickHandlerFor(componentIds.reminderSet, false);\n    const onReminderCloseClick = clickHandlerFor(componentIds.reminderClose, false);\n    const onCloseClick = clickHandlerFor(componentIds.close, true);\n    const onNotNowClick = clickHandlerFor(componentIds.notNow, true);\n    const onSignInClick = clickHandlerFor(componentIds.signIn, false);\n    try {\n        const renderedContent = content && buildRenderedContent(content);\n        const renderedMobileContent = mobileContent && buildRenderedContent(mobileContent);\n        if (renderedContent) {\n            const props = {\n                onCtaClick,\n                onSecondaryCtaClick,\n                reminderTracking: {\n                    onReminderCtaClick,\n                    onReminderSetClick,\n                    onReminderCloseClick,\n                },\n                onCloseClick,\n                onSignInClick,\n                onNotNowClick,\n                content: {\n                    mainContent: renderedContent,\n                    mobileContent: renderedMobileContent ?? renderedContent,\n                },\n                countryCode,\n                fetchEmail,\n                tickerSettings,\n                isSupporter,\n                articleCounts,\n                separateArticleCount,\n                separateArticleCountSettings,\n                choiceCardAmounts,\n                tracking,\n                submitComponentEvent,\n                design,\n            };\n            return (_jsx(\"div\", { ref: setNode, children: _jsx(Banner, { ...props }) }));\n        }\n    }\n    catch (err) {\n        console.log(err);\n    }\n    return _jsx(_Fragment, {});\n};\nexport const bannerWrapper = (Banner, bannerId) => withCloseable(withBannerData(Banner, bannerId));\nconst validate = (props) => {\n    const result = bannerSchema.safeParse(props);\n    return result.success;\n};\nexport const validatedBannerWrapper = (Banner, bannerId) => {\n    return (props) => {\n        if (validate(props)) {\n            const Module = bannerWrapper(Banner, bannerId);\n            return _jsx(Module, { ...props });\n        }\n        return _jsx(_Fragment, {});\n    };\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n/**\n * @file\n * This file was migrated from:\n * https://github.com/guardian/support-dotcom-components/blob/0a2439b701586a7a2cc60dce10b4d96cf7a828db/packages/modules/src/modules/banners/signInPrompt/SignInPromptBanner.tsx\n */\nimport { css, ThemeProvider } from '@emotion/react';\nimport { brand, brandAlt, headlineBold20, headlineBold34, headlineMedium20, neutral, space, until, } from '@guardian/source/foundations';\nimport { Button, buttonThemeBrand, Column, Columns, Container, LinkButton, SvgRoundelBrandInverse, } from '@guardian/source/react-components';\nimport { SecondaryCtaType } from '@guardian/support-dotcom-components';\nimport { bannerWrapper, validatedBannerWrapper } from '../common/BannerWrapper';\nconst bannerStyles = css `\n\tbackground-color: ${brand[400]};\n\n\t::before {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tbackground: rgb(0, 0, 0, 0.3);\n\t\tz-index: -1;\n\t}\n`;\nconst mainColumn = css `\n\tposition: relative;\n`;\nconst asideColumn = css `\n\tmargin-right: 10px;\n`;\nconst headingStyles = css `\n\t${headlineBold34}\n\tfont-size: 32px;\n\tcolor: ${neutral[100]};\n\tmargin: ${space[1]}px 0 0;\n\t${until.phablet} {\n\t\tmargin: ${space[1]}px 45px 0 0;\n\t}\n`;\nconst subHeadingStyles = css `\n\t${headlineBold20};\n\tcolor: ${brandAlt[400]};\n\tmargin: ${space[2]}px 0;\n`;\nconst bulletStyles = css `\n\t${headlineMedium20};\n\tcolor: ${neutral[100]};\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tspan:not(:first-of-type) {\n\t\tmargin-top: 10px;\n\t}\n\n\tspan::before {\n\t\tcontent: '';\n\t\tdisplay: inline-block;\n\t\twidth: 15px;\n\t\theight: 15px;\n\t\tmargin-right: ${space[2]}px;\n\t\tbackground: ${brandAlt[400]};\n\t\tborder-radius: 50%;\n\t}\n`;\nconst actions = css `\n\tmargin: ${space[5]}px 0;\n`;\nconst closeButton = css `\n\tmargin-left: ${space[5]}px;\n`;\nconst logo = css `\n\tposition: absolute;\n\ttop: ${space[2]}px;\n\tright: 0px;\n\twidth: 42px;\n\theight: 42px;\n`;\nconst SignInPromptBanner = (props) => {\n    const { heading, paragraphs, primaryCta, secondaryCta } = props.content.mainContent;\n    const [subheading, ...bullets] = paragraphs;\n    return (_jsx(Container, { cssOverrides: bannerStyles, children: _jsxs(Columns, { children: [_jsx(Column, { width: [0, 0, 0, 2, 3], cssOverrides: asideColumn, children: ' ' }), _jsxs(Column, { width: [4, 12, 12, 12, 13], cssOverrides: mainColumn, children: [_jsx(\"h1\", { css: headingStyles, children: heading }), _jsx(\"h2\", { css: subHeadingStyles, children: subheading }), _jsx(\"div\", { css: bulletStyles, children: bullets }), _jsx(\"div\", { css: actions, children: _jsxs(ThemeProvider, { theme: buttonThemeBrand, children: [primaryCta && (_jsx(LinkButton, { priority: \"primary\", href: primaryCta.ctaUrl, onClick: props.onCtaClick, size: \"small\", children: primaryCta.ctaText })), secondaryCta &&\n                                        secondaryCta.type ===\n                                            SecondaryCtaType.Custom && (_jsx(Button, { priority: \"subdued\", size: \"small\", onClick: props.onCloseClick, cssOverrides: closeButton, children: secondaryCta.cta.ctaText }))] }) }), _jsx(\"div\", { css: logo, children: _jsx(SvgRoundelBrandInverse, {}) })] })] }) }));\n};\nconst unvalidated = bannerWrapper(SignInPromptBanner, 'sign-in-prompt-banner');\nconst validated = validatedBannerWrapper(SignInPromptBanner, 'sign-in-prompt-banner');\nexport { validated as SignInPromptBanner, unvalidated as SignInPromptBannerUnvalidated, };\n"],"names":["bannerChannelToLastClosedMap","contributions","subscriptions","signIn","abandonedBasket","withCloseable","CloseableBanner","bannerProps","eventHandler","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","onClose","channel","name","bannerChannel","storage","local","set","concat","Date","toISOString","document","body","focus","useEffect","handleEscapeKeydown","event","key","window","addEventListener","removeEventListener","_jsx","_objectSpread","_Fragment","withBannerData","Banner","bannerId","tracking","submitComponentEvent","content","mobileContent","countryCode","prices","fetchEmail","articleCounts","tickerSettings","isSupporter","separateArticleCount","separateArticleCountSettings","choiceCardAmounts","design","_useIsInView","useIsInView","debounce","threshold","_useIsInView2","hasBeenSeen","setNode","createViewEventFromTracking","campaignCode","createInsertEventFromTracking","numArticles","forTargetedWeeks","finaliseParagraphs","paras","map","p","replaceArticleCount","componentIds","close","cta","secondaryCta","notNow","reminderCta","reminderSet","reminderClose","getComponentIds","buildRenderedContent","bannerContent","text","buildEnrichedCta","isProfileUrl","baseUrl","ctaUrl","addTrackingParamsToProfileUrl","ctaText","addAbandonedBasketAndTrackingParamsToUrl","addRegionIdAndTrackingParamsToSupportUrl","primaryCta","type","SecondaryCtaType","Custom","ContributionsReminder","reminderFields","getReminderFields","buildEnrichedSecondaryCta","cleanHighlightedText","highlightedText","replaceNonArticleCountPlaceholders","trim","cleanHeading","heading","cleanParagraphs","paragraphs","messageText","bodyCopy","push","apply","_toConsumableArray","getParagraphsOrMessageText","copyHasPlaceholder","some","containsNonArticleCountPlaceholder","headingWithArticleCount","highlightedTextWithArticleCount","Error","clickHandlerFor","componentId","componentClickEvent","createClickEventFromTracking","onCtaClick","onSecondaryCtaClick","onReminderCtaClick","onReminderSetClick","onReminderCloseClick","onCloseClick","onNotNowClick","onSignInClick","renderedContent","renderedMobileContent","props","reminderTracking","mainContent","ref","children","err","console","log","bannerWrapper","validatedBannerWrapper","bannerSchema","safeParse","success","validate","Module","bannerStyles","css","brand","mainColumn","styles","asideColumn","headingStyles","headlineBold34","neutral","space","until","phablet","subHeadingStyles","headlineBold20","brandAlt","bulletStyles","headlineMedium20","actions","closeButton","logo","SignInPromptBanner","_props$content$mainCo","_paragraphs","_toArray","subheading","bullets","slice","Container","cssOverrides","_jsxs","Columns","Column","width","ThemeProvider","theme","buttonThemeBrand","LinkButton","priority","href","onClick","size","Button","SvgRoundelBrandInverse","unvalidated","validated"],"sourceRoot":""}