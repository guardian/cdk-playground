{"version":3,"file":"8908.client.web.legacy.8e3c88e5b78ecf70de7f.js","mappings":"0LACaA,EAAc,WAAH,OAASC,EAAAA,EAAAA,GAAmB,0BAA2B,C,wJCDxE,IAAMA,EAAqB,SAACC,GAC/B,IAAMC,GAAOC,EAAAA,EAAAA,GACNC,SAASC,iBAAiBJ,IAEjC,GAAuB,IAAnBC,EAAQI,OACR,OAAOC,QAAQC,UACnBC,OAAOC,iBAAiB,WAAW,SAACC,GAChC,IAAMC,EAASV,EAAQW,MAAK,SAACC,GACzB,IACI,OAAOA,EAAEC,OAASJ,EAAMK,OAAOD,IACnC,CACA,MAAOE,GACH,OAAO,CACX,CACJ,IACA,GAAIL,EACA,IAEI,IAAMM,EAAUC,KAAKC,MAAMT,EAAMU,MAExB,eADDH,EAAQI,OAERV,EAAOW,OAASL,EAAQM,MAIpC,CACA,MAAOP,GACH,CAGZ,IAAG,IACyBQ,EADzBC,E,64BAAAC,CACkBzB,GAAO,IAA5B,IAAAwB,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA8B,CAAC,IAADC,EAAnBnB,EAAMa,EAAAD,MACPQ,GAAoC,QAA9BD,EAACnB,EAAOqB,aAAa,iBAAS,IAAAF,EAAAA,EAAI,IACzCG,QAAQ,eAAgB,YACxBA,QAAQ,iBAAkB,cAC/BtB,EAAOuB,aAAa,SAAUH,EAClC,CAAC,OAAAI,GAAAV,EAAAT,EAAAmB,EAAA,SAAAV,EAAAW,GAAA,CACD,OAAO9B,QAAQC,SACnB,C","sources":["webpack://@guardian/dotcom-rendering/./src/client/embedIframe.ts","webpack://@guardian/dotcom-rendering/./src/client/updateIframeHeight.tsx"],"sourcesContent":["import { updateIframeHeight } from './updateIframeHeight';\nexport const embedIframe = () => updateIframeHeight('iframe.js-embed__iframe');\n","export const updateIframeHeight = (queryString) => {\n    const iframes = [\n        ...document.querySelectorAll(queryString),\n    ];\n    if (iframes.length === 0)\n        return Promise.resolve();\n    window.addEventListener('message', (event) => {\n        const iframe = iframes.find((i) => {\n            try {\n                return i.name === event.source.name;\n            }\n            catch (e) {\n                return false;\n            }\n        });\n        if (iframe) {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- weâ€™re in a try-catch\n                const message = JSON.parse(event.data);\n                switch (message.type) {\n                    case 'set-height':\n                        iframe.height = message.value;\n                        break;\n                    default:\n                }\n            }\n            catch (e) {\n                // do nothing\n            }\n        }\n    });\n    for (const iframe of iframes) {\n        const src = (iframe.getAttribute('srcdoc') ?? '')\n            .replace(/<gu-script>/g, '<script>')\n            .replace(/<\\/gu-script>/g, '<' + '/script>');\n        iframe.setAttribute('srcdoc', src);\n    }\n    return Promise.resolve();\n};\n"],"names":["embedIframe","updateIframeHeight","queryString","iframes","_toConsumableArray","document","querySelectorAll","length","Promise","resolve","window","addEventListener","event","iframe","find","i","name","source","e","message","JSON","parse","data","type","height","value","_step","_iterator","_createForOfIteratorHelper","s","n","done","_iframe$getAttribute","src","getAttribute","replace","setAttribute","err","f"],"sourceRoot":""}