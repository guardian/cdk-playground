{"version":3,"file":"DiscussionMeta-importable.client.web.80d524aab3023a24cdda.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/DiscussionMeta.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useApi.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAuthStatus.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCommentCount.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+bridget@8.1.0/node_modules/@guardian/bridget/SignInScreenReason.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+bridget@8.1.0/node_modules/@guardian/bridget/SignInScreenReferrer.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+libs@19.2.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/libs/dist/joinUrl/joinUrl.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/__generated__/breakpoints.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/foundations/mq/mq.js","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/@guardian+source@8.0.0_@emotion+react@11.11.3_@types+react@18.3.1_react@18.3.1_tslib@2.6.2_typescript@5.5.3/node_modules/@guardian/source/dist/react-components/button/LinkButton.js"],"sourcesContent":["import { joinUrl } from '@guardian/libs';\nimport type { GetDiscussionSuccess, UserProfile } from '../lib/discussion';\nimport { getOptionsHeadersWithOkta } from '../lib/identity';\nimport { useApi } from '../lib/useApi';\nimport { useAuthStatus } from '../lib/useAuthStatus';\nimport { useCommentCount } from '../lib/useCommentCount';\nimport { SignedInAs } from './SignedInAs';\n\ntype Props = {\n\tdiscussionApiUrl: string;\n\tshortUrlId: string;\n\tenableDiscussionSwitch: boolean;\n};\n\nexport const DiscussionMeta = ({\n\tdiscussionApiUrl,\n\tshortUrlId,\n\tenableDiscussionSwitch,\n}: Props) => {\n\tconst authStatus = useAuthStatus();\n\tconst commentCount = useCommentCount(discussionApiUrl, shortUrlId);\n\n\tconst { data: discussionData } = useApi<GetDiscussionSuccess>(\n\t\tjoinUrl(discussionApiUrl, 'discussion', shortUrlId),\n\t\t{\n\t\t\t// The default for dedupingInterval is 2 seconds but we want to wait longer here because the cache time\n\t\t\t// for a discussion is at least 15 seconds\n\t\t\tdedupingInterval: 8000,\n\t\t},\n\t);\n\n\tconst { data: userData } = useApi<{ userProfile: UserProfile }>(\n\t\tauthStatus.kind === 'SignedInWithOkta' ||\n\t\t\tauthStatus.kind === 'SignedInWithCookies'\n\t\t\t? joinUrl(\n\t\t\t\t\tdiscussionApiUrl,\n\t\t\t\t\t'profile/me?strict_sanctions_check=false',\n\t\t\t  )\n\t\t\t: undefined,\n\t\t{},\n\t\tauthStatus.kind === 'SignedInWithOkta' ||\n\t\t\tauthStatus.kind === 'SignedInWithCookies'\n\t\t\t? getOptionsHeadersWithOkta(authStatus)\n\t\t\t: undefined,\n\t);\n\n\treturn (\n\t\t<SignedInAs\n\t\t\tenableDiscussionSwitch={enableDiscussionSwitch}\n\t\t\tuser={userData?.userProfile}\n\t\t\tcommentCount={commentCount}\n\t\t\tisClosedForComments={discussionData?.discussion.isClosedForComments}\n\t\t/>\n\t);\n};\n","import { isUndefined } from '@guardian/libs';\nimport type { SWRConfiguration } from 'swr';\nimport useSWR from 'swr';\n\nfunction checkForErrors(response: Response) {\n\tif (!response.ok) {\n\t\tthrow Error(\n\t\t\tresponse.statusText ||\n\t\t\t\t`useApi | An api call returned HTTP status ${response.status}`,\n\t\t);\n\t}\n\treturn response;\n}\n\n/** **NOTE:** no parsing is done on the response, the type is merely asserted */\nconst fetcher =\n\t<T>(init?: RequestInit) =>\n\t(url: string): Promise<T> =>\n\t\tfetch(url, init)\n\t\t\t.then(checkForErrors)\n\t\t\t.then((res) => res.json());\n\ntype ApiResponse<T, E> = {\n\tloading: boolean;\n\tdata?: T;\n\terror?: E;\n};\n\n/**\n * A custom hook to make a GET request using the given url using the SWR lib (https://swr.vercel.app/).\n *\n * @template T assert the expected response type\n * @template E assert the potential error type\n * @param {string} url - The API endpoint. Falsy values will prevent any network requests\n * @param {SWRConfiguration<Data,Err>} options - The SWR config object - https://swr.vercel.app/docs/api#options\n * @param {RequestInit} init - The fetch init object - https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * @returns {ApiResponse<Data, Err>}\n * */\nexport const useApi = <Data = unknown, Err = Error>(\n\turl: string = '',\n\toptions?: SWRConfiguration<Data, Err>,\n\tinit?: RequestInit,\n): ApiResponse<Data, Err> => {\n\tconst { data, error } = useSWR<Data, Err>(url, fetcher(init), options);\n\n\treturn {\n\t\tdata,\n\t\terror,\n\t\tloading: !!url && isUndefined(error) && isUndefined(data),\n\t};\n};\n","import { useEffect, useState } from 'react';\nimport type { AuthStatus } from './identity';\nimport {\n\teitherInOktaTestOrElse,\n\tgetSignedInStatusWithCookies,\n\tgetSignedInStatusWithOkta,\n} from './identity';\n\n/**\n * A hook to find out if a user is signed in.\n * Returns `'Pending'` until status is known.\n * Always returns `'Pending'` during server-side rendering.\n * */\nexport const useIsSignedIn = (): boolean | 'Pending' => {\n\tconst authStatus = useAuthStatus();\n\tswitch (authStatus.kind) {\n\t\tcase 'Pending':\n\t\t\treturn 'Pending';\n\t\tcase 'SignedInWithCookies':\n\t\tcase 'SignedInWithOkta':\n\t\t\treturn true;\n\t\tcase 'SignedOutWithCookies':\n\t\tcase 'SignedOutWithOkta':\n\t\t\treturn false;\n\t}\n};\n\nexport const useAuthStatus = (): AuthStatus => {\n\tconst [authStatus, setAuthStatus] = useState<AuthStatus>({\n\t\tkind: 'Pending',\n\t});\n\n\tuseEffect(() => {\n\t\teitherInOktaTestOrElse(\n\t\t\t(oktaAuthState) => {\n\t\t\t\tsetAuthStatus(getSignedInStatusWithOkta(oktaAuthState));\n\t\t\t},\n\t\t\t() => setAuthStatus(getSignedInStatusWithCookies()),\n\t\t).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t}, []);\n\n\treturn authStatus;\n};\n","import { isNonNullable, isObject } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { useApi } from './useApi';\n\n/**\n * **Build an initial set of discussions**\n *\n * Setting this attribute helps build an initial set of discussion IDs.\n * Without it, there is a risk that each new usage of `useCommentCount`\n * leads to a distinct request to the discussion API\n */\nexport const DISCUSSION_ID_DATA_ATTRIBUTE = 'data-discussion-id';\n\n/**\n * We only want to create this set on a client, never on the server\n */\nlet uniqueDiscussionIds: Set<string> | undefined;\n\n/**\n * Create an initial set of IDs by reading what is in the DOM\n */\nconst getInitialIds = () =>\n\t[...document.querySelectorAll(`[${DISCUSSION_ID_DATA_ATTRIBUTE}]`)]\n\t\t.map((element) => element.getAttribute(DISCUSSION_ID_DATA_ATTRIBUTE))\n\t\t.filter(isNonNullable);\n\nexport const useCommentCount = (\n\tdiscussionApiUrl: string,\n\tshortUrl: string,\n): number | undefined => {\n\t// A falsy value prevents fetching: https://swr.vercel.app/docs/conditional-fetching#conditional\n\tconst [url, setUrl] = useState<string>();\n\n\tuseEffect(() => {\n\t\tuniqueDiscussionIds ??= new Set(getInitialIds());\n\t\tuniqueDiscussionIds.add(shortUrl);\n\n\t\tconst getCommentCountUrl = `${discussionApiUrl}/getCommentCounts?${new URLSearchParams(\n\t\t\t{\n\t\t\t\t'short-urls': [...uniqueDiscussionIds]\n\t\t\t\t\t.sort() // ensures identical sets produce the same query parameter\n\t\t\t\t\t.join(','),\n\t\t\t},\n\t\t).toString()}`;\n\n\t\tsetUrl(getCommentCountUrl);\n\t}, [discussionApiUrl, shortUrl]);\n\n\tconst { data } = useApi(url);\n\n\t/**\n\t * As per the endpoint, but let’s parse it\n\t * @see https://github.com/guardian/discussion-api/blob/73e805641f509c79d12f207aeb50c3f1fb58c886/discussion-api/src/main/scala/com.gu.discussion.api/repository/Discussion.scala#L233\n\t */\n\tconst count = isObject(data) ? data[shortUrl] : undefined;\n\treturn typeof count === 'number' ? count : undefined;\n};\n\n/** Ensure that we reduce the number of requests to get comment counts */\nexport const addDiscussionIds = (ids: string[]): void => {\n\tif (!uniqueDiscussionIds) return;\n\tfor (const id of ids) {\n\t\tuniqueDiscussionIds.add(id);\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignInScreenReason = void 0;\n/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.6\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n*/\nvar SignInScreenReason;\n(function (SignInScreenReason) {\n    SignInScreenReason[SignInScreenReason[\"accessDiscussion\"] = 0] = \"accessDiscussion\";\n    SignInScreenReason[SignInScreenReason[\"postComment\"] = 1] = \"postComment\";\n    SignInScreenReason[SignInScreenReason[\"recommendComment\"] = 2] = \"recommendComment\";\n    SignInScreenReason[SignInScreenReason[\"replyToComment\"] = 3] = \"replyToComment\";\n    SignInScreenReason[SignInScreenReason[\"reportComment\"] = 4] = \"reportComment\";\n})(SignInScreenReason || (exports.SignInScreenReason = SignInScreenReason = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignInScreenReferrer = void 0;\n/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.6\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n*/\nvar SignInScreenReferrer;\n(function (SignInScreenReferrer) {\n    SignInScreenReferrer[SignInScreenReferrer[\"accessDiscussion\"] = 0] = \"accessDiscussion\";\n    SignInScreenReferrer[SignInScreenReferrer[\"postComment\"] = 1] = \"postComment\";\n    SignInScreenReferrer[SignInScreenReferrer[\"recommendComment\"] = 2] = \"recommendComment\";\n    SignInScreenReferrer[SignInScreenReferrer[\"replyToComment\"] = 3] = \"replyToComment\";\n    SignInScreenReferrer[SignInScreenReferrer[\"reportComment\"] = 4] = \"reportComment\";\n})(SignInScreenReferrer || (exports.SignInScreenReferrer = SignInScreenReferrer = {}));\n","const multipleSlashesInRoute = /\\b\\/{2,}/g;\nconst joinUrl = (...args) => args.join(\"/\").replace(multipleSlashesInRoute, \"/\");\n\nexport { joinUrl };\n","const breakpoints = {\n  desktop: 980,\n  leftCol: 1140,\n  mobile: 320,\n  mobileLandscape: 480,\n  mobileMedium: 375,\n  phablet: 660,\n  tablet: 740,\n  wide: 1300\n};\n\nexport { breakpoints };\n","import { breakpoints } from '../__generated__/breakpoints.js';\n\nconst smidgen = 0.1;\nconst minWidth = (from2) => `@media (min-width: ${`${from2}px`})`;\nconst maxWidth = (until2) => `@media (max-width: ${`${until2 - smidgen}px`})`;\nconst minWidthMaxWidth = (from2, until2) => `@media (min-width: ${`${from2}px`}) and (max-width: ${`${until2 - smidgen}px`})`;\nconst from = {\n  mobile: minWidth(breakpoints.mobile),\n  mobileMedium: minWidth(breakpoints.mobileMedium),\n  mobileLandscape: minWidth(breakpoints.mobileLandscape),\n  phablet: minWidth(breakpoints.phablet),\n  tablet: minWidth(breakpoints.tablet),\n  desktop: minWidth(breakpoints.desktop),\n  leftCol: minWidth(breakpoints.leftCol),\n  wide: minWidth(breakpoints.wide)\n};\nconst until = {\n  mobile: maxWidth(breakpoints.mobile),\n  mobileMedium: maxWidth(breakpoints.mobileMedium),\n  mobileLandscape: maxWidth(breakpoints.mobileLandscape),\n  phablet: maxWidth(breakpoints.phablet),\n  tablet: maxWidth(breakpoints.tablet),\n  desktop: maxWidth(breakpoints.desktop),\n  leftCol: maxWidth(breakpoints.leftCol),\n  wide: maxWidth(breakpoints.wide)\n};\nconst between = {\n  mobile: {\n    and: {\n      mobileMedium: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileMedium\n      ),\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobile,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileMedium: {\n    and: {\n      mobileLandscape: minWidthMaxWidth(\n        breakpoints.mobileMedium,\n        breakpoints.mobileLandscape\n      ),\n      phablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n      tablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide)\n    }\n  },\n  mobileLandscape: {\n    and: {\n      phablet: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.phablet\n      ),\n      tablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n      desktop: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.desktop\n      ),\n      leftCol: minWidthMaxWidth(\n        breakpoints.mobileLandscape,\n        breakpoints.leftCol\n      ),\n      wide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide)\n    }\n  },\n  phablet: {\n    and: {\n      tablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n      desktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide)\n    }\n  },\n  tablet: {\n    and: {\n      desktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n      leftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide)\n    }\n  },\n  desktop: {\n    and: {\n      leftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n      wide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide)\n    }\n  },\n  leftCol: {\n    and: {\n      wide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide)\n    }\n  }\n};\n\nexport { between, from, until };\n","import { jsx } from '@emotion/react/jsx-runtime';\nimport { buttonContents } from './shared.js';\nimport { buttonStyles } from './styles.js';\n\nconst LinkButton = ({\n  priority,\n  size,\n  iconSide,\n  icon: iconSvg,\n  nudgeIcon,\n  hideLabel,\n  cssOverrides,\n  children,\n  theme,\n  ...props\n}) => /* @__PURE__ */ jsx(\n  \"a\",\n  {\n    css: buttonStyles({\n      size,\n      priority,\n      icon: iconSvg,\n      hideLabel,\n      iconSide,\n      nudgeIcon,\n      cssOverrides,\n      theme\n    }),\n    ...props,\n    children: buttonContents({\n      hideLabel,\n      iconSvg,\n      children\n    })\n  }\n);\n\nexport { LinkButton };\n"],"names":["DiscussionMeta","discussionApiUrl","shortUrlId","enableDiscussionSwitch","authStatus","useAuthStatus","commentCount","useCommentCount","data","discussionData","useApi","joinUrl","dedupingInterval","userData","kind","undefined","getOptionsHeadersWithOkta","SignedInAs","user","userProfile","isClosedForComments","discussion","checkForErrors","response","ok","Error","statusText","status","url","options","init","error","useSWR","fetch","then","res","json","fetcher","loading","isUndefined","useIsSignedIn","setAuthStatus","useState","useEffect","eitherInOktaTestOrElse","oktaAuthState","getSignedInStatusWithOkta","getSignedInStatusWithCookies","catch","console","DISCUSSION_ID_DATA_ATTRIBUTE","uniqueDiscussionIds","shortUrl","setUrl","Set","document","querySelectorAll","map","element","getAttribute","filter","isNonNullable","add","getCommentCountUrl","URLSearchParams","sort","join","toString","count","isObject","addDiscussionIds","ids","id","SignInScreenReason","Object","defineProperty","exports","value","SignInScreenReferrer","multipleSlashesInRoute","args","replace","breakpoints","desktop","leftCol","mobile","mobileLandscape","mobileMedium","phablet","tablet","wide","minWidth","from2","maxWidth","until2","minWidthMaxWidth","from","until","between","and","LinkButton","priority","size","iconSide","icon","iconSvg","nudgeIcon","hideLabel","cssOverrides","children","theme","props","jsx","css","buttonStyles","buttonContents"],"sourceRoot":""}