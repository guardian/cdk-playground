{"version":3,"file":"8568.client.web.778e7225e901729cb4ad.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/Answers.tsx","webpack://@guardian/dotcom-rendering/./src/components/SharingIcons.tsx","webpack://@guardian/dotcom-rendering/./src/lib/articleFormat.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport {\n\tarticle17,\n\tpalette,\n\tspace,\n\ttextSans14,\n\ttextSans17,\n} from '@guardian/source/foundations';\nimport { SvgCheckmark, SvgCross } from '@guardian/source/react-components';\nimport { ArticleSpecial, type ArticleTheme } from '../lib/articleFormat';\nimport { palette as schemedPalette } from '../palette';\n\n// We export Radio wrapper styles to override Source Radio buttons to align\n// with our custom answers for the quiz\nexport const radioButtonWrapperStyles = (theme: ArticleTheme) => css`\n\t> fieldset > div > div {\n\t\tpadding: 0;\n\t\talign-items: center;\n\t\tmargin-bottom: ${space[2]}px;\n\t}\n\n\tlabel {\n\t\tpadding-top: ${space[3]}px;\n\t\tpadding-bottom: ${space[3]}px;\n\t\tpadding-left: ${space[2]}px;\n\t\tpadding-right: ${space[2]}px;\n\t\tbackground-color: ${schemedPalette('--quiz-atom-answers-background')};\n\n\t\t:hover {\n\t\t\tbackground-color: ${schemedPalette('--quiz-atom-answers-hover')};\n\t\t}\n\t\t/* TODO: apply same styles on focus (requires source update) */\n\n\t\tdiv {\n\t\t\tcolor: inherit;\n\t\t\t${fontStyles(theme)};\n\t\t}\n\t}\n`;\n\nconst fontStyles = (theme: ArticleTheme) =>\n\ttheme === ArticleSpecial.Labs ? textSans17 : article17;\n\nconst answerWithSVGStyles = css`\n\tmargin-bottom: ${space[2]}px;\n\n\tpadding-top: ${space[2]}px;\n\tpadding-bottom: ${space[3]}px;\n\tpadding-right: ${space[4]}px;\n\tpadding-left: ${space[3]}px;\n`;\n\nconst WhiteCheckmark = () => (\n\t<div\n\t\tcss={css`\n\t\t\tmargin-right: ${space[1]}px;\n\n\t\t\theight: ${space[6]}px;\n\t\t\tsvg {\n\t\t\t\tfill: ${palette.neutral[100]};\n\t\t\t\theight: ${space[6]}px;\n\t\t\t\twidth: ${space[6]}px;\n\t\t\t}\n\t\t`}\n\t>\n\t\t<SvgCheckmark />\n\t</div>\n);\n\nconst BlackCheckmark = () => (\n\t<div\n\t\tcss={css`\n\t\t\tmargin-right: ${space[1]}px;\n\n\t\t\theight: ${space[6]}px;\n\t\t\tsvg {\n\t\t\t\tfill: ${schemedPalette('--quiz-atom-check-mark')};\n\t\t\t\theight: ${space[6]}px;\n\t\t\t\twidth: ${space[6]}px;\n\t\t\t}\n\t\t`}\n\t>\n\t\t<SvgCheckmark />\n\t</div>\n);\n\nconst WhiteCross = () => (\n\t<div\n\t\tcss={css`\n\t\t\tmargin-right: ${space[1]}px;\n\n\t\t\theight: ${space[6]}px;\n\t\t\tsvg {\n\t\t\t\tfill: ${palette.neutral[100]};\n\t\t\t\theight: ${space[6]}px;\n\t\t\t\twidth: ${space[6]}px;\n\t\t\t}\n\t\t`}\n\t>\n\t\t<SvgCross />\n\t</div>\n);\n\nconst WhiteText = ({\n\ttext,\n\tsupplementText,\n\tid,\n\tanswerType,\n\ttheme,\n}: {\n\tid: string;\n\ttext: string;\n\tsupplementText?: string;\n\tanswerType: string;\n\ttheme: ArticleTheme;\n}) => (\n\t<label\n\t\tcss={css`\n\t\t\tcolor: ${palette.neutral[100]};\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\n\t\t\t${fontStyles(theme)};\n\t\t`}\n\t\tdata-testid={id}\n\t\tdata-answer-type={answerType}\n\t>\n\t\t<span\n\t\t\tcss={css`\n\t\t\t\t${fontStyles(theme)};\n\t\t\t`}\n\t\t>\n\t\t\t{text}\n\t\t</span>\n\t\t{!!supplementText && (\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\t${textSans14}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t{supplementText}\n\t\t\t</span>\n\t\t)}\n\t</label>\n);\n\nconst BlackText = ({\n\ttext,\n\tsupplementText,\n\tid,\n\tanswerType,\n\ttheme,\n}: {\n\tid: string;\n\ttext: string;\n\tsupplementText?: string;\n\tanswerType: string;\n\ttheme: ArticleTheme;\n}) => (\n\t<label\n\t\tcss={css`\n\t\t\tcolor: inherit;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\n\t\t\t${fontStyles(theme)};\n\t\t`}\n\t\tdata-testid={id}\n\t\tdata-answer-type={answerType}\n\t>\n\t\t<span\n\t\t\tcss={css`\n\t\t\t\t${fontStyles(theme)};\n\t\t\t`}\n\t\t>\n\t\t\t{text}\n\t\t</span>\n\t\t{!!supplementText && (\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\t${textSans14}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t{supplementText}\n\t\t\t</span>\n\t\t)}\n\t</label>\n);\n\nconst correctSelectedAnswerStyles = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\n\tbackground-color: ${palette.success[400]};\n`;\n\nexport const CorrectSelectedAnswer = ({\n\tanswerText,\n\texplainerText,\n\tid,\n\ttheme,\n}: {\n\tanswerText: string;\n\texplainerText: string;\n\tid: string;\n\ttheme: ArticleTheme;\n}) => (\n\t<div css={[answerWithSVGStyles, correctSelectedAnswerStyles]}>\n\t\t<WhiteCheckmark />\n\t\t<WhiteText\n\t\t\tid={id}\n\t\t\ttext={answerText}\n\t\t\tsupplementText={explainerText}\n\t\t\tanswerType=\"correct-selected-answer\"\n\t\t\ttheme={theme}\n\t\t/>\n\t</div>\n);\n\nconst incorrectSelectedAnswerStyles = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\n\tbackground-color: ${schemedPalette(\n\t\t'--quiz-atom-incorrect-answer-background',\n\t)};\n`;\n\nexport const IncorrectAnswer = ({\n\tanswerText,\n\tid,\n\ttheme,\n}: {\n\tanswerText: string;\n\tid: string;\n\ttheme: ArticleTheme;\n}) => (\n\t<div css={[answerWithSVGStyles, incorrectSelectedAnswerStyles]}>\n\t\t<WhiteCross />\n\t\t<WhiteText\n\t\t\tid={id}\n\t\t\ttext={answerText}\n\t\t\tanswerType=\"incorrect-answer\"\n\t\t\ttheme={theme}\n\t\t/>\n\t</div>\n);\n\nconst correctNonSelectedAnswerStyles = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\tborder: 2px solid ${palette.success[400]};\n\tpadding-left: 10px;\n\n\tbackground-color: ${schemedPalette('--quiz-atom-answers-background')};\n`;\n\nexport const NonSelectedCorrectAnswer = ({\n\tanswerText,\n\texplainerText,\n\tid,\n\ttheme,\n}: {\n\tanswerText: string;\n\texplainerText: string;\n\tid: string;\n\ttheme: ArticleTheme;\n}) => (\n\t<div css={[answerWithSVGStyles, correctNonSelectedAnswerStyles]}>\n\t\t<BlackCheckmark />\n\t\t<BlackText\n\t\t\tid={id}\n\t\t\ttext={answerText}\n\t\t\tsupplementText={explainerText}\n\t\t\tanswerType=\"non-selected-correct-answer\"\n\t\t\ttheme={theme}\n\t\t/>\n\t</div>\n);\n\nconst unselectedAnswerStyles = css`\n\tbackground-color: ${schemedPalette('--quiz-atom-answers-background')};\n\tmargin-bottom: ${space[2]}px;\n\n\tpadding-top: ${space[2]}px;\n\tpadding-bottom: ${space[3]}px;\n\tpadding-right: ${space[2]}px;\n\tpadding-left: ${space[9]}px;\n`;\n\nexport const UnselectedAnswer = ({\n\tid,\n\tanswerText,\n\ttheme,\n}: {\n\tanswerText: string;\n\tid: string;\n\ttheme: ArticleTheme;\n}) => (\n\t<div css={unselectedAnswerStyles}>\n\t\t<BlackText\n\t\t\tid={id}\n\t\t\ttext={answerText}\n\t\t\tanswerType=\"unselected-disabled-answer\"\n\t\t\ttheme={theme}\n\t\t/>\n\t</div>\n);\n","import { css } from '@emotion/react';\nimport { from } from '@guardian/source/foundations';\nimport {\n\tLinkButton,\n\tSvgEnvelope,\n\tSvgFacebook,\n\tSvgFacebookMessenger,\n\tSvgLinkedIn,\n\tSvgPinterest,\n\tSvgTwitter,\n\tSvgWhatsApp,\n} from '@guardian/source/react-components';\nimport type { IconProps } from '@guardian/source/react-components';\nimport type { SharePlatformType } from '../types/content';\n\nconst shareIconList = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\t${from.wide} {\n\t\tflex: auto;\n\t}\n\n\ta {\n\t\tmargin-right: 5px;\n\t}\n`;\n\nconst mobileOnlyShareIconsListItem = css`\n\t${from.phablet} {\n\t\tdisplay: none;\n\t}\n`;\n\nexport interface ShareListItemType {\n\tid: SharePlatformType;\n\tIcon: React.ComponentType;\n\turl: string;\n\tuserMessage: string;\n\tmobileOnly: boolean;\n}\n\nexport const SharingIcons = ({\n\tsharingUrls,\n\tdisplayIcons,\n}: {\n\tsharingUrls: {\n\t\t[K in SharePlatformType]?: {\n\t\t\turl: string;\n\t\t\tuserMessage: string;\n\t\t};\n\t};\n\tdisplayIcons: SharePlatformType[];\n}) => {\n\tconst icons: {\n\t\t[K in SharePlatformType]?: React.ComponentType<IconProps>;\n\t} = {\n\t\tfacebook: SvgFacebook,\n\t\ttwitter: SvgTwitter,\n\t\temail: SvgEnvelope,\n\t\twhatsApp: SvgWhatsApp,\n\t\tmessenger: SvgFacebookMessenger,\n\t\tlinkedIn: SvgLinkedIn,\n\t\tpinterest: SvgPinterest,\n\t};\n\n\tconst mobileOnlyIcons: SharePlatformType[] = ['whatsApp', 'messenger'];\n\n\tconst shareList = displayIcons.reduce((list: ShareListItemType[], id) => {\n\t\tconst icon = icons[id];\n\t\tconst sharingUrl = sharingUrls[id];\n\n\t\tif (icon && sharingUrl) {\n\t\t\tconst listItem: ShareListItemType = {\n\t\t\t\tid,\n\t\t\t\tIcon: icon,\n\t\t\t\tmobileOnly: mobileOnlyIcons.includes(id),\n\t\t\t\t...sharingUrl,\n\t\t\t};\n\t\t\tlist.push(listItem);\n\t\t}\n\n\t\treturn list;\n\t}, []);\n\n\treturn (\n\t\t<div css={shareIconList}>\n\t\t\t{shareList.map((shareListItem) => {\n\t\t\t\tconst { Icon, id, url, userMessage, mobileOnly } =\n\t\t\t\t\tshareListItem;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tcss={mobileOnly ? mobileOnlyShareIconsListItem : ''}\n\t\t\t\t\t\tkey={`${id}Share`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<LinkButton\n\t\t\t\t\t\t\thideLabel={true}\n\t\t\t\t\t\t\thref={url}\n\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\taria-label={userMessage}\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\ticon={<Icon />}\n\t\t\t\t\t\t\tpriority=\"tertiary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tdata-ignore=\"global-link-styling\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{userMessage}\n\t\t\t\t\t\t</LinkButton>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n","import { isString } from '@guardian/libs';\nimport type { FEDesign, FEDisplay, FEFormat, FETheme } from '../types/frontend';\n\nexport enum ArticleDesign {\n\tStandard,\n\tPicture,\n\tGallery,\n\tAudio,\n\tVideo,\n\tReview,\n\tAnalysis,\n\tExplainer,\n\tComment,\n\tLetter,\n\tFeature,\n\tLiveBlog,\n\tDeadBlog,\n\tRecipe,\n\tMatchReport,\n\tInterview,\n\tEditorial,\n\tQuiz,\n\tInteractive,\n\tPhotoEssay,\n\tObituary,\n\tCorrection,\n\tFullPageInteractive,\n\tNewsletterSignup,\n\tTimeline,\n\tProfile,\n}\n\nexport enum ArticleDisplay {\n\tStandard,\n\tImmersive,\n\tShowcase,\n\tNumberedList,\n}\n\nexport enum Pillar {\n\tNews = 0,\n\tOpinion = 1,\n\tSport = 2,\n\tCulture = 3,\n\tLifestyle = 4,\n}\n\nexport enum ArticleSpecial {\n\tSpecialReport = 5,\n\tLabs = 6,\n\tSpecialReportAlt = 7,\n}\n\nexport type ArticleTheme = Pillar | ArticleSpecial;\n\nexport interface ArticleFormat {\n\ttheme: ArticleTheme;\n\tdesign: ArticleDesign;\n\tdisplay: ArticleDisplay;\n}\n\n/**\n * NOTE: Immersive Opinion pieces are not supported,\n * i.e. when `CommentDesign` and `ImmersiveDisplay` are used jointly.\n */\nexport const decideDesign = ({ design }: Partial<FEFormat>): ArticleDesign => {\n\tswitch (design) {\n\t\tcase 'ArticleDesign':\n\t\t\treturn ArticleDesign.Standard;\n\t\tcase 'PictureDesign':\n\t\t\treturn ArticleDesign.Picture;\n\t\tcase 'GalleryDesign':\n\t\t\treturn ArticleDesign.Gallery;\n\t\tcase 'AudioDesign':\n\t\t\treturn ArticleDesign.Audio;\n\t\tcase 'VideoDesign':\n\t\t\treturn ArticleDesign.Video;\n\t\tcase 'ReviewDesign':\n\t\t\treturn ArticleDesign.Review;\n\t\tcase 'AnalysisDesign':\n\t\t\treturn ArticleDesign.Analysis;\n\t\tcase 'CommentDesign':\n\t\t\treturn ArticleDesign.Comment;\n\t\tcase 'LetterDesign':\n\t\t\treturn ArticleDesign.Letter;\n\t\tcase 'FeatureDesign':\n\t\t\treturn ArticleDesign.Feature;\n\t\tcase 'LiveBlogDesign':\n\t\t\treturn ArticleDesign.LiveBlog;\n\t\tcase 'DeadBlogDesign':\n\t\t\treturn ArticleDesign.DeadBlog;\n\t\tcase 'RecipeDesign':\n\t\t\treturn ArticleDesign.Recipe;\n\t\tcase 'MatchReportDesign':\n\t\t\treturn ArticleDesign.MatchReport;\n\t\tcase 'InterviewDesign':\n\t\t\treturn ArticleDesign.Interview;\n\t\tcase 'EditorialDesign':\n\t\t\treturn ArticleDesign.Editorial;\n\t\tcase 'QuizDesign':\n\t\t\treturn ArticleDesign.Quiz;\n\t\tcase 'InteractiveDesign':\n\t\t\treturn ArticleDesign.Interactive;\n\t\tcase 'PhotoEssayDesign':\n\t\t\treturn ArticleDesign.PhotoEssay;\n\t\tcase 'ObituaryDesign':\n\t\t\treturn ArticleDesign.Obituary;\n\t\tcase 'FullPageInteractiveDesign':\n\t\t\treturn ArticleDesign.FullPageInteractive;\n\t\tcase 'NewsletterSignupDesign':\n\t\t\treturn ArticleDesign.NewsletterSignup;\n\t\tcase 'ExplainerDesign':\n\t\t\treturn ArticleDesign.Explainer;\n\t\tcase 'TimelineDesign':\n\t\t\treturn ArticleDesign.Timeline;\n\t\tcase 'ProfileDesign':\n\t\t\treturn ArticleDesign.Profile;\n\t\tdefault:\n\t\t\treturn ArticleDesign.Standard;\n\t}\n};\n\nconst decideDisplay = ({\n\tdisplay,\n\tdesign,\n}: Partial<FEFormat>): ArticleDisplay => {\n\tswitch (display) {\n\t\tcase 'StandardDisplay':\n\t\t\treturn ArticleDisplay.Standard;\n\t\tcase 'ImmersiveDisplay':\n\t\t\t// Temporary hack until we can handle Immersive Comment pieces\n\t\t\treturn design === 'CommentDesign'\n\t\t\t\t? ArticleDisplay.Standard\n\t\t\t\t: ArticleDisplay.Immersive;\n\t\tcase 'ShowcaseDisplay':\n\t\t\treturn ArticleDisplay.Showcase;\n\t\tcase 'NumberedListDisplay':\n\t\t\treturn ArticleDisplay.NumberedList;\n\t\tdefault:\n\t\t\treturn ArticleDisplay.Standard;\n\t}\n};\n\nexport const decideTheme = ({ theme }: Partial<FEFormat>): ArticleTheme => {\n\tswitch (theme) {\n\t\tcase 'NewsPillar':\n\t\t\treturn Pillar.News;\n\t\tcase 'OpinionPillar':\n\t\t\treturn Pillar.Opinion;\n\t\tcase 'SportPillar':\n\t\t\treturn Pillar.Sport;\n\t\tcase 'CulturePillar':\n\t\t\treturn Pillar.Culture;\n\t\tcase 'LifestylePillar':\n\t\t\treturn Pillar.Lifestyle;\n\t\tcase 'SpecialReportTheme':\n\t\t\treturn ArticleSpecial.SpecialReport;\n\t\tcase 'SpecialReportAltTheme':\n\t\t\treturn ArticleSpecial.SpecialReportAlt;\n\t\tcase 'Labs':\n\t\t\treturn ArticleSpecial.Labs;\n\t\tdefault:\n\t\t\treturn Pillar.News;\n\t}\n};\n\nexport const decideFormat = (format: Partial<FEFormat>): ArticleFormat => ({\n\tdesign: decideDesign(format),\n\tdisplay: decideDisplay(format),\n\ttheme: decideTheme(format),\n});\n\nexport const getThemeNameAsString = (format: ArticleFormat): string => {\n\tconst themeName = Pillar[format.theme] ?? ArticleSpecial[format.theme];\n\tif (!themeName) throw new Error('Unknown theme');\n\treturn themeName;\n};\n\n/**\n * We need a type guard because TypeScript enums are (confusingly)\n * returning both strings and numbers.\n */\nconst isTheme = (theme: string | ArticleTheme): theme is ArticleTheme =>\n\t!isString(theme);\n\nconst isDesign = (design: string | ArticleDesign): design is ArticleDesign =>\n\t!isString(design);\n\nexport const getAllThemes = ({\n\tdisplay,\n\tdesign,\n}: {\n\tdisplay: ArticleDisplay;\n\tdesign: ArticleDesign;\n}): Array<ArticleFormat> =>\n\tObject.values({ ...Pillar, ...ArticleSpecial })\n\t\t.filter(isTheme)\n\t\t.map((theme) => ({\n\t\t\ttheme,\n\t\t\tdisplay,\n\t\t\tdesign,\n\t\t}));\n\nexport const getAllDesigns = ({\n\tdisplay,\n\ttheme,\n}: {\n\tdisplay: ArticleDisplay;\n\ttheme: ArticleTheme;\n}): Array<ArticleFormat> =>\n\tObject.values({ ...ArticleDesign })\n\t\t.filter(isDesign)\n\t\t.map((design) => ({\n\t\t\ttheme,\n\t\t\tdisplay,\n\t\t\tdesign,\n\t\t}));\n\nconst designToFEDesign = (design: ArticleDesign): FEDesign => {\n\tswitch (design) {\n\t\tcase ArticleDesign.Standard:\n\t\t// Correction doesn't exist in `FEFormat`.\n\t\tcase ArticleDesign.Correction:\n\t\t\treturn 'ArticleDesign';\n\t\tcase ArticleDesign.Picture:\n\t\t\treturn 'PictureDesign';\n\t\tcase ArticleDesign.Gallery:\n\t\t\treturn 'GalleryDesign';\n\t\tcase ArticleDesign.Audio:\n\t\t\treturn 'AudioDesign';\n\t\tcase ArticleDesign.Video:\n\t\t\treturn 'VideoDesign';\n\t\tcase ArticleDesign.Review:\n\t\t\treturn 'ReviewDesign';\n\t\tcase ArticleDesign.Analysis:\n\t\t\treturn 'AnalysisDesign';\n\t\tcase ArticleDesign.Explainer:\n\t\t\treturn 'ExplainerDesign';\n\t\tcase ArticleDesign.Comment:\n\t\t\treturn 'CommentDesign';\n\t\tcase ArticleDesign.Letter:\n\t\t\treturn 'LetterDesign';\n\t\tcase ArticleDesign.Feature:\n\t\t\treturn 'FeatureDesign';\n\t\tcase ArticleDesign.LiveBlog:\n\t\t\treturn 'LiveBlogDesign';\n\t\tcase ArticleDesign.DeadBlog:\n\t\t\treturn 'DeadBlogDesign';\n\t\tcase ArticleDesign.Recipe:\n\t\t\treturn 'RecipeDesign';\n\t\tcase ArticleDesign.MatchReport:\n\t\t\treturn 'MatchReportDesign';\n\t\tcase ArticleDesign.Interview:\n\t\t\treturn 'InterviewDesign';\n\t\tcase ArticleDesign.Editorial:\n\t\t\treturn 'EditorialDesign';\n\t\tcase ArticleDesign.Quiz:\n\t\t\treturn 'QuizDesign';\n\t\tcase ArticleDesign.Interactive:\n\t\t\treturn 'InteractiveDesign';\n\t\tcase ArticleDesign.PhotoEssay:\n\t\t\treturn 'PhotoEssayDesign';\n\t\tcase ArticleDesign.Obituary:\n\t\t\treturn 'ObituaryDesign';\n\t\tcase ArticleDesign.FullPageInteractive:\n\t\t\treturn 'FullPageInteractiveDesign';\n\t\tcase ArticleDesign.NewsletterSignup:\n\t\t\treturn 'NewsletterSignupDesign';\n\t\tcase ArticleDesign.Timeline:\n\t\t\treturn 'TimelineDesign';\n\t\tcase ArticleDesign.Profile:\n\t\t\treturn 'ProfileDesign';\n\t}\n};\n\nconst displayToFEDisplay = (display: ArticleDisplay): FEDisplay => {\n\tswitch (display) {\n\t\tcase ArticleDisplay.Standard:\n\t\t\treturn 'StandardDisplay';\n\t\tcase ArticleDisplay.Immersive:\n\t\t\treturn 'ImmersiveDisplay';\n\t\tcase ArticleDisplay.Showcase:\n\t\t\treturn 'ShowcaseDisplay';\n\t\tcase ArticleDisplay.NumberedList:\n\t\t\treturn 'NumberedListDisplay';\n\t}\n};\n\nconst themeToFETheme = (theme: ArticleTheme): FETheme => {\n\tswitch (theme) {\n\t\tcase Pillar.News:\n\t\t\treturn 'NewsPillar';\n\t\tcase Pillar.Opinion:\n\t\t\treturn 'OpinionPillar';\n\t\tcase Pillar.Sport:\n\t\t\treturn 'SportPillar';\n\t\tcase Pillar.Culture:\n\t\t\treturn 'CulturePillar';\n\t\tcase Pillar.Lifestyle:\n\t\t\treturn 'LifestylePillar';\n\t\tcase ArticleSpecial.SpecialReport:\n\t\t\treturn 'SpecialReportTheme';\n\t\tcase ArticleSpecial.Labs:\n\t\t\treturn 'Labs';\n\t\tcase ArticleSpecial.SpecialReportAlt:\n\t\t\treturn 'SpecialReportAltTheme';\n\t}\n};\n\nexport const formatToFEFormat = ({\n\tdesign,\n\tdisplay,\n\ttheme,\n}: ArticleFormat): FEFormat => ({\n\tdesign: designToFEDesign(design),\n\tdisplay: displayToFEDisplay(display),\n\ttheme: themeToFETheme(theme),\n});\n\n/**\n * Creates a string representation of {@linkcode ArticleFormat}. Useful for\n * logging, storybook UI etc.\n *\n * @param format An {@linkcode ArticleFormat}\n * @returns A string representation of `ArticleFormat`\n */\nexport const formatToString = ({\n\tdesign,\n\tdisplay,\n\ttheme,\n}: ArticleFormat): string =>\n\t[\n\t\t`${ArticleDesign[design]} Design`,\n\t\t`${ArticleDisplay[display]} Display`,\n\t\t`and ${Pillar[theme] ?? ArticleSpecial[theme]} Theme`,\n\t].join(', ');\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n"],"names":["radioButtonWrapperStyles","theme","css","space","schemedPalette","fontStyles","ArticleSpecial","Labs","textSans17","article17","answerWithSVGStyles","WhiteCheckmark","div","palette","neutral","SvgCheckmark","BlackCheckmark","WhiteCross","SvgCross","WhiteText","text","supplementText","id","answerType","label","data-testid","data-answer-type","span","textSans14","BlackText","correctSelectedAnswerStyles","success","CorrectSelectedAnswer","answerText","explainerText","incorrectSelectedAnswerStyles","IncorrectAnswer","correctNonSelectedAnswerStyles","NonSelectedCorrectAnswer","unselectedAnswerStyles","UnselectedAnswer","shareIconList","from","wide","mobileOnlyShareIconsListItem","phablet","SharingIcons","sharingUrls","displayIcons","icons","facebook","SvgFacebook","twitter","SvgTwitter","email","SvgEnvelope","whatsApp","SvgWhatsApp","messenger","SvgFacebookMessenger","linkedIn","SvgLinkedIn","pinterest","SvgPinterest","mobileOnlyIcons","shareList","reduce","list","icon","sharingUrl","listItem","Icon","mobileOnly","includes","push","map","shareListItem","url","userMessage","LinkButton","hideLabel","href","role","aria-label","target","rel","priority","size","data-ignore","ArticleDesign","ArticleDisplay","Pillar","decideDesign","design","decideDisplay","display","decideTheme","decideFormat","format","colour"],"sourceRoot":""}