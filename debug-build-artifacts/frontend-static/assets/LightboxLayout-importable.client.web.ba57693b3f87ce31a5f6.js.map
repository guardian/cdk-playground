{"version":3,"file":"LightboxLayout-importable.client.web.ba57693b3f87ce31a5f6.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/LightboxCaption.tsx","webpack://@guardian/dotcom-rendering/./src/components/LightboxLoader.tsx","webpack://@guardian/dotcom-rendering/./src/components/LightboxImages.tsx","webpack://@guardian/dotcom-rendering/./src/components/LightboxJavascript.tsx","webpack://@guardian/dotcom-rendering/./src/components/LightboxLayout.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/getZIndex.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { css } from '@emotion/react';\nimport {\n\tspace,\n\tpalette as srcPalette,\n\ttextSans14,\n} from '@guardian/source/foundations';\nimport { palette } from '../palette';\n\ntype Props = {\n\tcaptionText?: string;\n\tcredit?: string;\n\tdisplayCredit?: boolean;\n};\n\nexport const LightboxCaption = ({\n\tcaptionText,\n\tcredit,\n\tdisplayCredit,\n}: Props) => {\n\treturn (\n\t\t<figcaption\n\t\t\tcss={css`\n\t\t\t\t${textSans14};\n\t\t\t\tline-height: 135%;\n\t\t\t\toverflow-wrap: break-all;\n\t\t\t\tpadding-top: ${space[2]}px;\n\t\t\t\tpadding-bottom: ${space[2]}px;\n\t\t\t\tborder-top: 3px solid ${palette('--lightbox-divider')};\n\t\t\t`}\n\t\t>\n\t\t\t{!!captionText && (\n\t\t\t\t<span\n\t\t\t\t\tcss={[\n\t\t\t\t\t\tcss`\n\t\t\t\t\t\t\tcolor: ${srcPalette.neutral[97]};\n\t\t\t\t\t\t\ta {\n\t\t\t\t\t\t\t\tcolor: inherit;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstrong {\n\t\t\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t`,\n\t\t\t\t\t]}\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: captionText || '',\n\t\t\t\t\t}}\n\t\t\t\t\tkey=\"caption\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{!!credit && displayCredit && (\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\tcolor: ${srcPalette.neutral[60]};\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{credit}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</figcaption>\n\t);\n};\n","import { css, keyframes } from '@emotion/react';\nimport { palette } from '@guardian/source/foundations';\n\nconst flash = keyframes`\n\t0% {\n\t\tbackground-color: ${palette.neutral[46]};\n\t\tbox-shadow: 26px 0 ${palette.neutral[46]}, -26px 0 ${palette.neutral[100]};\n\t}\n\t50% {\n\t\tbackground-color: ${palette.neutral[100]};\n\t\tbox-shadow: 26px 0 ${palette.neutral[46]}, -26px 0 ${palette.neutral[46]};\n\t}\n\t100% {\n\t\tbackground-color: ${palette.neutral[46]};\n\t\tbox-shadow: 26px 0 ${palette.neutral[100]}, -26px 0 ${palette.neutral[46]};\n\t}\n`;\n\n/**\n * Three pulsing pamplemouse pips\n *\n * This component is designed to look like the pamplemouse loader in frontend.\n * @see https://github.com/guardian/frontend/blob/main/static/src/stylesheets/module/_loader.scss\n *\n * Pamplemouse? Pretty sure it was only called this to ensure the classnames were unique\n */\nexport const LightboxLoader = () => {\n\treturn (\n\t\t<div\n\t\t\tcss={css`\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\tbackground-color: ${palette.neutral[10]};\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t`}\n\t\t>\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\twidth: 12px;\n\t\t\t\t\theight: 12px;\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\tbackground-color: ${palette.neutral[100]};\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t26px 0 ${palette.neutral[100]},\n\t\t\t\t\t\t-26px 0 ${palette.neutral[100]};\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tanimation: ${flash} 0.5s ease-out infinite alternate;\n\t\t\t\t\t@media (prefers-reduced-motion) {\n\t\t\t\t\t\tanimation: none;\n\t\t\t\t\t}\n\t\t\t\t`}\n\t\t\t></span>\n\t\t</div>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { isUndefined, log, timeAgo } from '@guardian/libs';\nimport {\n\tfrom,\n\theadlineLight24,\n\tpalette,\n\tspace,\n\ttextSans14,\n\tuntil,\n\tvisuallyHidden,\n} from '@guardian/source/foundations';\nimport { Hide, Link } from '@guardian/source/react-components';\nimport { StarRating } from '@guardian/source-development-kitchen/react-components';\nimport { useEffect, useState } from 'react';\nimport type { ArticleFormat } from '../lib/articleFormat';\nimport type { ImageForLightbox } from '../types/content';\nimport { LightboxCaption } from './LightboxCaption';\nimport { LightboxLoader } from './LightboxLoader';\nimport { Picture } from './Picture';\n\ntype Props = {\n\tformat: ArticleFormat;\n\timages: ImageForLightbox[];\n};\n\nconst liStyles = css`\n\twidth: 100%;\n\tflex-shrink: 0;\n\tscroll-snap-align: start;\n`;\n\nconst imageStyles = (orientation: 'landscape' | 'portrait') => {\n\tconst baseImgStyles = css`\n\t\tobject-fit: contain;\n\t\tobject-position: top;\n\t\t${until.tablet} {\n\t\t\tobject-position: center;\n\t\t}\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\t${from.tablet} {\n\t\t\tmargin-top: 1vh;\n\t\t}\n\t`;\n\tswitch (orientation) {\n\t\tcase 'portrait': {\n\t\t\treturn css`\n\t\t\t\timg {\n\t\t\t\t\t${baseImgStyles}\n\t\t\t\t\twidth: auto;\n\t\t\t\t\tmax-width: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\theight: 98vh;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`;\n\t\t}\n\t\tcase 'landscape':\n\t\tdefault: {\n\t\t\treturn css`\n\t\t\t\timg {\n\t\t\t\t\t${baseImgStyles}\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: auto;\n\t\t\t\t\tmax-height: 100vh;\n\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\tmax-height: 98vh;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`;\n\t\t}\n\t}\n};\n\nconst pictureStyles = css`\n\tpicture {\n\t\t${until.tablet} {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t}\n\t\tflex-grow: 1;\n\t\t${from.tablet} {\n\t\t\tmargin-right: ${space[5]}px;\n\t\t}\n\t}\n`;\n\nconst asideStyles = css`\n\t${until.tablet} {\n\t\twidth: 100%;\n\t\tmargin-top: ${space[3]}px;\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t}\n\t${from.tablet} {\n\t\tmin-width: 300px;\n\t\tmax-width: 300px;\n\t}\n\t${until.tablet} {\n\t\tborder-top: 1px solid ${palette.neutral[20]};\n\t}\n\t${from.tablet} {\n\t\tborder-left: 1px solid ${palette.neutral[20]};\n\t}\n\tbackground-color: ${palette.neutral[7]};\n\n\tpadding: ${space[3]}px;\n\n\t${from.tablet} {\n\t\tpadding-left: ${space[5]}px;\n\t\tpadding-right: ${space[5]}px;\n\t}\n`;\n\nconst figureStyles = css`\n\tdisplay: flex;\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tjustify-content: space-between;\n\n\tflex-direction: column;\n\n\t${from.tablet} {\n\t\tflex-direction: row;\n\t}\n`;\n\nconst Selection = ({\n\tcountOfImages,\n\tinitialPosition = 1,\n}: {\n\tcountOfImages: number;\n\tinitialPosition?: number;\n}) => {\n\treturn (\n\t\t<span\n\t\t\tcss={css`\n\t\t\t\tdisplay: block;\n\t\t\t\t${from.tablet} {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tpadding-top: 2.25rem;\n\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t}\n\t\t\t\t${textSans14};\n\t\t\t\tcolor: ${palette.neutral[86]};\n\t\t\t\t${until.tablet} {\n\t\t\t\t\tmargin-bottom: ${space[2]}px;\n\t\t\t\t}\n\t\t\t`}\n\t\t\taria-hidden=\"true\"\n\t\t\tdata-testid=\"lightbox-selected\"\n\t\t>\n\t\t\t<span className=\"selected\">{initialPosition}</span>\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\tmargin-left: 1px;\n\t\t\t\t\tmargin-right: 1px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t/\n\t\t\t</span>\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\tcolor: ${palette.neutral[97]};\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t{countOfImages}\n\t\t\t</span>\n\t\t</span>\n\t);\n};\n\nexport const LightboxImages = ({ format, images }: Props) => {\n\tconst [loaded, setLoaded] = useState(new Set<number>());\n\n\tuseEffect(() => {\n\t\tlog('dotcom', '💡 images loaded:', loaded);\n\t}, [loaded]);\n\n\treturn (\n\t\t<>\n\t\t\t{images.map((image, index) => {\n\t\t\t\tconst orientation =\n\t\t\t\t\timage.width > image.height ? 'landscape' : 'portrait';\n\n\t\t\t\tconst onLoad = () =>\n\t\t\t\t\tsetLoaded((set) => {\n\t\t\t\t\t\tconst previousSize = set.size;\n\t\t\t\t\t\tset.add(image.position);\n\t\t\t\t\t\tconst newSize = set.size;\n\t\t\t\t\t\treturn previousSize !== newSize ? new Set(set) : set;\n\t\t\t\t\t});\n\n\t\t\t\treturn (\n\t\t\t\t\t<li\n\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key -- because we know this key is unique\n\t\t\t\t\t\tkey={`${image.masterUrl}-${index}`}\n\t\t\t\t\t\tdata-index={image.position}\n\t\t\t\t\t\tdata-element-id={image.elementId}\n\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\tliStyles,\n\t\t\t\t\t\t\timageStyles(orientation),\n\t\t\t\t\t\t\tpictureStyles,\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<figure css={figureStyles}>\n\t\t\t\t\t\t\t{!loaded.has(image.position) && <LightboxLoader />}\n\t\t\t\t\t\t\t<Picture\n\t\t\t\t\t\t\t\t// Using the role of immersive here indicates the intentions for lightbox\n\t\t\t\t\t\t\t\t// images but it's moot because the `isLightbox` prop overrides the decision\n\t\t\t\t\t\t\t\t// around what size sources to use\n\t\t\t\t\t\t\t\trole=\"immersive\"\n\t\t\t\t\t\t\t\talt={image.alt ?? ''}\n\t\t\t\t\t\t\t\t// Height and width are only used here so the browser has a ratio to work with\n\t\t\t\t\t\t\t\t// when laying out the page. The actual size of the image is based on the\n\t\t\t\t\t\t\t\t// viewport\n\t\t\t\t\t\t\t\theight={image.height}\n\t\t\t\t\t\t\t\twidth={image.width}\n\t\t\t\t\t\t\t\tmaster={image.masterUrl}\n\t\t\t\t\t\t\t\tformat={format}\n\t\t\t\t\t\t\t\tisLightbox={true}\n\t\t\t\t\t\t\t\torientation={orientation}\n\t\t\t\t\t\t\t\tonLoad={onLoad}\n\t\t\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<aside css={asideStyles}>\n\t\t\t\t\t\t\t\t{!!image.title && (\n\t\t\t\t\t\t\t\t\t<h2\n\t\t\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\t\t\t\t\t${headlineLight24}\n\t\t\t\t\t\t\t\t\t\t\tcolor: ${palette.neutral[100]};\n\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t\t\t\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: ${space[2]}px;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{image.title}\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{typeof image.starRating === 'number' && (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\t\t\t\t\t\tbackground-color: ${palette\n\t\t\t\t\t\t\t\t\t\t\t\t.brandAlt[400]};\n\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: ${space[2]}px;\n\t\t\t\t\t\t\t\t\t\t\t${from.tablet} {\n\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tfigcaption {\n\t\t\t\t\t\t\t\t\t\t\t\theight: 0;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<StarRating\n\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\trating={image.starRating}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<Hide from=\"tablet\">\n\t\t\t\t\t\t\t\t\t<Selection\n\t\t\t\t\t\t\t\t\t\tcountOfImages={images.length}\n\t\t\t\t\t\t\t\t\t\tinitialPosition={image.position}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Hide>\n\t\t\t\t\t\t\t\t<LightboxCaption\n\t\t\t\t\t\t\t\t\tcaptionText={image.caption}\n\t\t\t\t\t\t\t\t\tcredit={image.credit}\n\t\t\t\t\t\t\t\t\tdisplayCredit={image.displayCredit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{!!image.blockId &&\n\t\t\t\t\t\t\t\t\t!isUndefined(image.firstPublished) && (\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\thref={`?page=with:block-${image.blockId}#block-${image.blockId}`}\n\t\t\t\t\t\t\t\t\t\t\tpriority=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tcssOverrides={css`\n\t\t\t\t\t\t\t\t\t\t\t\t${textSans14};\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: ${palette.neutral[60]};\n\t\t\t\t\t\t\t\t\t\t\t\t:hover {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: ${palette\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.neutral[86]};\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<time\n\t\t\t\t\t\t\t\t\t\t\t\tdateTime={new Date(\n\t\t\t\t\t\t\t\t\t\t\t\t\timage.firstPublished,\n\t\t\t\t\t\t\t\t\t\t\t\t).toISOString()}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"View original post\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tOriginal post published{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t{timeAgo(image.firstPublished)}\n\t\t\t\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { isUndefined, log, storage } from '@guardian/libs';\nimport { from, space } from '@guardian/source/foundations';\nimport libDebounce from 'lodash.debounce';\nimport { useEffect, useState } from 'react';\nimport screenfull from 'screenfull';\nimport type { ArticleFormat } from '../lib/articleFormat';\nimport type { ImageForLightbox } from '../types/content';\nimport { LightboxImages } from './LightboxImages';\n\n/**\n * Translate the pixel (scrollLeft) document value into a numeric\n * position value\n */\nconst getPosition = (\n\tlightbox: HTMLElement,\n\timageList: HTMLUListElement,\n): number | undefined => {\n\tconst scrollPosition = imageList.scrollLeft;\n\tconst liWidth = lightbox.querySelector('li')?.clientWidth;\n\tif (scrollPosition === 0 && liWidth === 0) return;\n\tif (isUndefined(liWidth)) return;\n\tif (Number.isNaN(liWidth) || Number.isNaN(scrollPosition)) return;\n\tif (scrollPosition === 0) return 1;\n\treturn Math.round(scrollPosition / liWidth) + 1;\n};\n\n/**\n * **getTabbableElements**\n *\n * Returns a list of all the html elements on the *active* page that can be tabbed to\n *\n * Any elements that are off screen, such as caption links for images that are not\n * currently showing, are ignored\n */\nconst getTabbableElements = (\n\tlightbox: HTMLElement,\n\timageList: HTMLUListElement,\n): HTMLElement[] => {\n\tfunction getElements(parent: HTMLElement): HTMLElement[] {\n\t\treturn Array.from(\n\t\t\tparent.querySelectorAll(\n\t\t\t\t'button:not([disabled]), a:not([disabled]), input:not([disabled]), select:not([disabled])',\n\t\t\t),\n\t\t);\n\t}\n\tconst currentPosition = getPosition(lightbox, imageList);\n\tif (currentPosition == null) return [];\n\tconst currentPage = lightbox.querySelector<HTMLElement>(\n\t\t`li[data-index=\"${currentPosition}\"]`,\n\t);\n\tconst nav = lightbox.querySelector('nav');\n\tconst elementsFromCaption = currentPage ? getElements(currentPage) : [];\n\tconst elementsFromNav = nav ? getElements(nav) : [];\n\tif (lightbox.classList.contains('hide-info')) {\n\t\t// The caption is hidden\n\t\treturn elementsFromNav;\n\t} else {\n\t\treturn [...elementsFromCaption, ...elementsFromNav];\n\t}\n};\n\n/** Reject a Promise after a delay  */\nconst timeout = <T,>(promise: Promise<T>, delay = 1200) =>\n\tPromise.race([\n\t\tpromise,\n\t\tnew Promise<void>((_, reject) => {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\treject();\n\t\t\t\tclearTimeout(timer);\n\t\t\t}, delay);\n\t\t}),\n\t]);\n\n/** will try to request fullscreen, but not wait more than 120ms */\nconst requestFullscreen = async (lightbox: Element) => {\n\tif (screenfull.isEnabled) {\n\t\treturn timeout(screenfull.request(lightbox));\n\t}\n};\n\nconst exitFullscreen = async () => {\n\tif (screenfull.isEnabled && screenfull.isFullscreen) {\n\t\treturn timeout(screenfull.exit());\n\t}\n};\n\nconst restoreFocus = (previouslyFocused: Element) => {\n\tif (!(previouslyFocused instanceof HTMLElement)) return;\n\tpreviouslyFocused.focus();\n};\n\n/**\n * Each time a new image is selected, this function is called so we can update\n * the state of the page/lightbox to reflect the new image\n */\nconst onSelect = (\n\tpositionIndicator: HTMLElement,\n\tposition: number,\n\tlength: number,\n\tcloseButton: HTMLButtonElement,\n): void => {\n\tpositionIndicator.innerHTML = position.toString();\n\n\t// Update the url based on the fact we've selected (navigated\n\t// to) a new image\n\twindow.history.replaceState({}, '', `#img-${position}`);\n\t// Ensure the close button is always visible on the last slide on mobile\n\tcloseButton.classList.toggle('reveal', position === length);\n};\n\n/**\n * Images are 'selected' simply by being scrolled to. You can even select an image\n * by swiping left and right. Because of this, scrollTo is how we navigate the lightbox\n */\nconst scrollTo = (\n\tposition: number,\n\tlightbox: HTMLElement,\n\timageList: HTMLUListElement,\n): void => {\n\t// liWidth is the actual dom width in pixels of the containing li element for each image\n\tconst liWidth = lightbox.querySelector('li')?.clientWidth;\n\n\tif (isUndefined(liWidth)) return;\n\tswitch (position) {\n\t\tcase 0:\n\t\tcase 1: {\n\t\t\timageList.scrollLeft = 0;\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\timageList.scrollLeft = (position - 1) * liWidth;\n\t\t}\n\t}\n};\n\nconst getPreviousPosition = (position: number, length: number): number =>\n\tposition <= 1\n\t\t? // Cycle around to the end\n\t\t  length\n\t\t: position - 1;\n\nconst getNextPosition = (position: number, length: number): number =>\n\tposition >= length\n\t\t? // Cycle back to the start\n\t\t  1\n\t\t: position + 1;\n\nconst eagerLoad = (images: HTMLImageElement[], position: number) => {\n\tconst image = images[position - 1];\n\tif (image) image.loading = 'eager';\n};\n\n/**\n * We eager load adjacent images by adding the loading=eager attribute\n * to their img tag\n */\nconst loadAdjacentImages = (\n\timages: HTMLImageElement[],\n\tcurrentPosition: number,\n): void => {\n\tconst { length } = images;\n\tconst previousImage = getPreviousPosition(currentPosition, length);\n\tconst nextImage = getNextPosition(currentPosition, length);\n\teagerLoad(images, previousImage);\n\teagerLoad(images, nextImage);\n};\n\nconst pulseButton = (button: HTMLButtonElement): void => {\n\tbutton.classList.add('active');\n\n\tconst timer = setTimeout(() => {\n\t\tbutton.classList.remove('active');\n\t\tclearTimeout(timer);\n\t}, 75);\n};\n\nconst goBack = (\n\tlightbox: HTMLElement,\n\timages: HTMLImageElement[],\n\tpreviousButton: HTMLButtonElement,\n\timageList: HTMLUListElement,\n) => {\n\tconst { length } = images;\n\tpulseButton(previousButton);\n\tconst positionNow = getPosition(lightbox, imageList);\n\tif (positionNow != null) {\n\t\tconst newPosition = getPreviousPosition(positionNow, length);\n\t\tscrollTo(newPosition, lightbox, imageList);\n\t}\n};\n\nconst goForward = (\n\tlightbox: HTMLElement,\n\timages: HTMLImageElement[],\n\tnextButton: HTMLButtonElement,\n\timageList: HTMLUListElement,\n) => {\n\tconst { length } = images;\n\tpulseButton(nextButton);\n\tconst positionNow = getPosition(lightbox, imageList);\n\tif (positionNow != null) {\n\t\tconst newPosition = getNextPosition(positionNow, length);\n\t\tscrollTo(newPosition, lightbox, imageList);\n\t}\n};\n\nlet previouslyFocused: Element | undefined;\nconst open = async (\n\tlightbox: HTMLElement,\n\timageList: HTMLUListElement,\n\tposition: number,\n\thandleKeydown: (event: KeyboardEvent) => void,\n) => {\n\tlog('dotcom', '💡 Opening lightbox.');\n\t// Remember where we were so we can restore focus\n\tif (document.activeElement) previouslyFocused = document.activeElement;\n\t// Try to open the lightbox in fullscreen mode. This may fail\n\tawait requestFullscreen(lightbox).catch(() => {\n\t\t// fullscreen request failed\n\t});\n\t// We use this class to prevent the main page from scrolling in the background while lightbox is open\n\tdocument.documentElement.classList.add('lightbox-open');\n\t// Show lightbox\n\tlightbox.removeAttribute('hidden');\n\t// Now we have the index of the image that was clicked, show it\n\t// in the lightbox\n\tscrollTo(position, lightbox, imageList);\n\t// We only want this listener active while the lightbox is open\n\twindow.addEventListener('keydown', handleKeydown);\n};\n\nconst closeLightbox = (\n\tlightbox: HTMLElement,\n\thandleKeydown: (ev: KeyboardEvent) => void,\n) => {\n\t// Re-enable scrolling\n\tdocument.documentElement.classList.remove('lightbox-open');\n\t// Hide lightbox\n\tlightbox.setAttribute('hidden', 'true');\n\t// Stop listening for keyboard shortcuts\n\twindow.removeEventListener('keydown', handleKeydown);\n};\n\nconst close = async (\n\tlightbox: HTMLElement,\n\thandleKeydown: (ev: KeyboardEvent) => void,\n) => {\n\tlog('dotcom', '💡 Closing lightbox.');\n\tawait exitFullscreen().catch(() => {\n\t\t// fullscreen request failed\n\t});\n\tcloseLightbox(lightbox, handleKeydown);\n\thistory.back();\n\tpreviouslyFocused && restoreFocus(previouslyFocused);\n};\n\nconst toggleInfo = (\n\tlightbox: HTMLElement,\n\tbutton: HTMLButtonElement,\n\tforce?: 'hide' | 'show',\n): void => {\n\tconst action =\n\t\tforce ?? (lightbox.classList.contains('hide-info') ? 'show' : 'hide');\n\n\tbutton.classList.toggle('active', action === 'show');\n\tlightbox.classList.toggle('hide-info', action === 'hide');\n\tstorage.local.set('gu.prefs.lightbox-info', action);\n};\n\n/**\n * 💡 Lightbox\n *\n * `initialiseLightbox` contains the core javascript used to control the DCR lightbox.\n *\n * The lightbox works by keeping state in the url. When the url has an image hash in the form\n * `img-12` then the lightbox will open. As soon as it no longer has an img- hash, the lightbox\n * will close. This reactivity is achieved using event listeners.\n *\n * Like this, opening the lightbox is as simple as navigating to a url with a hash. To close\n * the lightbox you use history.back()\n *\n * Each image in the article that has a lightboxable image is overlayed with a transparent <a>\n * tag on the server. This <a> tag points to the hash value for the image, e.g. `href=\"#img-2\"`.\n * Like this, when a reader clicks on an image it fires the <a> tag, mutates the url, and\n * triggers hydration for lightbox (we hydrate on 'hash') causing lightbox to open\n *\n */\n\nconst initialiseLightbox = (lightbox: HTMLElement) => {\n\tlog('dotcom', '💡 Initialising lightbox');\n\n\t// --------------------------------------------------------------------------------\n\t// SELECTORS\n\t//\n\t// We start by defining some variables that reference parts of the dom. These page\n\t// parts are either on the document or in the lightbox element itself\n\t// --------------------------------------------------------------------------------\n\t// Lightbox selectors\n\tconst nextButton = lightbox.querySelector<HTMLButtonElement>('button.next');\n\tconst previousButton =\n\t\tlightbox.querySelector<HTMLButtonElement>('button.previous');\n\tconst infoButton = lightbox.querySelector<HTMLButtonElement>('button.info');\n\tconst closeButton =\n\t\tlightbox.querySelector<HTMLButtonElement>('button.close');\n\t/**\n\t * imageList is the horizontal list of all images. We use it to scroll left and right\n\t * effectively navigating the lightbox\n\t */\n\tconst imageList = lightbox.querySelector<HTMLUListElement>('ul');\n\tconst pictures =\n\t\tlightbox.querySelectorAll<HTMLPictureElement>('li picture');\n\tconst images = Array.from(\n\t\tlightbox.querySelectorAll<HTMLImageElement>('li img'),\n\t);\n\n\tconst captionLinks =\n\t\tlightbox.querySelectorAll<HTMLAnchorElement>('li aside a');\n\n\tif (!imageList) return;\n\tif (!closeButton) return;\n\tif (!previousButton) return;\n\tif (!nextButton) return;\n\tif (!infoButton) return;\n\n\t// --------------------------------------------------------------------------------\n\t// FUNCTIONS\n\t// --------------------------------------------------------------------------------\n\n\tconst handleKeydown = (event: KeyboardEvent) => {\n\t\tif (event.ctrlKey || event.metaKey || event.altKey) return;\n\t\tswitch (event.code) {\n\t\t\tcase 'Tab': {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst tabbableElements = getTabbableElements(\n\t\t\t\t\tlightbox,\n\t\t\t\t\timageList,\n\t\t\t\t);\n\t\t\t\tconst activeElement = tabbableElements.find(\n\t\t\t\t\t(element) => element === document.activeElement,\n\t\t\t\t);\n\t\t\t\tconst firstTabbableElement = tabbableElements[0];\n\t\t\t\tconst lastTabbableElement =\n\t\t\t\t\ttabbableElements[tabbableElements.length - 1];\n\n\t\t\t\tif (!activeElement) {\n\t\t\t\t\t// Start at the start\n\t\t\t\t\tfirstTabbableElement?.focus();\n\t\t\t\t} else {\n\t\t\t\t\tconst currentPosition =\n\t\t\t\t\t\ttabbableElements.indexOf(activeElement);\n\t\t\t\t\tconst firstElementHasFocus = currentPosition === 0;\n\t\t\t\t\tconst lastElementHasFocus =\n\t\t\t\t\t\tcurrentPosition === tabbableElements.length - 1;\n\n\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\tif (firstElementHasFocus) {\n\t\t\t\t\t\t\tlastTabbableElement?.focus();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttabbableElements[currentPosition - 1]?.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (lastElementHasFocus) {\n\t\t\t\t\t\t\tfirstTabbableElement?.focus();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttabbableElements[currentPosition + 1]?.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ArrowLeft':\n\t\t\t\treturn goBack(lightbox, images, previousButton, imageList);\n\t\t\tcase 'ArrowRight':\n\t\t\t\treturn goForward(lightbox, images, nextButton, imageList);\n\t\t\tcase 'KeyI':\n\t\t\t\treturn toggleInfo(lightbox, infoButton);\n\t\t\tcase 'ArrowUp':\n\t\t\t\treturn toggleInfo(lightbox, infoButton, 'show');\n\t\t\tcase 'ArrowDown':\n\t\t\t\treturn toggleInfo(lightbox, infoButton, 'hide');\n\t\t\tcase 'KeyQ':\n\t\t\tcase 'Escape':\n\t\t\t\treturn void close(lightbox, handleKeydown);\n\t\t}\n\t};\n\n\t// --------------------------------------------------------------------------------\n\t// EVENT LISTENERS\n\t// --------------------------------------------------------------------------------\n\tfor (const picture of pictures) {\n\t\t// Clicking on the image toggles the caption\n\t\tpicture.addEventListener('mousedown', (event) => {\n\t\t\ttoggleInfo(lightbox, infoButton);\n\t\t\t// We want to maintain focus so halt all further actions\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t});\n\t}\n\n\timageList.addEventListener(\n\t\t'scroll',\n\t\tlibDebounce(\n\t\t\t() => {\n\t\t\t\tconst currentPosition = getPosition(lightbox, imageList);\n\t\t\t\tif (isUndefined(currentPosition)) return;\n\t\t\t\tconst positionIndicator =\n\t\t\t\t\tlightbox.querySelector<HTMLElement>('nav .selected'); // Eg. 2/4, as in image 2 of 4\n\t\t\t\tif (!positionIndicator) return;\n\n\t\t\t\tonSelect(\n\t\t\t\t\tpositionIndicator,\n\t\t\t\t\tcurrentPosition,\n\t\t\t\t\timages.length,\n\t\t\t\t\tcloseButton,\n\t\t\t\t);\n\t\t\t\tloadAdjacentImages(images, currentPosition);\n\t\t\t},\n\t\t\t150,\n\t\t\t{ leading: true },\n\t\t),\n\t);\n\n\tcloseButton.addEventListener('click', () => {\n\t\tvoid close(lightbox, handleKeydown);\n\t});\n\tpreviousButton.addEventListener('click', () => {\n\t\tgoBack(lightbox, images, previousButton, imageList);\n\t});\n\tnextButton.addEventListener('click', () => {\n\t\tgoForward(lightbox, images, nextButton, imageList);\n\t});\n\tinfoButton.addEventListener('click', () => {\n\t\ttoggleInfo(lightbox, infoButton);\n\t});\n\n\tfor (const link of captionLinks) {\n\t\tlink.addEventListener('click', (event) => {\n\t\t\t// This prevents the event listener from this element's LI parent\n\t\t\t// from firing. That LI event listener would have tried to hide the\n\t\t\t// caption but the reader clicked a link inside the caption so they\n\t\t\t// want to navigate, not hide stuff, and if we did hide it it would\n\t\t\t// cause a weird flash\n\t\t\tevent.stopPropagation();\n\t\t});\n\t}\n\n\t/**\n\t * We listen for the fullscreenchange event here so that we can fire our\n\t * close function in response to the reader closing fullscreen mode. Like\n\t * this there's no need to press escape twice to exit the lightbox\n\t */\n\tif (screenfull.isEnabled) {\n\t\tscreenfull.on('change', () => {\n\t\t\tif (screenfull.isFullscreen) {\n\t\t\t\tlog('dotcom', `💡 entered fullscreen mode.`);\n\t\t\t} else {\n\t\t\t\tlog('dotcom', `💡 leaving fullscreen mode.`);\n\t\t\t\tif (!lightbox.hasAttribute('hidden')) {\n\t\t\t\t\t// If lightbox is still showing then the escape key was probably pressed\n\t\t\t\t\t// which closes fullscreen mode but not the lightbox, so let's close it\n\t\t\t\t\tcloseLightbox(lightbox, handleKeydown);\n\t\t\t\t\thistory.back();\n\t\t\t\t\tpreviouslyFocused && restoreFocus(previouslyFocused);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * popstate is fired when a user goes back or forward, either using buttons\n\t * or the keyboard or via history.back() or history.forward()\n\t *\n\t * We use the url as the source of truth so we open and close the lightbox\n\t * here depending on if we have an img hash or not.\n\t */\n\twindow.addEventListener('popstate', () => {\n\t\tconst hash = window.location.hash;\n\t\tif (hash.startsWith('#img-') && !lightbox.hasAttribute('open')) {\n\t\t\tconst position = parseInt(hash.substring(5), 10);\n\t\t\tvoid open(lightbox, imageList, position, handleKeydown);\n\t\t} else {\n\t\t\t// There's no img hash so close the lightbox\n\t\t\tvoid exitFullscreen();\n\t\t\tcloseLightbox(lightbox, handleKeydown);\n\t\t\tpreviouslyFocused && restoreFocus(previouslyFocused);\n\t\t}\n\t});\n\n\t// --------------------------------------------------------------------------------\n\t// STARTUP\n\t// This code is run once when the lightbox first opens\n\t// --------------------------------------------------------------------------------\n\n\t// Check the user's preferences to decide if we show the caption or not\n\tconst info = storage.local.get('gu.prefs.lightbox-info');\n\tif (info === 'hide') toggleInfo(lightbox, infoButton, 'hide');\n\n\t// Open the lightbox at the position given in the url hash\n\tconst { hash } = window.location;\n\tif (hash.startsWith('#img-')) {\n\t\tconst position = parseInt(hash.substring(5), 10);\n\t\tvoid open(lightbox, imageList, position, handleKeydown);\n\t}\n\n\t// Mark the lightbox as ready so that we don't try to re-initialise it later\n\tlightbox.setAttribute('data-island-status', 'rendered');\n};\n\nconst useElementById = (id: string) => {\n\tconst [element, setElement] = useState<HTMLElement>();\n\n\tuseEffect(() => {\n\t\tsetElement(window.document.getElementById(id) ?? undefined);\n\t}, [id]);\n\n\treturn element;\n};\n\nconst ulStyles = css`\n\tdisplay: grid;\n\tgrid-auto-flow: column;\n\tgrid-auto-columns: 100%;\n\theight: 100%;\n\twidth: 100%;\n\tscroll-snap-type: x mandatory;\n\toverflow-x: scroll;\n\toverflow-y: hidden;\n\tscroll-behavior: auto;\n\toverscroll-behavior: contain;\n\t${from.tablet} {\n\t\tmargin-left: ${space[5]}px;\n\t}\n\t/**\n\t* Hide scrollbars\n\t* See: https://stackoverflow.com/a/38994837\n\t*\n\t* Removing the scrollbars here is okay because we offer multiple other methods for\n\t* navigation which are obvious and accessible to readers\n\t*/\n\t::-webkit-scrollbar {\n\t\tdisplay: none; /* Safari and Chrome */\n\t}\n\tscrollbar-width: none; /* Firefox */\n`;\n\nexport const LightboxJavascript = ({\n\tformat,\n\timages,\n}: {\n\tformat: ArticleFormat;\n\timages: ImageForLightbox[];\n}) => {\n\t/**\n\t * Hydration has been requested so the first step is to render the list of images and put them into\n\t * the DOM\n\t *\n\t * LightboxLayout provides a marker for where these images should go `ul#lightbox-images`. We look for\n\t * this and then use createPortal to insert LightboxImages into this location.\n\t *\n\t * Why do we do this here, and not on the server?\n\t * Because the size of the html generated by LightboxImages is very large (because the Picture element\n\t * is so verbose) and we don't want every page view to have to download it, only those that are opening\n\t * lightbox\n\t */\n\tconst lightbox = useElementById('gu-lightbox');\n\tconst [initialised, setInitialised] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (!lightbox) return;\n\t\tif (initialised) {\n\t\t\tlog('dotcom', '💡 Lightbox already initialised, skipping');\n\t\t\treturn;\n\t\t}\n\t\tinitialiseLightbox(lightbox);\n\t\tsetInitialised(true);\n\t}, [initialised, lightbox]);\n\n\tif (!lightbox) return null;\n\n\tlog('dotcom', '💡 Generating HTML for lightbox images...');\n\treturn (\n\t\t<ul css={ulStyles} aria-label=\"All images\">\n\t\t\t<LightboxImages format={format} images={images} />;\n\t\t</ul>\n\t);\n};\n","import { css, Global } from '@emotion/react';\nimport {\n\tfrom,\n\tpalette,\n\tspace,\n\ttextSans14,\n\tuntil,\n\tvisuallyHidden,\n} from '@guardian/source/foundations';\nimport {\n\tHide,\n\tSvgArrowLeftStraight,\n\tSvgArrowRightStraight,\n\tSvgCross,\n} from '@guardian/source/react-components';\nimport type { ArticleFormat } from '../lib/articleFormat';\nimport { getZIndex } from '../lib/getZIndex';\nimport type { ImageForLightbox } from '../types/content';\nimport { LightboxJavascript } from './LightboxJavascript';\n\ntype Props = {\n\tformat: ArticleFormat;\n\timages: ImageForLightbox[];\n};\n\nconst lightboxStyles = css`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: ${palette.neutral[10]};\n\n\t&.hide-info {\n\t\t/* Always hide the info aside when the hide-info class exists on the lightbox element */\n\t\taside {\n\t\t\tdisplay: none;\n\t\t}\n\t\t${until.tablet} {\n\t\t\t/* Also hide the nav controls when on mobile */\n\t\t\tnav {\n\t\t\t\tvisibility: hidden;\n\t\t\t}\n\t\t}\n\t}\n\n\tbutton.active {\n\t\tbackground-color: ${palette.neutral[46]};\n\t}\n\n\tbutton.reveal {\n\t\tvisibility: visible;\n\t}\n`;\n\nconst containerStyles = css`\n\tdisplay: flex;\n\theight: 100%;\n\tflex-direction: row;\n\t${until.tablet} {\n\t\tflex-direction: column;\n\t}\n`;\n\nconst navStyles = css`\n\tdisplay: flex;\n\tflex-direction: column;\n\t${until.tablet} {\n\t\tflex-direction: row;\n\t\tposition: absolute;\n\t\tz-index: 1;\n\t\twidth: 100%;\n\t}\n\t${from.tablet} {\n\t\tpadding-top: ${space[1]}px;\n\t\tpadding-left: ${space[4]}px;\n\t\tpadding-right: ${space[4]}px;\n\t\theight: 100vh;\n\t}\n\tcolor: white;\n\t${until.tablet} {\n\t\tborder-bottom: 1px solid ${palette.neutral[20]};\n\t}\n\t${from.tablet} {\n\t\tborder-left: 1px solid ${palette.neutral[20]};\n\t}\n\tbackground-color: ${palette.neutral[7]};\n`;\n\nconst buttonStyles = css`\n\tsvg {\n\t\tfill: ${palette.neutral[100]};\n\t\tmargin-top: 3px;\n\t}\n\tmargin-top: ${space[2]}px;\n\tmargin-bottom: ${space[2]}px;\n\t${until.tablet} {\n\t\tmargin-left: ${space[2]}px;\n\t}\n\tborder-radius: 50%;\n\theight: 44px;\n\twidth: 44px;\n\tborder: none;\n\tcursor: pointer;\n\ttransition: background-color 0.2s;\n\tbackground-color: ${palette.neutral[20]};\n\t:hover {\n\t\tbackground-color: ${palette.neutral[46]};\n\t}\n`;\n\nconst closeButtonStyles = css`\n\t${until.tablet} {\n\t\tposition: absolute;\n\t\tright: ${space[2]}px;\n\t}\n\tsvg {\n\t\theight: 24px;\n\t\twidth: 24px;\n\t}\n`;\n\nconst arrowButtonStyles = css`\n\tsvg {\n\t\theight: 24px;\n\t\twidth: 24px;\n\t}\n\t${from.tablet} {\n\t\tsvg {\n\t\t\theight: 32px;\n\t\t\twidth: 32px;\n\t\t}\n\t}\n`;\n\nconst infoButtonStyles = css`\n\tsvg {\n\t\theight: 24px;\n\t\twidth: 24px;\n\t}\n`;\n\nconst SvgInfo = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"9\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 9 24\"\n\t>\n\t\t<path\n\t\t\tfill={palette.neutral[100]}\n\t\t\td=\"M.3 22L3.9 9.1H1.3l.4-1.4 5.6-.9.3.3-4.4 14.8H6L5.6 23c-.9.4-2.8.9-4.1.9-1.1 0-1.7-.5-1.2-1.9zM5.5 2C5.5.9 6.4.1 7.3.1c1 0 1.6.7 1.6 1.5 0 1.1-.9 1.9-1.8 1.9-1 .1-1.6-.6-1.6-1.5z\"\n\t\t/>\n\t</svg>\n);\n\nconst Selection = ({\n\tcountOfImages,\n\tinitialPosition = 1,\n}: {\n\tcountOfImages: number;\n\tinitialPosition?: number;\n}) => {\n\treturn (\n\t\t<span\n\t\t\tcss={css`\n\t\t\t\tdisplay: block;\n\t\t\t\t${from.tablet} {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tpadding-top: 2.25rem;\n\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t}\n\t\t\t\t${textSans14};\n\t\t\t\tcolor: ${palette.neutral[86]};\n\t\t\t\t${until.tablet} {\n\t\t\t\t\tmargin-bottom: ${space[2]}px;\n\t\t\t\t}\n\t\t\t`}\n\t\t\taria-hidden=\"true\"\n\t\t\tdata-testid=\"lightbox-selected\"\n\t\t>\n\t\t\t<span className=\"selected\">{initialPosition}</span>\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\tmargin-left: 1px;\n\t\t\t\t\tmargin-right: 1px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t/\n\t\t\t</span>\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\tcolor: ${palette.neutral[97]};\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t{countOfImages}\n\t\t\t</span>\n\t\t</span>\n\t);\n};\n\nexport const LightboxLayout = ({ format, images }: Props) => {\n\treturn (\n\t\t<>\n\t\t\t<Global\n\t\t\t\tstyles={css`\n\t\t\t\t\thtml.lightbox-open {\n\t\t\t\t\t\t#gu-lightbox {\n\t\t\t\t\t\t\tposition: fixed;\n\t\t\t\t\t\t\tz-index: ${getZIndex('lightbox')};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody {\n\t\t\t\t\t\t\t/* This ensures the menu and sidebars on iPhones have the same background as lightbox */\n\t\t\t\t\t\t\tbackground-color: ${palette.neutral[10]};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tcss={lightboxStyles}\n\t\t\t\tid=\"gu-lightbox\"\n\t\t\t\taria-modal=\"true\"\n\t\t\t\trole=\"dialog\"\n\t\t\t\thidden={true}\n\t\t\t>\n\t\t\t\t<div css={containerStyles}>\n\t\t\t\t\t<LightboxJavascript format={format} images={images} />\n\t\t\t\t\t<nav css={navStyles}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tcss={[buttonStyles, closeButtonStyles]}\n\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\ttitle=\"Close [ESC or Q]\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SvgCross isAnnouncedByScreenReader={false} />\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClose dialogue\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<Hide until=\"tablet\">\n\t\t\t\t\t\t\t<Selection countOfImages={images.length} />\n\t\t\t\t\t\t</Hide>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\t\tbuttonStyles,\n\t\t\t\t\t\t\t\tarrowButtonStyles,\n\t\t\t\t\t\t\t\tcss`\n\t\t\t\t\t\t\t\t\torder: 1;\n\t\t\t\t\t\t\t\t\t${until.tablet} {\n\t\t\t\t\t\t\t\t\t\torder: 2;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tclassName=\"next\"\n\t\t\t\t\t\t\ttitle=\"Next image [→]\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SvgArrowRightStraight\n\t\t\t\t\t\t\t\tisAnnouncedByScreenReader={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNext image\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\t\tbuttonStyles,\n\t\t\t\t\t\t\t\tarrowButtonStyles,\n\t\t\t\t\t\t\t\tcss`\n\t\t\t\t\t\t\t\t\torder: 2;\n\t\t\t\t\t\t\t\t\t${until.tablet} {\n\t\t\t\t\t\t\t\t\t\torder: 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tclassName=\"previous\"\n\t\t\t\t\t\t\ttitle=\"Previous image [←]\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SvgArrowLeftStraight\n\t\t\t\t\t\t\t\tisAnnouncedByScreenReader={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPrevious image\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\t\tbuttonStyles,\n\t\t\t\t\t\t\t\tinfoButtonStyles,\n\t\t\t\t\t\t\t\tcss`\n\t\t\t\t\t\t\t\t\torder: 3;\n\t\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tclassName=\"info\"\n\t\t\t\t\t\t\ttitle=\"Toggle caption [i]\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SvgInfo />\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tToggle caption\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","/**\n * How do I get a z-index for my new item?\n *\n * Decide a meaningful name for your item and then insert it\n * in the indices array below. The higher up your item visually,\n * then the higher it will be in the z-index stack,\n * 'higher' means _earlier_ in the array.\n *\n * Eg. stickyAdWrapper will be given a higher z-index than bodyArea\n *\n * Once inserted in the array, use getZIndex() to return the css\n *\n * Eg.\n *\n * import { getZIndex } from './getZIndex';\n *\n * const myCss = css`\n *    color: blue;\n *    z-index: ${getZIndex('TheGuardian')};\n * `;\n *\n * As new items are added, all z-indexes are adjusted\n */\nconst indices = [\n\t// Modals will go here at the top\n\t'lightbox',\n\t'youTubeFullscreen',\n\n\t// Sticky video and button need to be above everything\n\t'sticky-video-button',\n\t'sticky-video',\n\t'banner',\n\t'dropdown',\n\t'burger',\n\t'mastheadVeggieBurgerExpandedMobile',\n\t'expanded-veggie-menu-wrapper',\n\t'expanded-veggie-menu',\n\n\t//header wrapper needs to be in line with veggie menus to ensure it stands above various banners\n\t'fullPageInteractiveHeaderWrapper',\n\n\t// Mobile sticky appears below banners\n\t'mobileSticky',\n\n\t// Headers with sticky ads\n\t'stickyAdWrapperLabsHeader',\n\t'stickyAdWrapper',\n\t'stickyAdWrapperNav',\n\n\t// My Account dropdown in masthead - needs to be below stickyAdWrapper\n\t'mastheadMyAccountDropdown',\n\n\t// Edition selector in masthead - needs to be below stickyAdWrapper\n\t'mastheadEditionDropdown',\n\n\t// Edition selector in nav - needs to be below stickyAdWrapper\n\t'editionDropdown',\n\n\t// The content displayed by the Details component\n\t'summaryDetails',\n\n\t// Liveblog toast\n\t'toast',\n\n\t// Onwards Carousel (Related content etc)\n\t'onwardsCarousel',\n\n\t// Search link should be above The Guardian svg\n\t'myAccountDropdown',\n\t'searchHeaderLink',\n\t'TheGuardian',\n\n\t// The edition switcher banner needs to be below the Edition selector\n\t// and the myAccount dropdown in the nav\n\t'editionSwitcherBanner',\n\n\t// Overlay for expandable marketing card (currently US only)\n\t'expandableMarketingCardOverlay',\n\n\t// Sticky table of contents element\n\t'tableOfContents',\n\n\t// Article headline (should be above main media)\n\t'articleHeadline',\n\t'immersiveBlackBox',\n\n\t// Body\n\t'bodyArea',\n\t'rightColumnArea',\n\n\t// Main media\n\t'mainMedia',\n\n\t// Nested links in cards should sit above the main card link\n\t// See: https://www.sarasoueidan.com/blog/nested-links/\n\t'card-nested-link',\n\t'card-link',\n] as const;\n\n// Implementation code - you don't need to change this to get a new index\nexport type ZIndex = (typeof indices)[number];\n\nexport const getZIndex = (name: ZIndex): number => {\n\tconst index = indices.indexOf(name);\n\tif (index === -1) return -1; // indexOf returns -1 if there is no match\n\treturn indices.length - index; // reverse the indices: last item gets 1\n};\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n"],"names":["LightboxCaption","captionText","credit","displayCredit","figcaption","css","textSans14","space","palette","span","srcPalette","neutral","dangerouslySetInnerHTML","__html","div","flash","keyframes","LightboxLoader","liStyles","imageStyles","orientation","baseImgStyles","until","tablet","from","pictureStyles","asideStyles","figureStyles","Selection","countOfImages","initialPosition","aria-hidden","data-testid","className","LightboxImages","format","images","loaded","setLoaded","useState","Set","useEffect","log","map","image","index","width","height","li","data-index","position","data-element-id","elementId","figure","has","Picture","role","alt","master","masterUrl","isLightbox","onLoad","set","previousSize","size","add","loading","aside","title","h2","headlineLight24","starRating","brandAlt","StarRating","rating","Hide","length","caption","blockId","isUndefined","firstPublished","Link","href","priority","cssOverrides","time","dateTime","Date","toISOString","visuallyHidden","timeAgo","getPosition","lightbox","imageList","scrollPosition","scrollLeft","liWidth","querySelector","clientWidth","Number","isNaN","Math","round","timeout","promise","delay","Promise","race","_","reject","timer","setTimeout","clearTimeout","exitFullscreen","async","screenfull","isEnabled","isFullscreen","exit","restoreFocus","previouslyFocused","HTMLElement","focus","scrollTo","getPreviousPosition","getNextPosition","eagerLoad","pulseButton","button","classList","remove","goBack","previousButton","positionNow","newPosition","goForward","nextButton","open","handleKeydown","document","activeElement","request","requestFullscreen","catch","documentElement","removeAttribute","window","addEventListener","closeLightbox","setAttribute","removeEventListener","close","history","back","toggleInfo","force","action","contains","toggle","storage","local","ulStyles","LightboxJavascript","id","element","setElement","getElementById","undefined","useElementById","initialised","setInitialised","infoButton","closeButton","pictures","querySelectorAll","Array","captionLinks","event","ctrlKey","metaKey","altKey","code","preventDefault","tabbableElements","getElements","parent","currentPosition","currentPage","nav","elementsFromCaption","elementsFromNav","getTabbableElements","find","firstTabbableElement","lastTabbableElement","indexOf","firstElementHasFocus","lastElementHasFocus","shiftKey","picture","stopPropagation","libDebounce","positionIndicator","innerHTML","toString","replaceState","onSelect","previousImage","nextImage","loadAdjacentImages","leading","link","on","hasAttribute","hash","location","startsWith","parseInt","substring","get","initialiseLightbox","ul","aria-label","lightboxStyles","containerStyles","navStyles","buttonStyles","closeButtonStyles","arrowButtonStyles","infoButtonStyles","SvgInfo","svg","xmlns","viewBox","path","fill","d","LightboxLayout","Global","styles","getZIndex","aria-modal","hidden","type","SvgCross","isAnnouncedByScreenReader","SvgArrowRightStraight","SvgArrowLeftStraight","indices","name","colour"],"sourceRoot":""}