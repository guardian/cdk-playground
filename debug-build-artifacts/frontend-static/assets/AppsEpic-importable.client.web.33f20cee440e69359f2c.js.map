{"version":3,"file":"AppsEpic-importable.client.web.33f20cee440e69359f2c.js","mappings":"gVAkBO,SAASA,EAAY,G,IAAA,MAC3BC,EAAK,KACLC,EAAI,YACJC,EAAW,aACXC,GAJ2B,EAM3B,MAAOC,EAAgBC,IAAwBC,EAAAA,EAAAA,GAAY,CAC1DC,UAAU,KAEJC,EAAwBC,IAA6BC,EAAAA,EAAAA,WAAS,IAErEC,EAAAA,EAAAA,YAAU,KACLP,IAAmBI,KACjBI,EAAAA,EAAAA,MAAwBC,WAC7BJ,GAA0B,GAC3B,GACE,CAACL,EAAgBI,EAAwBC,IAE5C,MAAMK,EAAc,I,IAAA,KAAEC,GAAwB,E,OAC7C,SAACC,EAAAA,EAAMA,CACNC,QAAS,MACHL,EAAAA,EAAAA,MAAwBM,qBAC5BC,EAAqB,qBAAAC,KAAI,EAG3BC,SAAS,QACTC,MAAM,SAACC,EAAAA,EAAqBA,CAAAA,G,SAE3BR,G,EAIH,OACC,UAACS,MAAAA,CAAIC,IAAKpB,E,WACT,SAACqB,KAAAA,CAAGC,wBAAyB,CAAEC,OAAQ5B,MACvC,SAACwB,MAAAA,CAAIG,wBAAyB,CAAEC,OAAQ3B,MACxC,SAACuB,MAAAA,CAAIK,UAAU,mB,UACd,UAACC,EAAAA,EAAaA,CAACC,MAAOC,EAAAA,G,WACrB,SAAClB,EAAAA,CAAWC,KAAMb,MACfC,IAAgB,SAACW,EAAAA,CAAWC,KAAMZ,WAK1C,C,4xDC9CO,MAAM8B,EAAW,KACvB,MAAOC,EAAWC,IAAgBzB,EAAAA,EAAAA,WAAkB,IAC7CU,EAAMgB,IAAW1B,EAAAA,EAAAA,eAA4B2B,GAkBpD,IAhBA1B,EAAAA,EAAAA,YAAU,MACJ2B,EAAAA,EAAAA,MACHJ,YACAK,KAAKJ,GACLK,OAAM,KAAe,GAAC,GACtB,KAEH7B,EAAAA,EAAAA,YAAU,MACJC,EAAAA,EAAAA,MACH6B,WACAF,MAAMG,IACNN,EAAQM,EAAUtB,KAAK,IAEvBoB,OAAM,KAAe,GAAC,GACtB,KAEEN,GAAad,EAAM,CACvB,MAAM,MAAEpB,EAAK,KAAEC,EAAI,YAAEC,EAAW,aAAEC,GAAiBiB,EAC7CuB,EAAY,CACjB3C,QACAC,OACAC,cACAC,gBAED,OACC,SAACqB,MAAAA,CAAIoB,IAAKC,E,UACT,SAAC9C,EAAWA,EAAAA,CAAAA,EAAK4C,KAGpB,CACA,OAAO,IAAI,EAGNE,GAA+BD,EAAAA,EAAAA,KAAGA,IAEpCE,EAAAA,GAAKC,KACIC,EAAAA,EAAS,IAGIC,EAAAA,EAAAA,GAAa,uBACvBA,EAAAA,EAAAA,GAAa,2BAClBA,EAAAA,EAAAA,GAAa,oBACXD,EAAAA,EAAS,GAClBE,EAAAA,GAMAC,EAAAA,IAIUH,EAAAA,EAAS,GAAMA,EAAAA,EAAS,GAItBA,EAAAA,EAAS,GAITI,EAAAA,EAAQC,SAAS,KA8B7BC,EAAAA,IAQkBF,EAAAA,EAAQC,SAAS,KAC5BD,EAAAA,EAAQG,MAAM,KACXP,EAAAA,EAAS,GAAMA,EAAAA,EAAS,G,8bC5G/B,MAAeQ,UAA2BC,EAAAA,UAQhDC,YAAAA,GACC,OAAOC,KAAKC,iBAAiBF,cAC9B,CACAG,KAAAA,GACC,OAAOF,KAAKC,iBAAiBC,OAC9B,CACAC,iBAAAA,CAAkBC,EAAcC,EAAmBC,GAClD,OAAON,KAAKC,iBAAiBE,kBAAkBC,EAAMC,EAAMC,EAC5D,CACAC,eAAAA,GACC,OAAOP,KAAKC,iBAAiBM,iBAC9B,CACAC,gBAAAA,CAAiBJ,GAChB,OAAOJ,KAAKC,iBAAiBO,iBAAiBJ,EAC/C,CACAK,cAAAA,GACC,OAAOT,KAAKC,iBAAiBQ,gBAC9B,CACAC,eAAAA,CAAgBN,EAAcC,EAAaM,GAC1C,OAAOX,KAAKC,iBAAiBS,gBAAgBN,EAAMC,EAAMM,EAC1D,CACAC,aAAAA,GACC,OAAOZ,KAAKC,iBAAiBW,eAC9B,CACAC,cAAAA,GACC,OAAOb,KAAKC,iBAAiBY,gBAC9B,CACAC,aAAAA,CAAcC,EAAgBC,EAAkBC,GAC/C,OAAOjB,KAAKC,iBAAiBa,cAAcC,EAASC,EAAWC,EAChE,CACAC,WAAAA,GACC,OAAOlB,KAAKC,iBAAiBiB,aAC9B,CACAC,cAAAA,CAAeC,EAAoBH,GAClC,OAAOjB,KAAKC,iBAAiBkB,eAAeC,EAAaH,EAC1D,CACAI,YAAAA,GACC,OAAOrB,KAAKC,iBAAiBoB,cAC9B,CACAC,aAAAA,CAAcF,EAAoBH,GACjC,OAAOjB,KAAKC,iBAAiBqB,cAAcF,EAAaH,EACzD,CACAM,WAAAA,GACC,OAAOvB,KAAKC,iBAAiBsB,aAC9B,CACAC,SAAAA,CAAUC,GACT,OAAOzB,KAAKC,iBAAiBuB,UAAUC,EACxC,CACAC,SAAAA,CAAUC,GACT,OAAO3B,KAAKC,iBAAiByB,UAAUC,EACxC,CACAC,QAAAA,CAASC,GACR,OAAO7B,KAAKC,iBAAiB2B,SAASC,EACvC,CACAC,QAAAA,CAASC,GACR,OAAO/B,KAAKC,iBAAiB6B,SAASC,EACvC,CACAC,QAAAA,CAASC,GACR,OAAOjC,KAAKC,iBAAiB+B,SAASC,EACvC,CACAC,WAAAA,CAAYC,GACX,OAAOnC,KAAKC,iBAAiBiC,YAAYC,EAC1C,CACAC,WAAAA,CAAYC,GACX,OAAOrC,KAAKC,iBAAiBmC,YAAYC,EAC1C,CACAC,WAAAA,CAAYD,GACX,OAAOrC,KAAKC,iBAAiBqC,YAAYD,EAC1C,CACAE,gBAAAA,GACC,OAAOvC,KAAKC,iBAAiBsC,kBAC9B,CACAC,cAAAA,GACC,OAAOxC,KAAKC,iBAAiBuC,gBAC9B,CACAC,eAAAA,GACC,OAAOzC,KAAKC,iBAAiBwC,iBAC9B,CACAC,aAAAA,GACC,OAAO1C,KAAKC,iBAAiByC,eAC9B,CACAC,cAAAA,GACC,OAAO3C,KAAKC,iBAAiB0C,gBAC9B,CACAC,YAAAA,GACC,OAAO5C,KAAKC,iBAAiB2C,cAC9B,CACAC,YAAAA,GACC,OAAO7C,KAAKC,iBAAiB4C,cAC9B,CACAC,UAAAA,GACC,OAAO9C,KAAKC,iBAAiB6C,YAC9B,CACAC,aAAAA,GACC,OAAO/C,KAAKC,iBAAiB8C,eAC9B,CACAC,WAAAA,GACC,OAAOhD,KAAKC,iBAAiB+C,aAC9B,CACAC,YAAAA,GACC,OAAOjD,KAAKC,iBAAiBgD,cAC9B,CACAC,UAAAA,GACC,OAAOlD,KAAKC,iBAAiBiD,YAC9B,CACAC,QAAAA,GACC,OAAOnD,KAAKC,iBAAiBkD,UAC9B,CACAC,QAAAA,GACC,OAAOpD,KAAKC,iBAAiBmD,UAC9B,CACAC,OAAAA,GACC,OAAOrD,KAAKC,iBAAiBoD,SAC9B,CACAC,OAAAA,GACC,OAAOtD,KAAKC,iBAAiBqD,SAC9B,CACAC,OAAAA,GACC,OAAOvD,KAAKC,iBAAiBsD,SAC9B,CACAC,UAAAA,GACC,OAAOxD,KAAKC,iBAAiBuD,YAC9B,CACAC,UAAAA,GACC,OAAOzD,KAAKC,iBAAiBwD,YAC9B,CACAC,UAAAA,GACC,OAAO1D,KAAKC,iBAAiByD,YAC9B,CACAC,IAAAA,CAAKtD,GACJ,OAAOL,KAAKC,iBAAiB0D,KAAKtD,EACnC,CAxIAuD,WAAAA,CAAYC,GACXC,MAAMD,EAAS9D,gBAHhB,OAAQE,wBAAR,GAICD,KAAKC,iBAAmB4D,CACzB,EAwIM,MAAME,UAA6BlE,EASzCM,iBAAAA,CAAkBC,EAAcC,EAAmBC,GAC9CD,IAAS2D,EAAAA,YAAYC,MAAQ5D,IAAS2D,EAAAA,YAAYE,OACrDJ,MAAM3D,kBACLH,KAAKmE,YAAcJ,EAAqBK,UAAYhE,EACpDC,EACAC,GAGDwD,MAAM3D,kBAAkBC,EAAMC,EAAMC,EAEtC,CAfAsD,WAAAA,CAAYC,EAAqBM,GAChCL,MAAMD,GAHP,OAASM,mBAAT,GAICnE,KAAKmE,YAAcA,CACpB,E,wHCnHD,SAASE,EAAkBC,GACtBC,OAAOC,QACVD,OAAOC,QAAQC,YACdH,EAAcI,KACdJ,EAAcK,cAELJ,OAAOK,OACjBL,OAAOK,OAAOC,gBAAgBC,kBAAkBL,YAC/CH,GAGDS,QAAQC,KAAK,2BAEf,CDgGC,EADYjB,EACIK,YAAY,KC9F7B,IAAIa,EAAM,EACV,MAAMC,EAAwB,IAAM,cAAoB,OAAND,KAE3C,MAAME,UAAyBC,EAAAA,iBAgBrCC,KAAAA,CAAMC,GACL,GAAIA,IAAoBtF,KAAK2E,cAAgBJ,OAAOgB,kBAAmB,CACtER,QAAQC,KAAK,uBAAyBM,UAC/Bf,OAAOgB,kBAAkBvF,KAAK2E,cACrC,IAAK,MAAMa,KAAWxF,KAAKyF,SAC1BD,EAAQE,OACP,IAAIC,EAAAA,sBACHC,EAAAA,0BAA0BC,QAC1B,kBAIH7F,KAAKyF,SAAW,GAChBzF,KAAK2E,aAAeO,IACpBX,OAAOgB,kBAAkBvF,KAAK2E,cAAgB3E,IAC/C,CACD,CAEA8F,OAAAA,CAAQC,GACP,MAAMC,EAAWhG,KAAKyF,SAASQ,QAC/B,GAAID,EAAU,CACbE,aAAaF,EAASG,WACtB,MAAMzB,EAAO0B,OAAOjH,KAAK4G,EAAQrB,KAAM,UACvCsB,EAASK,QAAQ3B,EAClB,CACA1E,KAAKsG,iBACN,CAEQA,eAAAA,GACP,MAAMP,EAAU/F,KAAKuG,UAAUN,QAC3BF,IACHhB,QAAQyB,IAAI,wBACZnC,EAAkB0B,GAEpB,CAEAU,IAAAA,CAAKC,GACJ,MAAM/F,EAAKX,KAAK2E,aAEVgC,EAAa3G,KACnB,OAAO,IAAI4G,SAAgB,SAAUC,EAAKC,GACzCH,EAAWlB,SAASsB,KAAK,CACxBV,QAASQ,EACTnB,OAAQoB,EACRX,UAAWa,YAAW,WACrBL,EAAWtB,MAAM1E,EAClB,GAlFsB,OAoFvB,MAAMoF,EAAyB,CAC9BrB,KAAMgC,EAAWO,SAAS,UAC1BtC,aAAchE,GAEoB,IAA/BgG,EAAWlB,SAASyB,QACvBnC,QAAQyB,IAAI,+BACZnC,EAAkB0B,KAElBhB,QAAQyB,IAAI,2CACZG,EAAWJ,UAAUQ,KAAKhB,GAE5B,GACD,CAvEAnC,WAAAA,CACCuD,EACAC,G,IAI4B7C,EAF5BT,MAAMqD,EAAWC,GARlBzC,EAAAA,KAAAA,eAAeO,KACfO,EAAAA,KAAAA,WAA8B,IAC9Bc,EAAAA,KAAAA,YAA6B,IAON,oBAAXhC,SACVA,OAAOgB,kBAA4C,QAAxBhB,EAAAA,OAAOgB,yBAAPhB,IAAAA,EAAAA,EAA4B,CAAC,EACxDA,OAAOgB,kBAAkBvF,KAAK2E,cAAgB3E,KAEhD,EAiEM,SAASqH,EACfC,G,IACAC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA2B,WAC3B1D,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAyB,UAQzB,MAAM8C,EAAa,IAAIxB,GACtBpF,EAAAA,EAAAA,cAAawH,GAPd,cAAuCxD,EACtCH,WAAAA,CAAY4D,G,IAEqBF,EAAhCxD,MAAM,KADW2D,EAAAA,EAAAA,aAAY5D,GACvB,CAAa2D,GAAsC,QAAzBF,EAAAA,EAAcnD,mBAAdmD,IAAAA,EAAAA,EAA6B,GAC9D,IAMD,OAAO,IAAIA,EAAcX,EAC1B,CC/IA,IAAIe,EACG,MAAMC,EAAuB,MAC/BC,EAAAA,EAAAA,GAAYF,KACfA,EAAoBL,EACnBQ,EAAYC,OACZ,WACA,YAGKJ,GAGR,IAAIK,EACG,MAAMC,EAAsB,MAC9BJ,EAAAA,EAAAA,GAAYG,KACfA,EAAmBV,EAClBY,EAAWH,OACX,WACA,YAGKC,GAGR,IAAIG,EACG,MAAMjL,EAAwB,KAC/BiL,IACJA,EAAqBb,EACpBc,EAAaL,OACb,WACA,YAGKI,GAGR,IAAIE,EACG,MAAMC,EAAyB,KAChCD,IACJA,EAAsBf,EACrBiB,EAAcR,OACd,WACA,YAGKM,GAGR,IAAIG,EACG,MAAMC,EAAe,KACtBD,IACJA,EAAYlB,EACXoB,EAAIX,OACJ,WACA,YAGKS,GAGR,IAAIG,EACG,MAAM/J,EAAgB,KACvB+J,IACJA,EAAarB,EACZsB,EAAKb,OACL,WACA,YAGKY,GAER,IAAIE,EACG,MAAMC,EAAmB,KAC1BD,IACJA,EAAgBvB,EACfyB,EAAQhB,OACR,WACA,YAGKc,GAER,IAAIG,EACG,MAAMC,EAAiB,KACxBD,IACJA,EAAc1B,EACb4B,EAAAA,OACA,WACA,YAGKF,GAaR,IAAIG,EACG,MAAMC,EAAqB,KAC5BD,IACJA,EAAkB7B,EACjB+B,EAAUtB,OACV,WACA,YAGKoB,GAGR,IAAIG,EACG,MAAMC,EAAsB,KAC7BD,IACJA,EAAmBhC,EAClBkC,EAAWzB,OACX,WACA,YAGKuB,GAeR,IAAIG,EACG,MAAMC,EAAsB,KAC7BD,IACJA,EAAmBnC,EAClBqC,EAAW5B,OACX,WACA,YAGK0B,GAGR,IAAIG,EACG,MAAMC,EAAuB,KAC9BD,IACJA,EAAoBtC,EACnBwC,EAAY/B,OACZ,WACA,YAGK6B,E,mFC1IR,MAAMhN,EACLmN,IAEA,MAAOC,EAAUC,IAAejN,EAAAA,EAAAA,WAAkB,G,IACG+M,EAArD,MAAOG,EAAMC,IAAWnN,EAAAA,EAAAA,UAAyC,QAAZ+M,EAAAA,EAAQG,YAARH,IAAAA,EAAAA,EAAgB,MAE/DK,GAAWC,EAAAA,EAAAA,QAAoC,MAE/CC,GACLC,EAAAA,EAAAA,cACE,I,IAACC,GAAM,EACFA,IAEDA,EAAMC,eACTR,GAAY,GACFF,EAAQW,QAClBT,GAAY,GACb,GAED,CAACF,EAAQW,SAGLC,EAAuBZ,EAAQlN,SAClC+N,IAAYN,EAA8B,KAC1CA,EAyBH,OAvBArN,EAAAA,EAAAA,YAAU,KACT8M,EAAQG,MAAQC,EAAQJ,EAAQG,KAAK,GACnC,CAACH,EAAQG,QAEZjN,EAAAA,EAAAA,YAAU,KACT,GAAKiN,GAEC,yBAA0B1F,OAShC,OAPA4F,EAASS,QAAU,IAAIrG,OAAOsG,qBAC7BH,EACAZ,GAGDK,EAASS,QAAQE,QAAQb,GAElB,K,IAAME,E,OAAgB,QAAhBA,EAAAA,EAASS,eAATT,IAAAA,OAAAA,EAAAA,EAAkBY,YAAY,C,GACzC,CAACd,EAAMH,EAASY,KAEnB1N,EAAAA,EAAAA,YAAU,K,IACwBmN,GAA5BL,EAAQW,QAAUV,IAA0B,QAAhBI,EAAAA,EAASS,eAATT,IAAAA,GAAAA,EAAkBY,aAAY,GAC7D,CAAChB,EAAUD,EAAQW,SAEf,CAACV,EAAUG,EAAQ,C,gDC1E3B,MAAMzK,EAAWuL,GAA+B,OAAc,OAAPA,EAAO,I","sources":["webpack://@guardian/dotcom-rendering/./src/components/EpicContent.apps.tsx","webpack://@guardian/dotcom-rendering/./src/components/AppsEpic.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/thrift/protocols.ts","webpack://@guardian/dotcom-rendering/./src/lib/thrift/nativeConnection.ts","webpack://@guardian/dotcom-rendering/./src/lib/bridgetApi.ts","webpack://@guardian/dotcom-rendering/./src/lib/useIsInView.ts","webpack://@guardian/dotcom-rendering/./src/palette.ts"],"sourcesContent":["import { ThemeProvider } from '@emotion/react';\nimport { PurchaseScreenReason } from '@guardian/bridget/PurchaseScreenReason';\nimport {\n\tButton,\n\tbuttonThemeReaderRevenue,\n\tSvgArrowRightStraight,\n} from '@guardian/source/react-components';\nimport { useEffect, useState } from 'react';\nimport { getAcquisitionsClient } from '../lib/bridgetApi';\nimport { useIsInView } from '../lib/useIsInView';\n\ninterface EpicProps {\n\ttitle: string;\n\tbody: string;\n\tfirstButton: string;\n\tsecondButton?: string;\n}\n\nexport function EpicContent({\n\ttitle,\n\tbody,\n\tfirstButton,\n\tsecondButton,\n}: EpicProps): React.ReactElement | null {\n\tconst [impressionSeen, setImpressionSeenRef] = useIsInView({\n\t\tdebounce: true,\n\t});\n\tconst [reportedImpressionSeen, setReportedImpressionSeen] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (impressionSeen && !reportedImpressionSeen) {\n\t\t\tvoid getAcquisitionsClient().epicSeen();\n\t\t\tsetReportedImpressionSeen(true);\n\t\t}\n\t}, [impressionSeen, reportedImpressionSeen, setReportedImpressionSeen]);\n\n\tconst EpicButton = ({ text }: { text: string }) => (\n\t\t<Button\n\t\t\tonClick={() =>\n\t\t\t\tvoid getAcquisitionsClient().launchPurchaseScreen(\n\t\t\t\t\tPurchaseScreenReason.epic,\n\t\t\t\t)\n\t\t\t}\n\t\t\ticonSide=\"right\"\n\t\t\ticon={<SvgArrowRightStraight />}\n\t\t>\n\t\t\t{text}\n\t\t</Button>\n\t);\n\n\treturn (\n\t\t<div ref={setImpressionSeenRef}>\n\t\t\t<h1 dangerouslySetInnerHTML={{ __html: title }}></h1>\n\t\t\t<div dangerouslySetInnerHTML={{ __html: body }}></div>\n\t\t\t<div className=\"button-container\">\n\t\t\t\t<ThemeProvider theme={buttonThemeReaderRevenue}>\n\t\t\t\t\t<EpicButton text={firstButton} />\n\t\t\t\t\t{!!secondButton && <EpicButton text={secondButton} />}\n\t\t\t\t</ThemeProvider>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport type { IEpic } from '@guardian/bridget/Epic';\nimport {\n\tarticle17,\n\tfrom,\n\theadlineMedium24,\n\tpalette,\n\tremSpace,\n\ttextSans17,\n} from '@guardian/source/foundations';\nimport { useEffect, useState } from 'react';\nimport { getAcquisitionsClient, getUserClient } from '../lib/bridgetApi';\nimport { palette as themePalette } from '../palette';\nimport { EpicContent } from './EpicContent.apps';\n\nexport const AppsEpic = () => {\n\tconst [isPremium, setIsPremium] = useState<boolean>(true); // Default to true, so we initially don't show the epic\n\tconst [epic, setEpic] = useState<IEpic | undefined>(undefined);\n\n\tuseEffect(() => {\n\t\tvoid getUserClient()\n\t\t\t.isPremium()\n\t\t\t.then(setIsPremium)\n\t\t\t.catch(() => undefined);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tvoid getAcquisitionsClient()\n\t\t\t.getEpics()\n\t\t\t.then((maybeEpic) => {\n\t\t\t\tsetEpic(maybeEpic.epic);\n\t\t\t})\n\t\t\t.catch(() => undefined);\n\t}, []);\n\n\tif (!isPremium && epic) {\n\t\tconst { title, body, firstButton, secondButton } = epic;\n\t\tconst epicProps = {\n\t\t\ttitle,\n\t\t\tbody,\n\t\t\tfirstButton,\n\t\t\tsecondButton,\n\t\t};\n\t\treturn (\n\t\t\t<div css={epicStyles}>\n\t\t\t\t<EpicContent {...epicProps} />\n\t\t\t</div>\n\t\t);\n\t}\n\treturn null;\n};\n\nconst epicStyles: SerializedStyles = css`\n\t& > div {\n\t\t${from.wide} {\n\t\t\tmargin: ${remSpace[3]} 0;\n\t\t}\n\n\t\tborder-top: 1px solid ${themePalette('--apps-epic-border')};\n\t\tbackground: ${themePalette('--apps-epic-background')};\n\t\tcolor: ${themePalette('--apps-epic-text')};\n\t\tpadding: ${remSpace[3]};\n\t\t${article17};\n\t\tclear: left;\n\t}\n\n\th1:first-of-type {\n\t\tmargin-top: 0;\n\t\t${headlineMedium24}\n\t}\n\n\tbutton {\n\t\tmargin: 0 ${remSpace[3]} ${remSpace[3]} 0;\n\t}\n\n\t.button-container {\n\t\tmargin-top: ${remSpace[9]};\n\t}\n\n\tmark {\n\t\tbackground: ${palette.brandAlt[400]};\n\t\tpadding: 0.1rem 0.125rem;\n\t}\n\n\t/* Source Button styles */\n\t.button-container svg {\n\t\tmargin-right: -4px;\n\t\tflex: 0 0 auto;\n\t\tdisplay: block;\n\t\tfill: currentColor;\n\t\tposition: relative;\n\t\twidth: 30px;\n\t\theight: auto;\n\t}\n\n\t.src-button-space {\n\t\twidth: 12px;\n\t}\n\n\tbutton {\n\t\tdisplay: inline-flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tbox-sizing: border-box;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t\tcursor: pointer;\n\t\ttransition: 0.3s ease-in-out;\n\t\ttext-decoration: none;\n\t\twhite-space: nowrap;\n\t\t${textSans17}\n\t\tline-height: 1.5;\n\t\tfont-weight: 700;\n\t\theight: 44px;\n\t\tmin-height: 44px;\n\t\tpadding: 0 20px;\n\t\tborder-radius: 44px;\n\t\tpadding-bottom: 2px;\n\t\tbackground-color: ${palette.brandAlt[400]};\n\t\tcolor: ${palette.brand[400]};\n\t\tmargin: 0 ${remSpace[3]} ${remSpace[3]} 0;\n\t}\n`;\n","import type {\n\tInt64,\n\tIThriftField,\n\tIThriftList,\n\tIThriftMap,\n\tIThriftMessage,\n\tIThriftSet,\n\tIThriftStruct,\n\tTTransport,\n\tTType,\n} from '@creditkarma/thrift-server-core';\nimport { MessageType, TProtocol } from '@creditkarma/thrift-server-core';\n\nexport abstract class TProtocolDecorator extends TProtocol {\n\tprivate concreteProtocol: TProtocol;\n\n\tconstructor(protocol: TProtocol) {\n\t\tsuper(protocol.getTransport());\n\t\tthis.concreteProtocol = protocol;\n\t}\n\n\tgetTransport(): TTransport {\n\t\treturn this.concreteProtocol.getTransport();\n\t}\n\tflush(): Buffer {\n\t\treturn this.concreteProtocol.flush();\n\t}\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\treturn this.concreteProtocol.writeMessageBegin(name, type, seqid);\n\t}\n\twriteMessageEnd(): void {\n\t\treturn this.concreteProtocol.writeMessageEnd();\n\t}\n\twriteStructBegin(name: string): void {\n\t\treturn this.concreteProtocol.writeStructBegin(name);\n\t}\n\twriteStructEnd(): void {\n\t\treturn this.concreteProtocol.writeStructEnd();\n\t}\n\twriteFieldBegin(name: string, type: TType, id: number): void {\n\t\treturn this.concreteProtocol.writeFieldBegin(name, type, id);\n\t}\n\twriteFieldEnd(): void {\n\t\treturn this.concreteProtocol.writeFieldEnd();\n\t}\n\twriteFieldStop(): void {\n\t\treturn this.concreteProtocol.writeFieldStop();\n\t}\n\twriteMapBegin(keyType: TType, valueType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeMapBegin(keyType, valueType, size);\n\t}\n\twriteMapEnd(): void {\n\t\treturn this.concreteProtocol.writeMapEnd();\n\t}\n\twriteListBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeListBegin(elementType, size);\n\t}\n\twriteListEnd(): void {\n\t\treturn this.concreteProtocol.writeListEnd();\n\t}\n\twriteSetBegin(elementType: TType, size: number): void {\n\t\treturn this.concreteProtocol.writeSetBegin(elementType, size);\n\t}\n\twriteSetEnd(): void {\n\t\treturn this.concreteProtocol.writeSetEnd();\n\t}\n\twriteBool(bool: boolean): void {\n\t\treturn this.concreteProtocol.writeBool(bool);\n\t}\n\twriteByte(b: number): void {\n\t\treturn this.concreteProtocol.writeByte(b);\n\t}\n\twriteI16(i16: number): void {\n\t\treturn this.concreteProtocol.writeI16(i16);\n\t}\n\twriteI32(i32: number): void {\n\t\treturn this.concreteProtocol.writeI32(i32);\n\t}\n\twriteI64(i64: number | Int64): void {\n\t\treturn this.concreteProtocol.writeI64(i64);\n\t}\n\twriteDouble(dbl: number): void {\n\t\treturn this.concreteProtocol.writeDouble(dbl);\n\t}\n\twriteString(arg: string): void {\n\t\treturn this.concreteProtocol.writeString(arg);\n\t}\n\twriteBinary(arg: string | Buffer): void {\n\t\treturn this.concreteProtocol.writeBinary(arg);\n\t}\n\treadMessageBegin(): IThriftMessage {\n\t\treturn this.concreteProtocol.readMessageBegin();\n\t}\n\treadMessageEnd(): void {\n\t\treturn this.concreteProtocol.readMessageEnd();\n\t}\n\treadStructBegin(): IThriftStruct {\n\t\treturn this.concreteProtocol.readStructBegin();\n\t}\n\treadStructEnd(): void {\n\t\treturn this.concreteProtocol.readStructEnd();\n\t}\n\treadFieldBegin(): IThriftField {\n\t\treturn this.concreteProtocol.readFieldBegin();\n\t}\n\treadFieldEnd(): void {\n\t\treturn this.concreteProtocol.readFieldEnd();\n\t}\n\treadMapBegin(): IThriftMap {\n\t\treturn this.concreteProtocol.readMapBegin();\n\t}\n\treadMapEnd(): void {\n\t\treturn this.concreteProtocol.readMapEnd();\n\t}\n\treadListBegin(): IThriftList {\n\t\treturn this.concreteProtocol.readListBegin();\n\t}\n\treadListEnd(): void {\n\t\treturn this.concreteProtocol.readListEnd();\n\t}\n\treadSetBegin(): IThriftSet {\n\t\treturn this.concreteProtocol.readSetBegin();\n\t}\n\treadSetEnd(): void {\n\t\treturn this.concreteProtocol.readSetEnd();\n\t}\n\treadBool(): boolean {\n\t\treturn this.concreteProtocol.readBool();\n\t}\n\treadByte(): number {\n\t\treturn this.concreteProtocol.readByte();\n\t}\n\treadI16(): number {\n\t\treturn this.concreteProtocol.readI16();\n\t}\n\treadI32(): number {\n\t\treturn this.concreteProtocol.readI32();\n\t}\n\treadI64(): Int64 {\n\t\treturn this.concreteProtocol.readI64();\n\t}\n\treadDouble(): number {\n\t\treturn this.concreteProtocol.readDouble();\n\t}\n\treadBinary(): Buffer {\n\t\treturn this.concreteProtocol.readBinary();\n\t}\n\treadString(): string {\n\t\treturn this.concreteProtocol.readString();\n\t}\n\tskip(type: TType): void {\n\t\treturn this.concreteProtocol.skip(type);\n\t}\n}\n\nexport class TMultiplexedProtocol extends TProtocolDecorator {\n\tstatic readonly separator = ':';\n\treadonly serviceName: string;\n\n\tconstructor(protocol: TProtocol, serviceName: string) {\n\t\tsuper(protocol);\n\t\tthis.serviceName = serviceName;\n\t}\n\n\twriteMessageBegin(name: string, type: MessageType, seqid: number): void {\n\t\tif (type === MessageType.CALL || type === MessageType.ONEWAY) {\n\t\t\tsuper.writeMessageBegin(\n\t\t\t\tthis.serviceName + TMultiplexedProtocol.separator + name,\n\t\t\t\ttype,\n\t\t\t\tseqid,\n\t\t\t);\n\t\t} else {\n\t\t\tsuper.writeMessageBegin(name, type, seqid);\n\t\t}\n\t}\n}\n","import type {\n\tIClientConstructor,\n\tIProtocolConstructor,\n\tITransportConstructor,\n\tProtocolType,\n\tThriftClient,\n\tTransportType,\n\tTTransport,\n} from '@creditkarma/thrift-server-core';\nimport {\n\tgetProtocol,\n\tgetTransport,\n\tTApplicationException,\n\tTApplicationExceptionType,\n\tThriftConnection,\n} from '@creditkarma/thrift-server-core';\nimport { TMultiplexedProtocol } from './protocols';\n\ndeclare global {\n\tinterface Window {\n\t\tnativeConnections?: Record<string, NativeConnection>;\n\t\tandroid?: {\n\t\t\tpostMessage: (data: string, connectionId: string) => void;\n\t\t};\n\t\twebkit?: {\n\t\t\tmessageHandlers: {\n\t\t\t\tiOSWebViewMessage: {\n\t\t\t\t\tpostMessage: (nativeMessage: NativeMessage) => void;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n}\n\nexport interface NativeMessage {\n\tdata: string;\n\tconnectionId: string;\n}\n\ninterface PromiseResponse {\n\tresolve: (response: Buffer) => void;\n\treject: (error: Error) => void;\n\ttimeoutId: NodeJS.Timeout;\n}\n\nconst ACTION_TIMEOUT_MS = 30000;\n\nfunction sendNativeMessage(nativeMessage: NativeMessage): void {\n\tif (window.android) {\n\t\twindow.android.postMessage(\n\t\t\tnativeMessage.data,\n\t\t\tnativeMessage.connectionId,\n\t\t);\n\t} else if (window.webkit) {\n\t\twindow.webkit.messageHandlers.iOSWebViewMessage.postMessage(\n\t\t\tnativeMessage,\n\t\t);\n\t} else {\n\t\tconsole.warn('No native APIs available');\n\t}\n}\n\nlet uid = 1;\nconst getUniqueConnectionId = () => `connection-${uid++}`;\n\nexport class NativeConnection extends ThriftConnection {\n\tconnectionId = getUniqueConnectionId();\n\tpromises: PromiseResponse[] = [];\n\toutBuffer: NativeMessage[] = [];\n\n\tconstructor(\n\t\tTransport: ITransportConstructor,\n\t\tProtocol: IProtocolConstructor,\n\t) {\n\t\tsuper(Transport, Protocol);\n\t\tif (typeof window !== 'undefined') {\n\t\t\twindow.nativeConnections = window.nativeConnections ?? {};\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treset(oldConnectionId: string): void {\n\t\tif (oldConnectionId === this.connectionId && window.nativeConnections) {\n\t\t\tconsole.warn('Reseting connection ' + oldConnectionId);\n\t\t\tdelete window.nativeConnections[this.connectionId];\n\t\t\tfor (const promise of this.promises) {\n\t\t\t\tpromise.reject(\n\t\t\t\t\tnew TApplicationException(\n\t\t\t\t\t\tTApplicationExceptionType.UNKNOWN,\n\t\t\t\t\t\t'Timeout error',\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.promises = [];\n\t\t\tthis.connectionId = getUniqueConnectionId();\n\t\t\twindow.nativeConnections[this.connectionId] = this;\n\t\t}\n\t}\n\n\treceive(message: NativeMessage): void {\n\t\tconst resolver = this.promises.shift();\n\t\tif (resolver) {\n\t\t\tclearTimeout(resolver.timeoutId);\n\t\t\tconst data = Buffer.from(message.data, 'base64');\n\t\t\tresolver.resolve(data);\n\t\t}\n\t\tthis.sendNextMessage();\n\t}\n\n\tprivate sendNextMessage(): void {\n\t\tconst message = this.outBuffer.shift();\n\t\tif (message) {\n\t\t\tconsole.log('Sending next message');\n\t\t\tsendNativeMessage(message);\n\t\t}\n\t}\n\n\tsend(dataToSend: Buffer): Promise<Buffer> {\n\t\tconst id = this.connectionId;\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias -- Reassign this\n\t\tconst connection = this;\n\t\treturn new Promise<Buffer>(function (res, rej): void {\n\t\t\tconnection.promises.push({\n\t\t\t\tresolve: res,\n\t\t\t\treject: rej,\n\t\t\t\ttimeoutId: setTimeout(function () {\n\t\t\t\t\tconnection.reset(id);\n\t\t\t\t}, ACTION_TIMEOUT_MS),\n\t\t\t});\n\t\t\tconst message: NativeMessage = {\n\t\t\t\tdata: dataToSend.toString('base64'),\n\t\t\t\tconnectionId: id,\n\t\t\t};\n\t\t\tif (connection.promises.length === 1) {\n\t\t\t\tconsole.log('Sending message immediately');\n\t\t\t\tsendNativeMessage(message);\n\t\t\t} else {\n\t\t\t\tconsole.log('Queing message because others in flight');\n\t\t\t\tconnection.outBuffer.push(message);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function createAppClient<TClient extends ThriftClient<void>>(\n\tServiceClient: IClientConstructor<TClient, void>,\n\ttransport: TransportType = 'buffered',\n\tprotocol: ProtocolType = 'compact',\n): TClient {\n\tclass NamedMultiplexedProtocol extends TMultiplexedProtocol {\n\t\tconstructor(tTransport: TTransport) {\n\t\t\tconst Protocol = getProtocol(protocol);\n\t\t\tsuper(new Protocol(tTransport), ServiceClient.serviceName ?? '');\n\t\t}\n\t}\n\tconst connection = new NativeConnection(\n\t\tgetTransport(transport),\n\t\tNamedMultiplexedProtocol,\n\t);\n\treturn new ServiceClient(connection);\n}\n","import * as Acquisitions from '@guardian/bridget/Acquisitions';\nimport * as Analytics from '@guardian/bridget/Analytics';\nimport * as Commercial from '@guardian/bridget/Commercial';\nimport * as Discussion from '@guardian/bridget/Discussion';\nimport * as Environment from '@guardian/bridget/Environment';\nimport * as Gallery from '@guardian/bridget/Gallery';\nimport * as Interaction from '@guardian/bridget/Interaction';\nimport * as Metrics from '@guardian/bridget/Metrics';\nimport * as Navigation from '@guardian/bridget/Navigation';\nimport * as Newsletters from '@guardian/bridget/Newsletters';\nimport * as Notifications from '@guardian/bridget/Notifications';\nimport * as Tag from '@guardian/bridget/Tag';\nimport * as User from '@guardian/bridget/User';\nimport * as Video from '@guardian/bridget/Videos';\nimport { isUndefined } from '@guardian/libs';\nimport { createAppClient } from './thrift/nativeConnection';\n\nlet environmentClient: Environment.Client<void> | undefined = undefined;\nexport const getEnvironmentClient = (): Environment.Client<void> => {\n\tif (isUndefined(environmentClient)) {\n\t\tenvironmentClient = createAppClient<Environment.Client<void>>(\n\t\t\tEnvironment.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn environmentClient;\n};\n\nlet commercialClient: Commercial.Client<void> | undefined = undefined;\nexport const getCommercialClient = (): Commercial.Client<void> => {\n\tif (isUndefined(commercialClient)) {\n\t\tcommercialClient = createAppClient<Commercial.Client<void>>(\n\t\t\tCommercial.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn commercialClient;\n};\n\nlet acquisitionsClient: Acquisitions.Client<void> | undefined = undefined;\nexport const getAcquisitionsClient = (): Acquisitions.Client<void> => {\n\tif (!acquisitionsClient) {\n\t\tacquisitionsClient = createAppClient<Acquisitions.Client<void>>(\n\t\t\tAcquisitions.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn acquisitionsClient;\n};\n\nlet notificationsClient: Notifications.Client<void> | undefined = undefined;\nexport const getNotificationsClient = (): Notifications.Client<void> => {\n\tif (!notificationsClient) {\n\t\tnotificationsClient = createAppClient<Notifications.Client<void>>(\n\t\t\tNotifications.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn notificationsClient;\n};\n\nlet tagClient: Tag.Client<void> | undefined = undefined;\nexport const getTagClient = (): Tag.Client<void> => {\n\tif (!tagClient) {\n\t\ttagClient = createAppClient<Tag.Client<void>>(\n\t\t\tTag.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn tagClient;\n};\n\nlet userClient: User.Client<void> | undefined = undefined;\nexport const getUserClient = (): User.Client<void> => {\n\tif (!userClient) {\n\t\tuserClient = createAppClient<User.Client<void>>(\n\t\t\tUser.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn userClient;\n};\nlet galleryClient: Gallery.Client<void> | undefined = undefined;\nexport const getGalleryClient = (): Gallery.Client<void> => {\n\tif (!galleryClient) {\n\t\tgalleryClient = createAppClient<Gallery.Client<void>>(\n\t\t\tGallery.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn galleryClient;\n};\nlet videoClient: Video.Client<void> | undefined = undefined;\nexport const getVideoClient = (): Video.Client<void> => {\n\tif (!videoClient) {\n\t\tvideoClient = createAppClient<Video.Client<void>>(\n\t\t\tVideo.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn videoClient;\n};\nlet metricsClient: Metrics.Client<void> | undefined = undefined;\nexport const getMetricsClient = (): Metrics.Client<void> => {\n\tif (!metricsClient) {\n\t\tmetricsClient = createAppClient<Metrics.Client<void>>(\n\t\t\tMetrics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn metricsClient;\n};\nlet analyticsClient: Analytics.Client<void> | undefined = undefined;\nexport const getAnalyticsClient = (): Analytics.Client<void> => {\n\tif (!analyticsClient) {\n\t\tanalyticsClient = createAppClient<Analytics.Client<void>>(\n\t\t\tAnalytics.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn analyticsClient;\n};\n\nlet navigationClient: Navigation.Client<void> | undefined = undefined;\nexport const getNavigationClient = (): Navigation.Client<void> => {\n\tif (!navigationClient) {\n\t\tnavigationClient = createAppClient<Navigation.Client<void>>(\n\t\t\tNavigation.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn navigationClient;\n};\n\nlet newslettersClient: Newsletters.Client<void> | undefined = undefined;\nexport const getNewslettersClient = (): Newsletters.Client<void> => {\n\tif (!newslettersClient) {\n\t\tnewslettersClient = createAppClient<Newsletters.Client<void>>(\n\t\t\tNewsletters.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn newslettersClient;\n};\n\nlet discussionClient: Discussion.Client<void> | undefined = undefined;\nexport const getDiscussionClient = (): Discussion.Client<void> => {\n\tif (!discussionClient) {\n\t\tdiscussionClient = createAppClient<Discussion.Client<void>>(\n\t\t\tDiscussion.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn discussionClient;\n};\n\nlet interactionClient: Interaction.Client<void> | undefined = undefined;\nexport const getInteractionClient = (): Interaction.Client<void> => {\n\tif (!interactionClient) {\n\t\tinteractionClient = createAppClient<Interaction.Client<void>>(\n\t\t\tInteraction.Client,\n\t\t\t'buffered',\n\t\t\t'compact',\n\t\t);\n\t}\n\treturn interactionClient;\n};\n","import libDebounce from 'lodash.debounce';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\n/**\n * This file was copied into the source development kitchen from the following repository:\n * https://github.com/guardian/csnx/blob/main/libs/%40guardian/source-development-kitchen/src/react-components/ticker/useIsInView.ts\n *\n * Note: This version of the file uses `lodash.debounce`, whereas the original version does not.\n * As a result, we now have two versions of the `useIsInView` hook—one with `lodash.debounce` and one without.\n *\n * A discussion is needed to determine the best approach for consolidating these two versions into a single file.\n * Consider whether the use of `lodash.debounce` is necessary, and if so, integrate it into the consolidated version.\n */\n\ntype Options = {\n\t/**\n\t * Defaults to `undefined` (falsy),\n\t * which trigger a change the instantaneously.\n\t *\n\t * If `true`, debounce triggers by 200ms.\n\t * Enabling debouncing ensures the target element intersects\n\t * for at least 200ms before the callback is executed\n\t */\n\tdebounce?: true;\n\t/**\n\t * Defaults to `undefined` (falsy),\n\t * which only trigger on the first intersection.\n\t *\n\t * If `true`, trigger the hook on all intersections.\n\t */\n\trepeat?: true;\n\t/** Set the initial HTML Element, if known. */\n\tnode?: HTMLElement;\n};\n\n/**\n * Custom hook around the `IntersectionObserver`.\n *\n * @returns a tuple containing `[isInView, setNode]`\n */\nconst useIsInView = (\n\toptions: IntersectionObserverInit & Options,\n): [boolean, React.Dispatch<React.SetStateAction<HTMLElement | null>>] => {\n\tconst [isInView, setIsInView] = useState<boolean>(false);\n\tconst [node, setNode] = useState<HTMLElement | null>(options.node ?? null);\n\n\tconst observer = useRef<IntersectionObserver | null>(null);\n\n\tconst intersectionObserverCallback =\n\t\tuseCallback<IntersectionObserverCallback>(\n\t\t\t([entry]) => {\n\t\t\t\tif (!entry) return;\n\n\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\tsetIsInView(true);\n\t\t\t\t} else if (options.repeat) {\n\t\t\t\t\tsetIsInView(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[options.repeat],\n\t\t);\n\n\tconst intersectionCallback = options.debounce\n\t\t? libDebounce(intersectionObserverCallback, 200)\n\t\t: intersectionObserverCallback;\n\n\tuseEffect(() => {\n\t\toptions.node && setNode(options.node);\n\t}, [options.node]);\n\n\tuseEffect(() => {\n\t\tif (!node) return;\n\t\t// Check for browser support https://caniuse.com/intersectionobserver\n\t\tif (!('IntersectionObserver' in window)) return;\n\n\t\tobserver.current = new window.IntersectionObserver(\n\t\t\tintersectionCallback,\n\t\t\toptions,\n\t\t);\n\n\t\tobserver.current.observe(node);\n\n\t\treturn () => observer.current?.disconnect();\n\t}, [node, options, intersectionCallback]);\n\n\tuseEffect(() => {\n\t\tif (!options.repeat && isInView) observer.current?.disconnect();\n\t}, [isInView, options.repeat]);\n\n\treturn [isInView, setNode];\n};\n\nexport { useIsInView };\n","import type { ColourName } from './paletteDeclarations';\n\n/**\n * Looks up a palette colour by name. Retrieves a CSS value for the specified\n * colour, for use in CSS declarations. See the examples for how this is\n * commonly used with our Emotion-based styles.\n *\n * @param a The name of a palette colour; for example `--headline-colour`.\n * @returns A CSS `var` function call; for example `var(--headline-colour)`.\n * @example\n * const styles = css`\n *   color: ${palette('--headline-colour')};\n *   background-color: ${palette('--headline-background-colour')};\n * `;\n */\nconst palette = (colour: ColourName): string => `var(${colour})`;\n\n// ----- Exports ----- //\n\nexport { palette };\n"],"names":["EpicContent","title","body","firstButton","secondButton","impressionSeen","setImpressionSeenRef","useIsInView","debounce","reportedImpressionSeen","setReportedImpressionSeen","useState","useEffect","getAcquisitionsClient","epicSeen","EpicButton","text","Button","onClick","launchPurchaseScreen","PurchaseScreenReason","epic","iconSide","icon","SvgArrowRightStraight","div","ref","h1","dangerouslySetInnerHTML","__html","className","ThemeProvider","theme","buttonThemeReaderRevenue","AppsEpic","isPremium","setIsPremium","setEpic","undefined","getUserClient","then","catch","getEpics","maybeEpic","epicProps","css","epicStyles","from","wide","remSpace","themePalette","article17","headlineMedium24","palette","brandAlt","textSans17","brand","TProtocolDecorator","TProtocol","getTransport","this","concreteProtocol","flush","writeMessageBegin","name","type","seqid","writeMessageEnd","writeStructBegin","writeStructEnd","writeFieldBegin","id","writeFieldEnd","writeFieldStop","writeMapBegin","keyType","valueType","size","writeMapEnd","writeListBegin","elementType","writeListEnd","writeSetBegin","writeSetEnd","writeBool","bool","writeByte","b","writeI16","i16","writeI32","i32","writeI64","i64","writeDouble","dbl","writeString","arg","writeBinary","readMessageBegin","readMessageEnd","readStructBegin","readStructEnd","readFieldBegin","readFieldEnd","readMapBegin","readMapEnd","readListBegin","readListEnd","readSetBegin","readSetEnd","readBool","readByte","readI16","readI32","readI64","readDouble","readBinary","readString","skip","constructor","protocol","super","TMultiplexedProtocol","MessageType","CALL","ONEWAY","serviceName","separator","sendNativeMessage","nativeMessage","window","android","postMessage","data","connectionId","webkit","messageHandlers","iOSWebViewMessage","console","warn","uid","getUniqueConnectionId","NativeConnection","ThriftConnection","reset","oldConnectionId","nativeConnections","promise","promises","reject","TApplicationException","TApplicationExceptionType","UNKNOWN","receive","message","resolver","shift","clearTimeout","timeoutId","Buffer","resolve","sendNextMessage","outBuffer","log","send","dataToSend","connection","Promise","res","rej","push","setTimeout","toString","length","Transport","Protocol","createAppClient","ServiceClient","transport","tTransport","getProtocol","environmentClient","getEnvironmentClient","isUndefined","Environment","Client","commercialClient","getCommercialClient","Commercial","acquisitionsClient","Acquisitions","notificationsClient","getNotificationsClient","Notifications","tagClient","getTagClient","Tag","userClient","User","galleryClient","getGalleryClient","Gallery","videoClient","getVideoClient","Video","analyticsClient","getAnalyticsClient","Analytics","navigationClient","getNavigationClient","Navigation","discussionClient","getDiscussionClient","Discussion","interactionClient","getInteractionClient","Interaction","options","isInView","setIsInView","node","setNode","observer","useRef","intersectionObserverCallback","useCallback","entry","isIntersecting","repeat","intersectionCallback","libDebounce","current","IntersectionObserver","observe","disconnect","colour"],"sourceRoot":""}