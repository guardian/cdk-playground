{"version":3,"file":"6036.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/lib/readerRevenueDevUtils.ts"],"sourcesContent":["import { getCookie, removeCookie, setCookie, storage } from '@guardian/libs';\nimport {\n\tHIDE_SUPPORT_MESSAGING_COOKIE,\n\tRECURRING_CONTRIBUTOR_COOKIE,\n\tSUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n} from './contributions';\nimport { getLocaleCode } from './getCountryCode';\n\nconst readerRevenueCookies = [\n\tHIDE_SUPPORT_MESSAGING_COOKIE,\n\tRECURRING_CONTRIBUTOR_COOKIE,\n\tSUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n];\n\nconst clearEpicViewLog = (): void =>\n\tstorage.local.remove('gu.contributions.views');\n\nconst clearBannerLastClosedAt = (): void => {\n\tstorage.local.remove('gu.prefs.engagementBannerLastClosedAt');\n\tstorage.local.remove('gu.prefs.subscriptionBannerLastClosedAt');\n\tstorage.local.remove('gu.prefs.abandonedBasketLastClosedAt');\n\tstorage.local.remove('gu.noRRBannerTimestamp');\n};\n\nconst fakeOneOffContributor = (): void =>\n\tsetCookie({\n\t\tname: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\t\tvalue: Date.now().toString(),\n\t});\n\nconst MULTIVARIATE_ID_COOKIE = 'GU_mvt_id';\nconst MAX_CLIENT_MVT_ID = 1000000;\nconst incrementMvtCookie = (): void => {\n\tconst mvtId = parseInt(\n\t\tgetCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10',\n\t\t10,\n\t);\n\tif (mvtId) {\n\t\tif (mvtId === MAX_CLIENT_MVT_ID) {\n\t\t\t// Wrap back to 1 if it would exceed the max\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: '1' });\n\t\t} else {\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId + 1}` });\n\t\t}\n\t}\n};\nconst decrementMvtCookie = (): void => {\n\tconst mvtId = parseInt(\n\t\tgetCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10',\n\t\t10,\n\t);\n\tif (mvtId) {\n\t\tif (mvtId === 0) {\n\t\t\t// Wrap back to max if it would be less than 0\n\t\t\tsetCookie({\n\t\t\t\tname: MULTIVARIATE_ID_COOKIE,\n\t\t\t\tvalue: MAX_CLIENT_MVT_ID.toString(),\n\t\t\t});\n\t\t} else {\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId - 1}` });\n\t\t}\n\t}\n};\n\nconst clearCommonReaderRevenueStateAndReload = (\n\tasExistingSupporter: boolean,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tif (shouldHideReaderRevenue) {\n\t\talert(\n\t\t\t'This page has \"Prevent membership/contribution appeals\" ticked in Composer. Please try a different page',\n\t\t);\n\t\treturn;\n\t}\n\n\tfor (const cookie of readerRevenueCookies) removeCookie({ name: cookie });\n\tclearEpicViewLog();\n\n\tif (asExistingSupporter) {\n\t\tfakeOneOffContributor();\n\t}\n\n\twindow.location.reload();\n};\n\nconst showMeTheEpic = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showMeTheBanner = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tenableCmp();\n\tclearBannerLastClosedAt();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst enableCmp = (): void => {\n\tremoveCookie({ name: 'gu-cmp-disabled' });\n};\n\nconst showNextVariant = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tincrementMvtCookie();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showPreviousVariant = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tdecrementMvtCookie();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst changeGeolocation = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tgetLocaleCode()\n\t\t.then((current) => {\n\t\t\tconst geo = window.prompt(\n\t\t\t\t`Enter two-letter geolocation code (e.g. GB, US, AU). Current is ${\n\t\t\t\t\tcurrent ?? 'null'\n\t\t\t\t}.`,\n\t\t\t);\n\t\t\tif (geo === 'UK') {\n\t\t\t\talert(\n\t\t\t\t\t`'UK' is not a valid geolocation - please use 'GB' instead!`,\n\t\t\t\t);\n\t\t\t} else if (geo) {\n\t\t\t\tstorage.local.set('gu.geo.override', geo);\n\t\t\t\tclearCommonReaderRevenueStateAndReload(\n\t\t\t\t\tasExistingSupporter,\n\t\t\t\t\tshouldHideReaderRevenue,\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.error(`changeGeolocation - error: ${String(e)}`);\n\t\t});\n};\n\ntype ReaderRevenueDevUtil = (\n\tasExistingSupporter: boolean,\n\tshouldHideReaderRevenue: boolean,\n) => void;\nexport interface ReaderRevenueDevUtils {\n\tchangeGeolocation: ReaderRevenueDevUtil;\n\tshowMeTheEpic: ReaderRevenueDevUtil;\n\tshowMeTheBanner: ReaderRevenueDevUtil;\n\tshowNextVariant: ReaderRevenueDevUtil;\n\tshowPreviousVariant: ReaderRevenueDevUtil;\n}\n\nconst getForcedVariant = (type: 'epic' | 'banner'): string | null => {\n\t// eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unnecessary-condition -- Safety in global,\n\tif (URLSearchParams) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\tconst value = params.get(`force-${type}`);\n\t\tif (value) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport {\n\tchangeGeolocation,\n\tshowMeTheEpic,\n\tshowMeTheBanner,\n\tshowNextVariant,\n\tshowPreviousVariant,\n\tgetForcedVariant,\n};\n"],"names":["getCookie","removeCookie","setCookie","storage","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","getLocaleCode","readerRevenueCookies","clearEpicViewLog","local","remove","clearBannerLastClosedAt","fakeOneOffContributor","name","value","Date","now","toString","MULTIVARIATE_ID_COOKIE","MAX_CLIENT_MVT_ID","incrementMvtCookie","mvtId","parseInt","decrementMvtCookie","clearCommonReaderRevenueStateAndReload","asExistingSupporter","shouldHideReaderRevenue","alert","cookie","window","location","reload","showMeTheEpic","showMeTheBanner","enableCmp","showNextVariant","showPreviousVariant","changeGeolocation","then","current","geo","prompt","set","catch","e","console","error","String","getForcedVariant","type","URLSearchParams","params","search","get"],"sourceRoot":""}