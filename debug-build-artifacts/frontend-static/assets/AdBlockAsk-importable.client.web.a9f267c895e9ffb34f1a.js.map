{"version":3,"file":"AdBlockAsk-importable.client.web.a9f267c895e9ffb34f1a.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/static/icons/arrow-right.svg","webpack://@guardian/dotcom-rendering/./src/components/AdBlockAsk.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/useAdBlockAsk.ts","webpack://@guardian/dotcom-rendering/./src/lib/assert-unreachable.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAB.ts","webpack://@guardian/dotcom-rendering/./src/lib/detect-adblock.ts","webpack://@guardian/dotcom-rendering/./src/lib/useDetectAdBlock.ts"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgArrowRight = function SvgArrowRight(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.8 14.6l-7.6-7.6-.7.7 5.5 6.6h-14v1.5h14l-5.5 6.6.7.7 7.6-7.6v-.9\"\n  })));\n};\nexport default SvgArrowRight;","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport {\n\theadlineMedium24,\n\tpalette,\n\ttextSans14,\n\ttextSans15,\n\ttextSans17,\n} from '@guardian/source/foundations';\nimport { assertUnreachable } from '../lib/assert-unreachable';\nimport { useAdblockAsk } from '../lib/useAdBlockAsk';\nimport ArrowRightIcon from '../static/icons/arrow-right.svg';\nimport { useConfig } from './ConfigContext';\n\ntype AdBlockAskSize = 'leaderboard' | 'mpu';\n\nconst linkStyles = css`\n\tbackground: ${palette.brandAlt[400]};\n\tborder-radius: 16px;\n\tbox-sizing: border-box;\n\tcolor: ${palette.neutral[7]};\n\t${textSans17};\n\tfont-weight: 700;\n\ttext-decoration: none;\n\n\tfloat: left;\n\tline-height: 18px;\n\tposition: relative;\n\theight: 32px;\n\tpadding: 6px 34px 0 12px;\n\n\tsvg {\n\t\tfill: currentColor;\n\t\tposition: absolute;\n\t\tright: 3px;\n\t\ttop: 50%;\n\t\theight: 32px;\n\t\twidth: 32px;\n\t\ttransform: translate(0, -50%);\n\t\ttransition: transform 0.3s ease-in-out;\n\t}\n\n\t:hover svg {\n\t\ttransform: translate(3px, -50%);\n\t}\n`;\n\nconst adBlockAskH2Styles = css`\n\t${headlineMedium24}\n\tcolor: ${palette.brandAlt[400]};\n\tfont-weight: bold;\n`;\n\nconst adBlockAskTextStyles: Record<AdBlockAskSize, SerializedStyles> = {\n\tleaderboard: css`\n\t\tmargin-top: 8px;\n\t\t${textSans14};\n\t\tcolor: ${palette.neutral[100]};\n\t`,\n\tmpu: css`\n\t\tmargin-top: 16px;\n\t\t${textSans15};\n\t\tcolor: ${palette.neutral[100]};\n\t`,\n};\n\nconst HandsLogo = ({ styles }: { styles: SerializedStyles }) => {\n\tconst { assetOrigin } = useConfig();\n\tconst src = `${assetOrigin}static/frontend/logos/hands.png`;\n\treturn <img src={src} alt=\"Guardian logo held up by hands\" css={styles} />;\n};\n\nconst SupportButton = ({ href }: { href: string }) => (\n\t<a css={linkStyles} href={href}>\n\t\tSupport us <ArrowRightIcon />\n\t</a>\n);\n\nexport const Copy = ({ size }: { size: AdBlockAskSize }) => {\n\treturn (\n\t\t<>\n\t\t\t<h2 css={adBlockAskH2Styles}>Using an adblocker?</h2>\n\t\t\t<p css={adBlockAskTextStyles[size]}>\n\t\t\t\tWe value your readership - but we lose vital revenue by not\n\t\t\t\tbeing able to show you ads. With no billionaire owner\n\t\t\t\tbankrolling our reporting, could you support us? Itâ€™s quick and\n\t\t\t\tany amount helps. Thanks!\n\t\t\t</p>\n\t\t</>\n\t);\n};\n\nexport const AdBlockAskLeaderboard = ({\n\tsupportButtonHref,\n}: {\n\tsupportButtonHref: string;\n}) => {\n\treturn (\n\t\t<div\n\t\t\tcss={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t\twidth: 728px;\n\t\t\t\theight: 114px;\n\t\t\t\tbackground-color: ${palette.sport[300]};\n\t\t\t\tmargin: 0 auto;\n\t\t\t`}\n\t\t>\n\t\t\t<HandsLogo\n\t\t\t\tstyles={css`\n\t\t\t\t\tflex: 0 0 auto;\n\t\t\t\t\tmargin: auto 8px -6px 8px;\n\t\t\t\t\twidth: 81px;\n\t\t\t\t\theight: 48px;\n\t\t\t\t`}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tcss={css`\n\t\t\t\t\tborder-left: 1px solid rgba(255, 255, 255, 0.2);\n\t\t\t\t\tpadding-left: 8px;\n\t\t\t\t\tpadding-top: 8px;\n\t\t\t\t\tmargin-right: 12px;\n\t\t\t\t\tmargin-bottom: 12px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<Copy size=\"leaderboard\" />\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tcss={css`\n\t\t\t\t\twidth: auto;\n\t\t\t\t\tflex: 0 0 auto;\n\t\t\t\t\tmargin: auto 12px 12px 0;\n\t\t\t\t\tposition: relative;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SupportButton href={supportButtonHref} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const AdBlockAskMPU = ({\n\tsupportButtonHref,\n}: {\n\tsupportButtonHref: string;\n}) => {\n\treturn (\n\t\t<div\n\t\t\tcss={css`\n\t\t\t\twidth: 300px;\n\t\t\t\theight: 274px;\n\t\t\t\tbackground-color: ${palette.sport[300]};\n\t\t\t\tpadding: 12px;\n\t\t\t\tposition: relative;\n\t\t\t`}\n\t\t>\n\t\t\t<Copy size=\"mpu\" />\n\t\t\t<div\n\t\t\t\tcss={css`\n\t\t\t\t\tmargin-top: 56px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SupportButton href={supportButtonHref} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<HandsLogo\n\t\t\t\t\tstyles={css`\n\t\t\t\t\t\twidth: 128px;\n\t\t\t\t\t\theight: 68px;\n\t\t\t\t\t\tbackground-position: right bottom;\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tbottom: 0;\n\t\t\t\t\t\tright: 0;\n\t\t\t\t\t`}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\ntype Props = {\n\tsize: AdBlockAskSize;\n\tslotId: `dfp-ad--${string}`;\n\tshouldHideReaderRevenue: boolean;\n\tisPaidContent: boolean;\n};\n\nexport const AdBlockAsk = ({\n\tsize,\n\tslotId,\n\tshouldHideReaderRevenue,\n\tisPaidContent,\n}: Props) => {\n\tconst showAdBlockAsk = useAdblockAsk({\n\t\tslotId,\n\t\tshouldHideReaderRevenue,\n\t\tisPaidContent,\n\t});\n\n\tif (!showAdBlockAsk) {\n\t\treturn null;\n\t}\n\n\tconst supportButtonHref = `https://support.theguardian.com/contribute?${new URLSearchParams(\n\t\t{\n\t\t\tutm_campaign: 'shady_pie',\n\t\t\tutm_source: 'GUARDIAN_WEB',\n\t\t\tutm_medium: 'ACQUISITIONS_OTHER',\n\t\t\tutm_content: 'shady_pie',\n\t\t\tutm_term: 'control',\n\t\t},\n\t).toString()}`;\n\n\tswitch (size) {\n\t\tcase 'leaderboard': {\n\t\t\treturn (\n\t\t\t\t<AdBlockAskLeaderboard supportButtonHref={supportButtonHref} />\n\t\t\t);\n\t\t}\n\t\tcase 'mpu': {\n\t\t\treturn <AdBlockAskMPU supportButtonHref={supportButtonHref} />;\n\t\t}\n\t\tdefault: {\n\t\t\treturn assertUnreachable(size);\n\t\t}\n\t}\n};\n","import { EventTimer } from '@guardian/commercial';\nimport { getConsentFor, onConsentChange } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { adFreeDataIsPresent } from '../client/userFeatures/user-features-lib';\nimport { useAB } from './useAB';\nimport { useDetectAdBlock } from './useDetectAdBlock';\n\nconst useIsInAdBlockAskVariant = (): boolean => {\n\tconst abTestAPI = useAB()?.api;\n\tconst isInVariant = !!abTestAPI?.isUserInVariant('AdBlockAsk', 'variant');\n\treturn isInVariant;\n};\n\nexport const useAdblockAsk = ({\n\tslotId,\n\tshouldHideReaderRevenue,\n\tisPaidContent,\n}: {\n\tslotId: `dfp-ad--${string}`;\n\tshouldHideReaderRevenue: boolean;\n\tisPaidContent: boolean;\n}): boolean => {\n\tconst isInVariant = useIsInAdBlockAskVariant();\n\tconst adBlockerDetected = useDetectAdBlock();\n\tconst [isAdFree, setIsAdFree] = useState<boolean>(false);\n\tconst [hasConsentForGoogletag, setHasConsentForGoogletag] = useState(false);\n\n\tconst canDisplayAdBlockAsk =\n\t\t!shouldHideReaderRevenue &&\n\t\t!isPaidContent &&\n\t\t!isAdFree &&\n\t\thasConsentForGoogletag;\n\n\tuseEffect(() => {\n\t\tonConsentChange((consentState) => {\n\t\t\tif (consentState.tcfv2) {\n\t\t\t\treturn setHasConsentForGoogletag(\n\t\t\t\t\tgetConsentFor('googletag', consentState),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetHasConsentForGoogletag(true);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetIsAdFree(adFreeDataIsPresent());\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// Only perform the detection check in the variant of the AB test, if we haven't already detected an ad-blocker and the reader/content is eligible for displaying such a message\n\t\tif (isInVariant) {\n\t\t\tEventTimer.get().setProperty('didDisplayAdBlockAsk', false);\n\n\t\t\tif (adBlockerDetected && canDisplayAdBlockAsk) {\n\t\t\t\t// Some ad-blockers will remove slots from the DOM, while others don't\n\t\t\t\t// This clean-up ensures that any space we've reserved for an ad is removed,\n\t\t\t\t// in order to properly layout the ask.\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(slotId)\n\t\t\t\t\t?.closest('.ad-slot-container')\n\t\t\t\t\t?.remove();\n\t\t\t\tEventTimer.get().setProperty('didDisplayAdBlockAsk', true);\n\t\t\t}\n\t\t}\n\t}, [isInVariant, adBlockerDetected, slotId, canDisplayAdBlockAsk]);\n\n\treturn adBlockerDetected && canDisplayAdBlockAsk && isInVariant;\n};\n","/**\n * A function that asserts it should never be called\n *\n * Useful for checking exhaustiveness of switch cases\n *\n * @see https://tinytip.co/tips/ts-switch-assert-unreachable/\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars -- We don't actually use the value\nexport const assertUnreachable = (value: never): never => {\n\tthrow new Error('This should be unreachable');\n};\n","import type { ABTestAPI, Participations } from '@guardian/ab-core';\nimport { mutate } from 'swr';\nimport useSWRImmutable from 'swr/immutable';\n\ntype ABTests = {\n\tapi: ABTestAPI;\n\tparticipations: Participations;\n};\n\nconst apiPromise = new Promise<ABTests>(() => {});\nconst key = 'ab-tests';\n\n/**\n * A hook which returns the AB Test Api when available,\n * or undefined otherwise.\n *\n * Leverages an immutable SWR to satisfy all requests to the\n * AB Core. As soon as the tests are available, all instances of\n * the useAB hook will render.\n */\nexport const useAB = (): ABTests | undefined => {\n\tconst { data } = useSWRImmutable(key, () => apiPromise);\n\treturn data;\n};\n\nexport const setABTests = ({ api, participations }: ABTests): void => {\n\tvoid mutate(key, { api, participations }, false);\n};\n","// cache the promise so we only make the requests once\nlet detectByRequests: Promise<boolean> | undefined;\n\n/**\n * Make a HEAD request to a URL that is typically blocked by ad-blockers\n */\nconst requestDoubleclick = async (timeoutMs: number) => {\n\ttry {\n\t\tconst response = await fetch('https://www3.doubleclick.net', {\n\t\t\tmethod: 'HEAD',\n\t\t\tmode: 'no-cors',\n\t\t\tcache: 'no-store',\n\t\t\tsignal: AbortSignal.timeout(timeoutMs),\n\t\t});\n\n\t\t// A redirect is another clue we may be being ad-blocked\n\t\tif (response.redirected) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Make a HEAD request to a URL that should succeed, even when using an\n * ad-blocker\n */\nconst requestGuardian = async (timeoutMs: number) => {\n\ttry {\n\t\tawait fetch('https://www.theguardian.com', {\n\t\t\tmethod: 'HEAD',\n\t\t\tmode: 'no-cors',\n\t\t\tcache: 'no-store',\n\t\t\tsignal: AbortSignal.timeout(timeoutMs),\n\t\t});\n\t\treturn true;\n\t} catch (err) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Attempt to detect presence of an ad-blocker\n *\n * This implementation of this is likely to be tweaked before launching the test\n * proper\n */\nexport const detectByRequestsOnce = async (): Promise<boolean> => {\n\tif (detectByRequests) {\n\t\treturn detectByRequests;\n\t}\n\tdetectByRequests = Promise.all([\n\t\trequestDoubleclick(1000),\n\t\t/**\n\t\t * We set this request with a much smaller timeout than the one we\n\t\t * expect to be ad-blocked. This should reduce the chance that request\n\t\t * fails and this one succeeds due to poor network connectivity\n\t\t */\n\t\trequestGuardian(250),\n\t]).then(\n\t\t([doubleclickSuccess, guardianSuccess]) =>\n\t\t\t!doubleclickSuccess && guardianSuccess,\n\t);\n\n\treturn detectByRequests;\n};\n","import { getConsentFor, onConsentChange } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { detectByRequestsOnce } from './detect-adblock';\n\nexport const useDetectAdBlock = (): boolean => {\n\tconst [adBlockerDetected, setAdBlockerDetected] = useState<boolean>(false);\n\tconst [hasConsentForGoogletag, setHasConsentForGoogletag] = useState(false);\n\n\tuseEffect(() => {\n\t\tonConsentChange((consentState) => {\n\t\t\tif (consentState.tcfv2) {\n\t\t\t\treturn setHasConsentForGoogletag(\n\t\t\t\t\tgetConsentFor('googletag', consentState),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetHasConsentForGoogletag(true);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst makeRequest = async () => {\n\t\t\tif (hasConsentForGoogletag) {\n\t\t\t\tconst detectByRequests = await detectByRequestsOnce();\n\t\t\t\tconsole.log('AdBlocker detected:', detectByRequests);\n\t\t\t\tsetAdBlockerDetected(detectByRequests);\n\t\t\t}\n\t\t};\n\t\tvoid makeRequest();\n\t}, [hasConsentForGoogletag]);\n\n\treturn adBlockerDetected;\n};\n"],"names":["_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","props","xmlns","width","height","viewBox","d","linkStyles","css","palette","brandAlt","neutral","textSans17","adBlockAskH2Styles","headlineMedium24","adBlockAskTextStyles","leaderboard","textSans14","mpu","textSans15","HandsLogo","styles","assetOrigin","useConfig","src","img","alt","SupportButton","href","a","ArrowRightIcon","Copy","size","h2","p","AdBlockAskLeaderboard","supportButtonHref","div","sport","AdBlockAskMPU","AdBlockAsk","slotId","shouldHideReaderRevenue","isPaidContent","isInVariant","useAB","abTestAPI","api","isUserInVariant","useIsInAdBlockAskVariant","adBlockerDetected","useDetectAdBlock","isAdFree","setIsAdFree","useState","hasConsentForGoogletag","setHasConsentForGoogletag","canDisplayAdBlockAsk","useEffect","onConsentChange","consentState","tcfv2","getConsentFor","adFreeDataIsPresent","document","EventTimer","get","setProperty","getElementById","closest","remove","useAdblockAsk","URLSearchParams","utm_campaign","utm_source","utm_medium","utm_content","utm_term","toString","assertUnreachable","value","Error","apiPromise","Promise","key","data","useSWRImmutable","setABTests","participations","mutate","detectByRequests","requestDoubleclick","async","timeoutMs","fetch","method","mode","cache","signal","AbortSignal","timeout","redirected","err","requestGuardian","detectByRequestsOnce","all","then","doubleclickSuccess","guardianSuccess","setAdBlockerDetected","console","log","makeRequest"],"sourceRoot":""}