{"version":3,"file":"KnowledgeQuizAtom-importable.client.web.644ad426fc83ccf77ca4.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/KnowledgeQuizAtom.importable.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport { isUndefined } from '@guardian/libs';\nimport {\n\tarticle17,\n\tpalette,\n\tspace,\n\ttextSans17,\n\ttextSansBold17,\n\ttextSansBold34,\n} from '@guardian/source/foundations';\nimport { Button, Radio, RadioGroup } from '@guardian/source/react-components';\nimport { Fragment, useEffect, useState } from 'react';\nimport { ArticleSpecial, type ArticleTheme } from '../lib/articleFormat';\nimport type {\n\tAnswerType,\n\tKnowledgeQuizAtomType,\n\tQuestionType,\n\tQuizSelectionType,\n\tResultGroupsType,\n\tSharingUrlsType,\n} from '../types/content';\nimport {\n\tCorrectSelectedAnswer,\n\tIncorrectAnswer,\n\tNonSelectedCorrectAnswer,\n\tradioButtonWrapperStyles,\n\tUnselectedAnswer,\n} from './Answers';\nimport { SharingIcons } from './SharingIcons';\n\nconst fieldsetStyle = css`\n\tmargin-bottom: 12px;\n\tborder: 0px;\n\tpadding: 0px;\n\n\tlabel {\n\t\twidth: inherit;\n\t}\n`;\n\nexport const KnowledgeQuizAtom = ({\n\tid,\n\tquestions,\n\tresultGroups,\n\tsharingUrls,\n\ttheme,\n}: KnowledgeQuizAtomType) => {\n\tconst [quizSelection, setQuizSelection] = useState<QuizSelectionType>({});\n\n\tconst haveAllQuestionsBeenAnswered =\n\t\tObject.keys(quizSelection).length === questions.length;\n\n\treturn (\n\t\t<form data-atom-id={id} data-atom-type=\"knowledgequiz\">\n\t\t\t{haveAllQuestionsBeenAnswered && (\n\t\t\t\t<div data-testid=\"quiz-results-block-top\">\n\t\t\t\t\t<Result\n\t\t\t\t\t\tquizSelection={quizSelection}\n\t\t\t\t\t\tresultGroups={resultGroups}\n\t\t\t\t\t\tsharingUrls={sharingUrls}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<ol data-ignore=\"global-ol-styling\">\n\t\t\t\t{questions.map((question, idx) => (\n\t\t\t\t\t<Question\n\t\t\t\t\t\tkey={question.id}\n\t\t\t\t\t\tid={question.id}\n\t\t\t\t\t\tnumber={idx + 1}\n\t\t\t\t\t\ttext={question.text}\n\t\t\t\t\t\timageUrl={question.imageUrl}\n\t\t\t\t\t\timageAlt={question.imageAlt}\n\t\t\t\t\t\tanswers={question.answers}\n\t\t\t\t\t\tsetQuizSelection={setQuizSelection}\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t\t{haveAllQuestionsBeenAnswered && (\n\t\t\t\t<div data-testid=\"quiz-results-block-top\">\n\t\t\t\t\t<Result\n\t\t\t\t\t\tquizSelection={quizSelection}\n\t\t\t\t\t\tresultGroups={resultGroups}\n\t\t\t\t\t\tsharingUrls={sharingUrls}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</form>\n\t);\n};\n\nexport const Question = ({\n\tid,\n\ttext,\n\timageUrl,\n\timageAlt,\n\tanswers,\n\tnumber,\n\tsetQuizSelection,\n\ttheme,\n}: QuestionType & {\n\tnumber: number;\n\tsetQuizSelection: React.Dispatch<React.SetStateAction<QuizSelectionType>>;\n\ttheme: ArticleTheme;\n}) => {\n\tconst [selectedAnswerId, setSelectedAnswerId] = useState<\n\t\tstring | undefined\n\t>();\n\tconst [hasSubmitted, setHasSubmitted] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tif (selectedAnswerId && hasSubmitted) {\n\t\t\tconst selectedAnswer = answers.find(\n\t\t\t\t(answer) => answer.id === selectedAnswerId,\n\t\t\t);\n\t\t\tif (selectedAnswer) {\n\t\t\t\tsetQuizSelection((selection) => ({\n\t\t\t\t\t...selection,\n\t\t\t\t\t[id]: selectedAnswer,\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}, [selectedAnswerId, setQuizSelection, hasSubmitted, answers, id]);\n\n\treturn (\n\t\t<li\n\t\t\tcss={css`\n\t\t\t\t${theme === ArticleSpecial.Labs ? textSans17 : article17}\n\t\t\t`}\n\t\t>\n\t\t\t<fieldset css={fieldsetStyle}>\n\t\t\t\t<legend\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\tmargin-bottom: 12px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<span\n\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\tpadding-right: 12px;\n\t\t\t\t\t\t`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{`${number}.`}\n\t\t\t\t\t</span>\n\t\t\t\t\t{text}\n\t\t\t\t</legend>\n\t\t\t\t{!!imageUrl && (\n\t\t\t\t\t<img\n\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t`}\n\t\t\t\t\t\tsrc={imageUrl}\n\t\t\t\t\t\talt={imageAlt ?? ''}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Answers\n\t\t\t\t\tid={id}\n\t\t\t\t\tanswers={answers}\n\t\t\t\t\thasSubmitted={hasSubmitted}\n\t\t\t\t\tselectedAnswerId={selectedAnswerId}\n\t\t\t\t\tsetSelectedAnswerId={setSelectedAnswerId}\n\t\t\t\t\ttheme={theme}\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: row;\n\t\t\t\t\t\tmargin-bottom: 8px;\n\t\t\t\t\t\tbutton {\n\t\t\t\t\t\t\tmargin-right: 10px;\n\t\t\t\t\t\t}\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tdata-testid={`submit-question-${id}`}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetHasSubmitted(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyDown={(\n\t\t\t\t\t\t\te: React.KeyboardEvent<HTMLButtonElement>,\n\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\tconst spaceKey = 32;\n\t\t\t\t\t\t\tconst enterKey = 13;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\te.keyCode === spaceKey ??\n\t\t\t\t\t\t\t\te.keyCode === enterKey\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetHasSubmitted(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tReveal\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</li>\n\t);\n};\n\nconst Answers = ({\n\tanswers,\n\tid: questionId,\n\thasSubmitted,\n\tselectedAnswerId,\n\tsetSelectedAnswerId,\n\ttheme,\n}: {\n\tanswers: AnswerType[];\n\tid: string;\n\thasSubmitted: boolean;\n\tselectedAnswerId?: string;\n\tsetSelectedAnswerId: (selectedAnswerId: string) => void;\n\ttheme: ArticleTheme;\n}) => {\n\tif (hasSubmitted) {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{answers.map((answer) => {\n\t\t\t\t\tconst isSelected = selectedAnswerId === answer.id;\n\n\t\t\t\t\tif (isSelected) {\n\t\t\t\t\t\tif (answer.isCorrect) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CorrectSelectedAnswer\n\t\t\t\t\t\t\t\t\tkey={answer.id}\n\t\t\t\t\t\t\t\t\tid={answer.id}\n\t\t\t\t\t\t\t\t\tanswerText={answer.text}\n\t\t\t\t\t\t\t\t\texplainerText={answer.revealText ?? ''}\n\t\t\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!answer.isCorrect) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<IncorrectAnswer\n\t\t\t\t\t\t\t\t\tkey={answer.id}\n\t\t\t\t\t\t\t\t\tid={answer.id}\n\t\t\t\t\t\t\t\t\tanswerText={answer.text}\n\t\t\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (answer.isCorrect) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<NonSelectedCorrectAnswer\n\t\t\t\t\t\t\t\tkey={answer.id}\n\t\t\t\t\t\t\t\tid={answer.id}\n\t\t\t\t\t\t\t\tanswerText={answer.text}\n\t\t\t\t\t\t\t\texplainerText={answer.revealText ?? ''}\n\t\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<UnselectedAnswer\n\t\t\t\t\t\t\tkey={answer.id}\n\t\t\t\t\t\t\tid={answer.id}\n\t\t\t\t\t\t\tanswerText={answer.text}\n\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div css={radioButtonWrapperStyles(theme)}>\n\t\t\t<RadioGroup name={questionId}>\n\t\t\t\t{answers.map((answer) => (\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tkey={answer.id}\n\t\t\t\t\t\tvalue={answer.text}\n\t\t\t\t\t\tdata-testid={answer.id}\n\t\t\t\t\t\tdata-answer-type={\n\t\t\t\t\t\t\tselectedAnswerId === answer.id\n\t\t\t\t\t\t\t\t? 'selected-enabled-answer'\n\t\t\t\t\t\t\t\t: 'unselected-enabled-answer'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tname={questionId}\n\t\t\t\t\t\tlabel={answer.text}\n\t\t\t\t\t\tonChange={() => setSelectedAnswerId(answer.id)}\n\t\t\t\t\t\tchecked={selectedAnswerId === answer.id}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</RadioGroup>\n\t\t</div>\n\t);\n};\n\nconst resultWrapperStyles = css`\n\tbackground-color: ${palette.neutral[93]};\n\tmargin-top: ${space[3]}px;\n\tmargin-bottom: ${space[3]}px;\n\tpadding: ${space[2]}px;\n`;\n\nconst resultDescriptionStyles = css`\n\t${textSans17}\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst resultsNumberStyles = css`\n\t${textSansBold34}\n\tcolor: ${palette.brand[400]};\n`;\n\nconst resultHeaderStyles = css`\n\t${textSansBold17}\n\tcolor: ${palette.neutral[20]};\n\tpadding-bottom: ${space[1]}px;\n`;\n\nexport const Result = ({\n\tquizSelection,\n\tresultGroups,\n\tsharingUrls,\n}: {\n\tquizSelection: Record<string, AnswerType>;\n\tresultGroups: ResultGroupsType[];\n\tsharingUrls: SharingUrlsType;\n}) => {\n\tconst totalNumberOfQuestions = Object.keys(quizSelection).length;\n\tconst numberOfCorrectAnswers = Object.keys(quizSelection).filter(\n\t\t(questionId) => quizSelection[questionId]?.isCorrect,\n\t).length;\n\tconst totalResultGroups = resultGroups.length;\n\tlet bestResultGroup: ResultGroupsType | undefined;\n\tconst resultBrackets = [];\n\tlet bracketIndex = 0;\n\n\t// Sort the results by lowest score first\n\tresultGroups.sort(function (a, b) {\n\t\treturn a.minScore - b.minScore;\n\t});\n\n\t// If there is a result group for each question return the matching score\n\tif (totalNumberOfQuestions === totalResultGroups) {\n\t\tfor (const resultGroup of resultGroups) {\n\t\t\tif (numberOfCorrectAnswers === resultGroup.minScore) {\n\t\t\t\tbestResultGroup = resultGroup;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// If there are less result groups than questions then answers are being put into brackets e.g. 1-5 correct, 6-10 correct\n\t\t// Find the score ranges\n\t\t// Decide which bracket the score is in\n\t\tfor (let i = 0; i < resultGroups.length; i++) {\n\t\t\tconst resultGroup = resultGroups[i];\n\n\t\t\tif (resultGroup) {\n\t\t\t\tresultBrackets[i] = resultGroup.minScore;\n\t\t\t}\n\t\t}\n\n\t\t// The regular sort function doesn't sort numbers, it works alphabetically\n\t\tresultBrackets.sort(function (a, b) {\n\t\t\treturn a - b;\n\t\t});\n\n\t\tfor (let i = 0; i < resultBrackets.length; i++) {\n\t\t\tconst resultBracket = resultBrackets[i];\n\n\t\t\tif (!isUndefined(resultBracket)) {\n\t\t\t\tif (numberOfCorrectAnswers >= resultBracket) {\n\t\t\t\t\tbracketIndex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbestResultGroup = resultGroups[bracketIndex];\n\n\treturn (\n\t\t<div css={resultWrapperStyles}>\n\t\t\t<div css={resultDescriptionStyles}>\n\t\t\t\t<span>You got...</span>\n\t\t\t\t<span\n\t\t\t\t\tcss={resultsNumberStyles}\n\t\t\t\t>{`${numberOfCorrectAnswers}/${totalNumberOfQuestions}`}</span>\n\t\t\t\t{bestResultGroup && <span>{bestResultGroup.title}</span>}\n\t\t\t</div>\n\n\t\t\t<hr />\n\t\t\t<div css={resultHeaderStyles}>Challenge your friends</div>\n\t\t\t<SharingIcons\n\t\t\t\tsharingUrls={sharingUrls}\n\t\t\t\tdisplayIcons={[\n\t\t\t\t\t'facebook',\n\t\t\t\t\t'twitter',\n\t\t\t\t\t'email',\n\t\t\t\t\t'whatsApp',\n\t\t\t\t\t'messenger',\n\t\t\t\t\t'linkedIn',\n\t\t\t\t\t'pinterest',\n\t\t\t\t]}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n"],"names":["fieldsetStyle","css","KnowledgeQuizAtom","id","questions","resultGroups","sharingUrls","theme","quizSelection","setQuizSelection","useState","haveAllQuestionsBeenAnswered","Object","keys","length","form","data-atom-id","data-atom-type","div","data-testid","Result","ol","data-ignore","map","question","idx","Question","number","text","imageUrl","imageAlt","answers","selectedAnswerId","setSelectedAnswerId","hasSubmitted","setHasSubmitted","useEffect","selectedAnswer","find","answer","selection","li","ArticleSpecial","Labs","textSans17","article17","fieldset","legend","span","img","src","alt","Answers","Button","size","onClick","onKeyDown","e","spaceKey","keyCode","questionId","Fragment","isCorrect","CorrectSelectedAnswer","answerText","explainerText","revealText","IncorrectAnswer","NonSelectedCorrectAnswer","UnselectedAnswer","radioButtonWrapperStyles","RadioGroup","name","Radio","value","data-answer-type","label","onChange","checked","resultWrapperStyles","palette","neutral","space","resultDescriptionStyles","resultsNumberStyles","textSansBold34","brand","resultHeaderStyles","textSansBold17","totalNumberOfQuestions","numberOfCorrectAnswers","filter","totalResultGroups","bestResultGroup","resultBrackets","bracketIndex","sort","a","b","minScore","resultGroup","i","resultBracket","isUndefined","title","hr","SharingIcons","displayIcons"],"sourceRoot":""}