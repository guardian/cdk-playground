{"version":3,"file":"SignInGateSelector-importable.client.web.legacy.0b694f371da99c63db19.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/components/SignInGate/componentEventTracking.tsx","webpack://@guardian/dotcom-rendering/./src/components/SignInGate/dismissGate.ts","webpack://@guardian/dotcom-rendering/./src/components/SignInGate/displayRule.ts","webpack://@guardian/dotcom-rendering/./src/components/SignInGate/gates/main-control.ts","webpack://@guardian/dotcom-rendering/./src/components/Lazy.tsx","webpack://@guardian/dotcom-rendering/./src/components/SignInGate/gates/main-variant.tsx","webpack://@guardian/dotcom-rendering/./src/components/SignInGate/signInGate.ts","webpack://@guardian/dotcom-rendering/./src/components/SignInGate/types.ts","webpack://@guardian/dotcom-rendering/./src/lib/parser/jsonParser.ts","webpack://@guardian/dotcom-rendering/./src/components/SignInGateSelector.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/parser/parseCheckoutOutCookieData.ts","webpack://@guardian/dotcom-rendering/./src/experiments/tests/sign-in-gate-main-control.ts","webpack://@guardian/dotcom-rendering/./src/experiments/tests/sign-in-gate-main-variant.ts","webpack://@guardian/dotcom-rendering/./src/lib/dailyArticleCount.ts","webpack://@guardian/dotcom-rendering/./src/lib/querystring.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAB.ts","webpack://@guardian/dotcom-rendering/./src/lib/useAuthStatus.ts","webpack://@guardian/dotcom-rendering/./src/lib/useCountryCode.ts","webpack://@guardian/dotcom-rendering/./src/lib/useIsInView.ts","webpack://@guardian/dotcom-rendering/./src/lib/useOnce.ts","webpack://@guardian/dotcom-rendering/./src/lib/usePageViewId.ts","webpack://@guardian/dotcom-rendering/./src/lib/useSignInGateSelector.ts","webpack://@guardian/dotcom-rendering/../node_modules/.pnpm/lodash.debounce@4.0.8/node_modules/lodash.debounce/index.js"],"sourcesContent":["import { getOphan } from '../../client/ophan/ophan';\nimport { isServer } from '../../lib/isServer';\n// ophan helper methods\nconst submitComponentEventTracking = async (componentEvent, renderingTarget) => {\n    if (isServer)\n        return;\n    const ophan = await getOphan(renderingTarget);\n    ophan.record({ componentEvent });\n};\nexport const submitViewEventTracking = (componentEvent, renderingTarget) => void submitComponentEventTracking({\n    ...componentEvent,\n    action: 'VIEW',\n}, renderingTarget);\nconst submitClickEventTracking = (componentEvent, renderingTarget) => void submitComponentEventTracking({\n    ...componentEvent,\n    action: 'CLICK',\n}, renderingTarget);\nexport const withComponentId = (id) => ({\n    componentType: 'SIGN_IN_GATE',\n    id,\n});\nexport const trackLink = (componentId, value, renderingTarget, abTest) => {\n    const component = withComponentId(componentId);\n    submitClickEventTracking({\n        component,\n        abTest,\n        value,\n    }, renderingTarget);\n};\n","import { isObject, isString, isUndefined, storage } from '@guardian/libs';\nconst localStorageKey = `gu.prefs.sign-in-gate`;\n/** We use this key for storing the date the gate was dismissed against */\nconst localStorageDismissedDateKey = (variant, name) => {\n    return `${name}-${variant}`;\n};\n/** We use this key for storing the gate dismissed count against */\nconst localStorageDismissedCountKey = (variant, name) => {\n    return `gate-dismissed-count-${name}-${variant}`;\n};\nconst isKeyValuePair = (object) => Object.entries(object).every(([key, value]) => isString(key) && ['string', 'number'].includes(typeof value));\n// Invalid json stored against `localStorageKey` should not break signin gate for a user forever\nconst getSigninGatePrefsSafely = () => {\n    const prefs = storage.local.get(localStorageKey);\n    return isObject(prefs) && isKeyValuePair(prefs) ? prefs : {};\n};\nconst setSigninGatePrefs = (prefs) => {\n    storage.local.set(localStorageKey, prefs);\n};\n/**\n * set in user preferences that the user has dismissed the gate, set the value to the current ISO date string\n * name is optional, but can be used to differentiate between multiple sign in gate tests\n *\n *\n * This is set in local storage with the following shape:\n *\n * key:   gu.prefs.sign-in-gate\n * value: {\"testVariantName\":\"2020-07-01T10:55:09.085Z\"}\n *\n * We set the value using the key, which remains constant\n * and add an entry to the object with the testname and variant, and use current ISO date string as the value\n */\nexport const setUserDismissedGate = (variant, name) => {\n    const prefs = getSigninGatePrefsSafely();\n    prefs[localStorageDismissedDateKey(variant, name)] =\n        new Date().toISOString();\n    setSigninGatePrefs(prefs);\n};\nexport const unsetUserDismissedGate = (variant, name) => {\n    const prefs = getSigninGatePrefsSafely();\n    delete prefs[localStorageDismissedDateKey(variant, name)];\n    setSigninGatePrefs(prefs);\n};\n/**\n * Check if the user has dismissed the gate by checking the user preferences,\n * name is optional, but can be used to differentiate between multiple sign in gate tests\n *\n * This is set in local storage with the following shape:\n *\n * key:   gu.prefs.sign-in-gate\n * value: {\"testVariantName\":\"2020-07-01T10:55:09.085Z\"}\n *\n * We extract the value using the key, which remains constant\n * and the from within the value object we look up the variant we are looking for\n */\nexport const hasUserDismissedGate = (variant, name, dismissalWindow) => {\n    const prefs = getSigninGatePrefsSafely();\n    const pref = prefs[localStorageDismissedDateKey(variant, name)];\n    // checks if a dismissal occurred within a given window timeframe in hours\n    if (!isUndefined(dismissalWindow)) {\n        // checks if prefs is empty, ie. the user has not dismissed gate before.\n        if (isUndefined(pref) || typeof pref === 'number') {\n            return false;\n        }\n        const hours = (Date.now() - new Date(pref).getTime()) / 36e5; //  36e5 is the scientific notation for 60*60*1000, which converts the milliseconds difference into hours.\n        if (hours >= dismissalWindow) {\n            unsetUserDismissedGate(variant, name);\n            return false;\n        }\n        return true;\n    }\n    return !(pref == null);\n};\nconst retrieveDismissedCount = (variant, name) => {\n    const prefs = getSigninGatePrefsSafely();\n    const dismissed = prefs[localStorageDismissedCountKey(variant, name)];\n    return typeof dismissed === 'number' && dismissed > 0 ? dismissed : 0;\n};\n/** Test whether the user has dismissed the gate variant more than `count` times */\nexport const hasUserDismissedGateMoreThanCount = (variant, name, count) => {\n    return retrieveDismissedCount(variant, name) > count;\n};\n/** Increment the number of times a user has dismissed this gate variant */\nexport const incrementUserDismissedGateCount = (variant, name) => {\n    const prefs = getSigninGatePrefsSafely();\n    const key = localStorageDismissedCountKey(variant, name);\n    prefs[key] = retrieveDismissedCount(variant, name) + 1;\n    setSigninGatePrefs(prefs);\n};\n","// use the dailyArticleCount from the local storage to see how many articles the user has viewed in a day\nimport { onConsent } from '@guardian/libs';\nimport { getDailyArticleCount } from '../../lib/dailyArticleCount';\nimport { hasUserDismissedGateMoreThanCount } from './dismissGate';\n// in our case if this is the n-numbered article or higher the user has viewed then set the gate\nexport const isNPageOrHigherPageView = (n = 2) => {\n    // get daily read article count array from local storage\n    const [dailyCount = {}] = getDailyArticleCount() ?? [];\n    const { count = 0 } = dailyCount;\n    return count >= n;\n};\n// determine if the useragent is running iOS 9 (known to be buggy for sign in flow)\nexport const isIOS9 = () => {\n    // get the browser user agent\n    const ua = navigator.userAgent;\n    // check useragent if the device is an iOS device\n    const appleDevice = /(iPhone|iPod|iPad)/i.test(ua);\n    // check useragent if the os is version 9\n    const os = /(CPU OS 9_)/i.test(ua);\n    // if both true, then it's an apple ios 9 device\n    return appleDevice && os;\n};\n// hide the sign in gate on article types that are not supported\nexport const isValidContentType = (contentType) => {\n    // It's safer to definitively *include* types as we\n    // know new types will not break the sign-in-gate going forward\n    const validTypes = ['Article'];\n    return validTypes.some((type) => contentType === type);\n};\n// hide the sign in gate on certain sections of the site, e.g info, about, help etc.\nexport const isValidSection = (sectionId) => {\n    const invalidSections = [\n        'about',\n        'info',\n        'membership',\n        'help',\n        'guardian-live-australia',\n        'gnm-archive',\n    ];\n    // we check for invalid section by reducing the above array, and then NOT the result so we know\n    // its a valid section\n    return !invalidSections.some((section) => sectionId === section);\n};\n// hide the sign in gate for certain tags on the site\nexport const isValidTag = (tags) => {\n    const invalidTags = ['info/newsletter-sign-up'];\n    return !invalidTags.some((invalidTag) => tags.map((tag) => tag.id).includes(invalidTag));\n};\n// check CMP banner consents\nexport const hasRequiredConsents = () => onConsent()\n    .then(({ canTarget }) => canTarget)\n    .catch(() => false);\nexport const canShowSignInGate = ({ isSignedIn, currentTest, contentType, sectionId, tags, isPaidContent, isPreview, }) => Promise.resolve(!isSignedIn &&\n    !hasUserDismissedGateMoreThanCount(currentTest.variant, currentTest.name, 5) &&\n    isNPageOrHigherPageView(3) &&\n    isValidContentType(contentType) &&\n    isValidSection(sectionId) &&\n    isValidTag(tags) &&\n    // hide the sign in gate on isPaidContent\n    !isPaidContent &&\n    // hide the sign in gate on internal tools preview &&\n    !isPreview &&\n    !isIOS9());\nexport const canShowSignInGateMandatory = async ({ isSignedIn, currentTest, contentType, sectionId, tags, isPaidContent, isPreview, currentLocaleCode, }) => {\n    return await canShowSignInGate({\n        isSignedIn,\n        currentTest,\n        contentType,\n        sectionId,\n        tags,\n        isPaidContent,\n        isPreview,\n        currentLocaleCode,\n    });\n};\nconst US_REGION_CODES = [\n    'US',\n    'AS',\n    'GU',\n    'MP',\n    'PR',\n    'VI',\n];\nexport const canShowSignInGateWithOffers = ({ isSignedIn, currentTest, contentType, sectionId, tags, isPaidContent, isPreview, currentLocaleCode, }) => Promise.resolve(!isSignedIn &&\n    !hasUserDismissedGateMoreThanCount(currentTest.variant, currentTest.name, 5) &&\n    isNPageOrHigherPageView(3) &&\n    isValidContentType(contentType) &&\n    isValidSection(sectionId) &&\n    isValidTag(tags) &&\n    // hide the sign in gate on isPaidContent\n    !isPaidContent &&\n    // hide the sign in gate on internal tools preview &&\n    !isPreview &&\n    !isIOS9() &&\n    // hide the sign in gate for AU and US readers\n    !['AU', ...US_REGION_CODES].includes(currentLocaleCode));\n","import { hasUserDismissedGate } from '../dismissGate';\nimport { isIOS9, isNPageOrHigherPageView, isValidContentType, isValidSection, isValidTag, } from '../displayRule';\nconst canShow = ({ isSignedIn, currentTest, contentType, sectionId, tags, isPaidContent, isPreview, }) => Promise.resolve(!isSignedIn &&\n    !hasUserDismissedGate(currentTest.variant, currentTest.name) &&\n    isNPageOrHigherPageView(3) &&\n    isValidContentType(contentType) &&\n    isValidSection(sectionId) &&\n    isValidTag(tags) &&\n    // hide the sign in gate on isPaidContent\n    !isPaidContent &&\n    // hide the sign in gate on internal tools preview\n    !isPreview &&\n    !isIOS9());\nexport const signInGateComponent = {\n    canShow,\n};\n","import { Fragment as _Fragment, jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { useIsInView } from '../lib/useIsInView';\n// Ensure the ref wrapper expands. This is used for componenents like\n// MostViewedRightWrapper that needs to check it's parent's height\nconst flexGrowStyles = css `\n\tdisplay: flex;\n\tflex-grow: 1;\n`;\nexport const Lazy = ({ children, margin, disableFlexStyles }) => {\n    const [hasBeenSeen, setRef] = useIsInView({\n        rootMargin: `${margin}px`,\n    });\n    // Without this check below typescript complains because it thinks\n    // setRef could be false.\n    if (typeof setRef !== 'function') {\n        return null;\n    }\n    // Why do we check to see if we're disabled here? Because we\n    // use this as a flag to know when a component is\n    // being loaded as part of a Chromatic story or not so that\n    // we can prevent lazy loading our storybook snapshots that we\n    // use for visual regression\n    const renderChildren = hasBeenSeen || Lazy.disabled;\n    return (_jsx(\"div\", { ref: setRef, css: !disableFlexStyles && flexGrowStyles, children: renderChildren && _jsx(_Fragment, { children: children }) }));\n};\nLazy.disabled = false;\n","import { jsx as _jsx, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { isUndefined, startPerformanceMeasure } from '@guardian/libs';\nimport React, { Suspense } from 'react';\nimport { Lazy } from '../../Lazy';\nimport { canShowSignInGate } from '../displayRule';\nconst SignInGateMain = React.lazy(() => {\n    const { endPerformanceMeasure } = startPerformanceMeasure('identity', 'SignInGateMain');\n    return import(\n    /* webpackChunkName: \"SignInGateMain\" */ '../gateDesigns/SignInGateMain').then((module) => {\n        endPerformanceMeasure();\n        return { default: module.SignInGateMain };\n    });\n});\nconst SignInGateMainCheckoutComplete = React.lazy(() => {\n    const { endPerformanceMeasure } = startPerformanceMeasure('identity', 'SignInGateMainCheckoutComplete');\n    return import(\n    /* webpackChunkName: \"SignInGateMainCheckoutComplete\" */ '../gateDesigns/SignInGateMainCheckoutComplete').then((module) => {\n        endPerformanceMeasure();\n        return { default: module.SignInGateMainCheckoutComplete };\n    });\n});\n/**\n * GATE PERSONALISATION:\n *\n * If the GU_CO_COMPLETE cookie is present, personalise the sign in gate based on the userType\n * and product information in the cookie value.\n * AB tracking will be registered as part of the main gate AB test, but the component Id string\n * in Ophan ComponentEventTracking will have `_personalised_${userType}_${product}` appended.\n * This occurs in the SignInGateSelector.importable.tsx file\n * There is a feature switch called `personaliseSignInGateAfterCheckout` which can be set in the\n * admin tools, and depending on the state of that switch will determine which variant of the\n * gate to show.\n */\nexport const signInGateComponent = {\n    gate: ({ ophanComponentId, dismissGate, guUrl, signInUrl, registerUrl, abTest, checkoutCompleteCookieData, personaliseSignInGateAfterCheckoutSwitch, }) => {\n        return (_jsx(Lazy, { margin: 300, children: _jsx(Suspense, { fallback: _jsx(_Fragment, {}), children: personaliseSignInGateAfterCheckoutSwitch &&\n                    !isUndefined(checkoutCompleteCookieData) ? (_jsx(SignInGateMainCheckoutComplete, { ophanComponentId: ophanComponentId, dismissGate: dismissGate, guUrl: guUrl, signInUrl: signInUrl, registerUrl: registerUrl, abTest: abTest, checkoutCompleteCookieData: checkoutCompleteCookieData })) : (_jsx(SignInGateMain, { ophanComponentId: ophanComponentId, dismissGate: dismissGate, guUrl: guUrl, signInUrl: signInUrl, registerUrl: registerUrl, abTest: abTest })) }) }));\n    },\n    canShow: canShowSignInGate,\n};\n","// Sign in Gate A/B Tests\nimport { signInGateMainControl } from '../../experiments/tests/sign-in-gate-main-control';\nimport { signInGateMainVariant } from '../../experiments/tests/sign-in-gate-main-variant';\n// Sign in Gate Types\nimport { signInGateComponent as gateMainControl } from './gates/main-control';\nimport { signInGateComponent as gateMainVariant } from './gates/main-variant';\n/* When adding a new test, you need to add the test name to the tests array below,\n   and add a entry for each variant that maps it to a SignInGateComponent in\n   signInGateTestVariantToGateMapping, and in turn match each test id to an component\n   id in signInGateTestIdToComponentId\n*/\nexport const signInGateTests = [\n    signInGateMainVariant,\n    signInGateMainControl,\n];\nexport const signInGateTestVariantToGateMapping = {\n    'main-control-5': gateMainControl,\n    'main-variant-5': gateMainVariant,\n};\n// Component Id does not need to match gate test name, as ab test info passed separately to ophan\n// Consider Id name relevant to the gate component or design. Use snake_case\nexport const signInGateTestIdToComponentId = {\n    SignInGateMainVariant: 'main_variant_5',\n    SignInGateMainControl: 'main_control_5',\n};\n","import { isObject, isOneOf, isString } from '@guardian/libs';\nexport const ALL_USER_TYPES = ['new', 'guest', 'current'];\nexport const isUserType = isOneOf(ALL_USER_TYPES);\nexport const ALL_PRODUCTS = [\n    'Contribution',\n    'SupporterPlus',\n    'Paper',\n    'GuardianWeekly',\n];\nexport const isProduct = isOneOf(ALL_PRODUCTS);\nexport function isCheckoutCompleteCookieData(obj) {\n    return (isObject(obj) &&\n        isString(obj.userType) &&\n        isUserType(obj.userType) &&\n        isString(obj.product) &&\n        isProduct(obj.product));\n}\n","export const safeJsonParse = (guard) => (text) => {\n    try {\n        const parsed = JSON.parse(text);\n        return guard(parsed)\n            ? { parsed, hasError: false }\n            : { hasError: true };\n    }\n    catch (_) {\n        return { hasError: true };\n    }\n};\n","import { Fragment as _Fragment, jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { getCookie, isUndefined } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { parseCheckoutCompleteCookieData } from '../lib/parser/parseCheckoutOutCookieData';\nimport { constructQuery } from '../lib/querystring';\nimport { useAuthStatus } from '../lib/useAuthStatus';\nimport { useCountryCode } from '../lib/useCountryCode';\nimport { useOnce } from '../lib/useOnce';\nimport { usePageViewId } from '../lib/usePageViewId';\nimport { useSignInGateSelector } from '../lib/useSignInGateSelector';\nimport { useConfig } from './ConfigContext';\nimport { submitViewEventTracking, withComponentId, } from './SignInGate/componentEventTracking';\nimport { incrementUserDismissedGateCount, setUserDismissedGate, } from './SignInGate/dismissGate';\nimport { signInGateTestIdToComponentId } from './SignInGate/signInGate';\nconst dismissGate = (setShowGate, currentAbTestValue) => {\n    setShowGate(false);\n    setUserDismissedGate(currentAbTestValue.variant, currentAbTestValue.name);\n    incrementUserDismissedGateCount(currentAbTestValue.variant, currentAbTestValue.name);\n};\n// function to generate the profile.theguardian.com url with tracking params\n// and the return url (link to current article page)\nconst generateGatewayUrl = (tab, { pageId, pageViewId, idUrl, host, currentTest, componentId, }) => {\n    // url of the article, return user here after sign in/registration\n    const returnUrl = `${host}/${pageId}`;\n    // set the component event params to be included in the query\n    const queryParams = {\n        componentType: 'signingate',\n        componentId,\n        abTestName: currentTest.name,\n        abTestVariant: currentTest.variant,\n        browserId: getCookie({ name: 'bwid', shouldMemoize: true }) ?? undefined,\n        viewId: pageViewId,\n    };\n    return `${idUrl}/${tab}?returnUrl=${returnUrl}&componentEventParams=${encodeURIComponent(constructQuery(queryParams))}`;\n};\n// component which shows the sign in gate\n// fires a VIEW ophan component event\n// and show the gate component if it exists\nconst ShowSignInGate = ({ abTest, componentId, setShowGate, signInUrl, registerUrl, gateVariant, host, checkoutCompleteCookieData, personaliseSignInGateAfterCheckoutSwitch, }) => {\n    const { renderingTarget } = useConfig();\n    // use effect hook to fire view event tracking only on initial render\n    useEffect(() => {\n        submitViewEventTracking({\n            component: withComponentId(componentId),\n            abTest,\n        }, renderingTarget);\n    }, [abTest, componentId, renderingTarget]);\n    // some sign in gate ab test variants may not need to show a gate\n    // therefore the gate is optional\n    // this is because we want a section of the audience to never see the gate\n    // but still fire a view event if they are eligible to see the gate\n    if (gateVariant.gate) {\n        return gateVariant.gate({\n            guUrl: host,\n            signInUrl,\n            registerUrl,\n            dismissGate: () => {\n                dismissGate(setShowGate, abTest);\n            },\n            abTest,\n            ophanComponentId: componentId,\n            checkoutCompleteCookieData,\n            personaliseSignInGateAfterCheckoutSwitch,\n        });\n    }\n    // return nothing if no gate needs to be shown\n    return _jsx(_Fragment, {});\n};\nconst useCheckoutCompleteCookieData = () => {\n    const [data, setData] = useState();\n    useEffect(() => {\n        const rawCookie = getCookie({\n            name: 'GU_CO_COMPLETE',\n            shouldMemoize: true,\n        });\n        if (rawCookie === null)\n            return;\n        const parsedCookieData = parseCheckoutCompleteCookieData(rawCookie);\n        if (parsedCookieData)\n            setData(parsedCookieData);\n    }, []);\n    return data;\n};\n/**\n * Component with conditional logic which determines if a sign in gate\n * should be shown on the current page.\n *\n * ## Why does this need to be an Island?\n *\n * The sign-in gate logic is entirely client-side\n *\n * ---\n *\n * (No visual story exists)\n */\nexport const SignInGateSelector = ({ contentType, sectionId = '', tags, isPaidContent, isPreview, host = 'https://theguardian.com/', pageId, idUrl = 'https://profile.theguardian.com', switches, }) => {\n    const authStatus = useAuthStatus();\n    const isSignedIn = authStatus.kind === 'SignedInWithOkta' ||\n        authStatus.kind === 'SignedInWithCookies';\n    const [isGateDismissed, setIsGateDismissed] = useState(undefined);\n    const [gateVariant, setGateVariant] = useState(undefined);\n    const [currentTest, setCurrentTest] = useState(undefined);\n    const [canShowGate, setCanShowGate] = useState(false);\n    const { renderingTarget } = useConfig();\n    const gateSelector = useSignInGateSelector();\n    const pageViewId = usePageViewId(renderingTarget);\n    // START: Checkout Complete Personalisation\n    const [personaliseSwitch, setPersonaliseSwitch] = useState(false);\n    const checkoutCompleteCookieData = useCheckoutCompleteCookieData();\n    const personaliseComponentId = (currentComponentId) => {\n        if (!currentComponentId)\n            return undefined;\n        if (!checkoutCompleteCookieData)\n            return currentComponentId;\n        const { userType, product } = checkoutCompleteCookieData;\n        return `${currentComponentId}_personalised_${userType}_${product}`;\n    };\n    const shouldPersonaliseComponentId = () => {\n        return personaliseSwitch && !!checkoutCompleteCookieData;\n    };\n    const { personaliseSignInGateAfterCheckout } = switches;\n    // END: Checkout Complete Personalisation\n    const countryCode = useCountryCode('sign-in-gate-selector');\n    useOnce(() => {\n        // this hook will fire when the sign in gate is dismissed\n        // which will happen when the showGate state is set to false\n        // this only happens within the dismissGate method\n        if (isGateDismissed) {\n            document.dispatchEvent(new CustomEvent('article:sign-in-gate-dismissed'));\n        }\n    }, [isGateDismissed]);\n    useOnce(() => {\n        const [gateSelectorVariant, gateSelectorTest] = gateSelector;\n        if (gateSelectorVariant && gateSelectorTest) {\n            setGateVariant(gateSelectorVariant);\n            setCurrentTest(gateSelectorTest);\n        }\n    }, [gateSelector]);\n    useEffect(() => {\n        if (personaliseSignInGateAfterCheckout) {\n            setPersonaliseSwitch(personaliseSignInGateAfterCheckout);\n        }\n        else {\n            setPersonaliseSwitch(false);\n        }\n    }, [personaliseSignInGateAfterCheckout]);\n    useEffect(() => {\n        if (gateVariant && currentTest) {\n            void gateVariant\n                .canShow({\n                isSignedIn: !!isSignedIn,\n                currentTest,\n                contentType,\n                sectionId,\n                tags,\n                isPaidContent,\n                isPreview,\n                currentLocaleCode: countryCode,\n            })\n                .then(setCanShowGate);\n        }\n    }, [\n        currentTest,\n        gateVariant,\n        isSignedIn,\n        contentType,\n        sectionId,\n        tags,\n        isPaidContent,\n        isPreview,\n        countryCode,\n    ]);\n    if (!currentTest || !gateVariant || isUndefined(pageViewId)) {\n        return null;\n    }\n    const signInGateComponentId = signInGateTestIdToComponentId[currentTest.id];\n    const componentId = shouldPersonaliseComponentId()\n        ? personaliseComponentId(signInGateComponentId)\n        : signInGateComponentId;\n    const ctaUrlParams = {\n        pageId,\n        host,\n        pageViewId,\n        idUrl,\n        currentTest,\n        componentId,\n    };\n    return (_jsx(_Fragment, { children: !isGateDismissed && canShowGate && !!componentId && (_jsx(ShowSignInGate, { abTest: currentTest, componentId: componentId, \n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- Odd react types, should review\n            setShowGate: (show) => setIsGateDismissed(!show), signInUrl: generateGatewayUrl('signin', ctaUrlParams), registerUrl: generateGatewayUrl('register', ctaUrlParams), gateVariant: gateVariant, host: host, checkoutCompleteCookieData: checkoutCompleteCookieData, personaliseSignInGateAfterCheckoutSwitch: personaliseSwitch })) }));\n};\n","import { isCheckoutCompleteCookieData } from '../../components/SignInGate/types';\nimport { safeJsonParse } from './jsonParser';\nexport const parseCheckoutCompleteCookieData = (checkoutCompleteStr) => {\n    const decodedCookieString = decodeURIComponent(checkoutCompleteStr);\n    if (decodedCookieString === checkoutCompleteStr)\n        return undefined;\n    const parseResult = safeJsonParse(isCheckoutCompleteCookieData)(decodeURIComponent(checkoutCompleteStr));\n    return !parseResult.hasError ? parseResult.parsed : undefined;\n};\n","export const signInGateMainControl = {\n    id: 'SignInGateMainControl',\n    start: '2020-05-20',\n    expiry: '2025-12-01',\n    author: 'Mahesh Makani',\n    description: 'Show sign in gate to 100% of users on 3rd article view of simple article templates, and show a further 5 times after the first dismissal, with higher priority over banners and epic. Control Audience.',\n    audience: 0.1,\n    audienceOffset: 0.9,\n    successMeasure: 'N/A - User does not see gate, only to compare to variant.',\n    audienceCriteria: '3rd article of the day, lower priority than consent banner, simple articles (not gallery, live etc.), not signed in, not shown after dismiss, not on help, info sections etc. Exclude iOS 9 and guardian-live-australia. Suppresses other banners, and appears over epics',\n    dataLinkNames: 'SignInGateMain',\n    idealOutcome: 'Increase the number of users signed in whilst running at a reasonable scale',\n    showForSensitive: false,\n    canRun: () => true,\n    variants: [\n        {\n            id: 'main-control-5',\n            test: () => { },\n        },\n    ],\n};\n","export const signInGateMainVariant = {\n    id: 'SignInGateMainVariant',\n    start: '2020-06-09',\n    expiry: '2025-12-01',\n    author: 'Mahesh Makani',\n    description: 'Show sign in gate to 100% of users on 3rd article view of simple article templates, and show a further 5 times after the first dismissal, with higher priority over banners and epic. Main/Variant Audience.',\n    audience: 0.9,\n    audienceOffset: 0.0,\n    successMeasure: 'Users sign in or create a Guardian account',\n    audienceCriteria: '3rd article of the day, lower priority than consent banner, simple articles (not gallery, live etc.), not signed in, not shown after dismiss, not on help, info sections etc. Exclude iOS 9 and guardian-live-australia. Suppresses other banners, and appears over epics',\n    dataLinkNames: 'SignInGateMain',\n    idealOutcome: 'Increase the number of users signed in whilst running at a reasonable scale',\n    showForSensitive: false,\n    canRun: () => true,\n    variants: [\n        {\n            id: 'main-variant-5',\n            test: () => { },\n        },\n    ],\n};\n","import { isObject, storage } from '@guardian/libs';\nexport const DailyArticleCountKey = 'gu.history.dailyArticleCount';\nconst isValidHistory = (history) => Array.isArray(history) &&\n    history.every((daily) => isObject(daily) &&\n        'day' in daily &&\n        'count' in daily &&\n        typeof daily.day === 'number' &&\n        typeof daily.count === 'number');\n// Returns undefined if no daily article count in local storage\nexport const getDailyArticleCount = () => {\n    try {\n        const dailyCount = storage.local.get(DailyArticleCountKey);\n        if (!isValidHistory(dailyCount)) {\n            throw new Error('Invalid gu.history.dailyArticleCount value');\n        }\n        return dailyCount;\n    }\n    catch (e) {\n        // error parsing the string, so remove the key\n        storage.local.remove(DailyArticleCountKey);\n        return undefined;\n    }\n};\nexport const getToday = () => Math.floor(Date.now() / 86_400_000);\nexport const incrementDailyArticleCount = () => {\n    // get the daily article count from local storage\n    const dailyArticleCount = getDailyArticleCount() ?? [];\n    // calculate days since unix epoch for today date\n    const today = getToday();\n    // check if latest day is today and increment if so\n    if (dailyArticleCount[0]?.day === today) {\n        dailyArticleCount[0].count += 1;\n    }\n    else {\n        // else set new day\n        dailyArticleCount.unshift({ day: today, count: 1 });\n        // remove any days older than 60\n        const cutOff = today - 60;\n        const firstOldDayIndex = dailyArticleCount.findIndex((dailyCount) => dailyCount.day && dailyCount.day < cutOff);\n        if (firstOldDayIndex > 0) {\n            dailyArticleCount.splice(firstOldDayIndex);\n        }\n    }\n    // set the latest article count\n    storage.local.set(DailyArticleCountKey, dailyArticleCount);\n};\n","const constructQuery = (query) => Object.keys(query)\n    .map((param) => {\n    const value = query[param] ?? 'undefined';\n    const queryValue = Array.isArray(value)\n        ? value.map((v) => encodeURIComponent(v)).join(',')\n        : encodeURIComponent(value);\n    return `${param}=${queryValue}`;\n})\n    .join('&');\nexport { constructQuery };\n","import { mutate } from 'swr';\nimport useSWRImmutable from 'swr/immutable';\nconst apiPromise = new Promise(() => { });\nconst key = 'ab-tests';\n/**\n * A hook which returns the AB Test Api when available,\n * or undefined otherwise.\n *\n * Leverages an immutable SWR to satisfy all requests to the\n * AB Core. As soon as the tests are available, all instances of\n * the useAB hook will render.\n */\nexport const useAB = () => {\n    const { data } = useSWRImmutable(key, () => apiPromise);\n    return data;\n};\nexport const setABTests = ({ api, participations }) => {\n    void mutate(key, { api, participations }, false);\n};\n","import { useEffect, useState } from 'react';\nimport { eitherInOktaTestOrElse, getSignedInStatusWithCookies, getSignedInStatusWithOkta, } from './identity';\n/**\n * A hook to find out if a user is signed in.\n * Returns `'Pending'` until status is known.\n * Always returns `'Pending'` during server-side rendering.\n * */\nexport const useIsSignedIn = () => {\n    const authStatus = useAuthStatus();\n    switch (authStatus.kind) {\n        case 'Pending':\n            return 'Pending';\n        case 'SignedInWithCookies':\n        case 'SignedInWithOkta':\n            return true;\n        case 'SignedOutWithCookies':\n        case 'SignedOutWithOkta':\n            return false;\n    }\n};\nexport const useAuthStatus = () => {\n    const [authStatus, setAuthStatus] = useState({\n        kind: 'Pending',\n    });\n    useEffect(() => {\n        eitherInOktaTestOrElse((oktaAuthState) => {\n            setAuthStatus(getSignedInStatusWithOkta(oktaAuthState));\n        }, () => setAuthStatus(getSignedInStatusWithCookies())).catch((error) => {\n            console.error(error);\n        });\n    }, []);\n    return authStatus;\n};\n","import { isNonNullable } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getLocaleCode } from './getCountryCode';\nexport const useCountryCode = (feature) => {\n    const [countryCode, setCountryCode] = useState();\n    useEffect(() => {\n        getLocaleCode()\n            .then((cc) => {\n            if (isNonNullable(cc))\n                setCountryCode(cc);\n        })\n            .catch((e) => {\n            const msg = `Error fetching country code: ${String(e)}`;\n            window.guardian.modules.sentry.reportError(new Error(msg), feature);\n        });\n    }, [feature]);\n    return countryCode;\n};\n","import libDebounce from 'lodash.debounce';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n/**\n * Custom hook around the `IntersectionObserver`.\n *\n * @returns a tuple containing `[isInView, setNode]`\n */\nconst useIsInView = (options) => {\n    const [isInView, setIsInView] = useState(false);\n    const [node, setNode] = useState(options.node ?? null);\n    const observer = useRef(null);\n    const intersectionObserverCallback = useCallback(([entry]) => {\n        if (!entry)\n            return;\n        if (entry.isIntersecting) {\n            setIsInView(true);\n        }\n        else if (options.repeat) {\n            setIsInView(false);\n        }\n    }, [options.repeat]);\n    const intersectionCallback = options.debounce\n        ? libDebounce(intersectionObserverCallback, 200)\n        : intersectionObserverCallback;\n    useEffect(() => {\n        options.node && setNode(options.node);\n    }, [options.node]);\n    useEffect(() => {\n        if (!node)\n            return;\n        // Check for browser support https://caniuse.com/intersectionobserver\n        if (!('IntersectionObserver' in window))\n            return;\n        observer.current = new window.IntersectionObserver(intersectionCallback, options);\n        observer.current.observe(node);\n        return () => observer.current?.disconnect();\n    }, [node, options, intersectionCallback]);\n    useEffect(() => {\n        if (!options.repeat && isInView)\n            observer.current?.disconnect();\n    }, [isInView, options.repeat]);\n    return [isInView, setNode];\n};\nexport { useIsInView };\n","import { isUndefined } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\n/**\n * Ensures that the given task is only run once and only after all items in waitFor are defined\n * @param {Function} task - The task to execute once\n * @param {Array} waitFor - An array of variables that must be defined before the task is executed\n * */\nexport const useOnce = (task, waitFor) => {\n    const [alreadyRun, setAlreadyRun] = useState(false);\n    const isReady = waitFor.every((dep) => !isUndefined(dep));\n    useEffect(() => {\n        if (!alreadyRun && isReady) {\n            task();\n            setAlreadyRun(true);\n        }\n    }, [alreadyRun, isReady, task]);\n};\n","import { useEffect, useState } from 'react';\nimport { getOphan } from '../client/ophan/ophan';\nexport const usePageViewId = (renderingTarget) => {\n    const [id, setId] = useState();\n    useEffect(() => {\n        getOphan(renderingTarget)\n            .then(({ pageViewId }) => {\n            setId(pageViewId);\n        })\n            .catch(() => {\n            setId('no-page-view-id-available');\n        });\n    }, [renderingTarget]);\n    return id;\n};\n","import { signInGateTests, signInGateTestVariantToGateMapping, } from '../components/SignInGate/signInGate';\nimport { useAB } from './useAB';\n/**\n * @description\n * A custom hook to make which selects the sign in gate (component and ab test)\n * to be displayed on the current page\n * */\nexport const useSignInGateSelector = () => {\n    const ab = useAB()?.api;\n    if (!ab)\n        return undefined;\n    const test = ab.firstRunnableTest(signInGateTests);\n    if (!test) {\n        return [null, null];\n    }\n    const currentTest = {\n        name: test.dataLinkNames ?? test.id,\n        variant: test.variantToRun.id,\n        id: test.id,\n    };\n    const gateVariant = signInGateTestVariantToGateMapping[currentTest.variant];\n    if (!gateVariant) {\n        return [null, null];\n    }\n    return [gateVariant, currentTest];\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n"],"names":["submitComponentEventTracking","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","componentEvent","renderingTarget","_context","prev","next","isServer","abrupt","getOphan","sent","record","stop","_x","_x2","apply","arguments","submitViewEventTracking","_objectSpread","action","withComponentId","id","componentType","trackLink","componentId","value","abTest","submitClickEventTracking","component","localStorageKey","localStorageDismissedDateKey","variant","name","concat","localStorageDismissedCountKey","getSigninGatePrefsSafely","object","prefs","storage","local","get","isObject","Object","entries","every","_ref2","_slicedToArray","key","isString","includes","_typeof","setSigninGatePrefs","set","setUserDismissedGate","Date","toISOString","hasUserDismissedGate","dismissalWindow","pref","isUndefined","now","getTime","unsetUserDismissedGate","retrieveDismissedCount","dismissed","hasUserDismissedGateMoreThanCount","count","incrementUserDismissedGateCount","isNPageOrHigherPageView","_getDailyArticleCount","n","length","undefined","getDailyArticleCount","_ref2$","_dailyCount$count","isIOS9","ua","navigator","userAgent","appleDevice","test","os","isValidContentType","contentType","some","type","isValidSection","sectionId","section","isValidTag","tags","invalidTag","map","tag","signInGateComponent","canShow","isSignedIn","currentTest","isPaidContent","isPreview","Promise","resolve","flexGrowStyles","styles","Lazy","children","margin","disableFlexStyles","_useIsInView","useIsInView","rootMargin","_useIsInView2","hasBeenSeen","setRef","renderChildren","disabled","_jsx","ref","css","_Fragment","SignInGateMain","React","endPerformanceMeasure","startPerformanceMeasure","then","module","default","SignInGateMainCheckoutComplete","gate","ophanComponentId","dismissGate","guUrl","signInUrl","registerUrl","checkoutCompleteCookieData","personaliseSignInGateAfterCheckoutSwitch","Suspense","fallback","_ref4","signInGateTests","signInGateMainVariant","signInGateMainControl","signInGateTestVariantToGateMapping","gateMainControl","gateMainVariant","signInGateTestIdToComponentId","SignInGateMainVariant","SignInGateMainControl","isUserType","isOneOf","isProduct","isCheckoutCompleteCookieData","obj","userType","product","generateGatewayUrl","tab","_getCookie","pageId","pageViewId","idUrl","host","returnUrl","queryParams","abTestName","abTestVariant","browserId","getCookie","shouldMemoize","viewId","encodeURIComponent","constructQuery","ShowSignInGate","setShowGate","gateVariant","useConfig","useEffect","currentAbTestValue","SignInGateSelector","_ref3","_useState","_useState2","data","setData","_ref3$sectionId","_ref3$host","_ref3$idUrl","switches","authStatus","useAuthStatus","kind","_useState3","useState","_useState4","isGateDismissed","setIsGateDismissed","_useState5","_useState6","setGateVariant","_useState7","_useState8","setCurrentTest","_useState9","_useState10","canShowGate","setCanShowGate","gateSelector","useSignInGateSelector","usePageViewId","_useState11","_useState12","personaliseSwitch","setPersonaliseSwitch","rawCookie","parsedCookieData","checkoutCompleteStr","decodeURIComponent","guard","parseResult","text","parsed","JSON","parse","hasError","_","parseCheckoutCompleteCookieData","personaliseSignInGateAfterCheckout","countryCode","useCountryCode","useOnce","document","dispatchEvent","CustomEvent","_gateSelector","gateSelectorVariant","gateSelectorTest","currentLocaleCode","signInGateComponentId","currentComponentId","personaliseComponentId","ctaUrlParams","show","start","expiry","author","description","audience","audienceOffset","successMeasure","audienceCriteria","dataLinkNames","idealOutcome","showForSensitive","canRun","variants","DailyArticleCountKey","dailyCount","history","Array","isArray","daily","day","Error","e","remove","getToday","Math","floor","incrementDailyArticleCount","_dailyArticleCount$","dailyArticleCount","today","unshift","cutOff","firstOldDayIndex","findIndex","splice","query","keys","param","_query$param","queryValue","v","join","apiPromise","useAB","useSWRImmutable","setABTests","api","participations","mutate","useIsSignedIn","setAuthStatus","eitherInOktaTestOrElse","oktaAuthState","getSignedInStatusWithOkta","getSignedInStatusWithCookies","catch","error","console","feature","setCountryCode","getLocaleCode","cc","isNonNullable","msg","String","window","guardian","modules","sentry","reportError","options","_options$node","isInView","setIsInView","node","setNode","observer","useRef","intersectionObserverCallback","useCallback","entry","isIntersecting","repeat","intersectionCallback","debounce","libDebounce","current","IntersectionObserver","observe","_observer$current","disconnect","_observer$current2","task","waitFor","alreadyRun","setAlreadyRun","isReady","dep","setId","_useAB","_test$dataLinkNames","ab","firstRunnableTest","variantToRun","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","g","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","max","nativeMin","min","toNumber","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","slice","exports","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","this","leadingEdge","cancel","clearTimeout","flush"],"sourceRoot":""}